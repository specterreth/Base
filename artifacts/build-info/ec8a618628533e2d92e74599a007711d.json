{
	"id": "ec8a618628533e2d92e74599a007711d",
	"_format": "hh-sol-build-info-1",
	"solcVersion": "0.8.26",
	"solcLongVersion": "0.8.26+commit.8a97fa7a",
	"input": {
		"language": "Solidity",
		"sources": {
			"ERC20.sol": {
				"content": "// SPDX-License-Identifier: UNLICENSED\npragma solidity ^0.8.17;\n\n// Importing OpenZeppelin contracts for ERC20 and EnumerableSet functionalities\nimport \"@openzeppelin/contracts/token/ERC20/ERC20.sol\";\nimport \"@openzeppelin/contracts/utils/structs/EnumerableSet.sol\";\n\n// Contract for weighted voting using ERC20 token\ncontract WeightedVoting is ERC20 {\n    string private salt = \"value\"; // A private string variable (Token Name)\n    using EnumerableSet for EnumerableSet.AddressSet; // Importing EnumerableSet for address set functionality\n\n    // Custom errors\n    error TokensClaimed(); // Error for attempting to claim tokens again\n    error AllTokensClaimed(); // Error for attempting to claim tokens when all are already claimed\n    error NoTokensHeld(); // Error for attempting to perform an action without holding tokens\n    error QuorumTooHigh(); // Error for setting a quorum higher than total supply\n    error AlreadyVoted(); // Error for attempting to vote more than once\n    error VotingClosed(); // Error for attempting to vote on a closed issue\n\n    // Struct to represent an issue\n    struct Issue {\n        EnumerableSet.AddressSet voters; // Set of voters\n        string issueDesc; // Description of the issue\n        uint256 quorum; // Quorum required to close the issue\n        uint256 totalVotes; // Total number of votes casted\n        uint256 votesFor; // Total number of votes in favor\n        uint256 votesAgainst; // Total number of votes against\n        uint256 votesAbstain; // Total number of abstained votes\n        bool passed; // Flag indicating if the issue passed\n        bool closed; // Flag indicating if the issue is closed\n    }\n\n    // Struct to represent a serialized issue\n    struct SerializedIssue {\n        address[] voters; // Array of voters\n        string issueDesc; // Description of the issue\n        uint256 quorum; // Quorum required to close the issue\n        uint256 totalVotes; // Total number of votes casted\n        uint256 votesFor; // Total number of votes in favor\n        uint256 votesAgainst; // Total number of votes against\n        uint256 votesAbstain; // Total number of abstained votes\n        bool passed; // Flag indicating if the issue passed\n        bool closed; // Flag indicating if the issue is closed\n    }\n\n    // Enum to represent different vote options\n    enum Vote {\n        AGAINST,\n        FOR,\n        ABSTAIN\n    }\n\n    // Array to store all issues\n    Issue[] internal issues;\n\n    // Mapping to track if tokens are claimed by an address\n    mapping(address => bool) public tokensClaimed;\n\n    uint256 public maxSupply = 1000000; // Maximum supply of tokens\n    uint256 public claimAmount = 100; // Amount of tokens to be claimed\n\n    string saltt = \"any\"; // Another string variable\n\n    // Constructor to initialize ERC20 token with a name and symbol\n    constructor(string memory _name, string memory _symbol)\n        ERC20(_name, _symbol)\n    {\n        issues.push(); // Pushing an empty issue to start from index 1\n    }\n\n    // Function to claim tokens\n    function claim() public {\n        // Check if all tokens have been claimed\n        if (totalSupply() + claimAmount > maxSupply) {\n            revert AllTokensClaimed();\n        }\n        // Check if the caller has already claimed tokens\n        if (tokensClaimed[msg.sender]) {\n            revert TokensClaimed();\n        }\n        // Mint tokens to the caller\n        _mint(msg.sender, claimAmount);\n        tokensClaimed[msg.sender] = true; // Mark tokens as claimed\n    }\n\n    // Function to create a new voting issue\n    function createIssue(string calldata _issueDesc, uint256 _quorum)\n        external\n        returns (uint256)\n    {\n        // Check if the caller holds any tokens\n        if (balanceOf(msg.sender) == 0) {\n            revert NoTokensHeld();\n        }\n        // Check if the specified quorum is higher than total supply\n        if (_quorum > totalSupply()) {\n            revert QuorumTooHigh();\n        }\n        // Create a new issue and return its index\n        Issue storage _issue = issues.push();\n        _issue.issueDesc = _issueDesc;\n        _issue.quorum = _quorum;\n        return issues.length - 1;\n    }\n\n    // Function to get details of a voting issue\n    function getIssue(uint256 _issueId)\n        external\n        view\n        returns (SerializedIssue memory)\n    {\n        Issue storage _issue = issues[_issueId];\n        return\n            SerializedIssue({\n                voters: _issue.voters.values(),\n                issueDesc: _issue.issueDesc,\n                quorum: _issue.quorum,\n                totalVotes: _issue.totalVotes,\n                votesFor: _issue.votesFor,\n                votesAgainst: _issue.votesAgainst,\n                votesAbstain: _issue.votesAbstain,\n                passed: _issue.passed,\n                closed: _issue.closed\n            });\n    }\n\n    // Function to cast a vote on a voting issue\n    function vote(uint256 _issueId, Vote _vote) public {\n        Issue storage _issue = issues[_issueId];\n\n        // Check if the issue is closed\n        if (_issue.closed) {\n            revert VotingClosed();\n        }\n        // Check if the caller has already voted\n        if (_issue.voters.contains(msg.sender)) {\n            revert AlreadyVoted();\n        }\n\n        uint256 nTokens = balanceOf(msg.sender);\n        // Check if the caller holds any tokens\n        if (nTokens == 0) {\n            revert NoTokensHeld();\n        }\n\n        // Update vote counts based on the vote option\n        if (_vote == Vote.AGAINST) {\n            _issue.votesAgainst += nTokens;\n        } else if (_vote == Vote.FOR) {\n            _issue.votesFor += nTokens;\n        } else {\n            _issue.votesAbstain += nTokens;\n        }\n\n        // Add the caller to the list of voters and update total votes count\n        _issue.voters.add(msg.sender);\n        _issue.totalVotes += nTokens;\n\n        // Close the issue if quorum is reached and determine if it passed\n        if (_issue.totalVotes >= _issue.quorum) {\n            _issue.closed = true;\n            if (_issue.votesFor > _issue.votesAgainst) {\n                _issue.passed = true;\n            }\n        }\n    }\n}\n"
			},
			"@openzeppelin/contracts/utils/structs/EnumerableSet.sol": {
				"content": "// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v5.1.0) (utils/structs/EnumerableSet.sol)\n// This file was procedurally generated from scripts/generate/templates/EnumerableSet.js.\n\npragma solidity ^0.8.20;\n\n/**\n * @dev Library for managing\n * https://en.wikipedia.org/wiki/Set_(abstract_data_type)[sets] of primitive\n * types.\n *\n * Sets have the following properties:\n *\n * - Elements are added, removed, and checked for existence in constant time\n * (O(1)).\n * - Elements are enumerated in O(n). No guarantees are made on the ordering.\n *\n * ```solidity\n * contract Example {\n *     // Add the library methods\n *     using EnumerableSet for EnumerableSet.AddressSet;\n *\n *     // Declare a set state variable\n *     EnumerableSet.AddressSet private mySet;\n * }\n * ```\n *\n * As of v3.3.0, sets of type `bytes32` (`Bytes32Set`), `address` (`AddressSet`)\n * and `uint256` (`UintSet`) are supported.\n *\n * [WARNING]\n * ====\n * Trying to delete such a structure from storage will likely result in data corruption, rendering the structure\n * unusable.\n * See https://github.com/ethereum/solidity/pull/11843[ethereum/solidity#11843] for more info.\n *\n * In order to clean an EnumerableSet, you can either remove all elements one by one or create a fresh instance using an\n * array of EnumerableSet.\n * ====\n */\nlibrary EnumerableSet {\n    // To implement this library for multiple types with as little code\n    // repetition as possible, we write it in terms of a generic Set type with\n    // bytes32 values.\n    // The Set implementation uses private functions, and user-facing\n    // implementations (such as AddressSet) are just wrappers around the\n    // underlying Set.\n    // This means that we can only create new EnumerableSets for types that fit\n    // in bytes32.\n\n    struct Set {\n        // Storage of set values\n        bytes32[] _values;\n        // Position is the index of the value in the `values` array plus 1.\n        // Position 0 is used to mean a value is not in the set.\n        mapping(bytes32 value => uint256) _positions;\n    }\n\n    /**\n     * @dev Add a value to a set. O(1).\n     *\n     * Returns true if the value was added to the set, that is if it was not\n     * already present.\n     */\n    function _add(Set storage set, bytes32 value) private returns (bool) {\n        if (!_contains(set, value)) {\n            set._values.push(value);\n            // The value is stored at length-1, but we add 1 to all indexes\n            // and use 0 as a sentinel value\n            set._positions[value] = set._values.length;\n            return true;\n        } else {\n            return false;\n        }\n    }\n\n    /**\n     * @dev Removes a value from a set. O(1).\n     *\n     * Returns true if the value was removed from the set, that is if it was\n     * present.\n     */\n    function _remove(Set storage set, bytes32 value) private returns (bool) {\n        // We cache the value's position to prevent multiple reads from the same storage slot\n        uint256 position = set._positions[value];\n\n        if (position != 0) {\n            // Equivalent to contains(set, value)\n            // To delete an element from the _values array in O(1), we swap the element to delete with the last one in\n            // the array, and then remove the last element (sometimes called as 'swap and pop').\n            // This modifies the order of the array, as noted in {at}.\n\n            uint256 valueIndex = position - 1;\n            uint256 lastIndex = set._values.length - 1;\n\n            if (valueIndex != lastIndex) {\n                bytes32 lastValue = set._values[lastIndex];\n\n                // Move the lastValue to the index where the value to delete is\n                set._values[valueIndex] = lastValue;\n                // Update the tracked position of the lastValue (that was just moved)\n                set._positions[lastValue] = position;\n            }\n\n            // Delete the slot where the moved value was stored\n            set._values.pop();\n\n            // Delete the tracked position for the deleted slot\n            delete set._positions[value];\n\n            return true;\n        } else {\n            return false;\n        }\n    }\n\n    /**\n     * @dev Returns true if the value is in the set. O(1).\n     */\n    function _contains(Set storage set, bytes32 value) private view returns (bool) {\n        return set._positions[value] != 0;\n    }\n\n    /**\n     * @dev Returns the number of values on the set. O(1).\n     */\n    function _length(Set storage set) private view returns (uint256) {\n        return set._values.length;\n    }\n\n    /**\n     * @dev Returns the value stored at position `index` in the set. O(1).\n     *\n     * Note that there are no guarantees on the ordering of values inside the\n     * array, and it may change when more values are added or removed.\n     *\n     * Requirements:\n     *\n     * - `index` must be strictly less than {length}.\n     */\n    function _at(Set storage set, uint256 index) private view returns (bytes32) {\n        return set._values[index];\n    }\n\n    /**\n     * @dev Return the entire set in an array\n     *\n     * WARNING: This operation will copy the entire storage to memory, which can be quite expensive. This is designed\n     * to mostly be used by view accessors that are queried without any gas fees. Developers should keep in mind that\n     * this function has an unbounded cost, and using it as part of a state-changing function may render the function\n     * uncallable if the set grows to a point where copying to memory consumes too much gas to fit in a block.\n     */\n    function _values(Set storage set) private view returns (bytes32[] memory) {\n        return set._values;\n    }\n\n    // Bytes32Set\n\n    struct Bytes32Set {\n        Set _inner;\n    }\n\n    /**\n     * @dev Add a value to a set. O(1).\n     *\n     * Returns true if the value was added to the set, that is if it was not\n     * already present.\n     */\n    function add(Bytes32Set storage set, bytes32 value) internal returns (bool) {\n        return _add(set._inner, value);\n    }\n\n    /**\n     * @dev Removes a value from a set. O(1).\n     *\n     * Returns true if the value was removed from the set, that is if it was\n     * present.\n     */\n    function remove(Bytes32Set storage set, bytes32 value) internal returns (bool) {\n        return _remove(set._inner, value);\n    }\n\n    /**\n     * @dev Returns true if the value is in the set. O(1).\n     */\n    function contains(Bytes32Set storage set, bytes32 value) internal view returns (bool) {\n        return _contains(set._inner, value);\n    }\n\n    /**\n     * @dev Returns the number of values in the set. O(1).\n     */\n    function length(Bytes32Set storage set) internal view returns (uint256) {\n        return _length(set._inner);\n    }\n\n    /**\n     * @dev Returns the value stored at position `index` in the set. O(1).\n     *\n     * Note that there are no guarantees on the ordering of values inside the\n     * array, and it may change when more values are added or removed.\n     *\n     * Requirements:\n     *\n     * - `index` must be strictly less than {length}.\n     */\n    function at(Bytes32Set storage set, uint256 index) internal view returns (bytes32) {\n        return _at(set._inner, index);\n    }\n\n    /**\n     * @dev Return the entire set in an array\n     *\n     * WARNING: This operation will copy the entire storage to memory, which can be quite expensive. This is designed\n     * to mostly be used by view accessors that are queried without any gas fees. Developers should keep in mind that\n     * this function has an unbounded cost, and using it as part of a state-changing function may render the function\n     * uncallable if the set grows to a point where copying to memory consumes too much gas to fit in a block.\n     */\n    function values(Bytes32Set storage set) internal view returns (bytes32[] memory) {\n        bytes32[] memory store = _values(set._inner);\n        bytes32[] memory result;\n\n        assembly (\"memory-safe\") {\n            result := store\n        }\n\n        return result;\n    }\n\n    // AddressSet\n\n    struct AddressSet {\n        Set _inner;\n    }\n\n    /**\n     * @dev Add a value to a set. O(1).\n     *\n     * Returns true if the value was added to the set, that is if it was not\n     * already present.\n     */\n    function add(AddressSet storage set, address value) internal returns (bool) {\n        return _add(set._inner, bytes32(uint256(uint160(value))));\n    }\n\n    /**\n     * @dev Removes a value from a set. O(1).\n     *\n     * Returns true if the value was removed from the set, that is if it was\n     * present.\n     */\n    function remove(AddressSet storage set, address value) internal returns (bool) {\n        return _remove(set._inner, bytes32(uint256(uint160(value))));\n    }\n\n    /**\n     * @dev Returns true if the value is in the set. O(1).\n     */\n    function contains(AddressSet storage set, address value) internal view returns (bool) {\n        return _contains(set._inner, bytes32(uint256(uint160(value))));\n    }\n\n    /**\n     * @dev Returns the number of values in the set. O(1).\n     */\n    function length(AddressSet storage set) internal view returns (uint256) {\n        return _length(set._inner);\n    }\n\n    /**\n     * @dev Returns the value stored at position `index` in the set. O(1).\n     *\n     * Note that there are no guarantees on the ordering of values inside the\n     * array, and it may change when more values are added or removed.\n     *\n     * Requirements:\n     *\n     * - `index` must be strictly less than {length}.\n     */\n    function at(AddressSet storage set, uint256 index) internal view returns (address) {\n        return address(uint160(uint256(_at(set._inner, index))));\n    }\n\n    /**\n     * @dev Return the entire set in an array\n     *\n     * WARNING: This operation will copy the entire storage to memory, which can be quite expensive. This is designed\n     * to mostly be used by view accessors that are queried without any gas fees. Developers should keep in mind that\n     * this function has an unbounded cost, and using it as part of a state-changing function may render the function\n     * uncallable if the set grows to a point where copying to memory consumes too much gas to fit in a block.\n     */\n    function values(AddressSet storage set) internal view returns (address[] memory) {\n        bytes32[] memory store = _values(set._inner);\n        address[] memory result;\n\n        assembly (\"memory-safe\") {\n            result := store\n        }\n\n        return result;\n    }\n\n    // UintSet\n\n    struct UintSet {\n        Set _inner;\n    }\n\n    /**\n     * @dev Add a value to a set. O(1).\n     *\n     * Returns true if the value was added to the set, that is if it was not\n     * already present.\n     */\n    function add(UintSet storage set, uint256 value) internal returns (bool) {\n        return _add(set._inner, bytes32(value));\n    }\n\n    /**\n     * @dev Removes a value from a set. O(1).\n     *\n     * Returns true if the value was removed from the set, that is if it was\n     * present.\n     */\n    function remove(UintSet storage set, uint256 value) internal returns (bool) {\n        return _remove(set._inner, bytes32(value));\n    }\n\n    /**\n     * @dev Returns true if the value is in the set. O(1).\n     */\n    function contains(UintSet storage set, uint256 value) internal view returns (bool) {\n        return _contains(set._inner, bytes32(value));\n    }\n\n    /**\n     * @dev Returns the number of values in the set. O(1).\n     */\n    function length(UintSet storage set) internal view returns (uint256) {\n        return _length(set._inner);\n    }\n\n    /**\n     * @dev Returns the value stored at position `index` in the set. O(1).\n     *\n     * Note that there are no guarantees on the ordering of values inside the\n     * array, and it may change when more values are added or removed.\n     *\n     * Requirements:\n     *\n     * - `index` must be strictly less than {length}.\n     */\n    function at(UintSet storage set, uint256 index) internal view returns (uint256) {\n        return uint256(_at(set._inner, index));\n    }\n\n    /**\n     * @dev Return the entire set in an array\n     *\n     * WARNING: This operation will copy the entire storage to memory, which can be quite expensive. This is designed\n     * to mostly be used by view accessors that are queried without any gas fees. Developers should keep in mind that\n     * this function has an unbounded cost, and using it as part of a state-changing function may render the function\n     * uncallable if the set grows to a point where copying to memory consumes too much gas to fit in a block.\n     */\n    function values(UintSet storage set) internal view returns (uint256[] memory) {\n        bytes32[] memory store = _values(set._inner);\n        uint256[] memory result;\n\n        assembly (\"memory-safe\") {\n            result := store\n        }\n\n        return result;\n    }\n}\n"
			},
			"@openzeppelin/contracts/token/ERC20/ERC20.sol": {
				"content": "// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v5.2.0) (token/ERC20/ERC20.sol)\n\npragma solidity ^0.8.20;\n\nimport {IERC20} from \"./IERC20.sol\";\nimport {IERC20Metadata} from \"./extensions/IERC20Metadata.sol\";\nimport {Context} from \"../../utils/Context.sol\";\nimport {IERC20Errors} from \"../../interfaces/draft-IERC6093.sol\";\n\n/**\n * @dev Implementation of the {IERC20} interface.\n *\n * This implementation is agnostic to the way tokens are created. This means\n * that a supply mechanism has to be added in a derived contract using {_mint}.\n *\n * TIP: For a detailed writeup see our guide\n * https://forum.openzeppelin.com/t/how-to-implement-erc20-supply-mechanisms/226[How\n * to implement supply mechanisms].\n *\n * The default value of {decimals} is 18. To change this, you should override\n * this function so it returns a different value.\n *\n * We have followed general OpenZeppelin Contracts guidelines: functions revert\n * instead returning `false` on failure. This behavior is nonetheless\n * conventional and does not conflict with the expectations of ERC-20\n * applications.\n */\nabstract contract ERC20 is Context, IERC20, IERC20Metadata, IERC20Errors {\n    mapping(address account => uint256) private _balances;\n\n    mapping(address account => mapping(address spender => uint256)) private _allowances;\n\n    uint256 private _totalSupply;\n\n    string private _name;\n    string private _symbol;\n\n    /**\n     * @dev Sets the values for {name} and {symbol}.\n     *\n     * All two of these values are immutable: they can only be set once during\n     * construction.\n     */\n    constructor(string memory name_, string memory symbol_) {\n        _name = name_;\n        _symbol = symbol_;\n    }\n\n    /**\n     * @dev Returns the name of the token.\n     */\n    function name() public view virtual returns (string memory) {\n        return _name;\n    }\n\n    /**\n     * @dev Returns the symbol of the token, usually a shorter version of the\n     * name.\n     */\n    function symbol() public view virtual returns (string memory) {\n        return _symbol;\n    }\n\n    /**\n     * @dev Returns the number of decimals used to get its user representation.\n     * For example, if `decimals` equals `2`, a balance of `505` tokens should\n     * be displayed to a user as `5.05` (`505 / 10 ** 2`).\n     *\n     * Tokens usually opt for a value of 18, imitating the relationship between\n     * Ether and Wei. This is the default value returned by this function, unless\n     * it's overridden.\n     *\n     * NOTE: This information is only used for _display_ purposes: it in\n     * no way affects any of the arithmetic of the contract, including\n     * {IERC20-balanceOf} and {IERC20-transfer}.\n     */\n    function decimals() public view virtual returns (uint8) {\n        return 18;\n    }\n\n    /**\n     * @dev See {IERC20-totalSupply}.\n     */\n    function totalSupply() public view virtual returns (uint256) {\n        return _totalSupply;\n    }\n\n    /**\n     * @dev See {IERC20-balanceOf}.\n     */\n    function balanceOf(address account) public view virtual returns (uint256) {\n        return _balances[account];\n    }\n\n    /**\n     * @dev See {IERC20-transfer}.\n     *\n     * Requirements:\n     *\n     * - `to` cannot be the zero address.\n     * - the caller must have a balance of at least `value`.\n     */\n    function transfer(address to, uint256 value) public virtual returns (bool) {\n        address owner = _msgSender();\n        _transfer(owner, to, value);\n        return true;\n    }\n\n    /**\n     * @dev See {IERC20-allowance}.\n     */\n    function allowance(address owner, address spender) public view virtual returns (uint256) {\n        return _allowances[owner][spender];\n    }\n\n    /**\n     * @dev See {IERC20-approve}.\n     *\n     * NOTE: If `value` is the maximum `uint256`, the allowance is not updated on\n     * `transferFrom`. This is semantically equivalent to an infinite approval.\n     *\n     * Requirements:\n     *\n     * - `spender` cannot be the zero address.\n     */\n    function approve(address spender, uint256 value) public virtual returns (bool) {\n        address owner = _msgSender();\n        _approve(owner, spender, value);\n        return true;\n    }\n\n    /**\n     * @dev See {IERC20-transferFrom}.\n     *\n     * Skips emitting an {Approval} event indicating an allowance update. This is not\n     * required by the ERC. See {xref-ERC20-_approve-address-address-uint256-bool-}[_approve].\n     *\n     * NOTE: Does not update the allowance if the current allowance\n     * is the maximum `uint256`.\n     *\n     * Requirements:\n     *\n     * - `from` and `to` cannot be the zero address.\n     * - `from` must have a balance of at least `value`.\n     * - the caller must have allowance for ``from``'s tokens of at least\n     * `value`.\n     */\n    function transferFrom(address from, address to, uint256 value) public virtual returns (bool) {\n        address spender = _msgSender();\n        _spendAllowance(from, spender, value);\n        _transfer(from, to, value);\n        return true;\n    }\n\n    /**\n     * @dev Moves a `value` amount of tokens from `from` to `to`.\n     *\n     * This internal function is equivalent to {transfer}, and can be used to\n     * e.g. implement automatic token fees, slashing mechanisms, etc.\n     *\n     * Emits a {Transfer} event.\n     *\n     * NOTE: This function is not virtual, {_update} should be overridden instead.\n     */\n    function _transfer(address from, address to, uint256 value) internal {\n        if (from == address(0)) {\n            revert ERC20InvalidSender(address(0));\n        }\n        if (to == address(0)) {\n            revert ERC20InvalidReceiver(address(0));\n        }\n        _update(from, to, value);\n    }\n\n    /**\n     * @dev Transfers a `value` amount of tokens from `from` to `to`, or alternatively mints (or burns) if `from`\n     * (or `to`) is the zero address. All customizations to transfers, mints, and burns should be done by overriding\n     * this function.\n     *\n     * Emits a {Transfer} event.\n     */\n    function _update(address from, address to, uint256 value) internal virtual {\n        if (from == address(0)) {\n            // Overflow check required: The rest of the code assumes that totalSupply never overflows\n            _totalSupply += value;\n        } else {\n            uint256 fromBalance = _balances[from];\n            if (fromBalance < value) {\n                revert ERC20InsufficientBalance(from, fromBalance, value);\n            }\n            unchecked {\n                // Overflow not possible: value <= fromBalance <= totalSupply.\n                _balances[from] = fromBalance - value;\n            }\n        }\n\n        if (to == address(0)) {\n            unchecked {\n                // Overflow not possible: value <= totalSupply or value <= fromBalance <= totalSupply.\n                _totalSupply -= value;\n            }\n        } else {\n            unchecked {\n                // Overflow not possible: balance + value is at most totalSupply, which we know fits into a uint256.\n                _balances[to] += value;\n            }\n        }\n\n        emit Transfer(from, to, value);\n    }\n\n    /**\n     * @dev Creates a `value` amount of tokens and assigns them to `account`, by transferring it from address(0).\n     * Relies on the `_update` mechanism\n     *\n     * Emits a {Transfer} event with `from` set to the zero address.\n     *\n     * NOTE: This function is not virtual, {_update} should be overridden instead.\n     */\n    function _mint(address account, uint256 value) internal {\n        if (account == address(0)) {\n            revert ERC20InvalidReceiver(address(0));\n        }\n        _update(address(0), account, value);\n    }\n\n    /**\n     * @dev Destroys a `value` amount of tokens from `account`, lowering the total supply.\n     * Relies on the `_update` mechanism.\n     *\n     * Emits a {Transfer} event with `to` set to the zero address.\n     *\n     * NOTE: This function is not virtual, {_update} should be overridden instead\n     */\n    function _burn(address account, uint256 value) internal {\n        if (account == address(0)) {\n            revert ERC20InvalidSender(address(0));\n        }\n        _update(account, address(0), value);\n    }\n\n    /**\n     * @dev Sets `value` as the allowance of `spender` over the `owner` s tokens.\n     *\n     * This internal function is equivalent to `approve`, and can be used to\n     * e.g. set automatic allowances for certain subsystems, etc.\n     *\n     * Emits an {Approval} event.\n     *\n     * Requirements:\n     *\n     * - `owner` cannot be the zero address.\n     * - `spender` cannot be the zero address.\n     *\n     * Overrides to this logic should be done to the variant with an additional `bool emitEvent` argument.\n     */\n    function _approve(address owner, address spender, uint256 value) internal {\n        _approve(owner, spender, value, true);\n    }\n\n    /**\n     * @dev Variant of {_approve} with an optional flag to enable or disable the {Approval} event.\n     *\n     * By default (when calling {_approve}) the flag is set to true. On the other hand, approval changes made by\n     * `_spendAllowance` during the `transferFrom` operation set the flag to false. This saves gas by not emitting any\n     * `Approval` event during `transferFrom` operations.\n     *\n     * Anyone who wishes to continue emitting `Approval` events on the`transferFrom` operation can force the flag to\n     * true using the following override:\n     *\n     * ```solidity\n     * function _approve(address owner, address spender, uint256 value, bool) internal virtual override {\n     *     super._approve(owner, spender, value, true);\n     * }\n     * ```\n     *\n     * Requirements are the same as {_approve}.\n     */\n    function _approve(address owner, address spender, uint256 value, bool emitEvent) internal virtual {\n        if (owner == address(0)) {\n            revert ERC20InvalidApprover(address(0));\n        }\n        if (spender == address(0)) {\n            revert ERC20InvalidSpender(address(0));\n        }\n        _allowances[owner][spender] = value;\n        if (emitEvent) {\n            emit Approval(owner, spender, value);\n        }\n    }\n\n    /**\n     * @dev Updates `owner` s allowance for `spender` based on spent `value`.\n     *\n     * Does not update the allowance value in case of infinite allowance.\n     * Revert if not enough allowance is available.\n     *\n     * Does not emit an {Approval} event.\n     */\n    function _spendAllowance(address owner, address spender, uint256 value) internal virtual {\n        uint256 currentAllowance = allowance(owner, spender);\n        if (currentAllowance < type(uint256).max) {\n            if (currentAllowance < value) {\n                revert ERC20InsufficientAllowance(spender, currentAllowance, value);\n            }\n            unchecked {\n                _approve(owner, spender, currentAllowance - value, false);\n            }\n        }\n    }\n}\n"
			},
			"@openzeppelin/contracts/interfaces/draft-IERC6093.sol": {
				"content": "// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v5.1.0) (interfaces/draft-IERC6093.sol)\npragma solidity ^0.8.20;\n\n/**\n * @dev Standard ERC-20 Errors\n * Interface of the https://eips.ethereum.org/EIPS/eip-6093[ERC-6093] custom errors for ERC-20 tokens.\n */\ninterface IERC20Errors {\n    /**\n     * @dev Indicates an error related to the current `balance` of a `sender`. Used in transfers.\n     * @param sender Address whose tokens are being transferred.\n     * @param balance Current balance for the interacting account.\n     * @param needed Minimum amount required to perform a transfer.\n     */\n    error ERC20InsufficientBalance(address sender, uint256 balance, uint256 needed);\n\n    /**\n     * @dev Indicates a failure with the token `sender`. Used in transfers.\n     * @param sender Address whose tokens are being transferred.\n     */\n    error ERC20InvalidSender(address sender);\n\n    /**\n     * @dev Indicates a failure with the token `receiver`. Used in transfers.\n     * @param receiver Address to which tokens are being transferred.\n     */\n    error ERC20InvalidReceiver(address receiver);\n\n    /**\n     * @dev Indicates a failure with the `spender`’s `allowance`. Used in transfers.\n     * @param spender Address that may be allowed to operate on tokens without being their owner.\n     * @param allowance Amount of tokens a `spender` is allowed to operate with.\n     * @param needed Minimum amount required to perform a transfer.\n     */\n    error ERC20InsufficientAllowance(address spender, uint256 allowance, uint256 needed);\n\n    /**\n     * @dev Indicates a failure with the `approver` of a token to be approved. Used in approvals.\n     * @param approver Address initiating an approval operation.\n     */\n    error ERC20InvalidApprover(address approver);\n\n    /**\n     * @dev Indicates a failure with the `spender` to be approved. Used in approvals.\n     * @param spender Address that may be allowed to operate on tokens without being their owner.\n     */\n    error ERC20InvalidSpender(address spender);\n}\n\n/**\n * @dev Standard ERC-721 Errors\n * Interface of the https://eips.ethereum.org/EIPS/eip-6093[ERC-6093] custom errors for ERC-721 tokens.\n */\ninterface IERC721Errors {\n    /**\n     * @dev Indicates that an address can't be an owner. For example, `address(0)` is a forbidden owner in ERC-20.\n     * Used in balance queries.\n     * @param owner Address of the current owner of a token.\n     */\n    error ERC721InvalidOwner(address owner);\n\n    /**\n     * @dev Indicates a `tokenId` whose `owner` is the zero address.\n     * @param tokenId Identifier number of a token.\n     */\n    error ERC721NonexistentToken(uint256 tokenId);\n\n    /**\n     * @dev Indicates an error related to the ownership over a particular token. Used in transfers.\n     * @param sender Address whose tokens are being transferred.\n     * @param tokenId Identifier number of a token.\n     * @param owner Address of the current owner of a token.\n     */\n    error ERC721IncorrectOwner(address sender, uint256 tokenId, address owner);\n\n    /**\n     * @dev Indicates a failure with the token `sender`. Used in transfers.\n     * @param sender Address whose tokens are being transferred.\n     */\n    error ERC721InvalidSender(address sender);\n\n    /**\n     * @dev Indicates a failure with the token `receiver`. Used in transfers.\n     * @param receiver Address to which tokens are being transferred.\n     */\n    error ERC721InvalidReceiver(address receiver);\n\n    /**\n     * @dev Indicates a failure with the `operator`’s approval. Used in transfers.\n     * @param operator Address that may be allowed to operate on tokens without being their owner.\n     * @param tokenId Identifier number of a token.\n     */\n    error ERC721InsufficientApproval(address operator, uint256 tokenId);\n\n    /**\n     * @dev Indicates a failure with the `approver` of a token to be approved. Used in approvals.\n     * @param approver Address initiating an approval operation.\n     */\n    error ERC721InvalidApprover(address approver);\n\n    /**\n     * @dev Indicates a failure with the `operator` to be approved. Used in approvals.\n     * @param operator Address that may be allowed to operate on tokens without being their owner.\n     */\n    error ERC721InvalidOperator(address operator);\n}\n\n/**\n * @dev Standard ERC-1155 Errors\n * Interface of the https://eips.ethereum.org/EIPS/eip-6093[ERC-6093] custom errors for ERC-1155 tokens.\n */\ninterface IERC1155Errors {\n    /**\n     * @dev Indicates an error related to the current `balance` of a `sender`. Used in transfers.\n     * @param sender Address whose tokens are being transferred.\n     * @param balance Current balance for the interacting account.\n     * @param needed Minimum amount required to perform a transfer.\n     * @param tokenId Identifier number of a token.\n     */\n    error ERC1155InsufficientBalance(address sender, uint256 balance, uint256 needed, uint256 tokenId);\n\n    /**\n     * @dev Indicates a failure with the token `sender`. Used in transfers.\n     * @param sender Address whose tokens are being transferred.\n     */\n    error ERC1155InvalidSender(address sender);\n\n    /**\n     * @dev Indicates a failure with the token `receiver`. Used in transfers.\n     * @param receiver Address to which tokens are being transferred.\n     */\n    error ERC1155InvalidReceiver(address receiver);\n\n    /**\n     * @dev Indicates a failure with the `operator`’s approval. Used in transfers.\n     * @param operator Address that may be allowed to operate on tokens without being their owner.\n     * @param owner Address of the current owner of a token.\n     */\n    error ERC1155MissingApprovalForAll(address operator, address owner);\n\n    /**\n     * @dev Indicates a failure with the `approver` of a token to be approved. Used in approvals.\n     * @param approver Address initiating an approval operation.\n     */\n    error ERC1155InvalidApprover(address approver);\n\n    /**\n     * @dev Indicates a failure with the `operator` to be approved. Used in approvals.\n     * @param operator Address that may be allowed to operate on tokens without being their owner.\n     */\n    error ERC1155InvalidOperator(address operator);\n\n    /**\n     * @dev Indicates an array length mismatch between ids and values in a safeBatchTransferFrom operation.\n     * Used in batch transfers.\n     * @param idsLength Length of the array of token identifiers\n     * @param valuesLength Length of the array of token amounts\n     */\n    error ERC1155InvalidArrayLength(uint256 idsLength, uint256 valuesLength);\n}\n"
			},
			"@openzeppelin/contracts/utils/Context.sol": {
				"content": "// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v5.0.1) (utils/Context.sol)\n\npragma solidity ^0.8.20;\n\n/**\n * @dev Provides information about the current execution context, including the\n * sender of the transaction and its data. While these are generally available\n * via msg.sender and msg.data, they should not be accessed in such a direct\n * manner, since when dealing with meta-transactions the account sending and\n * paying for execution may not be the actual sender (as far as an application\n * is concerned).\n *\n * This contract is only required for intermediate, library-like contracts.\n */\nabstract contract Context {\n    function _msgSender() internal view virtual returns (address) {\n        return msg.sender;\n    }\n\n    function _msgData() internal view virtual returns (bytes calldata) {\n        return msg.data;\n    }\n\n    function _contextSuffixLength() internal view virtual returns (uint256) {\n        return 0;\n    }\n}\n"
			},
			"@openzeppelin/contracts/token/ERC20/extensions/IERC20Metadata.sol": {
				"content": "// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v5.1.0) (token/ERC20/extensions/IERC20Metadata.sol)\n\npragma solidity ^0.8.20;\n\nimport {IERC20} from \"../IERC20.sol\";\n\n/**\n * @dev Interface for the optional metadata functions from the ERC-20 standard.\n */\ninterface IERC20Metadata is IERC20 {\n    /**\n     * @dev Returns the name of the token.\n     */\n    function name() external view returns (string memory);\n\n    /**\n     * @dev Returns the symbol of the token.\n     */\n    function symbol() external view returns (string memory);\n\n    /**\n     * @dev Returns the decimals places of the token.\n     */\n    function decimals() external view returns (uint8);\n}\n"
			},
			"@openzeppelin/contracts/token/ERC20/IERC20.sol": {
				"content": "// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v5.1.0) (token/ERC20/IERC20.sol)\n\npragma solidity ^0.8.20;\n\n/**\n * @dev Interface of the ERC-20 standard as defined in the ERC.\n */\ninterface IERC20 {\n    /**\n     * @dev Emitted when `value` tokens are moved from one account (`from`) to\n     * another (`to`).\n     *\n     * Note that `value` may be zero.\n     */\n    event Transfer(address indexed from, address indexed to, uint256 value);\n\n    /**\n     * @dev Emitted when the allowance of a `spender` for an `owner` is set by\n     * a call to {approve}. `value` is the new allowance.\n     */\n    event Approval(address indexed owner, address indexed spender, uint256 value);\n\n    /**\n     * @dev Returns the value of tokens in existence.\n     */\n    function totalSupply() external view returns (uint256);\n\n    /**\n     * @dev Returns the value of tokens owned by `account`.\n     */\n    function balanceOf(address account) external view returns (uint256);\n\n    /**\n     * @dev Moves a `value` amount of tokens from the caller's account to `to`.\n     *\n     * Returns a boolean value indicating whether the operation succeeded.\n     *\n     * Emits a {Transfer} event.\n     */\n    function transfer(address to, uint256 value) external returns (bool);\n\n    /**\n     * @dev Returns the remaining number of tokens that `spender` will be\n     * allowed to spend on behalf of `owner` through {transferFrom}. This is\n     * zero by default.\n     *\n     * This value changes when {approve} or {transferFrom} are called.\n     */\n    function allowance(address owner, address spender) external view returns (uint256);\n\n    /**\n     * @dev Sets a `value` amount of tokens as the allowance of `spender` over the\n     * caller's tokens.\n     *\n     * Returns a boolean value indicating whether the operation succeeded.\n     *\n     * IMPORTANT: Beware that changing an allowance with this method brings the risk\n     * that someone may use both the old and the new allowance by unfortunate\n     * transaction ordering. One possible solution to mitigate this race\n     * condition is to first reduce the spender's allowance to 0 and set the\n     * desired value afterwards:\n     * https://github.com/ethereum/EIPs/issues/20#issuecomment-263524729\n     *\n     * Emits an {Approval} event.\n     */\n    function approve(address spender, uint256 value) external returns (bool);\n\n    /**\n     * @dev Moves a `value` amount of tokens from `from` to `to` using the\n     * allowance mechanism. `value` is then deducted from the caller's\n     * allowance.\n     *\n     * Returns a boolean value indicating whether the operation succeeded.\n     *\n     * Emits a {Transfer} event.\n     */\n    function transferFrom(address from, address to, uint256 value) external returns (bool);\n}\n"
			}
		},
		"settings": {
			"optimizer": {
				"enabled": false,
				"runs": 200
			},
			"outputSelection": {
				"*": {
					"": [
						"ast"
					],
					"*": [
						"abi",
						"metadata",
						"devdoc",
						"userdoc",
						"storageLayout",
						"evm.legacyAssembly",
						"evm.bytecode",
						"evm.deployedBytecode",
						"evm.methodIdentifiers",
						"evm.gasEstimates",
						"evm.assembly"
					]
				}
			},
			"remappings": []
		}
	},
	"output": {
		"contracts": {
			"@openzeppelin/contracts/interfaces/draft-IERC6093.sol": {
				"IERC1155Errors": {
					"abi": [
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "sender",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "balance",
									"type": "uint256"
								},
								{
									"internalType": "uint256",
									"name": "needed",
									"type": "uint256"
								},
								{
									"internalType": "uint256",
									"name": "tokenId",
									"type": "uint256"
								}
							],
							"name": "ERC1155InsufficientBalance",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "approver",
									"type": "address"
								}
							],
							"name": "ERC1155InvalidApprover",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "uint256",
									"name": "idsLength",
									"type": "uint256"
								},
								{
									"internalType": "uint256",
									"name": "valuesLength",
									"type": "uint256"
								}
							],
							"name": "ERC1155InvalidArrayLength",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "operator",
									"type": "address"
								}
							],
							"name": "ERC1155InvalidOperator",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "receiver",
									"type": "address"
								}
							],
							"name": "ERC1155InvalidReceiver",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "sender",
									"type": "address"
								}
							],
							"name": "ERC1155InvalidSender",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "operator",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "owner",
									"type": "address"
								}
							],
							"name": "ERC1155MissingApprovalForAll",
							"type": "error"
						}
					],
					"devdoc": {
						"details": "Standard ERC-1155 Errors Interface of the https://eips.ethereum.org/EIPS/eip-6093[ERC-6093] custom errors for ERC-1155 tokens.",
						"errors": {
							"ERC1155InsufficientBalance(address,uint256,uint256,uint256)": [
								{
									"details": "Indicates an error related to the current `balance` of a `sender`. Used in transfers.",
									"params": {
										"balance": "Current balance for the interacting account.",
										"needed": "Minimum amount required to perform a transfer.",
										"sender": "Address whose tokens are being transferred.",
										"tokenId": "Identifier number of a token."
									}
								}
							],
							"ERC1155InvalidApprover(address)": [
								{
									"details": "Indicates a failure with the `approver` of a token to be approved. Used in approvals.",
									"params": {
										"approver": "Address initiating an approval operation."
									}
								}
							],
							"ERC1155InvalidArrayLength(uint256,uint256)": [
								{
									"details": "Indicates an array length mismatch between ids and values in a safeBatchTransferFrom operation. Used in batch transfers.",
									"params": {
										"idsLength": "Length of the array of token identifiers",
										"valuesLength": "Length of the array of token amounts"
									}
								}
							],
							"ERC1155InvalidOperator(address)": [
								{
									"details": "Indicates a failure with the `operator` to be approved. Used in approvals.",
									"params": {
										"operator": "Address that may be allowed to operate on tokens without being their owner."
									}
								}
							],
							"ERC1155InvalidReceiver(address)": [
								{
									"details": "Indicates a failure with the token `receiver`. Used in transfers.",
									"params": {
										"receiver": "Address to which tokens are being transferred."
									}
								}
							],
							"ERC1155InvalidSender(address)": [
								{
									"details": "Indicates a failure with the token `sender`. Used in transfers.",
									"params": {
										"sender": "Address whose tokens are being transferred."
									}
								}
							],
							"ERC1155MissingApprovalForAll(address,address)": [
								{
									"details": "Indicates a failure with the `operator`’s approval. Used in transfers.",
									"params": {
										"operator": "Address that may be allowed to operate on tokens without being their owner.",
										"owner": "Address of the current owner of a token."
									}
								}
							]
						},
						"kind": "dev",
						"methods": {},
						"version": 1
					},
					"evm": {
						"assembly": "",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"gasEstimates": null,
						"legacyAssembly": null,
						"methodIdentifiers": {}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.26+commit.8a97fa7a\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"balance\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"needed\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"ERC1155InsufficientBalance\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"approver\",\"type\":\"address\"}],\"name\":\"ERC1155InvalidApprover\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"idsLength\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"valuesLength\",\"type\":\"uint256\"}],\"name\":\"ERC1155InvalidArrayLength\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"}],\"name\":\"ERC1155InvalidOperator\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"receiver\",\"type\":\"address\"}],\"name\":\"ERC1155InvalidReceiver\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"}],\"name\":\"ERC1155InvalidSender\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"}],\"name\":\"ERC1155MissingApprovalForAll\",\"type\":\"error\"}],\"devdoc\":{\"details\":\"Standard ERC-1155 Errors Interface of the https://eips.ethereum.org/EIPS/eip-6093[ERC-6093] custom errors for ERC-1155 tokens.\",\"errors\":{\"ERC1155InsufficientBalance(address,uint256,uint256,uint256)\":[{\"details\":\"Indicates an error related to the current `balance` of a `sender`. Used in transfers.\",\"params\":{\"balance\":\"Current balance for the interacting account.\",\"needed\":\"Minimum amount required to perform a transfer.\",\"sender\":\"Address whose tokens are being transferred.\",\"tokenId\":\"Identifier number of a token.\"}}],\"ERC1155InvalidApprover(address)\":[{\"details\":\"Indicates a failure with the `approver` of a token to be approved. Used in approvals.\",\"params\":{\"approver\":\"Address initiating an approval operation.\"}}],\"ERC1155InvalidArrayLength(uint256,uint256)\":[{\"details\":\"Indicates an array length mismatch between ids and values in a safeBatchTransferFrom operation. Used in batch transfers.\",\"params\":{\"idsLength\":\"Length of the array of token identifiers\",\"valuesLength\":\"Length of the array of token amounts\"}}],\"ERC1155InvalidOperator(address)\":[{\"details\":\"Indicates a failure with the `operator` to be approved. Used in approvals.\",\"params\":{\"operator\":\"Address that may be allowed to operate on tokens without being their owner.\"}}],\"ERC1155InvalidReceiver(address)\":[{\"details\":\"Indicates a failure with the token `receiver`. Used in transfers.\",\"params\":{\"receiver\":\"Address to which tokens are being transferred.\"}}],\"ERC1155InvalidSender(address)\":[{\"details\":\"Indicates a failure with the token `sender`. Used in transfers.\",\"params\":{\"sender\":\"Address whose tokens are being transferred.\"}}],\"ERC1155MissingApprovalForAll(address,address)\":[{\"details\":\"Indicates a failure with the `operator`\\u2019s approval. Used in transfers.\",\"params\":{\"operator\":\"Address that may be allowed to operate on tokens without being their owner.\",\"owner\":\"Address of the current owner of a token.\"}}]},\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/interfaces/draft-IERC6093.sol\":\"IERC1155Errors\"},\"evmVersion\":\"cancun\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/interfaces/draft-IERC6093.sol\":{\"keccak256\":\"0x880da465c203cec76b10d72dbd87c80f387df4102274f23eea1f9c9b0918792b\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://399594cd8bb0143bc9e55e0f1d071d0d8c850a394fb7a319d50edd55d9ed822b\",\"dweb:/ipfs/QmbPZzgtT6LEm9CMqWfagQFwETbV1ztpECBB1DtQHrKiRz\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [],
						"types": null
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				},
				"IERC20Errors": {
					"abi": [
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "spender",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "allowance",
									"type": "uint256"
								},
								{
									"internalType": "uint256",
									"name": "needed",
									"type": "uint256"
								}
							],
							"name": "ERC20InsufficientAllowance",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "sender",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "balance",
									"type": "uint256"
								},
								{
									"internalType": "uint256",
									"name": "needed",
									"type": "uint256"
								}
							],
							"name": "ERC20InsufficientBalance",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "approver",
									"type": "address"
								}
							],
							"name": "ERC20InvalidApprover",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "receiver",
									"type": "address"
								}
							],
							"name": "ERC20InvalidReceiver",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "sender",
									"type": "address"
								}
							],
							"name": "ERC20InvalidSender",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "spender",
									"type": "address"
								}
							],
							"name": "ERC20InvalidSpender",
							"type": "error"
						}
					],
					"devdoc": {
						"details": "Standard ERC-20 Errors Interface of the https://eips.ethereum.org/EIPS/eip-6093[ERC-6093] custom errors for ERC-20 tokens.",
						"errors": {
							"ERC20InsufficientAllowance(address,uint256,uint256)": [
								{
									"details": "Indicates a failure with the `spender`’s `allowance`. Used in transfers.",
									"params": {
										"allowance": "Amount of tokens a `spender` is allowed to operate with.",
										"needed": "Minimum amount required to perform a transfer.",
										"spender": "Address that may be allowed to operate on tokens without being their owner."
									}
								}
							],
							"ERC20InsufficientBalance(address,uint256,uint256)": [
								{
									"details": "Indicates an error related to the current `balance` of a `sender`. Used in transfers.",
									"params": {
										"balance": "Current balance for the interacting account.",
										"needed": "Minimum amount required to perform a transfer.",
										"sender": "Address whose tokens are being transferred."
									}
								}
							],
							"ERC20InvalidApprover(address)": [
								{
									"details": "Indicates a failure with the `approver` of a token to be approved. Used in approvals.",
									"params": {
										"approver": "Address initiating an approval operation."
									}
								}
							],
							"ERC20InvalidReceiver(address)": [
								{
									"details": "Indicates a failure with the token `receiver`. Used in transfers.",
									"params": {
										"receiver": "Address to which tokens are being transferred."
									}
								}
							],
							"ERC20InvalidSender(address)": [
								{
									"details": "Indicates a failure with the token `sender`. Used in transfers.",
									"params": {
										"sender": "Address whose tokens are being transferred."
									}
								}
							],
							"ERC20InvalidSpender(address)": [
								{
									"details": "Indicates a failure with the `spender` to be approved. Used in approvals.",
									"params": {
										"spender": "Address that may be allowed to operate on tokens without being their owner."
									}
								}
							]
						},
						"kind": "dev",
						"methods": {},
						"version": 1
					},
					"evm": {
						"assembly": "",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"gasEstimates": null,
						"legacyAssembly": null,
						"methodIdentifiers": {}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.26+commit.8a97fa7a\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"allowance\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"needed\",\"type\":\"uint256\"}],\"name\":\"ERC20InsufficientAllowance\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"balance\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"needed\",\"type\":\"uint256\"}],\"name\":\"ERC20InsufficientBalance\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"approver\",\"type\":\"address\"}],\"name\":\"ERC20InvalidApprover\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"receiver\",\"type\":\"address\"}],\"name\":\"ERC20InvalidReceiver\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"}],\"name\":\"ERC20InvalidSender\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"}],\"name\":\"ERC20InvalidSpender\",\"type\":\"error\"}],\"devdoc\":{\"details\":\"Standard ERC-20 Errors Interface of the https://eips.ethereum.org/EIPS/eip-6093[ERC-6093] custom errors for ERC-20 tokens.\",\"errors\":{\"ERC20InsufficientAllowance(address,uint256,uint256)\":[{\"details\":\"Indicates a failure with the `spender`\\u2019s `allowance`. Used in transfers.\",\"params\":{\"allowance\":\"Amount of tokens a `spender` is allowed to operate with.\",\"needed\":\"Minimum amount required to perform a transfer.\",\"spender\":\"Address that may be allowed to operate on tokens without being their owner.\"}}],\"ERC20InsufficientBalance(address,uint256,uint256)\":[{\"details\":\"Indicates an error related to the current `balance` of a `sender`. Used in transfers.\",\"params\":{\"balance\":\"Current balance for the interacting account.\",\"needed\":\"Minimum amount required to perform a transfer.\",\"sender\":\"Address whose tokens are being transferred.\"}}],\"ERC20InvalidApprover(address)\":[{\"details\":\"Indicates a failure with the `approver` of a token to be approved. Used in approvals.\",\"params\":{\"approver\":\"Address initiating an approval operation.\"}}],\"ERC20InvalidReceiver(address)\":[{\"details\":\"Indicates a failure with the token `receiver`. Used in transfers.\",\"params\":{\"receiver\":\"Address to which tokens are being transferred.\"}}],\"ERC20InvalidSender(address)\":[{\"details\":\"Indicates a failure with the token `sender`. Used in transfers.\",\"params\":{\"sender\":\"Address whose tokens are being transferred.\"}}],\"ERC20InvalidSpender(address)\":[{\"details\":\"Indicates a failure with the `spender` to be approved. Used in approvals.\",\"params\":{\"spender\":\"Address that may be allowed to operate on tokens without being their owner.\"}}]},\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/interfaces/draft-IERC6093.sol\":\"IERC20Errors\"},\"evmVersion\":\"cancun\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/interfaces/draft-IERC6093.sol\":{\"keccak256\":\"0x880da465c203cec76b10d72dbd87c80f387df4102274f23eea1f9c9b0918792b\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://399594cd8bb0143bc9e55e0f1d071d0d8c850a394fb7a319d50edd55d9ed822b\",\"dweb:/ipfs/QmbPZzgtT6LEm9CMqWfagQFwETbV1ztpECBB1DtQHrKiRz\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [],
						"types": null
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				},
				"IERC721Errors": {
					"abi": [
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "sender",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "tokenId",
									"type": "uint256"
								},
								{
									"internalType": "address",
									"name": "owner",
									"type": "address"
								}
							],
							"name": "ERC721IncorrectOwner",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "operator",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "tokenId",
									"type": "uint256"
								}
							],
							"name": "ERC721InsufficientApproval",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "approver",
									"type": "address"
								}
							],
							"name": "ERC721InvalidApprover",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "operator",
									"type": "address"
								}
							],
							"name": "ERC721InvalidOperator",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "owner",
									"type": "address"
								}
							],
							"name": "ERC721InvalidOwner",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "receiver",
									"type": "address"
								}
							],
							"name": "ERC721InvalidReceiver",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "sender",
									"type": "address"
								}
							],
							"name": "ERC721InvalidSender",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "uint256",
									"name": "tokenId",
									"type": "uint256"
								}
							],
							"name": "ERC721NonexistentToken",
							"type": "error"
						}
					],
					"devdoc": {
						"details": "Standard ERC-721 Errors Interface of the https://eips.ethereum.org/EIPS/eip-6093[ERC-6093] custom errors for ERC-721 tokens.",
						"errors": {
							"ERC721IncorrectOwner(address,uint256,address)": [
								{
									"details": "Indicates an error related to the ownership over a particular token. Used in transfers.",
									"params": {
										"owner": "Address of the current owner of a token.",
										"sender": "Address whose tokens are being transferred.",
										"tokenId": "Identifier number of a token."
									}
								}
							],
							"ERC721InsufficientApproval(address,uint256)": [
								{
									"details": "Indicates a failure with the `operator`’s approval. Used in transfers.",
									"params": {
										"operator": "Address that may be allowed to operate on tokens without being their owner.",
										"tokenId": "Identifier number of a token."
									}
								}
							],
							"ERC721InvalidApprover(address)": [
								{
									"details": "Indicates a failure with the `approver` of a token to be approved. Used in approvals.",
									"params": {
										"approver": "Address initiating an approval operation."
									}
								}
							],
							"ERC721InvalidOperator(address)": [
								{
									"details": "Indicates a failure with the `operator` to be approved. Used in approvals.",
									"params": {
										"operator": "Address that may be allowed to operate on tokens without being their owner."
									}
								}
							],
							"ERC721InvalidOwner(address)": [
								{
									"details": "Indicates that an address can't be an owner. For example, `address(0)` is a forbidden owner in ERC-20. Used in balance queries.",
									"params": {
										"owner": "Address of the current owner of a token."
									}
								}
							],
							"ERC721InvalidReceiver(address)": [
								{
									"details": "Indicates a failure with the token `receiver`. Used in transfers.",
									"params": {
										"receiver": "Address to which tokens are being transferred."
									}
								}
							],
							"ERC721InvalidSender(address)": [
								{
									"details": "Indicates a failure with the token `sender`. Used in transfers.",
									"params": {
										"sender": "Address whose tokens are being transferred."
									}
								}
							],
							"ERC721NonexistentToken(uint256)": [
								{
									"details": "Indicates a `tokenId` whose `owner` is the zero address.",
									"params": {
										"tokenId": "Identifier number of a token."
									}
								}
							]
						},
						"kind": "dev",
						"methods": {},
						"version": 1
					},
					"evm": {
						"assembly": "",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"gasEstimates": null,
						"legacyAssembly": null,
						"methodIdentifiers": {}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.26+commit.8a97fa7a\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"},{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"}],\"name\":\"ERC721IncorrectOwner\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"ERC721InsufficientApproval\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"approver\",\"type\":\"address\"}],\"name\":\"ERC721InvalidApprover\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"}],\"name\":\"ERC721InvalidOperator\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"}],\"name\":\"ERC721InvalidOwner\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"receiver\",\"type\":\"address\"}],\"name\":\"ERC721InvalidReceiver\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"}],\"name\":\"ERC721InvalidSender\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"ERC721NonexistentToken\",\"type\":\"error\"}],\"devdoc\":{\"details\":\"Standard ERC-721 Errors Interface of the https://eips.ethereum.org/EIPS/eip-6093[ERC-6093] custom errors for ERC-721 tokens.\",\"errors\":{\"ERC721IncorrectOwner(address,uint256,address)\":[{\"details\":\"Indicates an error related to the ownership over a particular token. Used in transfers.\",\"params\":{\"owner\":\"Address of the current owner of a token.\",\"sender\":\"Address whose tokens are being transferred.\",\"tokenId\":\"Identifier number of a token.\"}}],\"ERC721InsufficientApproval(address,uint256)\":[{\"details\":\"Indicates a failure with the `operator`\\u2019s approval. Used in transfers.\",\"params\":{\"operator\":\"Address that may be allowed to operate on tokens without being their owner.\",\"tokenId\":\"Identifier number of a token.\"}}],\"ERC721InvalidApprover(address)\":[{\"details\":\"Indicates a failure with the `approver` of a token to be approved. Used in approvals.\",\"params\":{\"approver\":\"Address initiating an approval operation.\"}}],\"ERC721InvalidOperator(address)\":[{\"details\":\"Indicates a failure with the `operator` to be approved. Used in approvals.\",\"params\":{\"operator\":\"Address that may be allowed to operate on tokens without being their owner.\"}}],\"ERC721InvalidOwner(address)\":[{\"details\":\"Indicates that an address can't be an owner. For example, `address(0)` is a forbidden owner in ERC-20. Used in balance queries.\",\"params\":{\"owner\":\"Address of the current owner of a token.\"}}],\"ERC721InvalidReceiver(address)\":[{\"details\":\"Indicates a failure with the token `receiver`. Used in transfers.\",\"params\":{\"receiver\":\"Address to which tokens are being transferred.\"}}],\"ERC721InvalidSender(address)\":[{\"details\":\"Indicates a failure with the token `sender`. Used in transfers.\",\"params\":{\"sender\":\"Address whose tokens are being transferred.\"}}],\"ERC721NonexistentToken(uint256)\":[{\"details\":\"Indicates a `tokenId` whose `owner` is the zero address.\",\"params\":{\"tokenId\":\"Identifier number of a token.\"}}]},\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/interfaces/draft-IERC6093.sol\":\"IERC721Errors\"},\"evmVersion\":\"cancun\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/interfaces/draft-IERC6093.sol\":{\"keccak256\":\"0x880da465c203cec76b10d72dbd87c80f387df4102274f23eea1f9c9b0918792b\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://399594cd8bb0143bc9e55e0f1d071d0d8c850a394fb7a319d50edd55d9ed822b\",\"dweb:/ipfs/QmbPZzgtT6LEm9CMqWfagQFwETbV1ztpECBB1DtQHrKiRz\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [],
						"types": null
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			},
			"@openzeppelin/contracts/token/ERC20/ERC20.sol": {
				"ERC20": {
					"abi": [
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "spender",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "allowance",
									"type": "uint256"
								},
								{
									"internalType": "uint256",
									"name": "needed",
									"type": "uint256"
								}
							],
							"name": "ERC20InsufficientAllowance",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "sender",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "balance",
									"type": "uint256"
								},
								{
									"internalType": "uint256",
									"name": "needed",
									"type": "uint256"
								}
							],
							"name": "ERC20InsufficientBalance",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "approver",
									"type": "address"
								}
							],
							"name": "ERC20InvalidApprover",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "receiver",
									"type": "address"
								}
							],
							"name": "ERC20InvalidReceiver",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "sender",
									"type": "address"
								}
							],
							"name": "ERC20InvalidSender",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "spender",
									"type": "address"
								}
							],
							"name": "ERC20InvalidSpender",
							"type": "error"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "owner",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "spender",
									"type": "address"
								},
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "Approval",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "from",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "Transfer",
							"type": "event"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "owner",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "spender",
									"type": "address"
								}
							],
							"name": "allowance",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "spender",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "approve",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "account",
									"type": "address"
								}
							],
							"name": "balanceOf",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "decimals",
							"outputs": [
								{
									"internalType": "uint8",
									"name": "",
									"type": "uint8"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "name",
							"outputs": [
								{
									"internalType": "string",
									"name": "",
									"type": "string"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "symbol",
							"outputs": [
								{
									"internalType": "string",
									"name": "",
									"type": "string"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "totalSupply",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "transfer",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "from",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "transferFrom",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						}
					],
					"devdoc": {
						"details": "Implementation of the {IERC20} interface. This implementation is agnostic to the way tokens are created. This means that a supply mechanism has to be added in a derived contract using {_mint}. TIP: For a detailed writeup see our guide https://forum.openzeppelin.com/t/how-to-implement-erc20-supply-mechanisms/226[How to implement supply mechanisms]. The default value of {decimals} is 18. To change this, you should override this function so it returns a different value. We have followed general OpenZeppelin Contracts guidelines: functions revert instead returning `false` on failure. This behavior is nonetheless conventional and does not conflict with the expectations of ERC-20 applications.",
						"errors": {
							"ERC20InsufficientAllowance(address,uint256,uint256)": [
								{
									"details": "Indicates a failure with the `spender`’s `allowance`. Used in transfers.",
									"params": {
										"allowance": "Amount of tokens a `spender` is allowed to operate with.",
										"needed": "Minimum amount required to perform a transfer.",
										"spender": "Address that may be allowed to operate on tokens without being their owner."
									}
								}
							],
							"ERC20InsufficientBalance(address,uint256,uint256)": [
								{
									"details": "Indicates an error related to the current `balance` of a `sender`. Used in transfers.",
									"params": {
										"balance": "Current balance for the interacting account.",
										"needed": "Minimum amount required to perform a transfer.",
										"sender": "Address whose tokens are being transferred."
									}
								}
							],
							"ERC20InvalidApprover(address)": [
								{
									"details": "Indicates a failure with the `approver` of a token to be approved. Used in approvals.",
									"params": {
										"approver": "Address initiating an approval operation."
									}
								}
							],
							"ERC20InvalidReceiver(address)": [
								{
									"details": "Indicates a failure with the token `receiver`. Used in transfers.",
									"params": {
										"receiver": "Address to which tokens are being transferred."
									}
								}
							],
							"ERC20InvalidSender(address)": [
								{
									"details": "Indicates a failure with the token `sender`. Used in transfers.",
									"params": {
										"sender": "Address whose tokens are being transferred."
									}
								}
							],
							"ERC20InvalidSpender(address)": [
								{
									"details": "Indicates a failure with the `spender` to be approved. Used in approvals.",
									"params": {
										"spender": "Address that may be allowed to operate on tokens without being their owner."
									}
								}
							]
						},
						"events": {
							"Approval(address,address,uint256)": {
								"details": "Emitted when the allowance of a `spender` for an `owner` is set by a call to {approve}. `value` is the new allowance."
							},
							"Transfer(address,address,uint256)": {
								"details": "Emitted when `value` tokens are moved from one account (`from`) to another (`to`). Note that `value` may be zero."
							}
						},
						"kind": "dev",
						"methods": {
							"allowance(address,address)": {
								"details": "See {IERC20-allowance}."
							},
							"approve(address,uint256)": {
								"details": "See {IERC20-approve}. NOTE: If `value` is the maximum `uint256`, the allowance is not updated on `transferFrom`. This is semantically equivalent to an infinite approval. Requirements: - `spender` cannot be the zero address."
							},
							"balanceOf(address)": {
								"details": "See {IERC20-balanceOf}."
							},
							"constructor": {
								"details": "Sets the values for {name} and {symbol}. All two of these values are immutable: they can only be set once during construction."
							},
							"decimals()": {
								"details": "Returns the number of decimals used to get its user representation. For example, if `decimals` equals `2`, a balance of `505` tokens should be displayed to a user as `5.05` (`505 / 10 ** 2`). Tokens usually opt for a value of 18, imitating the relationship between Ether and Wei. This is the default value returned by this function, unless it's overridden. NOTE: This information is only used for _display_ purposes: it in no way affects any of the arithmetic of the contract, including {IERC20-balanceOf} and {IERC20-transfer}."
							},
							"name()": {
								"details": "Returns the name of the token."
							},
							"symbol()": {
								"details": "Returns the symbol of the token, usually a shorter version of the name."
							},
							"totalSupply()": {
								"details": "See {IERC20-totalSupply}."
							},
							"transfer(address,uint256)": {
								"details": "See {IERC20-transfer}. Requirements: - `to` cannot be the zero address. - the caller must have a balance of at least `value`."
							},
							"transferFrom(address,address,uint256)": {
								"details": "See {IERC20-transferFrom}. Skips emitting an {Approval} event indicating an allowance update. This is not required by the ERC. See {xref-ERC20-_approve-address-address-uint256-bool-}[_approve]. NOTE: Does not update the allowance if the current allowance is the maximum `uint256`. Requirements: - `from` and `to` cannot be the zero address. - `from` must have a balance of at least `value`. - the caller must have allowance for ``from``'s tokens of at least `value`."
							}
						},
						"version": 1
					},
					"evm": {
						"assembly": "",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"gasEstimates": null,
						"legacyAssembly": null,
						"methodIdentifiers": {
							"allowance(address,address)": "dd62ed3e",
							"approve(address,uint256)": "095ea7b3",
							"balanceOf(address)": "70a08231",
							"decimals()": "313ce567",
							"name()": "06fdde03",
							"symbol()": "95d89b41",
							"totalSupply()": "18160ddd",
							"transfer(address,uint256)": "a9059cbb",
							"transferFrom(address,address,uint256)": "23b872dd"
						}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.26+commit.8a97fa7a\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"allowance\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"needed\",\"type\":\"uint256\"}],\"name\":\"ERC20InsufficientAllowance\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"balance\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"needed\",\"type\":\"uint256\"}],\"name\":\"ERC20InsufficientBalance\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"approver\",\"type\":\"address\"}],\"name\":\"ERC20InvalidApprover\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"receiver\",\"type\":\"address\"}],\"name\":\"ERC20InvalidReceiver\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"}],\"name\":\"ERC20InvalidSender\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"}],\"name\":\"ERC20InvalidSpender\",\"type\":\"error\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"Approval\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"Transfer\",\"type\":\"event\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"}],\"name\":\"allowance\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"approve\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"balanceOf\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"decimals\",\"outputs\":[{\"internalType\":\"uint8\",\"name\":\"\",\"type\":\"uint8\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"name\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"symbol\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"totalSupply\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"transfer\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"transferFrom\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"details\":\"Implementation of the {IERC20} interface. This implementation is agnostic to the way tokens are created. This means that a supply mechanism has to be added in a derived contract using {_mint}. TIP: For a detailed writeup see our guide https://forum.openzeppelin.com/t/how-to-implement-erc20-supply-mechanisms/226[How to implement supply mechanisms]. The default value of {decimals} is 18. To change this, you should override this function so it returns a different value. We have followed general OpenZeppelin Contracts guidelines: functions revert instead returning `false` on failure. This behavior is nonetheless conventional and does not conflict with the expectations of ERC-20 applications.\",\"errors\":{\"ERC20InsufficientAllowance(address,uint256,uint256)\":[{\"details\":\"Indicates a failure with the `spender`\\u2019s `allowance`. Used in transfers.\",\"params\":{\"allowance\":\"Amount of tokens a `spender` is allowed to operate with.\",\"needed\":\"Minimum amount required to perform a transfer.\",\"spender\":\"Address that may be allowed to operate on tokens without being their owner.\"}}],\"ERC20InsufficientBalance(address,uint256,uint256)\":[{\"details\":\"Indicates an error related to the current `balance` of a `sender`. Used in transfers.\",\"params\":{\"balance\":\"Current balance for the interacting account.\",\"needed\":\"Minimum amount required to perform a transfer.\",\"sender\":\"Address whose tokens are being transferred.\"}}],\"ERC20InvalidApprover(address)\":[{\"details\":\"Indicates a failure with the `approver` of a token to be approved. Used in approvals.\",\"params\":{\"approver\":\"Address initiating an approval operation.\"}}],\"ERC20InvalidReceiver(address)\":[{\"details\":\"Indicates a failure with the token `receiver`. Used in transfers.\",\"params\":{\"receiver\":\"Address to which tokens are being transferred.\"}}],\"ERC20InvalidSender(address)\":[{\"details\":\"Indicates a failure with the token `sender`. Used in transfers.\",\"params\":{\"sender\":\"Address whose tokens are being transferred.\"}}],\"ERC20InvalidSpender(address)\":[{\"details\":\"Indicates a failure with the `spender` to be approved. Used in approvals.\",\"params\":{\"spender\":\"Address that may be allowed to operate on tokens without being their owner.\"}}]},\"events\":{\"Approval(address,address,uint256)\":{\"details\":\"Emitted when the allowance of a `spender` for an `owner` is set by a call to {approve}. `value` is the new allowance.\"},\"Transfer(address,address,uint256)\":{\"details\":\"Emitted when `value` tokens are moved from one account (`from`) to another (`to`). Note that `value` may be zero.\"}},\"kind\":\"dev\",\"methods\":{\"allowance(address,address)\":{\"details\":\"See {IERC20-allowance}.\"},\"approve(address,uint256)\":{\"details\":\"See {IERC20-approve}. NOTE: If `value` is the maximum `uint256`, the allowance is not updated on `transferFrom`. This is semantically equivalent to an infinite approval. Requirements: - `spender` cannot be the zero address.\"},\"balanceOf(address)\":{\"details\":\"See {IERC20-balanceOf}.\"},\"constructor\":{\"details\":\"Sets the values for {name} and {symbol}. All two of these values are immutable: they can only be set once during construction.\"},\"decimals()\":{\"details\":\"Returns the number of decimals used to get its user representation. For example, if `decimals` equals `2`, a balance of `505` tokens should be displayed to a user as `5.05` (`505 / 10 ** 2`). Tokens usually opt for a value of 18, imitating the relationship between Ether and Wei. This is the default value returned by this function, unless it's overridden. NOTE: This information is only used for _display_ purposes: it in no way affects any of the arithmetic of the contract, including {IERC20-balanceOf} and {IERC20-transfer}.\"},\"name()\":{\"details\":\"Returns the name of the token.\"},\"symbol()\":{\"details\":\"Returns the symbol of the token, usually a shorter version of the name.\"},\"totalSupply()\":{\"details\":\"See {IERC20-totalSupply}.\"},\"transfer(address,uint256)\":{\"details\":\"See {IERC20-transfer}. Requirements: - `to` cannot be the zero address. - the caller must have a balance of at least `value`.\"},\"transferFrom(address,address,uint256)\":{\"details\":\"See {IERC20-transferFrom}. Skips emitting an {Approval} event indicating an allowance update. This is not required by the ERC. See {xref-ERC20-_approve-address-address-uint256-bool-}[_approve]. NOTE: Does not update the allowance if the current allowance is the maximum `uint256`. Requirements: - `from` and `to` cannot be the zero address. - `from` must have a balance of at least `value`. - the caller must have allowance for ``from``'s tokens of at least `value`.\"}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/token/ERC20/ERC20.sol\":\"ERC20\"},\"evmVersion\":\"cancun\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/interfaces/draft-IERC6093.sol\":{\"keccak256\":\"0x880da465c203cec76b10d72dbd87c80f387df4102274f23eea1f9c9b0918792b\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://399594cd8bb0143bc9e55e0f1d071d0d8c850a394fb7a319d50edd55d9ed822b\",\"dweb:/ipfs/QmbPZzgtT6LEm9CMqWfagQFwETbV1ztpECBB1DtQHrKiRz\"]},\"@openzeppelin/contracts/token/ERC20/ERC20.sol\":{\"keccak256\":\"0x6ef9389a2c07bc40d8a7ba48914724ab2c108fac391ce12314f01321813e6368\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://b7a5cb39b1e6df68f4dd9a5e76e853d745a74ffb3dfd7df4ae4d2ace6992a171\",\"dweb:/ipfs/QmPbzKR19rdM8X3PLQjsmHRepUKhvoZnedSR63XyGtXZib\"]},\"@openzeppelin/contracts/token/ERC20/IERC20.sol\":{\"keccak256\":\"0xe06a3f08a987af6ad2e1c1e774405d4fe08f1694b67517438b467cecf0da0ef7\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://df6f0c459663c9858b6cba2cda1d14a7d05a985bed6d2de72bd8e78c25ee79db\",\"dweb:/ipfs/QmeTTxZ7qVk9rjEv2R4CpCwdf8UMCcRqDNMvzNxHc3Fnn9\"]},\"@openzeppelin/contracts/token/ERC20/extensions/IERC20Metadata.sol\":{\"keccak256\":\"0x70f2f713b13b7ce4610bcd0ac9fec0f3cc43693b043abcb8dc40a42a726eb330\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://c13d13304ac79a83ab1c30168967d19e2203342ebbd6a9bbce4db7550522dcbf\",\"dweb:/ipfs/QmeN5jKMN2vw5bhacr6tkg78afbTTZUeaacNHqjWt4Ew1r\"]},\"@openzeppelin/contracts/utils/Context.sol\":{\"keccak256\":\"0x493033a8d1b176a037b2cc6a04dad01a5c157722049bbecf632ca876224dd4b2\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://6a708e8a5bdb1011c2c381c9a5cfd8a9a956d7d0a9dc1bd8bcdaf52f76ef2f12\",\"dweb:/ipfs/Qmax9WHBnVsZP46ZxEMNRQpLQnrdE4dK8LehML1Py8FowF\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [
							{
								"astId": 159,
								"contract": "@openzeppelin/contracts/token/ERC20/ERC20.sol:ERC20",
								"label": "_balances",
								"offset": 0,
								"slot": "0",
								"type": "t_mapping(t_address,t_uint256)"
							},
							{
								"astId": 165,
								"contract": "@openzeppelin/contracts/token/ERC20/ERC20.sol:ERC20",
								"label": "_allowances",
								"offset": 0,
								"slot": "1",
								"type": "t_mapping(t_address,t_mapping(t_address,t_uint256))"
							},
							{
								"astId": 167,
								"contract": "@openzeppelin/contracts/token/ERC20/ERC20.sol:ERC20",
								"label": "_totalSupply",
								"offset": 0,
								"slot": "2",
								"type": "t_uint256"
							},
							{
								"astId": 169,
								"contract": "@openzeppelin/contracts/token/ERC20/ERC20.sol:ERC20",
								"label": "_name",
								"offset": 0,
								"slot": "3",
								"type": "t_string_storage"
							},
							{
								"astId": 171,
								"contract": "@openzeppelin/contracts/token/ERC20/ERC20.sol:ERC20",
								"label": "_symbol",
								"offset": 0,
								"slot": "4",
								"type": "t_string_storage"
							}
						],
						"types": {
							"t_address": {
								"encoding": "inplace",
								"label": "address",
								"numberOfBytes": "20"
							},
							"t_mapping(t_address,t_mapping(t_address,t_uint256))": {
								"encoding": "mapping",
								"key": "t_address",
								"label": "mapping(address => mapping(address => uint256))",
								"numberOfBytes": "32",
								"value": "t_mapping(t_address,t_uint256)"
							},
							"t_mapping(t_address,t_uint256)": {
								"encoding": "mapping",
								"key": "t_address",
								"label": "mapping(address => uint256)",
								"numberOfBytes": "32",
								"value": "t_uint256"
							},
							"t_string_storage": {
								"encoding": "bytes",
								"label": "string",
								"numberOfBytes": "32"
							},
							"t_uint256": {
								"encoding": "inplace",
								"label": "uint256",
								"numberOfBytes": "32"
							}
						}
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			},
			"@openzeppelin/contracts/token/ERC20/IERC20.sol": {
				"IERC20": {
					"abi": [
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "owner",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "spender",
									"type": "address"
								},
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "Approval",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "from",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "Transfer",
							"type": "event"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "owner",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "spender",
									"type": "address"
								}
							],
							"name": "allowance",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "spender",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "approve",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "account",
									"type": "address"
								}
							],
							"name": "balanceOf",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "totalSupply",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "transfer",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "from",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "transferFrom",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						}
					],
					"devdoc": {
						"details": "Interface of the ERC-20 standard as defined in the ERC.",
						"events": {
							"Approval(address,address,uint256)": {
								"details": "Emitted when the allowance of a `spender` for an `owner` is set by a call to {approve}. `value` is the new allowance."
							},
							"Transfer(address,address,uint256)": {
								"details": "Emitted when `value` tokens are moved from one account (`from`) to another (`to`). Note that `value` may be zero."
							}
						},
						"kind": "dev",
						"methods": {
							"allowance(address,address)": {
								"details": "Returns the remaining number of tokens that `spender` will be allowed to spend on behalf of `owner` through {transferFrom}. This is zero by default. This value changes when {approve} or {transferFrom} are called."
							},
							"approve(address,uint256)": {
								"details": "Sets a `value` amount of tokens as the allowance of `spender` over the caller's tokens. Returns a boolean value indicating whether the operation succeeded. IMPORTANT: Beware that changing an allowance with this method brings the risk that someone may use both the old and the new allowance by unfortunate transaction ordering. One possible solution to mitigate this race condition is to first reduce the spender's allowance to 0 and set the desired value afterwards: https://github.com/ethereum/EIPs/issues/20#issuecomment-263524729 Emits an {Approval} event."
							},
							"balanceOf(address)": {
								"details": "Returns the value of tokens owned by `account`."
							},
							"totalSupply()": {
								"details": "Returns the value of tokens in existence."
							},
							"transfer(address,uint256)": {
								"details": "Moves a `value` amount of tokens from the caller's account to `to`. Returns a boolean value indicating whether the operation succeeded. Emits a {Transfer} event."
							},
							"transferFrom(address,address,uint256)": {
								"details": "Moves a `value` amount of tokens from `from` to `to` using the allowance mechanism. `value` is then deducted from the caller's allowance. Returns a boolean value indicating whether the operation succeeded. Emits a {Transfer} event."
							}
						},
						"version": 1
					},
					"evm": {
						"assembly": "",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"gasEstimates": null,
						"legacyAssembly": null,
						"methodIdentifiers": {
							"allowance(address,address)": "dd62ed3e",
							"approve(address,uint256)": "095ea7b3",
							"balanceOf(address)": "70a08231",
							"totalSupply()": "18160ddd",
							"transfer(address,uint256)": "a9059cbb",
							"transferFrom(address,address,uint256)": "23b872dd"
						}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.26+commit.8a97fa7a\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"Approval\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"Transfer\",\"type\":\"event\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"}],\"name\":\"allowance\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"approve\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"balanceOf\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"totalSupply\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"transfer\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"transferFrom\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"details\":\"Interface of the ERC-20 standard as defined in the ERC.\",\"events\":{\"Approval(address,address,uint256)\":{\"details\":\"Emitted when the allowance of a `spender` for an `owner` is set by a call to {approve}. `value` is the new allowance.\"},\"Transfer(address,address,uint256)\":{\"details\":\"Emitted when `value` tokens are moved from one account (`from`) to another (`to`). Note that `value` may be zero.\"}},\"kind\":\"dev\",\"methods\":{\"allowance(address,address)\":{\"details\":\"Returns the remaining number of tokens that `spender` will be allowed to spend on behalf of `owner` through {transferFrom}. This is zero by default. This value changes when {approve} or {transferFrom} are called.\"},\"approve(address,uint256)\":{\"details\":\"Sets a `value` amount of tokens as the allowance of `spender` over the caller's tokens. Returns a boolean value indicating whether the operation succeeded. IMPORTANT: Beware that changing an allowance with this method brings the risk that someone may use both the old and the new allowance by unfortunate transaction ordering. One possible solution to mitigate this race condition is to first reduce the spender's allowance to 0 and set the desired value afterwards: https://github.com/ethereum/EIPs/issues/20#issuecomment-263524729 Emits an {Approval} event.\"},\"balanceOf(address)\":{\"details\":\"Returns the value of tokens owned by `account`.\"},\"totalSupply()\":{\"details\":\"Returns the value of tokens in existence.\"},\"transfer(address,uint256)\":{\"details\":\"Moves a `value` amount of tokens from the caller's account to `to`. Returns a boolean value indicating whether the operation succeeded. Emits a {Transfer} event.\"},\"transferFrom(address,address,uint256)\":{\"details\":\"Moves a `value` amount of tokens from `from` to `to` using the allowance mechanism. `value` is then deducted from the caller's allowance. Returns a boolean value indicating whether the operation succeeded. Emits a {Transfer} event.\"}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/token/ERC20/IERC20.sol\":\"IERC20\"},\"evmVersion\":\"cancun\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/token/ERC20/IERC20.sol\":{\"keccak256\":\"0xe06a3f08a987af6ad2e1c1e774405d4fe08f1694b67517438b467cecf0da0ef7\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://df6f0c459663c9858b6cba2cda1d14a7d05a985bed6d2de72bd8e78c25ee79db\",\"dweb:/ipfs/QmeTTxZ7qVk9rjEv2R4CpCwdf8UMCcRqDNMvzNxHc3Fnn9\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [],
						"types": null
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			},
			"@openzeppelin/contracts/token/ERC20/extensions/IERC20Metadata.sol": {
				"IERC20Metadata": {
					"abi": [
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "owner",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "spender",
									"type": "address"
								},
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "Approval",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "from",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "Transfer",
							"type": "event"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "owner",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "spender",
									"type": "address"
								}
							],
							"name": "allowance",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "spender",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "approve",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "account",
									"type": "address"
								}
							],
							"name": "balanceOf",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "decimals",
							"outputs": [
								{
									"internalType": "uint8",
									"name": "",
									"type": "uint8"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "name",
							"outputs": [
								{
									"internalType": "string",
									"name": "",
									"type": "string"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "symbol",
							"outputs": [
								{
									"internalType": "string",
									"name": "",
									"type": "string"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "totalSupply",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "transfer",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "from",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "transferFrom",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						}
					],
					"devdoc": {
						"details": "Interface for the optional metadata functions from the ERC-20 standard.",
						"events": {
							"Approval(address,address,uint256)": {
								"details": "Emitted when the allowance of a `spender` for an `owner` is set by a call to {approve}. `value` is the new allowance."
							},
							"Transfer(address,address,uint256)": {
								"details": "Emitted when `value` tokens are moved from one account (`from`) to another (`to`). Note that `value` may be zero."
							}
						},
						"kind": "dev",
						"methods": {
							"allowance(address,address)": {
								"details": "Returns the remaining number of tokens that `spender` will be allowed to spend on behalf of `owner` through {transferFrom}. This is zero by default. This value changes when {approve} or {transferFrom} are called."
							},
							"approve(address,uint256)": {
								"details": "Sets a `value` amount of tokens as the allowance of `spender` over the caller's tokens. Returns a boolean value indicating whether the operation succeeded. IMPORTANT: Beware that changing an allowance with this method brings the risk that someone may use both the old and the new allowance by unfortunate transaction ordering. One possible solution to mitigate this race condition is to first reduce the spender's allowance to 0 and set the desired value afterwards: https://github.com/ethereum/EIPs/issues/20#issuecomment-263524729 Emits an {Approval} event."
							},
							"balanceOf(address)": {
								"details": "Returns the value of tokens owned by `account`."
							},
							"decimals()": {
								"details": "Returns the decimals places of the token."
							},
							"name()": {
								"details": "Returns the name of the token."
							},
							"symbol()": {
								"details": "Returns the symbol of the token."
							},
							"totalSupply()": {
								"details": "Returns the value of tokens in existence."
							},
							"transfer(address,uint256)": {
								"details": "Moves a `value` amount of tokens from the caller's account to `to`. Returns a boolean value indicating whether the operation succeeded. Emits a {Transfer} event."
							},
							"transferFrom(address,address,uint256)": {
								"details": "Moves a `value` amount of tokens from `from` to `to` using the allowance mechanism. `value` is then deducted from the caller's allowance. Returns a boolean value indicating whether the operation succeeded. Emits a {Transfer} event."
							}
						},
						"version": 1
					},
					"evm": {
						"assembly": "",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"gasEstimates": null,
						"legacyAssembly": null,
						"methodIdentifiers": {
							"allowance(address,address)": "dd62ed3e",
							"approve(address,uint256)": "095ea7b3",
							"balanceOf(address)": "70a08231",
							"decimals()": "313ce567",
							"name()": "06fdde03",
							"symbol()": "95d89b41",
							"totalSupply()": "18160ddd",
							"transfer(address,uint256)": "a9059cbb",
							"transferFrom(address,address,uint256)": "23b872dd"
						}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.26+commit.8a97fa7a\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"Approval\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"Transfer\",\"type\":\"event\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"}],\"name\":\"allowance\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"approve\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"balanceOf\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"decimals\",\"outputs\":[{\"internalType\":\"uint8\",\"name\":\"\",\"type\":\"uint8\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"name\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"symbol\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"totalSupply\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"transfer\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"transferFrom\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"details\":\"Interface for the optional metadata functions from the ERC-20 standard.\",\"events\":{\"Approval(address,address,uint256)\":{\"details\":\"Emitted when the allowance of a `spender` for an `owner` is set by a call to {approve}. `value` is the new allowance.\"},\"Transfer(address,address,uint256)\":{\"details\":\"Emitted when `value` tokens are moved from one account (`from`) to another (`to`). Note that `value` may be zero.\"}},\"kind\":\"dev\",\"methods\":{\"allowance(address,address)\":{\"details\":\"Returns the remaining number of tokens that `spender` will be allowed to spend on behalf of `owner` through {transferFrom}. This is zero by default. This value changes when {approve} or {transferFrom} are called.\"},\"approve(address,uint256)\":{\"details\":\"Sets a `value` amount of tokens as the allowance of `spender` over the caller's tokens. Returns a boolean value indicating whether the operation succeeded. IMPORTANT: Beware that changing an allowance with this method brings the risk that someone may use both the old and the new allowance by unfortunate transaction ordering. One possible solution to mitigate this race condition is to first reduce the spender's allowance to 0 and set the desired value afterwards: https://github.com/ethereum/EIPs/issues/20#issuecomment-263524729 Emits an {Approval} event.\"},\"balanceOf(address)\":{\"details\":\"Returns the value of tokens owned by `account`.\"},\"decimals()\":{\"details\":\"Returns the decimals places of the token.\"},\"name()\":{\"details\":\"Returns the name of the token.\"},\"symbol()\":{\"details\":\"Returns the symbol of the token.\"},\"totalSupply()\":{\"details\":\"Returns the value of tokens in existence.\"},\"transfer(address,uint256)\":{\"details\":\"Moves a `value` amount of tokens from the caller's account to `to`. Returns a boolean value indicating whether the operation succeeded. Emits a {Transfer} event.\"},\"transferFrom(address,address,uint256)\":{\"details\":\"Moves a `value` amount of tokens from `from` to `to` using the allowance mechanism. `value` is then deducted from the caller's allowance. Returns a boolean value indicating whether the operation succeeded. Emits a {Transfer} event.\"}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/token/ERC20/extensions/IERC20Metadata.sol\":\"IERC20Metadata\"},\"evmVersion\":\"cancun\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/token/ERC20/IERC20.sol\":{\"keccak256\":\"0xe06a3f08a987af6ad2e1c1e774405d4fe08f1694b67517438b467cecf0da0ef7\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://df6f0c459663c9858b6cba2cda1d14a7d05a985bed6d2de72bd8e78c25ee79db\",\"dweb:/ipfs/QmeTTxZ7qVk9rjEv2R4CpCwdf8UMCcRqDNMvzNxHc3Fnn9\"]},\"@openzeppelin/contracts/token/ERC20/extensions/IERC20Metadata.sol\":{\"keccak256\":\"0x70f2f713b13b7ce4610bcd0ac9fec0f3cc43693b043abcb8dc40a42a726eb330\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://c13d13304ac79a83ab1c30168967d19e2203342ebbd6a9bbce4db7550522dcbf\",\"dweb:/ipfs/QmeN5jKMN2vw5bhacr6tkg78afbTTZUeaacNHqjWt4Ew1r\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [],
						"types": null
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			},
			"@openzeppelin/contracts/utils/Context.sol": {
				"Context": {
					"abi": [],
					"devdoc": {
						"details": "Provides information about the current execution context, including the sender of the transaction and its data. While these are generally available via msg.sender and msg.data, they should not be accessed in such a direct manner, since when dealing with meta-transactions the account sending and paying for execution may not be the actual sender (as far as an application is concerned). This contract is only required for intermediate, library-like contracts.",
						"kind": "dev",
						"methods": {},
						"version": 1
					},
					"evm": {
						"assembly": "",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"gasEstimates": null,
						"legacyAssembly": null,
						"methodIdentifiers": {}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.26+commit.8a97fa7a\"},\"language\":\"Solidity\",\"output\":{\"abi\":[],\"devdoc\":{\"details\":\"Provides information about the current execution context, including the sender of the transaction and its data. While these are generally available via msg.sender and msg.data, they should not be accessed in such a direct manner, since when dealing with meta-transactions the account sending and paying for execution may not be the actual sender (as far as an application is concerned). This contract is only required for intermediate, library-like contracts.\",\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/utils/Context.sol\":\"Context\"},\"evmVersion\":\"cancun\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/utils/Context.sol\":{\"keccak256\":\"0x493033a8d1b176a037b2cc6a04dad01a5c157722049bbecf632ca876224dd4b2\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://6a708e8a5bdb1011c2c381c9a5cfd8a9a956d7d0a9dc1bd8bcdaf52f76ef2f12\",\"dweb:/ipfs/Qmax9WHBnVsZP46ZxEMNRQpLQnrdE4dK8LehML1Py8FowF\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [],
						"types": null
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			},
			"@openzeppelin/contracts/utils/structs/EnumerableSet.sol": {
				"EnumerableSet": {
					"abi": [],
					"devdoc": {
						"details": "Library for managing https://en.wikipedia.org/wiki/Set_(abstract_data_type)[sets] of primitive types. Sets have the following properties: - Elements are added, removed, and checked for existence in constant time (O(1)). - Elements are enumerated in O(n). No guarantees are made on the ordering. ```solidity contract Example {     // Add the library methods     using EnumerableSet for EnumerableSet.AddressSet;     // Declare a set state variable     EnumerableSet.AddressSet private mySet; } ``` As of v3.3.0, sets of type `bytes32` (`Bytes32Set`), `address` (`AddressSet`) and `uint256` (`UintSet`) are supported. [WARNING] ==== Trying to delete such a structure from storage will likely result in data corruption, rendering the structure unusable. See https://github.com/ethereum/solidity/pull/11843[ethereum/solidity#11843] for more info. In order to clean an EnumerableSet, you can either remove all elements one by one or create a fresh instance using an array of EnumerableSet. ====",
						"kind": "dev",
						"methods": {},
						"version": 1
					},
					"evm": {
						"assembly": "    /* \"@openzeppelin/contracts/utils/structs/EnumerableSet.sol\":1330:12889  library EnumerableSet {... */\n  dataSize(sub_0)\n  dataOffset(sub_0)\n  0x0b\n  dup3\n  dup3\n  dup3\n  codecopy\n  dup1\n  mload\n  0x00\n  byte\n  0x73\n  eq\n  tag_1\n  jumpi\n  mstore(0x00, 0x4e487b7100000000000000000000000000000000000000000000000000000000)\n  mstore(0x04, 0x00)\n  revert(0x00, 0x24)\ntag_1:\n  mstore(0x00, address)\n  0x73\n  dup2\n  mstore8\n  dup3\n  dup2\n  return\nstop\n\nsub_0: assembly {\n        /* \"@openzeppelin/contracts/utils/structs/EnumerableSet.sol\":1330:12889  library EnumerableSet {... */\n      eq(address, deployTimeAddress())\n      mstore(0x40, 0x80)\n      0x00\n      dup1\n      revert\n\n    auxdata: 0xa264697066735822122049af7bfda73a11077c441d392deb5097f1e497a69df39c89e85b58b4b70107ff64736f6c634300081a0033\n}\n",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "6055604b600b8282823980515f1a607314603f577f4e487b71000000000000000000000000000000000000000000000000000000005f525f60045260245ffd5b305f52607381538281f3fe730000000000000000000000000000000000000000301460806040525f80fdfea264697066735822122049af7bfda73a11077c441d392deb5097f1e497a69df39c89e85b58b4b70107ff64736f6c634300081a0033",
							"opcodes": "PUSH1 0x55 PUSH1 0x4B PUSH1 0xB DUP3 DUP3 DUP3 CODECOPY DUP1 MLOAD PUSH0 BYTE PUSH1 0x73 EQ PUSH1 0x3F JUMPI PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH0 MSTORE PUSH0 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH0 REVERT JUMPDEST ADDRESS PUSH0 MSTORE PUSH1 0x73 DUP2 MSTORE8 DUP3 DUP2 RETURN INVALID PUSH20 0x0 ADDRESS EQ PUSH1 0x80 PUSH1 0x40 MSTORE PUSH0 DUP1 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 BLOBHASH 0xAF PUSH28 0xFDA73A11077C441D392DEB5097F1E497A69DF39C89E85B58B4B70107 SELFDESTRUCT PUSH5 0x736F6C6343 STOP ADDMOD BYTE STOP CALLER ",
							"sourceMap": "1330:11559:5:-:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;"
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "730000000000000000000000000000000000000000301460806040525f80fdfea264697066735822122049af7bfda73a11077c441d392deb5097f1e497a69df39c89e85b58b4b70107ff64736f6c634300081a0033",
							"opcodes": "PUSH20 0x0 ADDRESS EQ PUSH1 0x80 PUSH1 0x40 MSTORE PUSH0 DUP1 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 BLOBHASH 0xAF PUSH28 0xFDA73A11077C441D392DEB5097F1E497A69DF39C89E85B58B4B70107 SELFDESTRUCT PUSH5 0x736F6C6343 STOP ADDMOD BYTE STOP CALLER ",
							"sourceMap": "1330:11559:5:-:0;;;;;;;;"
						},
						"gasEstimates": {
							"creation": {
								"codeDepositCost": "17000",
								"executionCost": "92",
								"totalCost": "17092"
							},
							"internal": {
								"_add(struct EnumerableSet.Set storage pointer,bytes32)": "infinite",
								"_at(struct EnumerableSet.Set storage pointer,uint256)": "infinite",
								"_contains(struct EnumerableSet.Set storage pointer,bytes32)": "infinite",
								"_length(struct EnumerableSet.Set storage pointer)": "infinite",
								"_remove(struct EnumerableSet.Set storage pointer,bytes32)": "infinite",
								"_values(struct EnumerableSet.Set storage pointer)": "infinite",
								"add(struct EnumerableSet.AddressSet storage pointer,address)": "infinite",
								"add(struct EnumerableSet.Bytes32Set storage pointer,bytes32)": "infinite",
								"add(struct EnumerableSet.UintSet storage pointer,uint256)": "infinite",
								"at(struct EnumerableSet.AddressSet storage pointer,uint256)": "infinite",
								"at(struct EnumerableSet.Bytes32Set storage pointer,uint256)": "infinite",
								"at(struct EnumerableSet.UintSet storage pointer,uint256)": "infinite",
								"contains(struct EnumerableSet.AddressSet storage pointer,address)": "infinite",
								"contains(struct EnumerableSet.Bytes32Set storage pointer,bytes32)": "infinite",
								"contains(struct EnumerableSet.UintSet storage pointer,uint256)": "infinite",
								"length(struct EnumerableSet.AddressSet storage pointer)": "infinite",
								"length(struct EnumerableSet.Bytes32Set storage pointer)": "infinite",
								"length(struct EnumerableSet.UintSet storage pointer)": "infinite",
								"remove(struct EnumerableSet.AddressSet storage pointer,address)": "infinite",
								"remove(struct EnumerableSet.Bytes32Set storage pointer,bytes32)": "infinite",
								"remove(struct EnumerableSet.UintSet storage pointer,uint256)": "infinite",
								"values(struct EnumerableSet.AddressSet storage pointer)": "infinite",
								"values(struct EnumerableSet.Bytes32Set storage pointer)": "infinite",
								"values(struct EnumerableSet.UintSet storage pointer)": "infinite"
							}
						},
						"legacyAssembly": {
							".code": [
								{
									"begin": 1330,
									"end": 12889,
									"name": "PUSH #[$]",
									"source": 5,
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 1330,
									"end": 12889,
									"name": "PUSH [$]",
									"source": 5,
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 1330,
									"end": 12889,
									"name": "PUSH",
									"source": 5,
									"value": "B"
								},
								{
									"begin": 1330,
									"end": 12889,
									"name": "DUP3",
									"source": 5
								},
								{
									"begin": 1330,
									"end": 12889,
									"name": "DUP3",
									"source": 5
								},
								{
									"begin": 1330,
									"end": 12889,
									"name": "DUP3",
									"source": 5
								},
								{
									"begin": 1330,
									"end": 12889,
									"name": "CODECOPY",
									"source": 5
								},
								{
									"begin": 1330,
									"end": 12889,
									"name": "DUP1",
									"source": 5
								},
								{
									"begin": 1330,
									"end": 12889,
									"name": "MLOAD",
									"source": 5
								},
								{
									"begin": 1330,
									"end": 12889,
									"name": "PUSH",
									"source": 5,
									"value": "0"
								},
								{
									"begin": 1330,
									"end": 12889,
									"name": "BYTE",
									"source": 5
								},
								{
									"begin": 1330,
									"end": 12889,
									"name": "PUSH",
									"source": 5,
									"value": "73"
								},
								{
									"begin": 1330,
									"end": 12889,
									"name": "EQ",
									"source": 5
								},
								{
									"begin": 1330,
									"end": 12889,
									"name": "PUSH [tag]",
									"source": 5,
									"value": "1"
								},
								{
									"begin": 1330,
									"end": 12889,
									"name": "JUMPI",
									"source": 5
								},
								{
									"begin": 1330,
									"end": 12889,
									"name": "PUSH",
									"source": 5,
									"value": "4E487B7100000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 1330,
									"end": 12889,
									"name": "PUSH",
									"source": 5,
									"value": "0"
								},
								{
									"begin": 1330,
									"end": 12889,
									"name": "MSTORE",
									"source": 5
								},
								{
									"begin": 1330,
									"end": 12889,
									"name": "PUSH",
									"source": 5,
									"value": "0"
								},
								{
									"begin": 1330,
									"end": 12889,
									"name": "PUSH",
									"source": 5,
									"value": "4"
								},
								{
									"begin": 1330,
									"end": 12889,
									"name": "MSTORE",
									"source": 5
								},
								{
									"begin": 1330,
									"end": 12889,
									"name": "PUSH",
									"source": 5,
									"value": "24"
								},
								{
									"begin": 1330,
									"end": 12889,
									"name": "PUSH",
									"source": 5,
									"value": "0"
								},
								{
									"begin": 1330,
									"end": 12889,
									"name": "REVERT",
									"source": 5
								},
								{
									"begin": 1330,
									"end": 12889,
									"name": "tag",
									"source": 5,
									"value": "1"
								},
								{
									"begin": 1330,
									"end": 12889,
									"name": "JUMPDEST",
									"source": 5
								},
								{
									"begin": 1330,
									"end": 12889,
									"name": "ADDRESS",
									"source": 5
								},
								{
									"begin": 1330,
									"end": 12889,
									"name": "PUSH",
									"source": 5,
									"value": "0"
								},
								{
									"begin": 1330,
									"end": 12889,
									"name": "MSTORE",
									"source": 5
								},
								{
									"begin": 1330,
									"end": 12889,
									"name": "PUSH",
									"source": 5,
									"value": "73"
								},
								{
									"begin": 1330,
									"end": 12889,
									"name": "DUP2",
									"source": 5
								},
								{
									"begin": 1330,
									"end": 12889,
									"name": "MSTORE8",
									"source": 5
								},
								{
									"begin": 1330,
									"end": 12889,
									"name": "DUP3",
									"source": 5
								},
								{
									"begin": 1330,
									"end": 12889,
									"name": "DUP2",
									"source": 5
								},
								{
									"begin": 1330,
									"end": 12889,
									"name": "RETURN",
									"source": 5
								}
							],
							".data": {
								"0": {
									".auxdata": "a264697066735822122049af7bfda73a11077c441d392deb5097f1e497a69df39c89e85b58b4b70107ff64736f6c634300081a0033",
									".code": [
										{
											"begin": 1330,
											"end": 12889,
											"name": "PUSHDEPLOYADDRESS",
											"source": 5
										},
										{
											"begin": 1330,
											"end": 12889,
											"name": "ADDRESS",
											"source": 5
										},
										{
											"begin": 1330,
											"end": 12889,
											"name": "EQ",
											"source": 5
										},
										{
											"begin": 1330,
											"end": 12889,
											"name": "PUSH",
											"source": 5,
											"value": "80"
										},
										{
											"begin": 1330,
											"end": 12889,
											"name": "PUSH",
											"source": 5,
											"value": "40"
										},
										{
											"begin": 1330,
											"end": 12889,
											"name": "MSTORE",
											"source": 5
										},
										{
											"begin": 1330,
											"end": 12889,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 1330,
											"end": 12889,
											"name": "DUP1",
											"source": 5
										},
										{
											"begin": 1330,
											"end": 12889,
											"name": "REVERT",
											"source": 5
										}
									]
								}
							},
							"sourceList": [
								"@openzeppelin/contracts/interfaces/draft-IERC6093.sol",
								"@openzeppelin/contracts/token/ERC20/ERC20.sol",
								"@openzeppelin/contracts/token/ERC20/IERC20.sol",
								"@openzeppelin/contracts/token/ERC20/extensions/IERC20Metadata.sol",
								"@openzeppelin/contracts/utils/Context.sol",
								"@openzeppelin/contracts/utils/structs/EnumerableSet.sol",
								"ERC20.sol",
								"#utility.yul"
							]
						},
						"methodIdentifiers": {}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.26+commit.8a97fa7a\"},\"language\":\"Solidity\",\"output\":{\"abi\":[],\"devdoc\":{\"details\":\"Library for managing https://en.wikipedia.org/wiki/Set_(abstract_data_type)[sets] of primitive types. Sets have the following properties: - Elements are added, removed, and checked for existence in constant time (O(1)). - Elements are enumerated in O(n). No guarantees are made on the ordering. ```solidity contract Example {     // Add the library methods     using EnumerableSet for EnumerableSet.AddressSet;     // Declare a set state variable     EnumerableSet.AddressSet private mySet; } ``` As of v3.3.0, sets of type `bytes32` (`Bytes32Set`), `address` (`AddressSet`) and `uint256` (`UintSet`) are supported. [WARNING] ==== Trying to delete such a structure from storage will likely result in data corruption, rendering the structure unusable. See https://github.com/ethereum/solidity/pull/11843[ethereum/solidity#11843] for more info. In order to clean an EnumerableSet, you can either remove all elements one by one or create a fresh instance using an array of EnumerableSet. ====\",\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/utils/structs/EnumerableSet.sol\":\"EnumerableSet\"},\"evmVersion\":\"cancun\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/utils/structs/EnumerableSet.sol\":{\"keccak256\":\"0x9b161e97b8967d4bc0c08d25741889a30692cdda4b71910bf1b0e315f1962212\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://821500c39d095eaa25b06f46e65f1d0e97c4c96b39227f79077dee7d9e84051f\",\"dweb:/ipfs/QmSTeGorKzSWF6HAmxo32uCZiEuKNvreQdUiX1AaYtUMTz\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [],
						"types": null
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			},
			"ERC20.sol": {
				"WeightedVoting": {
					"abi": [
						{
							"inputs": [
								{
									"internalType": "string",
									"name": "_name",
									"type": "string"
								},
								{
									"internalType": "string",
									"name": "_symbol",
									"type": "string"
								}
							],
							"stateMutability": "nonpayable",
							"type": "constructor"
						},
						{
							"inputs": [],
							"name": "AllTokensClaimed",
							"type": "error"
						},
						{
							"inputs": [],
							"name": "AlreadyVoted",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "spender",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "allowance",
									"type": "uint256"
								},
								{
									"internalType": "uint256",
									"name": "needed",
									"type": "uint256"
								}
							],
							"name": "ERC20InsufficientAllowance",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "sender",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "balance",
									"type": "uint256"
								},
								{
									"internalType": "uint256",
									"name": "needed",
									"type": "uint256"
								}
							],
							"name": "ERC20InsufficientBalance",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "approver",
									"type": "address"
								}
							],
							"name": "ERC20InvalidApprover",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "receiver",
									"type": "address"
								}
							],
							"name": "ERC20InvalidReceiver",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "sender",
									"type": "address"
								}
							],
							"name": "ERC20InvalidSender",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "spender",
									"type": "address"
								}
							],
							"name": "ERC20InvalidSpender",
							"type": "error"
						},
						{
							"inputs": [],
							"name": "NoTokensHeld",
							"type": "error"
						},
						{
							"inputs": [],
							"name": "QuorumTooHigh",
							"type": "error"
						},
						{
							"inputs": [],
							"name": "TokensClaimed",
							"type": "error"
						},
						{
							"inputs": [],
							"name": "VotingClosed",
							"type": "error"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "owner",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "spender",
									"type": "address"
								},
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "Approval",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "from",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "Transfer",
							"type": "event"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "owner",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "spender",
									"type": "address"
								}
							],
							"name": "allowance",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "spender",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "approve",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "account",
									"type": "address"
								}
							],
							"name": "balanceOf",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "claim",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "claimAmount",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "string",
									"name": "_issueDesc",
									"type": "string"
								},
								{
									"internalType": "uint256",
									"name": "_quorum",
									"type": "uint256"
								}
							],
							"name": "createIssue",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "decimals",
							"outputs": [
								{
									"internalType": "uint8",
									"name": "",
									"type": "uint8"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "uint256",
									"name": "_issueId",
									"type": "uint256"
								}
							],
							"name": "getIssue",
							"outputs": [
								{
									"components": [
										{
											"internalType": "address[]",
											"name": "voters",
											"type": "address[]"
										},
										{
											"internalType": "string",
											"name": "issueDesc",
											"type": "string"
										},
										{
											"internalType": "uint256",
											"name": "quorum",
											"type": "uint256"
										},
										{
											"internalType": "uint256",
											"name": "totalVotes",
											"type": "uint256"
										},
										{
											"internalType": "uint256",
											"name": "votesFor",
											"type": "uint256"
										},
										{
											"internalType": "uint256",
											"name": "votesAgainst",
											"type": "uint256"
										},
										{
											"internalType": "uint256",
											"name": "votesAbstain",
											"type": "uint256"
										},
										{
											"internalType": "bool",
											"name": "passed",
											"type": "bool"
										},
										{
											"internalType": "bool",
											"name": "closed",
											"type": "bool"
										}
									],
									"internalType": "struct WeightedVoting.SerializedIssue",
									"name": "",
									"type": "tuple"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "maxSupply",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "name",
							"outputs": [
								{
									"internalType": "string",
									"name": "",
									"type": "string"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "symbol",
							"outputs": [
								{
									"internalType": "string",
									"name": "",
									"type": "string"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "",
									"type": "address"
								}
							],
							"name": "tokensClaimed",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "totalSupply",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "transfer",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "from",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "transferFrom",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "uint256",
									"name": "_issueId",
									"type": "uint256"
								},
								{
									"internalType": "enum WeightedVoting.Vote",
									"name": "_vote",
									"type": "uint8"
								}
							],
							"name": "vote",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						}
					],
					"devdoc": {
						"errors": {
							"ERC20InsufficientAllowance(address,uint256,uint256)": [
								{
									"details": "Indicates a failure with the `spender`’s `allowance`. Used in transfers.",
									"params": {
										"allowance": "Amount of tokens a `spender` is allowed to operate with.",
										"needed": "Minimum amount required to perform a transfer.",
										"spender": "Address that may be allowed to operate on tokens without being their owner."
									}
								}
							],
							"ERC20InsufficientBalance(address,uint256,uint256)": [
								{
									"details": "Indicates an error related to the current `balance` of a `sender`. Used in transfers.",
									"params": {
										"balance": "Current balance for the interacting account.",
										"needed": "Minimum amount required to perform a transfer.",
										"sender": "Address whose tokens are being transferred."
									}
								}
							],
							"ERC20InvalidApprover(address)": [
								{
									"details": "Indicates a failure with the `approver` of a token to be approved. Used in approvals.",
									"params": {
										"approver": "Address initiating an approval operation."
									}
								}
							],
							"ERC20InvalidReceiver(address)": [
								{
									"details": "Indicates a failure with the token `receiver`. Used in transfers.",
									"params": {
										"receiver": "Address to which tokens are being transferred."
									}
								}
							],
							"ERC20InvalidSender(address)": [
								{
									"details": "Indicates a failure with the token `sender`. Used in transfers.",
									"params": {
										"sender": "Address whose tokens are being transferred."
									}
								}
							],
							"ERC20InvalidSpender(address)": [
								{
									"details": "Indicates a failure with the `spender` to be approved. Used in approvals.",
									"params": {
										"spender": "Address that may be allowed to operate on tokens without being their owner."
									}
								}
							]
						},
						"events": {
							"Approval(address,address,uint256)": {
								"details": "Emitted when the allowance of a `spender` for an `owner` is set by a call to {approve}. `value` is the new allowance."
							},
							"Transfer(address,address,uint256)": {
								"details": "Emitted when `value` tokens are moved from one account (`from`) to another (`to`). Note that `value` may be zero."
							}
						},
						"kind": "dev",
						"methods": {
							"allowance(address,address)": {
								"details": "See {IERC20-allowance}."
							},
							"approve(address,uint256)": {
								"details": "See {IERC20-approve}. NOTE: If `value` is the maximum `uint256`, the allowance is not updated on `transferFrom`. This is semantically equivalent to an infinite approval. Requirements: - `spender` cannot be the zero address."
							},
							"balanceOf(address)": {
								"details": "See {IERC20-balanceOf}."
							},
							"decimals()": {
								"details": "Returns the number of decimals used to get its user representation. For example, if `decimals` equals `2`, a balance of `505` tokens should be displayed to a user as `5.05` (`505 / 10 ** 2`). Tokens usually opt for a value of 18, imitating the relationship between Ether and Wei. This is the default value returned by this function, unless it's overridden. NOTE: This information is only used for _display_ purposes: it in no way affects any of the arithmetic of the contract, including {IERC20-balanceOf} and {IERC20-transfer}."
							},
							"name()": {
								"details": "Returns the name of the token."
							},
							"symbol()": {
								"details": "Returns the symbol of the token, usually a shorter version of the name."
							},
							"totalSupply()": {
								"details": "See {IERC20-totalSupply}."
							},
							"transfer(address,uint256)": {
								"details": "See {IERC20-transfer}. Requirements: - `to` cannot be the zero address. - the caller must have a balance of at least `value`."
							},
							"transferFrom(address,address,uint256)": {
								"details": "See {IERC20-transferFrom}. Skips emitting an {Approval} event indicating an allowance update. This is not required by the ERC. See {xref-ERC20-_approve-address-address-uint256-bool-}[_approve]. NOTE: Does not update the allowance if the current allowance is the maximum `uint256`. Requirements: - `from` and `to` cannot be the zero address. - `from` must have a balance of at least `value`. - the caller must have allowance for ``from``'s tokens of at least `value`."
							}
						},
						"version": 1
					},
					"evm": {
						"assembly": "    /* \"ERC20.sol\":318:6184  contract WeightedVoting is ERC20 {... */\n  mstore(0x40, 0x80)\n    /* \"ERC20.sol\":357:386  string private salt = \"value\" */\n  mload(0x40)\n  dup1\n  0x40\n  add\n  0x40\n  mstore\n  dup1\n  0x05\n  dup2\n  mstore\n  0x20\n  add\n  0x76616c7565000000000000000000000000000000000000000000000000000000\n  dup2\n  mstore\n  pop\n  0x05\n  swap1\n  dup2\n  tag_1\n  swap2\n  swap1\n  tag_2\n  jump\t// in\ntag_1:\n  pop\n    /* \"ERC20.sol\":2605:2612  1000000 */\n  0x0f4240\n    /* \"ERC20.sol\":2578:2612  uint256 public maxSupply = 1000000 */\n  0x08\n  sstore\n    /* \"ERC20.sol\":2675:2678  100 */\n  0x64\n    /* \"ERC20.sol\":2646:2678  uint256 public claimAmount = 100 */\n  0x09\n  sstore\n    /* \"ERC20.sol\":2719:2739  string saltt = \"any\" */\n  mload(0x40)\n  dup1\n  0x40\n  add\n  0x40\n  mstore\n  dup1\n  0x03\n  dup2\n  mstore\n  0x20\n  add\n  0x616e790000000000000000000000000000000000000000000000000000000000\n  dup2\n  mstore\n  pop\n  0x0a\n  swap1\n  dup2\n  tag_3\n  swap2\n  swap1\n  tag_2\n  jump\t// in\ntag_3:\n  pop\n    /* \"ERC20.sol\":2841:3009  constructor(string memory _name, string memory _symbol)... */\n  callvalue\n  dup1\n  iszero\n  tag_4\n  jumpi\n  0x00\n  dup1\n  revert\ntag_4:\n  pop\n  mload(0x40)\n  sub(codesize, bytecodeSize)\n  dup1\n  bytecodeSize\n  dup4\n  codecopy\n  dup2\n  dup2\n  add\n  0x40\n  mstore\n  dup2\n  add\n  swap1\n  tag_5\n  swap2\n  swap1\n  tag_6\n  jump\t// in\ntag_5:\n    /* \"ERC20.sol\":2911:2916  _name */\n  dup2\n    /* \"ERC20.sol\":2918:2925  _symbol */\n  dup2\n    /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":1675:1680  name_ */\n  dup2\n    /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":1667:1672  _name */\n  0x03\n    /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":1667:1680  _name = name_ */\n  swap1\n  dup2\n  tag_10\n  swap2\n  swap1\n  tag_2\n  jump\t// in\ntag_10:\n  pop\n    /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":1700:1707  symbol_ */\n  dup1\n    /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":1690:1697  _symbol */\n  0x04\n    /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":1690:1707  _symbol = symbol_ */\n  swap1\n  dup2\n  tag_11\n  swap2\n  swap1\n  tag_2\n  jump\t// in\ntag_11:\n  pop\n    /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":1601:1714  constructor(string memory name_, string memory symbol_) {... */\n  pop\n  pop\n    /* \"ERC20.sol\":2941:2947  issues */\n  0x06\n    /* \"ERC20.sol\":2941:2954  issues.push() */\n  0x01\n  dup2\n  0x01\n  dup2\n  sload\n  add\n  dup1\n  dup3\n  sstore\n  dup1\n  swap2\n  pop\n  pop\n  sub\n  swap1\n  0x00\n  mstore\n  keccak256(0x00, 0x20)\n  swap1\n  pop\n  pop\n    /* \"ERC20.sol\":2841:3009  constructor(string memory _name, string memory _symbol)... */\n  pop\n  pop\n    /* \"ERC20.sol\":318:6184  contract WeightedVoting is ERC20 {... */\n  jump(tag_14)\n    /* \"#utility.yul\":7:106   */\ntag_15:\n    /* \"#utility.yul\":59:65   */\n  0x00\n    /* \"#utility.yul\":93:98   */\n  dup2\n    /* \"#utility.yul\":87:99   */\n  mload\n    /* \"#utility.yul\":77:99   */\n  swap1\n  pop\n    /* \"#utility.yul\":7:106   */\n  swap2\n  swap1\n  pop\n  jump\t// out\n    /* \"#utility.yul\":112:292   */\ntag_16:\n    /* \"#utility.yul\":160:237   */\n  0x4e487b7100000000000000000000000000000000000000000000000000000000\n    /* \"#utility.yul\":157:158   */\n  0x00\n    /* \"#utility.yul\":150:238   */\n  mstore\n    /* \"#utility.yul\":257:261   */\n  0x41\n    /* \"#utility.yul\":254:255   */\n  0x04\n    /* \"#utility.yul\":247:262   */\n  mstore\n    /* \"#utility.yul\":281:285   */\n  0x24\n    /* \"#utility.yul\":278:279   */\n  0x00\n    /* \"#utility.yul\":271:286   */\n  revert\n    /* \"#utility.yul\":298:478   */\ntag_17:\n    /* \"#utility.yul\":346:423   */\n  0x4e487b7100000000000000000000000000000000000000000000000000000000\n    /* \"#utility.yul\":343:344   */\n  0x00\n    /* \"#utility.yul\":336:424   */\n  mstore\n    /* \"#utility.yul\":443:447   */\n  0x22\n    /* \"#utility.yul\":440:441   */\n  0x04\n    /* \"#utility.yul\":433:448   */\n  mstore\n    /* \"#utility.yul\":467:471   */\n  0x24\n    /* \"#utility.yul\":464:465   */\n  0x00\n    /* \"#utility.yul\":457:472   */\n  revert\n    /* \"#utility.yul\":484:804   */\ntag_18:\n    /* \"#utility.yul\":528:534   */\n  0x00\n    /* \"#utility.yul\":565:566   */\n  0x02\n    /* \"#utility.yul\":559:563   */\n  dup3\n    /* \"#utility.yul\":555:567   */\n  div\n    /* \"#utility.yul\":545:567   */\n  swap1\n  pop\n    /* \"#utility.yul\":612:613   */\n  0x01\n    /* \"#utility.yul\":606:610   */\n  dup3\n    /* \"#utility.yul\":602:614   */\n  and\n    /* \"#utility.yul\":633:651   */\n  dup1\n    /* \"#utility.yul\":623:704   */\n  tag_52\n  jumpi\n    /* \"#utility.yul\":689:693   */\n  0x7f\n    /* \"#utility.yul\":681:687   */\n  dup3\n    /* \"#utility.yul\":677:694   */\n  and\n    /* \"#utility.yul\":667:694   */\n  swap2\n  pop\n    /* \"#utility.yul\":623:704   */\ntag_52:\n    /* \"#utility.yul\":751:753   */\n  0x20\n    /* \"#utility.yul\":743:749   */\n  dup3\n    /* \"#utility.yul\":740:754   */\n  lt\n    /* \"#utility.yul\":720:738   */\n  dup2\n    /* \"#utility.yul\":717:755   */\n  sub\n    /* \"#utility.yul\":714:798   */\n  tag_53\n  jumpi\n    /* \"#utility.yul\":770:788   */\n  tag_54\n  tag_17\n  jump\t// in\ntag_54:\n    /* \"#utility.yul\":714:798   */\ntag_53:\n    /* \"#utility.yul\":535:804   */\n  pop\n    /* \"#utility.yul\":484:804   */\n  swap2\n  swap1\n  pop\n  jump\t// out\n    /* \"#utility.yul\":810:951   */\ntag_19:\n    /* \"#utility.yul\":859:863   */\n  0x00\n    /* \"#utility.yul\":882:885   */\n  dup2\n    /* \"#utility.yul\":874:885   */\n  swap1\n  pop\n    /* \"#utility.yul\":905:908   */\n  dup2\n    /* \"#utility.yul\":902:903   */\n  0x00\n    /* \"#utility.yul\":895:909   */\n  mstore\n    /* \"#utility.yul\":939:943   */\n  0x20\n    /* \"#utility.yul\":936:937   */\n  0x00\n    /* \"#utility.yul\":926:944   */\n  keccak256\n    /* \"#utility.yul\":918:944   */\n  swap1\n  pop\n    /* \"#utility.yul\":810:951   */\n  swap2\n  swap1\n  pop\n  jump\t// out\n    /* \"#utility.yul\":957:1050   */\ntag_20:\n    /* \"#utility.yul\":994:1000   */\n  0x00\n    /* \"#utility.yul\":1041:1043   */\n  0x20\n    /* \"#utility.yul\":1036:1038   */\n  0x1f\n    /* \"#utility.yul\":1029:1034   */\n  dup4\n    /* \"#utility.yul\":1025:1039   */\n  add\n    /* \"#utility.yul\":1021:1044   */\n  div\n    /* \"#utility.yul\":1011:1044   */\n  swap1\n  pop\n    /* \"#utility.yul\":957:1050   */\n  swap2\n  swap1\n  pop\n  jump\t// out\n    /* \"#utility.yul\":1056:1163   */\ntag_21:\n    /* \"#utility.yul\":1100:1108   */\n  0x00\n    /* \"#utility.yul\":1150:1155   */\n  dup3\n    /* \"#utility.yul\":1144:1148   */\n  dup3\n    /* \"#utility.yul\":1140:1156   */\n  shl\n    /* \"#utility.yul\":1119:1156   */\n  swap1\n  pop\n    /* \"#utility.yul\":1056:1163   */\n  swap3\n  swap2\n  pop\n  pop\n  jump\t// out\n    /* \"#utility.yul\":1169:1562   */\ntag_22:\n    /* \"#utility.yul\":1238:1244   */\n  0x00\n    /* \"#utility.yul\":1288:1289   */\n  0x08\n    /* \"#utility.yul\":1276:1286   */\n  dup4\n    /* \"#utility.yul\":1272:1290   */\n  mul\n    /* \"#utility.yul\":1311:1408   */\n  tag_59\n    /* \"#utility.yul\":1341:1407   */\n  0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff\n    /* \"#utility.yul\":1330:1339   */\n  dup3\n    /* \"#utility.yul\":1311:1408   */\n  tag_21\n  jump\t// in\ntag_59:\n    /* \"#utility.yul\":1429:1468   */\n  tag_60\n    /* \"#utility.yul\":1459:1467   */\n  dup7\n    /* \"#utility.yul\":1448:1457   */\n  dup4\n    /* \"#utility.yul\":1429:1468   */\n  tag_21\n  jump\t// in\ntag_60:\n    /* \"#utility.yul\":1417:1468   */\n  swap6\n  pop\n    /* \"#utility.yul\":1501:1505   */\n  dup1\n    /* \"#utility.yul\":1497:1506   */\n  not\n    /* \"#utility.yul\":1490:1495   */\n  dup5\n    /* \"#utility.yul\":1486:1507   */\n  and\n    /* \"#utility.yul\":1477:1507   */\n  swap4\n  pop\n    /* \"#utility.yul\":1550:1554   */\n  dup1\n    /* \"#utility.yul\":1540:1548   */\n  dup7\n    /* \"#utility.yul\":1536:1555   */\n  and\n    /* \"#utility.yul\":1529:1534   */\n  dup5\n    /* \"#utility.yul\":1526:1556   */\n  or\n    /* \"#utility.yul\":1516:1556   */\n  swap3\n  pop\n    /* \"#utility.yul\":1245:1562   */\n  pop\n  pop\n    /* \"#utility.yul\":1169:1562   */\n  swap4\n  swap3\n  pop\n  pop\n  pop\n  jump\t// out\n    /* \"#utility.yul\":1568:1645   */\ntag_23:\n    /* \"#utility.yul\":1605:1612   */\n  0x00\n    /* \"#utility.yul\":1634:1639   */\n  dup2\n    /* \"#utility.yul\":1623:1639   */\n  swap1\n  pop\n    /* \"#utility.yul\":1568:1645   */\n  swap2\n  swap1\n  pop\n  jump\t// out\n    /* \"#utility.yul\":1651:1711   */\ntag_24:\n    /* \"#utility.yul\":1679:1682   */\n  0x00\n    /* \"#utility.yul\":1700:1705   */\n  dup2\n    /* \"#utility.yul\":1693:1705   */\n  swap1\n  pop\n    /* \"#utility.yul\":1651:1711   */\n  swap2\n  swap1\n  pop\n  jump\t// out\n    /* \"#utility.yul\":1717:1859   */\ntag_25:\n    /* \"#utility.yul\":1767:1776   */\n  0x00\n    /* \"#utility.yul\":1800:1853   */\n  tag_64\n    /* \"#utility.yul\":1818:1852   */\n  tag_65\n    /* \"#utility.yul\":1827:1851   */\n  tag_66\n    /* \"#utility.yul\":1845:1850   */\n  dup5\n    /* \"#utility.yul\":1827:1851   */\n  tag_23\n  jump\t// in\ntag_66:\n    /* \"#utility.yul\":1818:1852   */\n  tag_24\n  jump\t// in\ntag_65:\n    /* \"#utility.yul\":1800:1853   */\n  tag_23\n  jump\t// in\ntag_64:\n    /* \"#utility.yul\":1787:1853   */\n  swap1\n  pop\n    /* \"#utility.yul\":1717:1859   */\n  swap2\n  swap1\n  pop\n  jump\t// out\n    /* \"#utility.yul\":1865:1940   */\ntag_26:\n    /* \"#utility.yul\":1908:1911   */\n  0x00\n    /* \"#utility.yul\":1929:1934   */\n  dup2\n    /* \"#utility.yul\":1922:1934   */\n  swap1\n  pop\n    /* \"#utility.yul\":1865:1940   */\n  swap2\n  swap1\n  pop\n  jump\t// out\n    /* \"#utility.yul\":1946:2215   */\ntag_27:\n    /* \"#utility.yul\":2056:2095   */\n  tag_69\n    /* \"#utility.yul\":2087:2094   */\n  dup4\n    /* \"#utility.yul\":2056:2095   */\n  tag_25\n  jump\t// in\ntag_69:\n    /* \"#utility.yul\":2117:2208   */\n  tag_70\n    /* \"#utility.yul\":2166:2207   */\n  tag_71\n    /* \"#utility.yul\":2190:2206   */\n  dup3\n    /* \"#utility.yul\":2166:2207   */\n  tag_26\n  jump\t// in\ntag_71:\n    /* \"#utility.yul\":2158:2164   */\n  dup5\n    /* \"#utility.yul\":2151:2155   */\n  dup5\n    /* \"#utility.yul\":2145:2156   */\n  sload\n    /* \"#utility.yul\":2117:2208   */\n  tag_22\n  jump\t// in\ntag_70:\n    /* \"#utility.yul\":2111:2115   */\n  dup3\n    /* \"#utility.yul\":2104:2209   */\n  sstore\n    /* \"#utility.yul\":2022:2215   */\n  pop\n    /* \"#utility.yul\":1946:2215   */\n  pop\n  pop\n  pop\n  jump\t// out\n    /* \"#utility.yul\":2221:2294   */\ntag_28:\n    /* \"#utility.yul\":2266:2269   */\n  0x00\n    /* \"#utility.yul\":2221:2294   */\n  swap1\n  jump\t// out\n    /* \"#utility.yul\":2300:2489   */\ntag_29:\n    /* \"#utility.yul\":2377:2409   */\n  tag_74\n  tag_28\n  jump\t// in\ntag_74:\n    /* \"#utility.yul\":2418:2483   */\n  tag_75\n    /* \"#utility.yul\":2476:2482   */\n  dup2\n    /* \"#utility.yul\":2468:2474   */\n  dup5\n    /* \"#utility.yul\":2462:2466   */\n  dup5\n    /* \"#utility.yul\":2418:2483   */\n  tag_27\n  jump\t// in\ntag_75:\n    /* \"#utility.yul\":2353:2489   */\n  pop\n    /* \"#utility.yul\":2300:2489   */\n  pop\n  pop\n  jump\t// out\n    /* \"#utility.yul\":2495:2681   */\ntag_30:\n    /* \"#utility.yul\":2555:2675   */\ntag_77:\n    /* \"#utility.yul\":2572:2575   */\n  dup2\n    /* \"#utility.yul\":2565:2570   */\n  dup2\n    /* \"#utility.yul\":2562:2576   */\n  lt\n    /* \"#utility.yul\":2555:2675   */\n  iszero\n  tag_79\n  jumpi\n    /* \"#utility.yul\":2626:2665   */\n  tag_80\n    /* \"#utility.yul\":2663:2664   */\n  0x00\n    /* \"#utility.yul\":2656:2661   */\n  dup3\n    /* \"#utility.yul\":2626:2665   */\n  tag_29\n  jump\t// in\ntag_80:\n    /* \"#utility.yul\":2599:2600   */\n  0x01\n    /* \"#utility.yul\":2592:2597   */\n  dup2\n    /* \"#utility.yul\":2588:2601   */\n  add\n    /* \"#utility.yul\":2579:2601   */\n  swap1\n  pop\n    /* \"#utility.yul\":2555:2675   */\n  jump(tag_77)\ntag_79:\n    /* \"#utility.yul\":2495:2681   */\n  pop\n  pop\n  jump\t// out\n    /* \"#utility.yul\":2687:3230   */\ntag_31:\n    /* \"#utility.yul\":2788:2790   */\n  0x1f\n    /* \"#utility.yul\":2783:2786   */\n  dup3\n    /* \"#utility.yul\":2780:2791   */\n  gt\n    /* \"#utility.yul\":2777:3223   */\n  iszero\n  tag_82\n  jumpi\n    /* \"#utility.yul\":2822:2860   */\n  tag_83\n    /* \"#utility.yul\":2854:2859   */\n  dup2\n    /* \"#utility.yul\":2822:2860   */\n  tag_19\n  jump\t// in\ntag_83:\n    /* \"#utility.yul\":2906:2935   */\n  tag_84\n    /* \"#utility.yul\":2924:2934   */\n  dup5\n    /* \"#utility.yul\":2906:2935   */\n  tag_20\n  jump\t// in\ntag_84:\n    /* \"#utility.yul\":2896:2904   */\n  dup2\n    /* \"#utility.yul\":2892:2936   */\n  add\n    /* \"#utility.yul\":3089:3091   */\n  0x20\n    /* \"#utility.yul\":3077:3087   */\n  dup6\n    /* \"#utility.yul\":3074:3092   */\n  lt\n    /* \"#utility.yul\":3071:3120   */\n  iszero\n  tag_85\n  jumpi\n    /* \"#utility.yul\":3110:3118   */\n  dup2\n    /* \"#utility.yul\":3095:3118   */\n  swap1\n  pop\n    /* \"#utility.yul\":3071:3120   */\ntag_85:\n    /* \"#utility.yul\":3133:3213   */\n  tag_86\n    /* \"#utility.yul\":3189:3211   */\n  tag_87\n    /* \"#utility.yul\":3207:3210   */\n  dup6\n    /* \"#utility.yul\":3189:3211   */\n  tag_20\n  jump\t// in\ntag_87:\n    /* \"#utility.yul\":3179:3187   */\n  dup4\n    /* \"#utility.yul\":3175:3212   */\n  add\n    /* \"#utility.yul\":3162:3173   */\n  dup3\n    /* \"#utility.yul\":3133:3213   */\n  tag_30\n  jump\t// in\ntag_86:\n    /* \"#utility.yul\":2792:3223   */\n  pop\n  pop\n    /* \"#utility.yul\":2777:3223   */\ntag_82:\n    /* \"#utility.yul\":2687:3230   */\n  pop\n  pop\n  pop\n  jump\t// out\n    /* \"#utility.yul\":3236:3353   */\ntag_32:\n    /* \"#utility.yul\":3290:3298   */\n  0x00\n    /* \"#utility.yul\":3340:3345   */\n  dup3\n    /* \"#utility.yul\":3334:3338   */\n  dup3\n    /* \"#utility.yul\":3330:3346   */\n  shr\n    /* \"#utility.yul\":3309:3346   */\n  swap1\n  pop\n    /* \"#utility.yul\":3236:3353   */\n  swap3\n  swap2\n  pop\n  pop\n  jump\t// out\n    /* \"#utility.yul\":3359:3528   */\ntag_33:\n    /* \"#utility.yul\":3403:3409   */\n  0x00\n    /* \"#utility.yul\":3436:3487   */\n  tag_90\n    /* \"#utility.yul\":3484:3485   */\n  0x00\n    /* \"#utility.yul\":3480:3486   */\n  not\n    /* \"#utility.yul\":3472:3477   */\n  dup5\n    /* \"#utility.yul\":3469:3470   */\n  0x08\n    /* \"#utility.yul\":3465:3478   */\n  mul\n    /* \"#utility.yul\":3436:3487   */\n  tag_32\n  jump\t// in\ntag_90:\n    /* \"#utility.yul\":3432:3488   */\n  not\n    /* \"#utility.yul\":3517:3521   */\n  dup1\n    /* \"#utility.yul\":3511:3515   */\n  dup4\n    /* \"#utility.yul\":3507:3522   */\n  and\n    /* \"#utility.yul\":3497:3522   */\n  swap2\n  pop\n    /* \"#utility.yul\":3410:3528   */\n  pop\n    /* \"#utility.yul\":3359:3528   */\n  swap3\n  swap2\n  pop\n  pop\n  jump\t// out\n    /* \"#utility.yul\":3533:3828   */\ntag_34:\n    /* \"#utility.yul\":3609:3613   */\n  0x00\n    /* \"#utility.yul\":3755:3784   */\n  tag_92\n    /* \"#utility.yul\":3780:3783   */\n  dup4\n    /* \"#utility.yul\":3774:3778   */\n  dup4\n    /* \"#utility.yul\":3755:3784   */\n  tag_33\n  jump\t// in\ntag_92:\n    /* \"#utility.yul\":3747:3784   */\n  swap2\n  pop\n    /* \"#utility.yul\":3817:3820   */\n  dup3\n    /* \"#utility.yul\":3814:3815   */\n  0x02\n    /* \"#utility.yul\":3810:3821   */\n  mul\n    /* \"#utility.yul\":3804:3808   */\n  dup3\n    /* \"#utility.yul\":3801:3822   */\n  or\n    /* \"#utility.yul\":3793:3822   */\n  swap1\n  pop\n    /* \"#utility.yul\":3533:3828   */\n  swap3\n  swap2\n  pop\n  pop\n  jump\t// out\n    /* \"#utility.yul\":3833:5228   */\ntag_2:\n    /* \"#utility.yul\":3950:3987   */\n  tag_94\n    /* \"#utility.yul\":3983:3986   */\n  dup3\n    /* \"#utility.yul\":3950:3987   */\n  tag_15\n  jump\t// in\ntag_94:\n    /* \"#utility.yul\":4052:4070   */\n  0xffffffffffffffff\n    /* \"#utility.yul\":4044:4050   */\n  dup2\n    /* \"#utility.yul\":4041:4071   */\n  gt\n    /* \"#utility.yul\":4038:4094   */\n  iszero\n  tag_95\n  jumpi\n    /* \"#utility.yul\":4074:4092   */\n  tag_96\n  tag_16\n  jump\t// in\ntag_96:\n    /* \"#utility.yul\":4038:4094   */\ntag_95:\n    /* \"#utility.yul\":4118:4156   */\n  tag_97\n    /* \"#utility.yul\":4150:4154   */\n  dup3\n    /* \"#utility.yul\":4144:4155   */\n  sload\n    /* \"#utility.yul\":4118:4156   */\n  tag_18\n  jump\t// in\ntag_97:\n    /* \"#utility.yul\":4203:4270   */\n  tag_98\n    /* \"#utility.yul\":4263:4269   */\n  dup3\n    /* \"#utility.yul\":4255:4261   */\n  dup3\n    /* \"#utility.yul\":4249:4253   */\n  dup6\n    /* \"#utility.yul\":4203:4270   */\n  tag_31\n  jump\t// in\ntag_98:\n    /* \"#utility.yul\":4297:4298   */\n  0x00\n    /* \"#utility.yul\":4321:4325   */\n  0x20\n    /* \"#utility.yul\":4308:4325   */\n  swap1\n  pop\n    /* \"#utility.yul\":4353:4355   */\n  0x1f\n    /* \"#utility.yul\":4345:4351   */\n  dup4\n    /* \"#utility.yul\":4342:4356   */\n  gt\n    /* \"#utility.yul\":4370:4371   */\n  0x01\n    /* \"#utility.yul\":4365:4983   */\n  dup2\n  eq\n  tag_100\n  jumpi\n    /* \"#utility.yul\":5027:5028   */\n  0x00\n    /* \"#utility.yul\":5044:5050   */\n  dup5\n    /* \"#utility.yul\":5041:5118   */\n  iszero\n  tag_101\n  jumpi\n    /* \"#utility.yul\":5093:5102   */\n  dup3\n    /* \"#utility.yul\":5088:5091   */\n  dup8\n    /* \"#utility.yul\":5084:5103   */\n  add\n    /* \"#utility.yul\":5078:5104   */\n  mload\n    /* \"#utility.yul\":5069:5104   */\n  swap1\n  pop\n    /* \"#utility.yul\":5041:5118   */\ntag_101:\n    /* \"#utility.yul\":5144:5211   */\n  tag_102\n    /* \"#utility.yul\":5204:5210   */\n  dup6\n    /* \"#utility.yul\":5197:5202   */\n  dup3\n    /* \"#utility.yul\":5144:5211   */\n  tag_34\n  jump\t// in\ntag_102:\n    /* \"#utility.yul\":5138:5142   */\n  dup7\n    /* \"#utility.yul\":5131:5212   */\n  sstore\n    /* \"#utility.yul\":5000:5222   */\n  pop\n    /* \"#utility.yul\":4335:5222   */\n  jump(tag_99)\n    /* \"#utility.yul\":4365:4983   */\ntag_100:\n    /* \"#utility.yul\":4417:4421   */\n  0x1f\n    /* \"#utility.yul\":4413:4422   */\n  not\n    /* \"#utility.yul\":4405:4411   */\n  dup5\n    /* \"#utility.yul\":4401:4423   */\n  and\n    /* \"#utility.yul\":4451:4488   */\n  tag_103\n    /* \"#utility.yul\":4483:4487   */\n  dup7\n    /* \"#utility.yul\":4451:4488   */\n  tag_19\n  jump\t// in\ntag_103:\n    /* \"#utility.yul\":4510:4511   */\n  0x00\n    /* \"#utility.yul\":4524:4732   */\ntag_104:\n    /* \"#utility.yul\":4538:4545   */\n  dup3\n    /* \"#utility.yul\":4535:4536   */\n  dup2\n    /* \"#utility.yul\":4532:4546   */\n  lt\n    /* \"#utility.yul\":4524:4732   */\n  iszero\n  tag_106\n  jumpi\n    /* \"#utility.yul\":4617:4626   */\n  dup5\n    /* \"#utility.yul\":4612:4615   */\n  dup10\n    /* \"#utility.yul\":4608:4627   */\n  add\n    /* \"#utility.yul\":4602:4628   */\n  mload\n    /* \"#utility.yul\":4594:4600   */\n  dup3\n    /* \"#utility.yul\":4587:4629   */\n  sstore\n    /* \"#utility.yul\":4668:4669   */\n  0x01\n    /* \"#utility.yul\":4660:4666   */\n  dup3\n    /* \"#utility.yul\":4656:4670   */\n  add\n    /* \"#utility.yul\":4646:4670   */\n  swap2\n  pop\n    /* \"#utility.yul\":4715:4717   */\n  0x20\n    /* \"#utility.yul\":4704:4713   */\n  dup6\n    /* \"#utility.yul\":4700:4718   */\n  add\n    /* \"#utility.yul\":4687:4718   */\n  swap5\n  pop\n    /* \"#utility.yul\":4561:4565   */\n  0x20\n    /* \"#utility.yul\":4558:4559   */\n  dup2\n    /* \"#utility.yul\":4554:4566   */\n  add\n    /* \"#utility.yul\":4549:4566   */\n  swap1\n  pop\n    /* \"#utility.yul\":4524:4732   */\n  jump(tag_104)\ntag_106:\n    /* \"#utility.yul\":4760:4766   */\n  dup7\n    /* \"#utility.yul\":4751:4758   */\n  dup4\n    /* \"#utility.yul\":4748:4767   */\n  lt\n    /* \"#utility.yul\":4745:4924   */\n  iszero\n  tag_107\n  jumpi\n    /* \"#utility.yul\":4818:4827   */\n  dup5\n    /* \"#utility.yul\":4813:4816   */\n  dup10\n    /* \"#utility.yul\":4809:4828   */\n  add\n    /* \"#utility.yul\":4803:4829   */\n  mload\n    /* \"#utility.yul\":4861:4909   */\n  tag_108\n    /* \"#utility.yul\":4903:4907   */\n  0x1f\n    /* \"#utility.yul\":4895:4901   */\n  dup10\n    /* \"#utility.yul\":4891:4908   */\n  and\n    /* \"#utility.yul\":4880:4889   */\n  dup3\n    /* \"#utility.yul\":4861:4909   */\n  tag_33\n  jump\t// in\ntag_108:\n    /* \"#utility.yul\":4853:4859   */\n  dup4\n    /* \"#utility.yul\":4846:4910   */\n  sstore\n    /* \"#utility.yul\":4768:4924   */\n  pop\n    /* \"#utility.yul\":4745:4924   */\ntag_107:\n    /* \"#utility.yul\":4970:4971   */\n  0x01\n    /* \"#utility.yul\":4966:4967   */\n  0x02\n    /* \"#utility.yul\":4958:4964   */\n  dup9\n    /* \"#utility.yul\":4954:4968   */\n  mul\n    /* \"#utility.yul\":4950:4972   */\n  add\n    /* \"#utility.yul\":4944:4948   */\n  dup9\n    /* \"#utility.yul\":4937:4973   */\n  sstore\n    /* \"#utility.yul\":4372:4983   */\n  pop\n  pop\n  pop\n    /* \"#utility.yul\":4335:5222   */\ntag_99:\n  pop\n    /* \"#utility.yul\":3925:5228   */\n  pop\n  pop\n  pop\n    /* \"#utility.yul\":3833:5228   */\n  pop\n  pop\n  jump\t// out\n    /* \"#utility.yul\":5234:5309   */\ntag_35:\n    /* \"#utility.yul\":5267:5273   */\n  0x00\n    /* \"#utility.yul\":5300:5302   */\n  0x40\n    /* \"#utility.yul\":5294:5303   */\n  mload\n    /* \"#utility.yul\":5284:5303   */\n  swap1\n  pop\n    /* \"#utility.yul\":5234:5309   */\n  swap1\n  jump\t// out\n    /* \"#utility.yul\":5315:5432   */\ntag_36:\n    /* \"#utility.yul\":5424:5425   */\n  0x00\n    /* \"#utility.yul\":5421:5422   */\n  dup1\n    /* \"#utility.yul\":5414:5426   */\n  revert\n    /* \"#utility.yul\":5438:5555   */\ntag_37:\n    /* \"#utility.yul\":5547:5548   */\n  0x00\n    /* \"#utility.yul\":5544:5545   */\n  dup1\n    /* \"#utility.yul\":5537:5549   */\n  revert\n    /* \"#utility.yul\":5561:5678   */\ntag_38:\n    /* \"#utility.yul\":5670:5671   */\n  0x00\n    /* \"#utility.yul\":5667:5668   */\n  dup1\n    /* \"#utility.yul\":5660:5672   */\n  revert\n    /* \"#utility.yul\":5684:5801   */\ntag_39:\n    /* \"#utility.yul\":5793:5794   */\n  0x00\n    /* \"#utility.yul\":5790:5791   */\n  dup1\n    /* \"#utility.yul\":5783:5795   */\n  revert\n    /* \"#utility.yul\":5807:5909   */\ntag_40:\n    /* \"#utility.yul\":5848:5854   */\n  0x00\n    /* \"#utility.yul\":5899:5901   */\n  0x1f\n    /* \"#utility.yul\":5895:5902   */\n  not\n    /* \"#utility.yul\":5890:5892   */\n  0x1f\n    /* \"#utility.yul\":5883:5888   */\n  dup4\n    /* \"#utility.yul\":5879:5893   */\n  add\n    /* \"#utility.yul\":5875:5903   */\n  and\n    /* \"#utility.yul\":5865:5903   */\n  swap1\n  pop\n    /* \"#utility.yul\":5807:5909   */\n  swap2\n  swap1\n  pop\n  jump\t// out\n    /* \"#utility.yul\":5915:6196   */\ntag_41:\n    /* \"#utility.yul\":5998:6025   */\n  tag_116\n    /* \"#utility.yul\":6020:6024   */\n  dup3\n    /* \"#utility.yul\":5998:6025   */\n  tag_40\n  jump\t// in\ntag_116:\n    /* \"#utility.yul\":5990:5996   */\n  dup2\n    /* \"#utility.yul\":5986:6026   */\n  add\n    /* \"#utility.yul\":6128:6134   */\n  dup2\n    /* \"#utility.yul\":6116:6126   */\n  dup2\n    /* \"#utility.yul\":6113:6135   */\n  lt\n    /* \"#utility.yul\":6092:6110   */\n  0xffffffffffffffff\n    /* \"#utility.yul\":6080:6090   */\n  dup3\n    /* \"#utility.yul\":6077:6111   */\n  gt\n    /* \"#utility.yul\":6074:6136   */\n  or\n    /* \"#utility.yul\":6071:6159   */\n  iszero\n  tag_117\n  jumpi\n    /* \"#utility.yul\":6139:6157   */\n  tag_118\n  tag_16\n  jump\t// in\ntag_118:\n    /* \"#utility.yul\":6071:6159   */\ntag_117:\n    /* \"#utility.yul\":6179:6189   */\n  dup1\n    /* \"#utility.yul\":6175:6177   */\n  0x40\n    /* \"#utility.yul\":6168:6190   */\n  mstore\n    /* \"#utility.yul\":5958:6196   */\n  pop\n    /* \"#utility.yul\":5915:6196   */\n  pop\n  pop\n  jump\t// out\n    /* \"#utility.yul\":6202:6331   */\ntag_42:\n    /* \"#utility.yul\":6236:6242   */\n  0x00\n    /* \"#utility.yul\":6263:6283   */\n  tag_120\n  tag_35\n  jump\t// in\ntag_120:\n    /* \"#utility.yul\":6253:6283   */\n  swap1\n  pop\n    /* \"#utility.yul\":6292:6325   */\n  tag_121\n    /* \"#utility.yul\":6320:6324   */\n  dup3\n    /* \"#utility.yul\":6312:6318   */\n  dup3\n    /* \"#utility.yul\":6292:6325   */\n  tag_41\n  jump\t// in\ntag_121:\n    /* \"#utility.yul\":6202:6331   */\n  swap2\n  swap1\n  pop\n  jump\t// out\n    /* \"#utility.yul\":6337:6645   */\ntag_43:\n    /* \"#utility.yul\":6399:6403   */\n  0x00\n    /* \"#utility.yul\":6489:6507   */\n  0xffffffffffffffff\n    /* \"#utility.yul\":6481:6487   */\n  dup3\n    /* \"#utility.yul\":6478:6508   */\n  gt\n    /* \"#utility.yul\":6475:6531   */\n  iszero\n  tag_123\n  jumpi\n    /* \"#utility.yul\":6511:6529   */\n  tag_124\n  tag_16\n  jump\t// in\ntag_124:\n    /* \"#utility.yul\":6475:6531   */\ntag_123:\n    /* \"#utility.yul\":6549:6578   */\n  tag_125\n    /* \"#utility.yul\":6571:6577   */\n  dup3\n    /* \"#utility.yul\":6549:6578   */\n  tag_40\n  jump\t// in\ntag_125:\n    /* \"#utility.yul\":6541:6578   */\n  swap1\n  pop\n    /* \"#utility.yul\":6633:6637   */\n  0x20\n    /* \"#utility.yul\":6627:6631   */\n  dup2\n    /* \"#utility.yul\":6623:6638   */\n  add\n    /* \"#utility.yul\":6615:6638   */\n  swap1\n  pop\n    /* \"#utility.yul\":6337:6645   */\n  swap2\n  swap1\n  pop\n  jump\t// out\n    /* \"#utility.yul\":6651:6790   */\ntag_44:\n    /* \"#utility.yul\":6740:6746   */\n  dup3\n    /* \"#utility.yul\":6735:6738   */\n  dup2\n    /* \"#utility.yul\":6730:6733   */\n  dup4\n    /* \"#utility.yul\":6724:6747   */\n  mcopy\n    /* \"#utility.yul\":6781:6782   */\n  0x00\n    /* \"#utility.yul\":6772:6778   */\n  dup4\n    /* \"#utility.yul\":6767:6770   */\n  dup4\n    /* \"#utility.yul\":6763:6779   */\n  add\n    /* \"#utility.yul\":6756:6783   */\n  mstore\n    /* \"#utility.yul\":6651:6790   */\n  pop\n  pop\n  pop\n  jump\t// out\n    /* \"#utility.yul\":6796:7230   */\ntag_45:\n    /* \"#utility.yul\":6885:6890   */\n  0x00\n    /* \"#utility.yul\":6910:6976   */\n  tag_128\n    /* \"#utility.yul\":6926:6975   */\n  tag_129\n    /* \"#utility.yul\":6968:6974   */\n  dup5\n    /* \"#utility.yul\":6926:6975   */\n  tag_43\n  jump\t// in\ntag_129:\n    /* \"#utility.yul\":6910:6976   */\n  tag_42\n  jump\t// in\ntag_128:\n    /* \"#utility.yul\":6901:6976   */\n  swap1\n  pop\n    /* \"#utility.yul\":6999:7005   */\n  dup3\n    /* \"#utility.yul\":6992:6997   */\n  dup2\n    /* \"#utility.yul\":6985:7006   */\n  mstore\n    /* \"#utility.yul\":7037:7041   */\n  0x20\n    /* \"#utility.yul\":7030:7035   */\n  dup2\n    /* \"#utility.yul\":7026:7042   */\n  add\n    /* \"#utility.yul\":7075:7078   */\n  dup5\n    /* \"#utility.yul\":7066:7072   */\n  dup5\n    /* \"#utility.yul\":7061:7064   */\n  dup5\n    /* \"#utility.yul\":7057:7073   */\n  add\n    /* \"#utility.yul\":7054:7079   */\n  gt\n    /* \"#utility.yul\":7051:7163   */\n  iszero\n  tag_130\n  jumpi\n    /* \"#utility.yul\":7082:7161   */\n  tag_131\n  tag_39\n  jump\t// in\ntag_131:\n    /* \"#utility.yul\":7051:7163   */\ntag_130:\n    /* \"#utility.yul\":7172:7224   */\n  tag_132\n    /* \"#utility.yul\":7217:7223   */\n  dup5\n    /* \"#utility.yul\":7212:7215   */\n  dup3\n    /* \"#utility.yul\":7207:7210   */\n  dup6\n    /* \"#utility.yul\":7172:7224   */\n  tag_44\n  jump\t// in\ntag_132:\n    /* \"#utility.yul\":6891:7230   */\n  pop\n    /* \"#utility.yul\":6796:7230   */\n  swap4\n  swap3\n  pop\n  pop\n  pop\n  jump\t// out\n    /* \"#utility.yul\":7250:7605   */\ntag_46:\n    /* \"#utility.yul\":7317:7322   */\n  0x00\n    /* \"#utility.yul\":7366:7369   */\n  dup3\n    /* \"#utility.yul\":7359:7363   */\n  0x1f\n    /* \"#utility.yul\":7351:7357   */\n  dup4\n    /* \"#utility.yul\":7347:7364   */\n  add\n    /* \"#utility.yul\":7343:7370   */\n  slt\n    /* \"#utility.yul\":7333:7455   */\n  tag_134\n  jumpi\n    /* \"#utility.yul\":7374:7453   */\n  tag_135\n  tag_38\n  jump\t// in\ntag_135:\n    /* \"#utility.yul\":7333:7455   */\ntag_134:\n    /* \"#utility.yul\":7484:7490   */\n  dup2\n    /* \"#utility.yul\":7478:7491   */\n  mload\n    /* \"#utility.yul\":7509:7599   */\n  tag_136\n    /* \"#utility.yul\":7595:7598   */\n  dup5\n    /* \"#utility.yul\":7587:7593   */\n  dup3\n    /* \"#utility.yul\":7580:7584   */\n  0x20\n    /* \"#utility.yul\":7572:7578   */\n  dup7\n    /* \"#utility.yul\":7568:7585   */\n  add\n    /* \"#utility.yul\":7509:7599   */\n  tag_45\n  jump\t// in\ntag_136:\n    /* \"#utility.yul\":7500:7599   */\n  swap2\n  pop\n    /* \"#utility.yul\":7323:7605   */\n  pop\n    /* \"#utility.yul\":7250:7605   */\n  swap3\n  swap2\n  pop\n  pop\n  jump\t// out\n    /* \"#utility.yul\":7611:8464   */\ntag_6:\n    /* \"#utility.yul\":7710:7716   */\n  0x00\n    /* \"#utility.yul\":7718:7724   */\n  dup1\n    /* \"#utility.yul\":7767:7769   */\n  0x40\n    /* \"#utility.yul\":7755:7764   */\n  dup4\n    /* \"#utility.yul\":7746:7753   */\n  dup6\n    /* \"#utility.yul\":7742:7765   */\n  sub\n    /* \"#utility.yul\":7738:7770   */\n  slt\n    /* \"#utility.yul\":7735:7854   */\n  iszero\n  tag_138\n  jumpi\n    /* \"#utility.yul\":7773:7852   */\n  tag_139\n  tag_36\n  jump\t// in\ntag_139:\n    /* \"#utility.yul\":7735:7854   */\ntag_138:\n    /* \"#utility.yul\":7914:7915   */\n  0x00\n    /* \"#utility.yul\":7903:7912   */\n  dup4\n    /* \"#utility.yul\":7899:7916   */\n  add\n    /* \"#utility.yul\":7893:7917   */\n  mload\n    /* \"#utility.yul\":7944:7962   */\n  0xffffffffffffffff\n    /* \"#utility.yul\":7936:7942   */\n  dup2\n    /* \"#utility.yul\":7933:7963   */\n  gt\n    /* \"#utility.yul\":7930:8047   */\n  iszero\n  tag_140\n  jumpi\n    /* \"#utility.yul\":7966:8045   */\n  tag_141\n  tag_37\n  jump\t// in\ntag_141:\n    /* \"#utility.yul\":7930:8047   */\ntag_140:\n    /* \"#utility.yul\":8071:8145   */\n  tag_142\n    /* \"#utility.yul\":8137:8144   */\n  dup6\n    /* \"#utility.yul\":8128:8134   */\n  dup3\n    /* \"#utility.yul\":8117:8126   */\n  dup7\n    /* \"#utility.yul\":8113:8135   */\n  add\n    /* \"#utility.yul\":8071:8145   */\n  tag_46\n  jump\t// in\ntag_142:\n    /* \"#utility.yul\":8061:8145   */\n  swap3\n  pop\n    /* \"#utility.yul\":7864:8155   */\n  pop\n    /* \"#utility.yul\":8215:8217   */\n  0x20\n    /* \"#utility.yul\":8204:8213   */\n  dup4\n    /* \"#utility.yul\":8200:8218   */\n  add\n    /* \"#utility.yul\":8194:8219   */\n  mload\n    /* \"#utility.yul\":8246:8264   */\n  0xffffffffffffffff\n    /* \"#utility.yul\":8238:8244   */\n  dup2\n    /* \"#utility.yul\":8235:8265   */\n  gt\n    /* \"#utility.yul\":8232:8349   */\n  iszero\n  tag_143\n  jumpi\n    /* \"#utility.yul\":8268:8347   */\n  tag_144\n  tag_37\n  jump\t// in\ntag_144:\n    /* \"#utility.yul\":8232:8349   */\ntag_143:\n    /* \"#utility.yul\":8373:8447   */\n  tag_145\n    /* \"#utility.yul\":8439:8446   */\n  dup6\n    /* \"#utility.yul\":8430:8436   */\n  dup3\n    /* \"#utility.yul\":8419:8428   */\n  dup7\n    /* \"#utility.yul\":8415:8437   */\n  add\n    /* \"#utility.yul\":8373:8447   */\n  tag_46\n  jump\t// in\ntag_145:\n    /* \"#utility.yul\":8363:8447   */\n  swap2\n  pop\n    /* \"#utility.yul\":8165:8457   */\n  pop\n    /* \"#utility.yul\":7611:8464   */\n  swap3\n  pop\n  swap3\n  swap1\n  pop\n  jump\t// out\n    /* \"ERC20.sol\":318:6184  contract WeightedVoting is ERC20 {... */\ntag_14:\n  dataSize(sub_0)\n  dup1\n  dataOffset(sub_0)\n  0x00\n  codecopy\n  0x00\n  return\nstop\n\nsub_0: assembly {\n        /* \"ERC20.sol\":318:6184  contract WeightedVoting is ERC20 {... */\n      mstore(0x40, 0x80)\n      callvalue\n      dup1\n      iszero\n      tag_1\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_1:\n      pop\n      jumpi(tag_2, lt(calldatasize, 0x04))\n      shr(0xe0, calldataload(0x00))\n      dup1\n      0x830953ab\n      gt\n      tag_19\n      jumpi\n      dup1\n      0x976b3113\n      gt\n      tag_20\n      jumpi\n      dup1\n      0x976b3113\n      eq\n      tag_15\n      jumpi\n      dup1\n      0xa9059cbb\n      eq\n      tag_16\n      jumpi\n      dup1\n      0xd5abeb01\n      eq\n      tag_17\n      jumpi\n      dup1\n      0xdd62ed3e\n      eq\n      tag_18\n      jumpi\n      jump(tag_2)\n    tag_20:\n      dup1\n      0x830953ab\n      eq\n      tag_11\n      jumpi\n      dup1\n      0x8615d855\n      eq\n      tag_12\n      jumpi\n      dup1\n      0x943e8216\n      eq\n      tag_13\n      jumpi\n      dup1\n      0x95d89b41\n      eq\n      tag_14\n      jumpi\n      jump(tag_2)\n    tag_19:\n      dup1\n      0x313ce567\n      gt\n      tag_21\n      jumpi\n      dup1\n      0x313ce567\n      eq\n      tag_7\n      jumpi\n      dup1\n      0x4e71d92d\n      eq\n      tag_8\n      jumpi\n      dup1\n      0x624601b6\n      eq\n      tag_9\n      jumpi\n      dup1\n      0x70a08231\n      eq\n      tag_10\n      jumpi\n      jump(tag_2)\n    tag_21:\n      dup1\n      0x06fdde03\n      eq\n      tag_3\n      jumpi\n      dup1\n      0x095ea7b3\n      eq\n      tag_4\n      jumpi\n      dup1\n      0x18160ddd\n      eq\n      tag_5\n      jumpi\n      dup1\n      0x23b872dd\n      eq\n      tag_6\n      jumpi\n    tag_2:\n      0x00\n      dup1\n      revert\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":1779:1868  function name() public view virtual returns (string memory) {... */\n    tag_3:\n      tag_22\n      tag_23\n      jump\t// in\n    tag_22:\n      mload(0x40)\n      tag_24\n      swap2\n      swap1\n      tag_25\n      jump\t// in\n    tag_24:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":3998:4184  function approve(address spender, uint256 value) public virtual returns (bool) {... */\n    tag_4:\n      tag_26\n      0x04\n      dup1\n      calldatasize\n      sub\n      dup2\n      add\n      swap1\n      tag_27\n      swap2\n      swap1\n      tag_28\n      jump\t// in\n    tag_27:\n      tag_29\n      jump\t// in\n    tag_26:\n      mload(0x40)\n      tag_30\n      swap2\n      swap1\n      tag_31\n      jump\t// in\n    tag_30:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":2849:2946  function totalSupply() public view virtual returns (uint256) {... */\n    tag_5:\n      tag_32\n      tag_33\n      jump\t// in\n    tag_32:\n      mload(0x40)\n      tag_34\n      swap2\n      swap1\n      tag_35\n      jump\t// in\n    tag_34:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":4776:5020  function transferFrom(address from, address to, uint256 value) public virtual returns (bool) {... */\n    tag_6:\n      tag_36\n      0x04\n      dup1\n      calldatasize\n      sub\n      dup2\n      add\n      swap1\n      tag_37\n      swap2\n      swap1\n      tag_38\n      jump\t// in\n    tag_37:\n      tag_39\n      jump\t// in\n    tag_36:\n      mload(0x40)\n      tag_40\n      swap2\n      swap1\n      tag_31\n      jump\t// in\n    tag_40:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":2707:2789  function decimals() public view virtual returns (uint8) {... */\n    tag_7:\n      tag_41\n      tag_42\n      jump\t// in\n    tag_41:\n      mload(0x40)\n      tag_43\n      swap2\n      swap1\n      tag_44\n      jump\t// in\n    tag_43:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"ERC20.sol\":3047:3521  function claim() public {... */\n    tag_8:\n      tag_45\n      tag_46\n      jump\t// in\n    tag_45:\n      stop\n        /* \"ERC20.sol\":2526:2571  mapping(address => bool) public tokensClaimed */\n    tag_9:\n      tag_47\n      0x04\n      dup1\n      calldatasize\n      sub\n      dup2\n      add\n      swap1\n      tag_48\n      swap2\n      swap1\n      tag_49\n      jump\t// in\n    tag_48:\n      tag_50\n      jump\t// in\n    tag_47:\n      mload(0x40)\n      tag_51\n      swap2\n      swap1\n      tag_31\n      jump\t// in\n    tag_51:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":3004:3120  function balanceOf(address account) public view virtual returns (uint256) {... */\n    tag_10:\n      tag_52\n      0x04\n      dup1\n      calldatasize\n      sub\n      dup2\n      add\n      swap1\n      tag_53\n      swap2\n      swap1\n      tag_49\n      jump\t// in\n    tag_53:\n      tag_54\n      jump\t// in\n    tag_52:\n      mload(0x40)\n      tag_55\n      swap2\n      swap1\n      tag_35\n      jump\t// in\n    tag_55:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"ERC20.sol\":2646:2678  uint256 public claimAmount = 100 */\n    tag_11:\n      tag_56\n      tag_57\n      jump\t// in\n    tag_56:\n      mload(0x40)\n      tag_58\n      swap2\n      swap1\n      tag_35\n      jump\t// in\n    tag_58:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"ERC20.sol\":3572:4184  function createIssue(string calldata _issueDesc, uint256 _quorum)... */\n    tag_12:\n      tag_59\n      0x04\n      dup1\n      calldatasize\n      sub\n      dup2\n      add\n      swap1\n      tag_60\n      swap2\n      swap1\n      tag_61\n      jump\t// in\n    tag_60:\n      tag_62\n      jump\t// in\n    tag_59:\n      mload(0x40)\n      tag_63\n      swap2\n      swap1\n      tag_35\n      jump\t// in\n    tag_63:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"ERC20.sol\":4923:6182  function vote(uint256 _issueId, Vote _vote) public {... */\n    tag_13:\n      tag_64\n      0x04\n      dup1\n      calldatasize\n      sub\n      dup2\n      add\n      swap1\n      tag_65\n      swap2\n      swap1\n      tag_66\n      jump\t// in\n    tag_65:\n      tag_67\n      jump\t// in\n    tag_64:\n      stop\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":1981:2074  function symbol() public view virtual returns (string memory) {... */\n    tag_14:\n      tag_68\n      tag_69\n      jump\t// in\n    tag_68:\n      mload(0x40)\n      tag_70\n      swap2\n      swap1\n      tag_25\n      jump\t// in\n    tag_70:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"ERC20.sol\":4239:4868  function getIssue(uint256 _issueId)... */\n    tag_15:\n      tag_71\n      0x04\n      dup1\n      calldatasize\n      sub\n      dup2\n      add\n      swap1\n      tag_72\n      swap2\n      swap1\n      tag_73\n      jump\t// in\n    tag_72:\n      tag_74\n      jump\t// in\n    tag_71:\n      mload(0x40)\n      tag_75\n      swap2\n      swap1\n      tag_76\n      jump\t// in\n    tag_75:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":3315:3493  function transfer(address to, uint256 value) public virtual returns (bool) {... */\n    tag_16:\n      tag_77\n      0x04\n      dup1\n      calldatasize\n      sub\n      dup2\n      add\n      swap1\n      tag_78\n      swap2\n      swap1\n      tag_28\n      jump\t// in\n    tag_78:\n      tag_79\n      jump\t// in\n    tag_77:\n      mload(0x40)\n      tag_80\n      swap2\n      swap1\n      tag_31\n      jump\t// in\n    tag_80:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"ERC20.sol\":2578:2612  uint256 public maxSupply = 1000000 */\n    tag_17:\n      tag_81\n      tag_82\n      jump\t// in\n    tag_81:\n      mload(0x40)\n      tag_83\n      swap2\n      swap1\n      tag_35\n      jump\t// in\n    tag_83:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":3551:3691  function allowance(address owner, address spender) public view virtual returns (uint256) {... */\n    tag_18:\n      tag_84\n      0x04\n      dup1\n      calldatasize\n      sub\n      dup2\n      add\n      swap1\n      tag_85\n      swap2\n      swap1\n      tag_86\n      jump\t// in\n    tag_85:\n      tag_87\n      jump\t// in\n    tag_84:\n      mload(0x40)\n      tag_88\n      swap2\n      swap1\n      tag_35\n      jump\t// in\n    tag_88:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":1779:1868  function name() public view virtual returns (string memory) {... */\n    tag_23:\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":1824:1837  string memory */\n      0x60\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":1856:1861  _name */\n      0x03\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":1849:1861  return _name */\n      dup1\n      sload\n      tag_90\n      swap1\n      tag_91\n      jump\t// in\n    tag_90:\n      dup1\n      0x1f\n      add\n      0x20\n      dup1\n      swap2\n      div\n      mul\n      0x20\n      add\n      mload(0x40)\n      swap1\n      dup2\n      add\n      0x40\n      mstore\n      dup1\n      swap3\n      swap2\n      swap1\n      dup2\n      dup2\n      mstore\n      0x20\n      add\n      dup3\n      dup1\n      sload\n      tag_92\n      swap1\n      tag_91\n      jump\t// in\n    tag_92:\n      dup1\n      iszero\n      tag_93\n      jumpi\n      dup1\n      0x1f\n      lt\n      tag_94\n      jumpi\n      0x0100\n      dup1\n      dup4\n      sload\n      div\n      mul\n      dup4\n      mstore\n      swap2\n      0x20\n      add\n      swap2\n      jump(tag_93)\n    tag_94:\n      dup3\n      add\n      swap2\n      swap1\n      0x00\n      mstore\n      keccak256(0x00, 0x20)\n      swap1\n    tag_95:\n      dup2\n      sload\n      dup2\n      mstore\n      swap1\n      0x01\n      add\n      swap1\n      0x20\n      add\n      dup1\n      dup4\n      gt\n      tag_95\n      jumpi\n      dup3\n      swap1\n      sub\n      0x1f\n      and\n      dup3\n      add\n      swap2\n    tag_93:\n      pop\n      pop\n      pop\n      pop\n      pop\n      swap1\n      pop\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":1779:1868  function name() public view virtual returns (string memory) {... */\n      swap1\n      jump\t// out\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":3998:4184  function approve(address spender, uint256 value) public virtual returns (bool) {... */\n    tag_29:\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":4071:4075  bool */\n      0x00\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":4087:4100  address owner */\n      dup1\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":4103:4115  _msgSender() */\n      tag_97\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":4103:4113  _msgSender */\n      tag_98\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":4103:4115  _msgSender() */\n      jump\t// in\n    tag_97:\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":4087:4115  address owner = _msgSender() */\n      swap1\n      pop\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":4125:4156  _approve(owner, spender, value) */\n      tag_99\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":4134:4139  owner */\n      dup2\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":4141:4148  spender */\n      dup6\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":4150:4155  value */\n      dup6\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":4125:4133  _approve */\n      tag_100\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":4125:4156  _approve(owner, spender, value) */\n      jump\t// in\n    tag_99:\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":4173:4177  true */\n      0x01\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":4166:4177  return true */\n      swap2\n      pop\n      pop\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":3998:4184  function approve(address spender, uint256 value) public virtual returns (bool) {... */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":2849:2946  function totalSupply() public view virtual returns (uint256) {... */\n    tag_33:\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":2901:2908  uint256 */\n      0x00\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":2927:2939  _totalSupply */\n      sload(0x02)\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":2920:2939  return _totalSupply */\n      swap1\n      pop\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":2849:2946  function totalSupply() public view virtual returns (uint256) {... */\n      swap1\n      jump\t// out\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":4776:5020  function transferFrom(address from, address to, uint256 value) public virtual returns (bool) {... */\n    tag_39:\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":4863:4867  bool */\n      0x00\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":4879:4894  address spender */\n      dup1\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":4897:4909  _msgSender() */\n      tag_103\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":4897:4907  _msgSender */\n      tag_98\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":4897:4909  _msgSender() */\n      jump\t// in\n    tag_103:\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":4879:4909  address spender = _msgSender() */\n      swap1\n      pop\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":4919:4956  _spendAllowance(from, spender, value) */\n      tag_104\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":4935:4939  from */\n      dup6\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":4941:4948  spender */\n      dup3\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":4950:4955  value */\n      dup6\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":4919:4934  _spendAllowance */\n      tag_105\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":4919:4956  _spendAllowance(from, spender, value) */\n      jump\t// in\n    tag_104:\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":4966:4992  _transfer(from, to, value) */\n      tag_106\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":4976:4980  from */\n      dup6\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":4982:4984  to */\n      dup6\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":4986:4991  value */\n      dup6\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":4966:4975  _transfer */\n      tag_107\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":4966:4992  _transfer(from, to, value) */\n      jump\t// in\n    tag_106:\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":5009:5013  true */\n      0x01\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":5002:5013  return true */\n      swap2\n      pop\n      pop\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":4776:5020  function transferFrom(address from, address to, uint256 value) public virtual returns (bool) {... */\n      swap4\n      swap3\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":2707:2789  function decimals() public view virtual returns (uint8) {... */\n    tag_42:\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":2756:2761  uint8 */\n      0x00\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":2780:2782  18 */\n      0x12\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":2773:2782  return 18 */\n      swap1\n      pop\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":2707:2789  function decimals() public view virtual returns (uint8) {... */\n      swap1\n      jump\t// out\n        /* \"ERC20.sol\":3047:3521  function claim() public {... */\n    tag_46:\n        /* \"ERC20.sol\":3164:3173  maxSupply */\n      sload(0x08)\n        /* \"ERC20.sol\":3150:3161  claimAmount */\n      sload(0x09)\n        /* \"ERC20.sol\":3134:3147  totalSupply() */\n      tag_110\n        /* \"ERC20.sol\":3134:3145  totalSupply */\n      tag_33\n        /* \"ERC20.sol\":3134:3147  totalSupply() */\n      jump\t// in\n    tag_110:\n        /* \"ERC20.sol\":3134:3161  totalSupply() + claimAmount */\n      tag_111\n      swap2\n      swap1\n      tag_112\n      jump\t// in\n    tag_111:\n        /* \"ERC20.sol\":3134:3173  totalSupply() + claimAmount > maxSupply */\n      gt\n        /* \"ERC20.sol\":3130:3225  if (totalSupply() + claimAmount > maxSupply) {... */\n      iszero\n      tag_113\n      jumpi\n        /* \"ERC20.sol\":3196:3214  AllTokensClaimed() */\n      mload(0x40)\n      0xcbe2483100000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n        /* \"ERC20.sol\":3130:3225  if (totalSupply() + claimAmount > maxSupply) {... */\n    tag_113:\n        /* \"ERC20.sol\":3296:3309  tokensClaimed */\n      0x07\n        /* \"ERC20.sol\":3296:3321  tokensClaimed[msg.sender] */\n      0x00\n        /* \"ERC20.sol\":3310:3320  msg.sender */\n      caller\n        /* \"ERC20.sol\":3296:3321  tokensClaimed[msg.sender] */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n      0x00\n      swap1\n      sload\n      swap1\n      0x0100\n      exp\n      swap1\n      div\n      0xff\n      and\n        /* \"ERC20.sol\":3292:3370  if (tokensClaimed[msg.sender]) {... */\n      iszero\n      tag_114\n      jumpi\n        /* \"ERC20.sol\":3344:3359  TokensClaimed() */\n      mload(0x40)\n      0x0b1327a600000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n        /* \"ERC20.sol\":3292:3370  if (tokensClaimed[msg.sender]) {... */\n    tag_114:\n        /* \"ERC20.sol\":3416:3446  _mint(msg.sender, claimAmount) */\n      tag_115\n        /* \"ERC20.sol\":3422:3432  msg.sender */\n      caller\n        /* \"ERC20.sol\":3434:3445  claimAmount */\n      sload(0x09)\n        /* \"ERC20.sol\":3416:3421  _mint */\n      tag_116\n        /* \"ERC20.sol\":3416:3446  _mint(msg.sender, claimAmount) */\n      jump\t// in\n    tag_115:\n        /* \"ERC20.sol\":3484:3488  true */\n      0x01\n        /* \"ERC20.sol\":3456:3469  tokensClaimed */\n      0x07\n        /* \"ERC20.sol\":3456:3481  tokensClaimed[msg.sender] */\n      0x00\n        /* \"ERC20.sol\":3470:3480  msg.sender */\n      caller\n        /* \"ERC20.sol\":3456:3481  tokensClaimed[msg.sender] */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n      0x00\n        /* \"ERC20.sol\":3456:3488  tokensClaimed[msg.sender] = true */\n      0x0100\n      exp\n      dup2\n      sload\n      dup2\n      0xff\n      mul\n      not\n      and\n      swap1\n      dup4\n      iszero\n      iszero\n      mul\n      or\n      swap1\n      sstore\n      pop\n        /* \"ERC20.sol\":3047:3521  function claim() public {... */\n      jump\t// out\n        /* \"ERC20.sol\":2526:2571  mapping(address => bool) public tokensClaimed */\n    tag_50:\n      mstore(0x20, 0x07)\n      dup1\n      0x00\n      mstore\n      keccak256(0x00, 0x40)\n      0x00\n      swap2\n      pop\n      sload\n      swap1\n      0x0100\n      exp\n      swap1\n      div\n      0xff\n      and\n      dup2\n      jump\t// out\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":3004:3120  function balanceOf(address account) public view virtual returns (uint256) {... */\n    tag_54:\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":3069:3076  uint256 */\n      0x00\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":3095:3104  _balances */\n      dup1\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":3095:3113  _balances[account] */\n      0x00\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":3105:3112  account */\n      dup4\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":3095:3113  _balances[account] */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n      sload\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":3088:3113  return _balances[account] */\n      swap1\n      pop\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":3004:3120  function balanceOf(address account) public view virtual returns (uint256) {... */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"ERC20.sol\":2646:2678  uint256 public claimAmount = 100 */\n    tag_57:\n      sload(0x09)\n      dup2\n      jump\t// out\n        /* \"ERC20.sol\":3572:4184  function createIssue(string calldata _issueDesc, uint256 _quorum)... */\n    tag_62:\n        /* \"ERC20.sol\":3672:3679  uint256 */\n      0x00\n        /* \"ERC20.sol\":3772:3773  0 */\n      dup1\n        /* \"ERC20.sol\":3747:3768  balanceOf(msg.sender) */\n      tag_119\n        /* \"ERC20.sol\":3757:3767  msg.sender */\n      caller\n        /* \"ERC20.sol\":3747:3756  balanceOf */\n      tag_54\n        /* \"ERC20.sol\":3747:3768  balanceOf(msg.sender) */\n      jump\t// in\n    tag_119:\n        /* \"ERC20.sol\":3747:3773  balanceOf(msg.sender) == 0 */\n      sub\n        /* \"ERC20.sol\":3743:3821  if (balanceOf(msg.sender) == 0) {... */\n      tag_120\n      jumpi\n        /* \"ERC20.sol\":3796:3810  NoTokensHeld() */\n      mload(0x40)\n      0x8439960d00000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n        /* \"ERC20.sol\":3743:3821  if (balanceOf(msg.sender) == 0) {... */\n    tag_120:\n        /* \"ERC20.sol\":3913:3926  totalSupply() */\n      tag_121\n        /* \"ERC20.sol\":3913:3924  totalSupply */\n      tag_33\n        /* \"ERC20.sol\":3913:3926  totalSupply() */\n      jump\t// in\n    tag_121:\n        /* \"ERC20.sol\":3903:3910  _quorum */\n      dup3\n        /* \"ERC20.sol\":3903:3926  _quorum > totalSupply() */\n      gt\n        /* \"ERC20.sol\":3899:3975  if (_quorum > totalSupply()) {... */\n      iszero\n      tag_122\n      jumpi\n        /* \"ERC20.sol\":3949:3964  QuorumTooHigh() */\n      mload(0x40)\n      0x0d92730000000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n        /* \"ERC20.sol\":3899:3975  if (_quorum > totalSupply()) {... */\n    tag_122:\n        /* \"ERC20.sol\":4035:4055  Issue storage _issue */\n      0x00\n        /* \"ERC20.sol\":4058:4064  issues */\n      0x06\n        /* \"ERC20.sol\":4058:4071  issues.push() */\n      0x01\n      dup2\n      0x01\n      dup2\n      sload\n      add\n      dup1\n      dup3\n      sstore\n      dup1\n      swap2\n      pop\n      pop\n      sub\n      swap1\n      0x00\n      mstore\n      keccak256(0x00, 0x20)\n      swap1\n      0x09\n      mul\n      add\n        /* \"ERC20.sol\":4035:4071  Issue storage _issue = issues.push() */\n      swap1\n      pop\n        /* \"ERC20.sol\":4100:4110  _issueDesc */\n      dup5\n      dup5\n        /* \"ERC20.sol\":4081:4087  _issue */\n      dup3\n        /* \"ERC20.sol\":4081:4097  _issue.issueDesc */\n      0x02\n      add\n        /* \"ERC20.sol\":4081:4110  _issue.issueDesc = _issueDesc */\n      swap2\n      dup3\n      tag_124\n      swap3\n      swap2\n      swap1\n      tag_125\n      jump\t// in\n    tag_124:\n      pop\n        /* \"ERC20.sol\":4136:4143  _quorum */\n      dup3\n        /* \"ERC20.sol\":4120:4126  _issue */\n      dup2\n        /* \"ERC20.sol\":4120:4133  _issue.quorum */\n      0x03\n      add\n        /* \"ERC20.sol\":4120:4143  _issue.quorum = _quorum */\n      dup2\n      swap1\n      sstore\n      pop\n        /* \"ERC20.sol\":4176:4177  1 */\n      0x01\n        /* \"ERC20.sol\":4160:4166  issues */\n      0x06\n        /* \"ERC20.sol\":4160:4173  issues.length */\n      dup1\n      sload\n      swap1\n      pop\n        /* \"ERC20.sol\":4160:4177  issues.length - 1 */\n      tag_126\n      swap2\n      swap1\n      tag_127\n      jump\t// in\n    tag_126:\n        /* \"ERC20.sol\":4153:4177  return issues.length - 1 */\n      swap2\n      pop\n      pop\n        /* \"ERC20.sol\":3572:4184  function createIssue(string calldata _issueDesc, uint256 _quorum)... */\n      swap4\n      swap3\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"ERC20.sol\":4923:6182  function vote(uint256 _issueId, Vote _vote) public {... */\n    tag_67:\n        /* \"ERC20.sol\":4984:5004  Issue storage _issue */\n      0x00\n        /* \"ERC20.sol\":5007:5013  issues */\n      0x06\n        /* \"ERC20.sol\":5014:5022  _issueId */\n      dup4\n        /* \"ERC20.sol\":5007:5023  issues[_issueId] */\n      dup2\n      sload\n      dup2\n      lt\n      tag_129\n      jumpi\n      tag_130\n      tag_131\n      jump\t// in\n    tag_130:\n    tag_129:\n      swap1\n      0x00\n      mstore\n      keccak256(0x00, 0x20)\n      swap1\n      0x09\n      mul\n      add\n        /* \"ERC20.sol\":4984:5023  Issue storage _issue = issues[_issueId] */\n      swap1\n      pop\n        /* \"ERC20.sol\":5078:5084  _issue */\n      dup1\n        /* \"ERC20.sol\":5078:5091  _issue.closed */\n      0x08\n      add\n      0x01\n      swap1\n      sload\n      swap1\n      0x0100\n      exp\n      swap1\n      div\n      0xff\n      and\n        /* \"ERC20.sol\":5074:5139  if (_issue.closed) {... */\n      iszero\n      tag_133\n      jumpi\n        /* \"ERC20.sol\":5114:5128  VotingClosed() */\n      mload(0x40)\n      0x66b6cb4a00000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n        /* \"ERC20.sol\":5074:5139  if (_issue.closed) {... */\n    tag_133:\n        /* \"ERC20.sol\":5201:5235  _issue.voters.contains(msg.sender) */\n      tag_134\n        /* \"ERC20.sol\":5224:5234  msg.sender */\n      caller\n        /* \"ERC20.sol\":5201:5207  _issue */\n      dup3\n        /* \"ERC20.sol\":5201:5214  _issue.voters */\n      0x00\n      add\n        /* \"ERC20.sol\":5201:5223  _issue.voters.contains */\n      tag_135\n      swap1\n        /* \"ERC20.sol\":5201:5235  _issue.voters.contains(msg.sender) */\n      swap2\n      swap1\n      0xffffffff\n      and\n      jump\t// in\n    tag_134:\n        /* \"ERC20.sol\":5197:5283  if (_issue.voters.contains(msg.sender)) {... */\n      iszero\n      tag_136\n      jumpi\n        /* \"ERC20.sol\":5258:5272  AlreadyVoted() */\n      mload(0x40)\n      0x7c9a1cf900000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n        /* \"ERC20.sol\":5197:5283  if (_issue.voters.contains(msg.sender)) {... */\n    tag_136:\n        /* \"ERC20.sol\":5293:5308  uint256 nTokens */\n      0x00\n        /* \"ERC20.sol\":5311:5332  balanceOf(msg.sender) */\n      tag_137\n        /* \"ERC20.sol\":5321:5331  msg.sender */\n      caller\n        /* \"ERC20.sol\":5311:5320  balanceOf */\n      tag_54\n        /* \"ERC20.sol\":5311:5332  balanceOf(msg.sender) */\n      jump\t// in\n    tag_137:\n        /* \"ERC20.sol\":5293:5332  uint256 nTokens = balanceOf(msg.sender) */\n      swap1\n      pop\n        /* \"ERC20.sol\":5405:5406  0 */\n      0x00\n        /* \"ERC20.sol\":5394:5401  nTokens */\n      dup2\n        /* \"ERC20.sol\":5394:5406  nTokens == 0 */\n      sub\n        /* \"ERC20.sol\":5390:5454  if (nTokens == 0) {... */\n      tag_138\n      jumpi\n        /* \"ERC20.sol\":5429:5443  NoTokensHeld() */\n      mload(0x40)\n      0x8439960d00000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n        /* \"ERC20.sol\":5390:5454  if (nTokens == 0) {... */\n    tag_138:\n        /* \"ERC20.sol\":5532:5544  Vote.AGAINST */\n      0x00\n        /* \"ERC20.sol\":5523:5544  _vote == Vote.AGAINST */\n      0x02\n      dup2\n      gt\n      iszero\n      tag_139\n      jumpi\n      tag_140\n      tag_141\n      jump\t// in\n    tag_140:\n    tag_139:\n        /* \"ERC20.sol\":5523:5528  _vote */\n      dup4\n        /* \"ERC20.sol\":5523:5544  _vote == Vote.AGAINST */\n      0x02\n      dup2\n      gt\n      iszero\n      tag_142\n      jumpi\n      tag_143\n      tag_141\n      jump\t// in\n    tag_143:\n    tag_142:\n      sub\n        /* \"ERC20.sol\":5519:5742  if (_vote == Vote.AGAINST) {... */\n      tag_144\n      jumpi\n        /* \"ERC20.sol\":5583:5590  nTokens */\n      dup1\n        /* \"ERC20.sol\":5560:5566  _issue */\n      dup3\n        /* \"ERC20.sol\":5560:5579  _issue.votesAgainst */\n      0x06\n      add\n      0x00\n        /* \"ERC20.sol\":5560:5590  _issue.votesAgainst += nTokens */\n      dup3\n      dup3\n      sload\n      tag_145\n      swap2\n      swap1\n      tag_112\n      jump\t// in\n    tag_145:\n      swap3\n      pop\n      pop\n      dup2\n      swap1\n      sstore\n      pop\n        /* \"ERC20.sol\":5519:5742  if (_vote == Vote.AGAINST) {... */\n      jump(tag_146)\n    tag_144:\n        /* \"ERC20.sol\":5620:5628  Vote.FOR */\n      0x01\n        /* \"ERC20.sol\":5611:5628  _vote == Vote.FOR */\n      0x02\n      dup2\n      gt\n      iszero\n      tag_147\n      jumpi\n      tag_148\n      tag_141\n      jump\t// in\n    tag_148:\n    tag_147:\n        /* \"ERC20.sol\":5611:5616  _vote */\n      dup4\n        /* \"ERC20.sol\":5611:5628  _vote == Vote.FOR */\n      0x02\n      dup2\n      gt\n      iszero\n      tag_149\n      jumpi\n      tag_150\n      tag_141\n      jump\t// in\n    tag_150:\n    tag_149:\n      sub\n        /* \"ERC20.sol\":5607:5742  if (_vote == Vote.FOR) {... */\n      tag_151\n      jumpi\n        /* \"ERC20.sol\":5663:5670  nTokens */\n      dup1\n        /* \"ERC20.sol\":5644:5650  _issue */\n      dup3\n        /* \"ERC20.sol\":5644:5659  _issue.votesFor */\n      0x05\n      add\n      0x00\n        /* \"ERC20.sol\":5644:5670  _issue.votesFor += nTokens */\n      dup3\n      dup3\n      sload\n      tag_152\n      swap2\n      swap1\n      tag_112\n      jump\t// in\n    tag_152:\n      swap3\n      pop\n      pop\n      dup2\n      swap1\n      sstore\n      pop\n        /* \"ERC20.sol\":5607:5742  if (_vote == Vote.FOR) {... */\n      jump(tag_153)\n    tag_151:\n        /* \"ERC20.sol\":5724:5731  nTokens */\n      dup1\n        /* \"ERC20.sol\":5701:5707  _issue */\n      dup3\n        /* \"ERC20.sol\":5701:5720  _issue.votesAbstain */\n      0x07\n      add\n      0x00\n        /* \"ERC20.sol\":5701:5731  _issue.votesAbstain += nTokens */\n      dup3\n      dup3\n      sload\n      tag_154\n      swap2\n      swap1\n      tag_112\n      jump\t// in\n    tag_154:\n      swap3\n      pop\n      pop\n      dup2\n      swap1\n      sstore\n      pop\n        /* \"ERC20.sol\":5607:5742  if (_vote == Vote.FOR) {... */\n    tag_153:\n        /* \"ERC20.sol\":5519:5742  if (_vote == Vote.AGAINST) {... */\n    tag_146:\n        /* \"ERC20.sol\":5829:5858  _issue.voters.add(msg.sender) */\n      tag_155\n        /* \"ERC20.sol\":5847:5857  msg.sender */\n      caller\n        /* \"ERC20.sol\":5829:5835  _issue */\n      dup4\n        /* \"ERC20.sol\":5829:5842  _issue.voters */\n      0x00\n      add\n        /* \"ERC20.sol\":5829:5846  _issue.voters.add */\n      tag_156\n      swap1\n        /* \"ERC20.sol\":5829:5858  _issue.voters.add(msg.sender) */\n      swap2\n      swap1\n      0xffffffff\n      and\n      jump\t// in\n    tag_155:\n      pop\n        /* \"ERC20.sol\":5889:5896  nTokens */\n      dup1\n        /* \"ERC20.sol\":5868:5874  _issue */\n      dup3\n        /* \"ERC20.sol\":5868:5885  _issue.totalVotes */\n      0x04\n      add\n      0x00\n        /* \"ERC20.sol\":5868:5896  _issue.totalVotes += nTokens */\n      dup3\n      dup3\n      sload\n      tag_157\n      swap2\n      swap1\n      tag_112\n      jump\t// in\n    tag_157:\n      swap3\n      pop\n      pop\n      dup2\n      swap1\n      sstore\n      pop\n        /* \"ERC20.sol\":6007:6013  _issue */\n      dup2\n        /* \"ERC20.sol\":6007:6020  _issue.quorum */\n      0x03\n      add\n      sload\n        /* \"ERC20.sol\":5986:5992  _issue */\n      dup3\n        /* \"ERC20.sol\":5986:6003  _issue.totalVotes */\n      0x04\n      add\n      sload\n        /* \"ERC20.sol\":5986:6020  _issue.totalVotes >= _issue.quorum */\n      lt\n        /* \"ERC20.sol\":5982:6176  if (_issue.totalVotes >= _issue.quorum) {... */\n      tag_158\n      jumpi\n        /* \"ERC20.sol\":6052:6056  true */\n      0x01\n        /* \"ERC20.sol\":6036:6042  _issue */\n      dup3\n        /* \"ERC20.sol\":6036:6049  _issue.closed */\n      0x08\n      add\n      0x01\n        /* \"ERC20.sol\":6036:6056  _issue.closed = true */\n      0x0100\n      exp\n      dup2\n      sload\n      dup2\n      0xff\n      mul\n      not\n      and\n      swap1\n      dup4\n      iszero\n      iszero\n      mul\n      or\n      swap1\n      sstore\n      pop\n        /* \"ERC20.sol\":6092:6098  _issue */\n      dup2\n        /* \"ERC20.sol\":6092:6111  _issue.votesAgainst */\n      0x06\n      add\n      sload\n        /* \"ERC20.sol\":6074:6080  _issue */\n      dup3\n        /* \"ERC20.sol\":6074:6089  _issue.votesFor */\n      0x05\n      add\n      sload\n        /* \"ERC20.sol\":6074:6111  _issue.votesFor > _issue.votesAgainst */\n      gt\n        /* \"ERC20.sol\":6070:6166  if (_issue.votesFor > _issue.votesAgainst) {... */\n      iszero\n      tag_159\n      jumpi\n        /* \"ERC20.sol\":6147:6151  true */\n      0x01\n        /* \"ERC20.sol\":6131:6137  _issue */\n      dup3\n        /* \"ERC20.sol\":6131:6144  _issue.passed */\n      0x08\n      add\n      0x00\n        /* \"ERC20.sol\":6131:6151  _issue.passed = true */\n      0x0100\n      exp\n      dup2\n      sload\n      dup2\n      0xff\n      mul\n      not\n      and\n      swap1\n      dup4\n      iszero\n      iszero\n      mul\n      or\n      swap1\n      sstore\n      pop\n        /* \"ERC20.sol\":6070:6166  if (_issue.votesFor > _issue.votesAgainst) {... */\n    tag_159:\n        /* \"ERC20.sol\":5982:6176  if (_issue.totalVotes >= _issue.quorum) {... */\n    tag_158:\n        /* \"ERC20.sol\":4974:6182  {... */\n      pop\n      pop\n        /* \"ERC20.sol\":4923:6182  function vote(uint256 _issueId, Vote _vote) public {... */\n      pop\n      pop\n      jump\t// out\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":1981:2074  function symbol() public view virtual returns (string memory) {... */\n    tag_69:\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":2028:2041  string memory */\n      0x60\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":2060:2067  _symbol */\n      0x04\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":2053:2067  return _symbol */\n      dup1\n      sload\n      tag_161\n      swap1\n      tag_91\n      jump\t// in\n    tag_161:\n      dup1\n      0x1f\n      add\n      0x20\n      dup1\n      swap2\n      div\n      mul\n      0x20\n      add\n      mload(0x40)\n      swap1\n      dup2\n      add\n      0x40\n      mstore\n      dup1\n      swap3\n      swap2\n      swap1\n      dup2\n      dup2\n      mstore\n      0x20\n      add\n      dup3\n      dup1\n      sload\n      tag_162\n      swap1\n      tag_91\n      jump\t// in\n    tag_162:\n      dup1\n      iszero\n      tag_163\n      jumpi\n      dup1\n      0x1f\n      lt\n      tag_164\n      jumpi\n      0x0100\n      dup1\n      dup4\n      sload\n      div\n      mul\n      dup4\n      mstore\n      swap2\n      0x20\n      add\n      swap2\n      jump(tag_163)\n    tag_164:\n      dup3\n      add\n      swap2\n      swap1\n      0x00\n      mstore\n      keccak256(0x00, 0x20)\n      swap1\n    tag_165:\n      dup2\n      sload\n      dup2\n      mstore\n      swap1\n      0x01\n      add\n      swap1\n      0x20\n      add\n      dup1\n      dup4\n      gt\n      tag_165\n      jumpi\n      dup3\n      swap1\n      sub\n      0x1f\n      and\n      dup3\n      add\n      swap2\n    tag_163:\n      pop\n      pop\n      pop\n      pop\n      pop\n      swap1\n      pop\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":1981:2074  function symbol() public view virtual returns (string memory) {... */\n      swap1\n      jump\t// out\n        /* \"ERC20.sol\":4239:4868  function getIssue(uint256 _issueId)... */\n    tag_74:\n        /* \"ERC20.sol\":4322:4344  SerializedIssue memory */\n      tag_166\n      tag_167\n      jump\t// in\n    tag_166:\n        /* \"ERC20.sol\":4360:4380  Issue storage _issue */\n      0x00\n        /* \"ERC20.sol\":4383:4389  issues */\n      0x06\n        /* \"ERC20.sol\":4390:4398  _issueId */\n      dup4\n        /* \"ERC20.sol\":4383:4399  issues[_issueId] */\n      dup2\n      sload\n      dup2\n      lt\n      tag_169\n      jumpi\n      tag_170\n      tag_131\n      jump\t// in\n    tag_170:\n    tag_169:\n      swap1\n      0x00\n      mstore\n      keccak256(0x00, 0x20)\n      swap1\n      0x09\n      mul\n      add\n        /* \"ERC20.sol\":4360:4399  Issue storage _issue = issues[_issueId] */\n      swap1\n      pop\n        /* \"ERC20.sol\":4428:4861  SerializedIssue({... */\n      mload(0x40)\n      dup1\n      0x0120\n      add\n      0x40\n      mstore\n      dup1\n        /* \"ERC20.sol\":4470:4492  _issue.voters.values() */\n      tag_172\n        /* \"ERC20.sol\":4470:4476  _issue */\n      dup4\n        /* \"ERC20.sol\":4470:4483  _issue.voters */\n      0x00\n      add\n        /* \"ERC20.sol\":4470:4490  _issue.voters.values */\n      tag_173\n        /* \"ERC20.sol\":4470:4492  _issue.voters.values() */\n      jump\t// in\n    tag_172:\n        /* \"ERC20.sol\":4428:4861  SerializedIssue({... */\n      dup2\n      mstore\n      0x20\n      add\n        /* \"ERC20.sol\":4521:4527  _issue */\n      dup3\n        /* \"ERC20.sol\":4521:4537  _issue.issueDesc */\n      0x02\n      add\n        /* \"ERC20.sol\":4428:4861  SerializedIssue({... */\n      dup1\n      sload\n      tag_174\n      swap1\n      tag_91\n      jump\t// in\n    tag_174:\n      dup1\n      0x1f\n      add\n      0x20\n      dup1\n      swap2\n      div\n      mul\n      0x20\n      add\n      mload(0x40)\n      swap1\n      dup2\n      add\n      0x40\n      mstore\n      dup1\n      swap3\n      swap2\n      swap1\n      dup2\n      dup2\n      mstore\n      0x20\n      add\n      dup3\n      dup1\n      sload\n      tag_175\n      swap1\n      tag_91\n      jump\t// in\n    tag_175:\n      dup1\n      iszero\n      tag_176\n      jumpi\n      dup1\n      0x1f\n      lt\n      tag_177\n      jumpi\n      0x0100\n      dup1\n      dup4\n      sload\n      div\n      mul\n      dup4\n      mstore\n      swap2\n      0x20\n      add\n      swap2\n      jump(tag_176)\n    tag_177:\n      dup3\n      add\n      swap2\n      swap1\n      0x00\n      mstore\n      keccak256(0x00, 0x20)\n      swap1\n    tag_178:\n      dup2\n      sload\n      dup2\n      mstore\n      swap1\n      0x01\n      add\n      swap1\n      0x20\n      add\n      dup1\n      dup4\n      gt\n      tag_178\n      jumpi\n      dup3\n      swap1\n      sub\n      0x1f\n      and\n      dup3\n      add\n      swap2\n    tag_176:\n      pop\n      pop\n      pop\n      pop\n      pop\n      dup2\n      mstore\n      0x20\n      add\n        /* \"ERC20.sol\":4563:4569  _issue */\n      dup3\n        /* \"ERC20.sol\":4563:4576  _issue.quorum */\n      0x03\n      add\n      sload\n        /* \"ERC20.sol\":4428:4861  SerializedIssue({... */\n      dup2\n      mstore\n      0x20\n      add\n        /* \"ERC20.sol\":4606:4612  _issue */\n      dup3\n        /* \"ERC20.sol\":4606:4623  _issue.totalVotes */\n      0x04\n      add\n      sload\n        /* \"ERC20.sol\":4428:4861  SerializedIssue({... */\n      dup2\n      mstore\n      0x20\n      add\n        /* \"ERC20.sol\":4651:4657  _issue */\n      dup3\n        /* \"ERC20.sol\":4651:4666  _issue.votesFor */\n      0x05\n      add\n      sload\n        /* \"ERC20.sol\":4428:4861  SerializedIssue({... */\n      dup2\n      mstore\n      0x20\n      add\n        /* \"ERC20.sol\":4698:4704  _issue */\n      dup3\n        /* \"ERC20.sol\":4698:4717  _issue.votesAgainst */\n      0x06\n      add\n      sload\n        /* \"ERC20.sol\":4428:4861  SerializedIssue({... */\n      dup2\n      mstore\n      0x20\n      add\n        /* \"ERC20.sol\":4749:4755  _issue */\n      dup3\n        /* \"ERC20.sol\":4749:4768  _issue.votesAbstain */\n      0x07\n      add\n      sload\n        /* \"ERC20.sol\":4428:4861  SerializedIssue({... */\n      dup2\n      mstore\n      0x20\n      add\n        /* \"ERC20.sol\":4794:4800  _issue */\n      dup3\n        /* \"ERC20.sol\":4794:4807  _issue.passed */\n      0x08\n      add\n      0x00\n      swap1\n      sload\n      swap1\n      0x0100\n      exp\n      swap1\n      div\n      0xff\n      and\n        /* \"ERC20.sol\":4428:4861  SerializedIssue({... */\n      iszero\n      iszero\n      dup2\n      mstore\n      0x20\n      add\n        /* \"ERC20.sol\":4833:4839  _issue */\n      dup3\n        /* \"ERC20.sol\":4833:4846  _issue.closed */\n      0x08\n      add\n      0x01\n      swap1\n      sload\n      swap1\n      0x0100\n      exp\n      swap1\n      div\n      0xff\n      and\n        /* \"ERC20.sol\":4428:4861  SerializedIssue({... */\n      iszero\n      iszero\n      dup2\n      mstore\n      pop\n        /* \"ERC20.sol\":4409:4861  return... */\n      swap2\n      pop\n      pop\n        /* \"ERC20.sol\":4239:4868  function getIssue(uint256 _issueId)... */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":3315:3493  function transfer(address to, uint256 value) public virtual returns (bool) {... */\n    tag_79:\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":3384:3388  bool */\n      0x00\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":3400:3413  address owner */\n      dup1\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":3416:3428  _msgSender() */\n      tag_180\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":3416:3426  _msgSender */\n      tag_98\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":3416:3428  _msgSender() */\n      jump\t// in\n    tag_180:\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":3400:3428  address owner = _msgSender() */\n      swap1\n      pop\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":3438:3465  _transfer(owner, to, value) */\n      tag_181\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":3448:3453  owner */\n      dup2\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":3455:3457  to */\n      dup6\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":3459:3464  value */\n      dup6\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":3438:3447  _transfer */\n      tag_107\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":3438:3465  _transfer(owner, to, value) */\n      jump\t// in\n    tag_181:\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":3482:3486  true */\n      0x01\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":3475:3486  return true */\n      swap2\n      pop\n      pop\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":3315:3493  function transfer(address to, uint256 value) public virtual returns (bool) {... */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"ERC20.sol\":2578:2612  uint256 public maxSupply = 1000000 */\n    tag_82:\n      sload(0x08)\n      dup2\n      jump\t// out\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":3551:3691  function allowance(address owner, address spender) public view virtual returns (uint256) {... */\n    tag_87:\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":3631:3638  uint256 */\n      0x00\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":3657:3668  _allowances */\n      0x01\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":3657:3675  _allowances[owner] */\n      0x00\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":3669:3674  owner */\n      dup5\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":3657:3675  _allowances[owner] */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":3657:3684  _allowances[owner][spender] */\n      0x00\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":3676:3683  spender */\n      dup4\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":3657:3684  _allowances[owner][spender] */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n      sload\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":3650:3684  return _allowances[owner][spender] */\n      swap1\n      pop\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":3551:3691  function allowance(address owner, address spender) public view virtual returns (uint256) {... */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"@openzeppelin/contracts/utils/Context.sol\":656:752  function _msgSender() internal view virtual returns (address) {... */\n    tag_98:\n        /* \"@openzeppelin/contracts/utils/Context.sol\":709:716  address */\n      0x00\n        /* \"@openzeppelin/contracts/utils/Context.sol\":735:745  msg.sender */\n      caller\n        /* \"@openzeppelin/contracts/utils/Context.sol\":728:745  return msg.sender */\n      swap1\n      pop\n        /* \"@openzeppelin/contracts/utils/Context.sol\":656:752  function _msgSender() internal view virtual returns (address) {... */\n      swap1\n      jump\t// out\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":8726:8854  function _approve(address owner, address spender, uint256 value) internal {... */\n    tag_100:\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":8810:8847  _approve(owner, spender, value, true) */\n      tag_185\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":8819:8824  owner */\n      dup4\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":8826:8833  spender */\n      dup4\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":8835:8840  value */\n      dup4\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":8842:8846  true */\n      0x01\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":8810:8818  _approve */\n      tag_186\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":8810:8847  _approve(owner, spender, value, true) */\n      jump\t// in\n    tag_185:\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":8726:8854  function _approve(address owner, address spender, uint256 value) internal {... */\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":10415:10891  function _spendAllowance(address owner, address spender, uint256 value) internal virtual {... */\n    tag_105:\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":10514:10538  uint256 currentAllowance */\n      0x00\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":10541:10566  allowance(owner, spender) */\n      tag_188\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":10551:10556  owner */\n      dup5\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":10558:10565  spender */\n      dup5\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":10541:10550  allowance */\n      tag_87\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":10541:10566  allowance(owner, spender) */\n      jump\t// in\n    tag_188:\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":10514:10566  uint256 currentAllowance = allowance(owner, spender) */\n      swap1\n      pop\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":10599:10616  type(uint256).max */\n      0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":10580:10596  currentAllowance */\n      dup2\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":10580:10616  currentAllowance < type(uint256).max */\n      lt\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":10576:10885  if (currentAllowance < type(uint256).max) {... */\n      iszero\n      tag_189\n      jumpi\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":10655:10660  value */\n      dup2\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":10636:10652  currentAllowance */\n      dup2\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":10636:10660  currentAllowance < value */\n      lt\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":10632:10762  if (currentAllowance < value) {... */\n      iszero\n      tag_190\n      jumpi\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":10714:10721  spender */\n      dup3\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":10723:10739  currentAllowance */\n      dup2\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":10741:10746  value */\n      dup4\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":10687:10747  ERC20InsufficientAllowance(spender, currentAllowance, value) */\n      mload(0x40)\n      0xfb8f41b200000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      tag_191\n      swap4\n      swap3\n      swap2\n      swap1\n      tag_192\n      jump\t// in\n    tag_191:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":10632:10762  if (currentAllowance < value) {... */\n    tag_190:\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":10803:10860  _approve(owner, spender, currentAllowance - value, false) */\n      tag_193\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":10812:10817  owner */\n      dup5\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":10819:10826  spender */\n      dup5\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":10847:10852  value */\n      dup5\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":10828:10844  currentAllowance */\n      dup5\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":10828:10852  currentAllowance - value */\n      sub\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":10854:10859  false */\n      0x00\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":10803:10811  _approve */\n      tag_186\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":10803:10860  _approve(owner, spender, currentAllowance - value, false) */\n      jump\t// in\n    tag_193:\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":10576:10885  if (currentAllowance < type(uint256).max) {... */\n    tag_189:\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":10504:10891  {... */\n      pop\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":10415:10891  function _spendAllowance(address owner, address spender, uint256 value) internal virtual {... */\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":5393:5693  function _transfer(address from, address to, uint256 value) internal {... */\n    tag_107:\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":5492:5493  0 */\n      0x00\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":5476:5494  from == address(0) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":5476:5480  from */\n      dup4\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":5476:5494  from == address(0) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      sub\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":5472:5558  if (from == address(0)) {... */\n      tag_195\n      jumpi\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":5544:5545  0 */\n      0x00\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":5517:5547  ERC20InvalidSender(address(0)) */\n      mload(0x40)\n      0x96c6fd1e00000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      tag_196\n      swap2\n      swap1\n      tag_197\n      jump\t// in\n    tag_196:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":5472:5558  if (from == address(0)) {... */\n    tag_195:\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":5585:5586  0 */\n      0x00\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":5571:5587  to == address(0) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":5571:5573  to */\n      dup3\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":5571:5587  to == address(0) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      sub\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":5567:5653  if (to == address(0)) {... */\n      tag_198\n      jumpi\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":5639:5640  0 */\n      0x00\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":5610:5642  ERC20InvalidReceiver(address(0)) */\n      mload(0x40)\n      0xec442f0500000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      tag_199\n      swap2\n      swap1\n      tag_197\n      jump\t// in\n    tag_199:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":5567:5653  if (to == address(0)) {... */\n    tag_198:\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":5662:5686  _update(from, to, value) */\n      tag_200\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":5670:5674  from */\n      dup4\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":5676:5678  to */\n      dup4\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":5680:5685  value */\n      dup4\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":5662:5669  _update */\n      tag_201\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":5662:5686  _update(from, to, value) */\n      jump\t// in\n    tag_200:\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":5393:5693  function _transfer(address from, address to, uint256 value) internal {... */\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":7458:7666  function _mint(address account, uint256 value) internal {... */\n    tag_116:\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":7547:7548  0 */\n      0x00\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":7528:7549  account == address(0) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":7528:7535  account */\n      dup3\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":7528:7549  account == address(0) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      sub\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":7524:7615  if (account == address(0)) {... */\n      tag_203\n      jumpi\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":7601:7602  0 */\n      0x00\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":7572:7604  ERC20InvalidReceiver(address(0)) */\n      mload(0x40)\n      0xec442f0500000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      tag_204\n      swap2\n      swap1\n      tag_197\n      jump\t// in\n    tag_204:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":7524:7615  if (account == address(0)) {... */\n    tag_203:\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":7624:7659  _update(address(0), account, value) */\n      tag_205\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":7640:7641  0 */\n      0x00\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":7644:7651  account */\n      dup4\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":7653:7658  value */\n      dup4\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":7624:7631  _update */\n      tag_201\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":7624:7659  _update(address(0), account, value) */\n      jump\t// in\n    tag_205:\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":7458:7666  function _mint(address account, uint256 value) internal {... */\n      pop\n      pop\n      jump\t// out\n        /* \"@openzeppelin/contracts/utils/structs/EnumerableSet.sol\":8844:9009  function contains(AddressSet storage set, address value) internal view returns (bool) {... */\n    tag_135:\n        /* \"@openzeppelin/contracts/utils/structs/EnumerableSet.sol\":8924:8928  bool */\n      0x00\n        /* \"@openzeppelin/contracts/utils/structs/EnumerableSet.sol\":8947:9002  _contains(set._inner, bytes32(uint256(uint160(value)))) */\n      tag_207\n        /* \"@openzeppelin/contracts/utils/structs/EnumerableSet.sol\":8957:8960  set */\n      dup4\n        /* \"@openzeppelin/contracts/utils/structs/EnumerableSet.sol\":8957:8967  set._inner */\n      0x00\n      add\n        /* \"@openzeppelin/contracts/utils/structs/EnumerableSet.sol\":8993:8998  value */\n      dup4\n        /* \"@openzeppelin/contracts/utils/structs/EnumerableSet.sol\":8977:9000  uint256(uint160(value)) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"@openzeppelin/contracts/utils/structs/EnumerableSet.sol\":8969:9001  bytes32(uint256(uint160(value))) */\n      0x00\n      shl\n        /* \"@openzeppelin/contracts/utils/structs/EnumerableSet.sol\":8947:8956  _contains */\n      tag_208\n        /* \"@openzeppelin/contracts/utils/structs/EnumerableSet.sol\":8947:9002  _contains(set._inner, bytes32(uint256(uint160(value)))) */\n      jump\t// in\n    tag_207:\n        /* \"@openzeppelin/contracts/utils/structs/EnumerableSet.sol\":8940:9002  return _contains(set._inner, bytes32(uint256(uint160(value)))) */\n      swap1\n      pop\n        /* \"@openzeppelin/contracts/utils/structs/EnumerableSet.sol\":8844:9009  function contains(AddressSet storage set, address value) internal view returns (bool) {... */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"@openzeppelin/contracts/utils/structs/EnumerableSet.sol\":8289:8439  function add(AddressSet storage set, address value) internal returns (bool) {... */\n    tag_156:\n        /* \"@openzeppelin/contracts/utils/structs/EnumerableSet.sol\":8359:8363  bool */\n      0x00\n        /* \"@openzeppelin/contracts/utils/structs/EnumerableSet.sol\":8382:8432  _add(set._inner, bytes32(uint256(uint160(value)))) */\n      tag_210\n        /* \"@openzeppelin/contracts/utils/structs/EnumerableSet.sol\":8387:8390  set */\n      dup4\n        /* \"@openzeppelin/contracts/utils/structs/EnumerableSet.sol\":8387:8397  set._inner */\n      0x00\n      add\n        /* \"@openzeppelin/contracts/utils/structs/EnumerableSet.sol\":8423:8428  value */\n      dup4\n        /* \"@openzeppelin/contracts/utils/structs/EnumerableSet.sol\":8407:8430  uint256(uint160(value)) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"@openzeppelin/contracts/utils/structs/EnumerableSet.sol\":8399:8431  bytes32(uint256(uint160(value))) */\n      0x00\n      shl\n        /* \"@openzeppelin/contracts/utils/structs/EnumerableSet.sol\":8382:8386  _add */\n      tag_211\n        /* \"@openzeppelin/contracts/utils/structs/EnumerableSet.sol\":8382:8432  _add(set._inner, bytes32(uint256(uint160(value)))) */\n      jump\t// in\n    tag_210:\n        /* \"@openzeppelin/contracts/utils/structs/EnumerableSet.sol\":8375:8432  return _add(set._inner, bytes32(uint256(uint160(value)))) */\n      swap1\n      pop\n        /* \"@openzeppelin/contracts/utils/structs/EnumerableSet.sol\":8289:8439  function add(AddressSet storage set, address value) internal returns (bool) {... */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"@openzeppelin/contracts/utils/structs/EnumerableSet.sol\":10243:10516  function values(AddressSet storage set) internal view returns (address[] memory) {... */\n    tag_173:\n        /* \"@openzeppelin/contracts/utils/structs/EnumerableSet.sol\":10306:10322  address[] memory */\n      0x60\n        /* \"@openzeppelin/contracts/utils/structs/EnumerableSet.sol\":10334:10356  bytes32[] memory store */\n      0x00\n        /* \"@openzeppelin/contracts/utils/structs/EnumerableSet.sol\":10359:10378  _values(set._inner) */\n      tag_213\n        /* \"@openzeppelin/contracts/utils/structs/EnumerableSet.sol\":10367:10370  set */\n      dup4\n        /* \"@openzeppelin/contracts/utils/structs/EnumerableSet.sol\":10367:10377  set._inner */\n      0x00\n      add\n        /* \"@openzeppelin/contracts/utils/structs/EnumerableSet.sol\":10359:10366  _values */\n      tag_214\n        /* \"@openzeppelin/contracts/utils/structs/EnumerableSet.sol\":10359:10378  _values(set._inner) */\n      jump\t// in\n    tag_213:\n        /* \"@openzeppelin/contracts/utils/structs/EnumerableSet.sol\":10334:10378  bytes32[] memory store = _values(set._inner) */\n      swap1\n      pop\n        /* \"@openzeppelin/contracts/utils/structs/EnumerableSet.sol\":10388:10411  address[] memory result */\n      0x60\n        /* \"@openzeppelin/contracts/utils/structs/EnumerableSet.sol\":10471:10476  store */\n      dup2\n        /* \"@openzeppelin/contracts/utils/structs/EnumerableSet.sol\":10461:10476  result := store */\n      swap1\n      pop\n        /* \"@openzeppelin/contracts/utils/structs/EnumerableSet.sol\":10503:10509  result */\n      dup1\n        /* \"@openzeppelin/contracts/utils/structs/EnumerableSet.sol\":10496:10509  return result */\n      swap3\n      pop\n      pop\n      pop\n        /* \"@openzeppelin/contracts/utils/structs/EnumerableSet.sol\":10243:10516  function values(AddressSet storage set) internal view returns (address[] memory) {... */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":9701:10133  function _approve(address owner, address spender, uint256 value, bool emitEvent) internal virtual {... */\n    tag_186:\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":9830:9831  0 */\n      0x00\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":9813:9832  owner == address(0) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":9813:9818  owner */\n      dup5\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":9813:9832  owner == address(0) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      sub\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":9809:9898  if (owner == address(0)) {... */\n      tag_216\n      jumpi\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":9884:9885  0 */\n      0x00\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":9855:9887  ERC20InvalidApprover(address(0)) */\n      mload(0x40)\n      0xe602df0500000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      tag_217\n      swap2\n      swap1\n      tag_197\n      jump\t// in\n    tag_217:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":9809:9898  if (owner == address(0)) {... */\n    tag_216:\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":9930:9931  0 */\n      0x00\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":9911:9932  spender == address(0) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":9911:9918  spender */\n      dup4\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":9911:9932  spender == address(0) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      sub\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":9907:9997  if (spender == address(0)) {... */\n      tag_218\n      jumpi\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":9983:9984  0 */\n      0x00\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":9955:9986  ERC20InvalidSpender(address(0)) */\n      mload(0x40)\n      0x94280d6200000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      tag_219\n      swap2\n      swap1\n      tag_197\n      jump\t// in\n    tag_219:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":9907:9997  if (spender == address(0)) {... */\n    tag_218:\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":10036:10041  value */\n      dup2\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":10006:10017  _allowances */\n      0x01\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":10006:10024  _allowances[owner] */\n      0x00\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":10018:10023  owner */\n      dup7\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":10006:10024  _allowances[owner] */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":10006:10033  _allowances[owner][spender] */\n      0x00\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":10025:10032  spender */\n      dup6\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":10006:10033  _allowances[owner][spender] */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":10006:10041  _allowances[owner][spender] = value */\n      dup2\n      swap1\n      sstore\n      pop\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":10055:10064  emitEvent */\n      dup1\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":10051:10127  if (emitEvent) {... */\n      iszero\n      tag_220\n      jumpi\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":10101:10108  spender */\n      dup3\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":10085:10116  Approval(owner, spender, value) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":10094:10099  owner */\n      dup5\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":10085:10116  Approval(owner, spender, value) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0x8c5be1e5ebec7d5bd14f71427d1e84f3dd0314c0f7b2291e5b200ac8c7c3b925\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":10110:10115  value */\n      dup5\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":10085:10116  Approval(owner, spender, value) */\n      mload(0x40)\n      tag_221\n      swap2\n      swap1\n      tag_35\n      jump\t// in\n    tag_221:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      log3\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":10051:10127  if (emitEvent) {... */\n    tag_220:\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":9701:10133  function _approve(address owner, address spender, uint256 value, bool emitEvent) internal virtual {... */\n      pop\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6008:7115  function _update(address from, address to, uint256 value) internal virtual {... */\n    tag_201:\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6113:6114  0 */\n      0x00\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6097:6115  from == address(0) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6097:6101  from */\n      dup4\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6097:6115  from == address(0) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      sub\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6093:6633  if (from == address(0)) {... */\n      tag_223\n      jumpi\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6249:6254  value */\n      dup1\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6233:6245  _totalSupply */\n      0x02\n      0x00\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6233:6254  _totalSupply += value */\n      dup3\n      dup3\n      sload\n      tag_224\n      swap2\n      swap1\n      tag_112\n      jump\t// in\n    tag_224:\n      swap3\n      pop\n      pop\n      dup2\n      swap1\n      sstore\n      pop\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6093:6633  if (from == address(0)) {... */\n      jump(tag_225)\n    tag_223:\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6285:6304  uint256 fromBalance */\n      0x00\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6307:6316  _balances */\n      dup1\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6307:6322  _balances[from] */\n      0x00\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6317:6321  from */\n      dup6\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6307:6322  _balances[from] */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n      sload\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6285:6322  uint256 fromBalance = _balances[from] */\n      swap1\n      pop\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6354:6359  value */\n      dup2\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6340:6351  fromBalance */\n      dup2\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6340:6359  fromBalance < value */\n      lt\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6336:6451  if (fromBalance < value) {... */\n      iszero\n      tag_226\n      jumpi\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6411:6415  from */\n      dup4\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6417:6428  fromBalance */\n      dup2\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6430:6435  value */\n      dup4\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6386:6436  ERC20InsufficientBalance(from, fromBalance, value) */\n      mload(0x40)\n      0xe450d38c00000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      tag_227\n      swap4\n      swap3\n      swap2\n      swap1\n      tag_192\n      jump\t// in\n    tag_227:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6336:6451  if (fromBalance < value) {... */\n    tag_226:\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6603:6608  value */\n      dup2\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6589:6600  fromBalance */\n      dup2\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6589:6608  fromBalance - value */\n      sub\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6571:6580  _balances */\n      0x00\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6571:6586  _balances[from] */\n      dup1\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6581:6585  from */\n      dup7\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6571:6586  _balances[from] */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6571:6608  _balances[from] = fromBalance - value */\n      dup2\n      swap1\n      sstore\n      pop\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6271:6633  {... */\n      pop\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6093:6633  if (from == address(0)) {... */\n    tag_225:\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6661:6662  0 */\n      0x00\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6647:6663  to == address(0) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6647:6649  to */\n      dup3\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6647:6663  to == address(0) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      sub\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6643:7068  if (to == address(0)) {... */\n      tag_228\n      jumpi\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6826:6831  value */\n      dup1\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6810:6822  _totalSupply */\n      0x02\n      0x00\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6810:6831  _totalSupply -= value */\n      dup3\n      dup3\n      sload\n      sub\n      swap3\n      pop\n      pop\n      dup2\n      swap1\n      sstore\n      pop\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6643:7068  if (to == address(0)) {... */\n      jump(tag_229)\n    tag_228:\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":7038:7043  value */\n      dup1\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":7021:7030  _balances */\n      0x00\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":7021:7034  _balances[to] */\n      dup1\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":7031:7033  to */\n      dup5\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":7021:7034  _balances[to] */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n      0x00\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":7021:7043  _balances[to] += value */\n      dup3\n      dup3\n      sload\n      add\n      swap3\n      pop\n      pop\n      dup2\n      swap1\n      sstore\n      pop\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6643:7068  if (to == address(0)) {... */\n    tag_229:\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":7098:7100  to */\n      dup2\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":7083:7108  Transfer(from, to, value) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":7092:7096  from */\n      dup4\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":7083:7108  Transfer(from, to, value) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":7102:7107  value */\n      dup4\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":7083:7108  Transfer(from, to, value) */\n      mload(0x40)\n      tag_230\n      swap2\n      swap1\n      tag_35\n      jump\t// in\n    tag_230:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      log3\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6008:7115  function _update(address from, address to, uint256 value) internal virtual {... */\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"@openzeppelin/contracts/utils/structs/EnumerableSet.sol\":4264:4393  function _contains(Set storage set, bytes32 value) private view returns (bool) {... */\n    tag_208:\n        /* \"@openzeppelin/contracts/utils/structs/EnumerableSet.sol\":4337:4341  bool */\n      0x00\n        /* \"@openzeppelin/contracts/utils/structs/EnumerableSet.sol\":4385:4386  0 */\n      dup1\n        /* \"@openzeppelin/contracts/utils/structs/EnumerableSet.sol\":4360:4363  set */\n      dup4\n        /* \"@openzeppelin/contracts/utils/structs/EnumerableSet.sol\":4360:4374  set._positions */\n      0x01\n      add\n        /* \"@openzeppelin/contracts/utils/structs/EnumerableSet.sol\":4360:4381  set._positions[value] */\n      0x00\n        /* \"@openzeppelin/contracts/utils/structs/EnumerableSet.sol\":4375:4380  value */\n      dup5\n        /* \"@openzeppelin/contracts/utils/structs/EnumerableSet.sol\":4360:4381  set._positions[value] */\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n      sload\n        /* \"@openzeppelin/contracts/utils/structs/EnumerableSet.sol\":4360:4386  set._positions[value] != 0 */\n      eq\n      iszero\n        /* \"@openzeppelin/contracts/utils/structs/EnumerableSet.sol\":4353:4386  return set._positions[value] != 0 */\n      swap1\n      pop\n        /* \"@openzeppelin/contracts/utils/structs/EnumerableSet.sol\":4264:4393  function _contains(Set storage set, bytes32 value) private view returns (bool) {... */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"@openzeppelin/contracts/utils/structs/EnumerableSet.sol\":2241:2647  function _add(Set storage set, bytes32 value) private returns (bool) {... */\n    tag_211:\n        /* \"@openzeppelin/contracts/utils/structs/EnumerableSet.sol\":2304:2308  bool */\n      0x00\n        /* \"@openzeppelin/contracts/utils/structs/EnumerableSet.sol\":2325:2346  _contains(set, value) */\n      tag_233\n        /* \"@openzeppelin/contracts/utils/structs/EnumerableSet.sol\":2335:2338  set */\n      dup4\n        /* \"@openzeppelin/contracts/utils/structs/EnumerableSet.sol\":2340:2345  value */\n      dup4\n        /* \"@openzeppelin/contracts/utils/structs/EnumerableSet.sol\":2325:2334  _contains */\n      tag_208\n        /* \"@openzeppelin/contracts/utils/structs/EnumerableSet.sol\":2325:2346  _contains(set, value) */\n      jump\t// in\n    tag_233:\n        /* \"@openzeppelin/contracts/utils/structs/EnumerableSet.sol\":2320:2641  if (!_contains(set, value)) {... */\n      tag_234\n      jumpi\n        /* \"@openzeppelin/contracts/utils/structs/EnumerableSet.sol\":2362:2365  set */\n      dup3\n        /* \"@openzeppelin/contracts/utils/structs/EnumerableSet.sol\":2362:2373  set._values */\n      0x00\n      add\n        /* \"@openzeppelin/contracts/utils/structs/EnumerableSet.sol\":2379:2384  value */\n      dup3\n        /* \"@openzeppelin/contracts/utils/structs/EnumerableSet.sol\":2362:2385  set._values.push(value) */\n      swap1\n      dup1\n      0x01\n      dup2\n      sload\n      add\n      dup1\n      dup3\n      sstore\n      dup1\n      swap2\n      pop\n      pop\n      0x01\n      swap1\n      sub\n      swap1\n      0x00\n      mstore\n      keccak256(0x00, 0x20)\n      add\n      0x00\n      swap1\n      swap2\n      swap1\n      swap2\n      swap1\n      swap2\n      pop\n      sstore\n        /* \"@openzeppelin/contracts/utils/structs/EnumerableSet.sol\":2544:2547  set */\n      dup3\n        /* \"@openzeppelin/contracts/utils/structs/EnumerableSet.sol\":2544:2555  set._values */\n      0x00\n      add\n        /* \"@openzeppelin/contracts/utils/structs/EnumerableSet.sol\":2544:2562  set._values.length */\n      dup1\n      sload\n      swap1\n      pop\n        /* \"@openzeppelin/contracts/utils/structs/EnumerableSet.sol\":2520:2523  set */\n      dup4\n        /* \"@openzeppelin/contracts/utils/structs/EnumerableSet.sol\":2520:2534  set._positions */\n      0x01\n      add\n        /* \"@openzeppelin/contracts/utils/structs/EnumerableSet.sol\":2520:2541  set._positions[value] */\n      0x00\n        /* \"@openzeppelin/contracts/utils/structs/EnumerableSet.sol\":2535:2540  value */\n      dup5\n        /* \"@openzeppelin/contracts/utils/structs/EnumerableSet.sol\":2520:2541  set._positions[value] */\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n        /* \"@openzeppelin/contracts/utils/structs/EnumerableSet.sol\":2520:2562  set._positions[value] = set._values.length */\n      dup2\n      swap1\n      sstore\n      pop\n        /* \"@openzeppelin/contracts/utils/structs/EnumerableSet.sol\":2583:2587  true */\n      0x01\n        /* \"@openzeppelin/contracts/utils/structs/EnumerableSet.sol\":2576:2587  return true */\n      swap1\n      pop\n      jump(tag_232)\n        /* \"@openzeppelin/contracts/utils/structs/EnumerableSet.sol\":2320:2641  if (!_contains(set, value)) {... */\n    tag_234:\n        /* \"@openzeppelin/contracts/utils/structs/EnumerableSet.sol\":2625:2630  false */\n      0x00\n        /* \"@openzeppelin/contracts/utils/structs/EnumerableSet.sol\":2618:2630  return false */\n      swap1\n      pop\n        /* \"@openzeppelin/contracts/utils/structs/EnumerableSet.sol\":2241:2647  function _add(Set storage set, bytes32 value) private returns (bool) {... */\n    tag_232:\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"@openzeppelin/contracts/utils/structs/EnumerableSet.sol\":5581:5690  function _values(Set storage set) private view returns (bytes32[] memory) {... */\n    tag_214:\n        /* \"@openzeppelin/contracts/utils/structs/EnumerableSet.sol\":5637:5653  bytes32[] memory */\n      0x60\n        /* \"@openzeppelin/contracts/utils/structs/EnumerableSet.sol\":5672:5675  set */\n      dup2\n        /* \"@openzeppelin/contracts/utils/structs/EnumerableSet.sol\":5672:5683  set._values */\n      0x00\n      add\n        /* \"@openzeppelin/contracts/utils/structs/EnumerableSet.sol\":5665:5683  return set._values */\n      dup1\n      sload\n      dup1\n      0x20\n      mul\n      0x20\n      add\n      mload(0x40)\n      swap1\n      dup2\n      add\n      0x40\n      mstore\n      dup1\n      swap3\n      swap2\n      swap1\n      dup2\n      dup2\n      mstore\n      0x20\n      add\n      dup3\n      dup1\n      sload\n      dup1\n      iszero\n      tag_238\n      jumpi\n      0x20\n      mul\n      dup3\n      add\n      swap2\n      swap1\n      0x00\n      mstore\n      keccak256(0x00, 0x20)\n      swap1\n    tag_239:\n      dup2\n      sload\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      0x01\n      add\n      swap1\n      dup1\n      dup4\n      gt\n      tag_239\n      jumpi\n    tag_238:\n      pop\n      pop\n      pop\n      pop\n      pop\n      swap1\n      pop\n        /* \"@openzeppelin/contracts/utils/structs/EnumerableSet.sol\":5581:5690  function _values(Set storage set) private view returns (bytes32[] memory) {... */\n      swap2\n      swap1\n      pop\n      jump\t// out\n    tag_167:\n      mload(0x40)\n      dup1\n      0x0120\n      add\n      0x40\n      mstore\n      dup1\n      0x60\n      dup2\n      mstore\n      0x20\n      add\n      0x60\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      dup2\n      mstore\n      0x20\n      add\n      iszero(iszero(0x00))\n      dup2\n      mstore\n      0x20\n      add\n      iszero(iszero(0x00))\n      dup2\n      mstore\n      pop\n      swap1\n      jump\t// out\n        /* \"#utility.yul\":7:106   */\n    tag_240:\n        /* \"#utility.yul\":59:65   */\n      0x00\n        /* \"#utility.yul\":93:98   */\n      dup2\n        /* \"#utility.yul\":87:99   */\n      mload\n        /* \"#utility.yul\":77:99   */\n      swap1\n      pop\n        /* \"#utility.yul\":7:106   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":112:281   */\n    tag_241:\n        /* \"#utility.yul\":196:207   */\n      0x00\n        /* \"#utility.yul\":230:236   */\n      dup3\n        /* \"#utility.yul\":225:228   */\n      dup3\n        /* \"#utility.yul\":218:237   */\n      mstore\n        /* \"#utility.yul\":270:274   */\n      0x20\n        /* \"#utility.yul\":265:268   */\n      dup3\n        /* \"#utility.yul\":261:275   */\n      add\n        /* \"#utility.yul\":246:275   */\n      swap1\n      pop\n        /* \"#utility.yul\":112:281   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":287:426   */\n    tag_242:\n        /* \"#utility.yul\":376:382   */\n      dup3\n        /* \"#utility.yul\":371:374   */\n      dup2\n        /* \"#utility.yul\":366:369   */\n      dup4\n        /* \"#utility.yul\":360:383   */\n      mcopy\n        /* \"#utility.yul\":417:418   */\n      0x00\n        /* \"#utility.yul\":408:414   */\n      dup4\n        /* \"#utility.yul\":403:406   */\n      dup4\n        /* \"#utility.yul\":399:415   */\n      add\n        /* \"#utility.yul\":392:419   */\n      mstore\n        /* \"#utility.yul\":287:426   */\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":432:534   */\n    tag_243:\n        /* \"#utility.yul\":473:479   */\n      0x00\n        /* \"#utility.yul\":524:526   */\n      0x1f\n        /* \"#utility.yul\":520:527   */\n      not\n        /* \"#utility.yul\":515:517   */\n      0x1f\n        /* \"#utility.yul\":508:513   */\n      dup4\n        /* \"#utility.yul\":504:518   */\n      add\n        /* \"#utility.yul\":500:528   */\n      and\n        /* \"#utility.yul\":490:528   */\n      swap1\n      pop\n        /* \"#utility.yul\":432:534   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":540:917   */\n    tag_244:\n        /* \"#utility.yul\":628:631   */\n      0x00\n        /* \"#utility.yul\":656:695   */\n      tag_304\n        /* \"#utility.yul\":689:694   */\n      dup3\n        /* \"#utility.yul\":656:695   */\n      tag_240\n      jump\t// in\n    tag_304:\n        /* \"#utility.yul\":711:782   */\n      tag_305\n        /* \"#utility.yul\":775:781   */\n      dup2\n        /* \"#utility.yul\":770:773   */\n      dup6\n        /* \"#utility.yul\":711:782   */\n      tag_241\n      jump\t// in\n    tag_305:\n        /* \"#utility.yul\":704:782   */\n      swap4\n      pop\n        /* \"#utility.yul\":791:856   */\n      tag_306\n        /* \"#utility.yul\":849:855   */\n      dup2\n        /* \"#utility.yul\":844:847   */\n      dup6\n        /* \"#utility.yul\":837:841   */\n      0x20\n        /* \"#utility.yul\":830:835   */\n      dup7\n        /* \"#utility.yul\":826:842   */\n      add\n        /* \"#utility.yul\":791:856   */\n      tag_242\n      jump\t// in\n    tag_306:\n        /* \"#utility.yul\":881:910   */\n      tag_307\n        /* \"#utility.yul\":903:909   */\n      dup2\n        /* \"#utility.yul\":881:910   */\n      tag_243\n      jump\t// in\n    tag_307:\n        /* \"#utility.yul\":876:879   */\n      dup5\n        /* \"#utility.yul\":872:911   */\n      add\n        /* \"#utility.yul\":865:911   */\n      swap2\n      pop\n        /* \"#utility.yul\":632:917   */\n      pop\n        /* \"#utility.yul\":540:917   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":923:1236   */\n    tag_25:\n        /* \"#utility.yul\":1036:1040   */\n      0x00\n        /* \"#utility.yul\":1074:1076   */\n      0x20\n        /* \"#utility.yul\":1063:1072   */\n      dup3\n        /* \"#utility.yul\":1059:1077   */\n      add\n        /* \"#utility.yul\":1051:1077   */\n      swap1\n      pop\n        /* \"#utility.yul\":1123:1132   */\n      dup2\n        /* \"#utility.yul\":1117:1121   */\n      dup2\n        /* \"#utility.yul\":1113:1133   */\n      sub\n        /* \"#utility.yul\":1109:1110   */\n      0x00\n        /* \"#utility.yul\":1098:1107   */\n      dup4\n        /* \"#utility.yul\":1094:1111   */\n      add\n        /* \"#utility.yul\":1087:1134   */\n      mstore\n        /* \"#utility.yul\":1151:1229   */\n      tag_309\n        /* \"#utility.yul\":1224:1228   */\n      dup2\n        /* \"#utility.yul\":1215:1221   */\n      dup5\n        /* \"#utility.yul\":1151:1229   */\n      tag_244\n      jump\t// in\n    tag_309:\n        /* \"#utility.yul\":1143:1229   */\n      swap1\n      pop\n        /* \"#utility.yul\":923:1236   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":1323:1440   */\n    tag_246:\n        /* \"#utility.yul\":1432:1433   */\n      0x00\n        /* \"#utility.yul\":1429:1430   */\n      dup1\n        /* \"#utility.yul\":1422:1434   */\n      revert\n        /* \"#utility.yul\":1446:1563   */\n    tag_247:\n        /* \"#utility.yul\":1555:1556   */\n      0x00\n        /* \"#utility.yul\":1552:1553   */\n      dup1\n        /* \"#utility.yul\":1545:1557   */\n      revert\n        /* \"#utility.yul\":1569:1695   */\n    tag_248:\n        /* \"#utility.yul\":1606:1613   */\n      0x00\n        /* \"#utility.yul\":1646:1688   */\n      0xffffffffffffffffffffffffffffffffffffffff\n        /* \"#utility.yul\":1639:1644   */\n      dup3\n        /* \"#utility.yul\":1635:1689   */\n      and\n        /* \"#utility.yul\":1624:1689   */\n      swap1\n      pop\n        /* \"#utility.yul\":1569:1695   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":1701:1797   */\n    tag_249:\n        /* \"#utility.yul\":1738:1745   */\n      0x00\n        /* \"#utility.yul\":1767:1791   */\n      tag_315\n        /* \"#utility.yul\":1785:1790   */\n      dup3\n        /* \"#utility.yul\":1767:1791   */\n      tag_248\n      jump\t// in\n    tag_315:\n        /* \"#utility.yul\":1756:1791   */\n      swap1\n      pop\n        /* \"#utility.yul\":1701:1797   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":1803:1925   */\n    tag_250:\n        /* \"#utility.yul\":1876:1900   */\n      tag_317\n        /* \"#utility.yul\":1894:1899   */\n      dup2\n        /* \"#utility.yul\":1876:1900   */\n      tag_249\n      jump\t// in\n    tag_317:\n        /* \"#utility.yul\":1869:1874   */\n      dup2\n        /* \"#utility.yul\":1866:1901   */\n      eq\n        /* \"#utility.yul\":1856:1919   */\n      tag_318\n      jumpi\n        /* \"#utility.yul\":1915:1916   */\n      0x00\n        /* \"#utility.yul\":1912:1913   */\n      dup1\n        /* \"#utility.yul\":1905:1917   */\n      revert\n        /* \"#utility.yul\":1856:1919   */\n    tag_318:\n        /* \"#utility.yul\":1803:1925   */\n      pop\n      jump\t// out\n        /* \"#utility.yul\":1931:2070   */\n    tag_251:\n        /* \"#utility.yul\":1977:1982   */\n      0x00\n        /* \"#utility.yul\":2015:2021   */\n      dup2\n        /* \"#utility.yul\":2002:2022   */\n      calldataload\n        /* \"#utility.yul\":1993:2022   */\n      swap1\n      pop\n        /* \"#utility.yul\":2031:2064   */\n      tag_320\n        /* \"#utility.yul\":2058:2063   */\n      dup2\n        /* \"#utility.yul\":2031:2064   */\n      tag_250\n      jump\t// in\n    tag_320:\n        /* \"#utility.yul\":1931:2070   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":2076:2153   */\n    tag_252:\n        /* \"#utility.yul\":2113:2120   */\n      0x00\n        /* \"#utility.yul\":2142:2147   */\n      dup2\n        /* \"#utility.yul\":2131:2147   */\n      swap1\n      pop\n        /* \"#utility.yul\":2076:2153   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":2159:2281   */\n    tag_253:\n        /* \"#utility.yul\":2232:2256   */\n      tag_323\n        /* \"#utility.yul\":2250:2255   */\n      dup2\n        /* \"#utility.yul\":2232:2256   */\n      tag_252\n      jump\t// in\n    tag_323:\n        /* \"#utility.yul\":2225:2230   */\n      dup2\n        /* \"#utility.yul\":2222:2257   */\n      eq\n        /* \"#utility.yul\":2212:2275   */\n      tag_324\n      jumpi\n        /* \"#utility.yul\":2271:2272   */\n      0x00\n        /* \"#utility.yul\":2268:2269   */\n      dup1\n        /* \"#utility.yul\":2261:2273   */\n      revert\n        /* \"#utility.yul\":2212:2275   */\n    tag_324:\n        /* \"#utility.yul\":2159:2281   */\n      pop\n      jump\t// out\n        /* \"#utility.yul\":2287:2426   */\n    tag_254:\n        /* \"#utility.yul\":2333:2338   */\n      0x00\n        /* \"#utility.yul\":2371:2377   */\n      dup2\n        /* \"#utility.yul\":2358:2378   */\n      calldataload\n        /* \"#utility.yul\":2349:2378   */\n      swap1\n      pop\n        /* \"#utility.yul\":2387:2420   */\n      tag_326\n        /* \"#utility.yul\":2414:2419   */\n      dup2\n        /* \"#utility.yul\":2387:2420   */\n      tag_253\n      jump\t// in\n    tag_326:\n        /* \"#utility.yul\":2287:2426   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":2432:2906   */\n    tag_28:\n        /* \"#utility.yul\":2500:2506   */\n      0x00\n        /* \"#utility.yul\":2508:2514   */\n      dup1\n        /* \"#utility.yul\":2557:2559   */\n      0x40\n        /* \"#utility.yul\":2545:2554   */\n      dup4\n        /* \"#utility.yul\":2536:2543   */\n      dup6\n        /* \"#utility.yul\":2532:2555   */\n      sub\n        /* \"#utility.yul\":2528:2560   */\n      slt\n        /* \"#utility.yul\":2525:2644   */\n      iszero\n      tag_328\n      jumpi\n        /* \"#utility.yul\":2563:2642   */\n      tag_329\n      tag_246\n      jump\t// in\n    tag_329:\n        /* \"#utility.yul\":2525:2644   */\n    tag_328:\n        /* \"#utility.yul\":2683:2684   */\n      0x00\n        /* \"#utility.yul\":2708:2761   */\n      tag_330\n        /* \"#utility.yul\":2753:2760   */\n      dup6\n        /* \"#utility.yul\":2744:2750   */\n      dup3\n        /* \"#utility.yul\":2733:2742   */\n      dup7\n        /* \"#utility.yul\":2729:2751   */\n      add\n        /* \"#utility.yul\":2708:2761   */\n      tag_251\n      jump\t// in\n    tag_330:\n        /* \"#utility.yul\":2698:2761   */\n      swap3\n      pop\n        /* \"#utility.yul\":2654:2771   */\n      pop\n        /* \"#utility.yul\":2810:2812   */\n      0x20\n        /* \"#utility.yul\":2836:2889   */\n      tag_331\n        /* \"#utility.yul\":2881:2888   */\n      dup6\n        /* \"#utility.yul\":2872:2878   */\n      dup3\n        /* \"#utility.yul\":2861:2870   */\n      dup7\n        /* \"#utility.yul\":2857:2879   */\n      add\n        /* \"#utility.yul\":2836:2889   */\n      tag_254\n      jump\t// in\n    tag_331:\n        /* \"#utility.yul\":2826:2889   */\n      swap2\n      pop\n        /* \"#utility.yul\":2781:2899   */\n      pop\n        /* \"#utility.yul\":2432:2906   */\n      swap3\n      pop\n      swap3\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":2912:3002   */\n    tag_255:\n        /* \"#utility.yul\":2946:2953   */\n      0x00\n        /* \"#utility.yul\":2989:2994   */\n      dup2\n        /* \"#utility.yul\":2982:2995   */\n      iszero\n        /* \"#utility.yul\":2975:2996   */\n      iszero\n        /* \"#utility.yul\":2964:2996   */\n      swap1\n      pop\n        /* \"#utility.yul\":2912:3002   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":3008:3117   */\n    tag_256:\n        /* \"#utility.yul\":3089:3110   */\n      tag_334\n        /* \"#utility.yul\":3104:3109   */\n      dup2\n        /* \"#utility.yul\":3089:3110   */\n      tag_255\n      jump\t// in\n    tag_334:\n        /* \"#utility.yul\":3084:3087   */\n      dup3\n        /* \"#utility.yul\":3077:3111   */\n      mstore\n        /* \"#utility.yul\":3008:3117   */\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":3123:3333   */\n    tag_31:\n        /* \"#utility.yul\":3210:3214   */\n      0x00\n        /* \"#utility.yul\":3248:3250   */\n      0x20\n        /* \"#utility.yul\":3237:3246   */\n      dup3\n        /* \"#utility.yul\":3233:3251   */\n      add\n        /* \"#utility.yul\":3225:3251   */\n      swap1\n      pop\n        /* \"#utility.yul\":3261:3326   */\n      tag_336\n        /* \"#utility.yul\":3323:3324   */\n      0x00\n        /* \"#utility.yul\":3312:3321   */\n      dup4\n        /* \"#utility.yul\":3308:3325   */\n      add\n        /* \"#utility.yul\":3299:3305   */\n      dup5\n        /* \"#utility.yul\":3261:3326   */\n      tag_256\n      jump\t// in\n    tag_336:\n        /* \"#utility.yul\":3123:3333   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":3339:3457   */\n    tag_257:\n        /* \"#utility.yul\":3426:3450   */\n      tag_338\n        /* \"#utility.yul\":3444:3449   */\n      dup2\n        /* \"#utility.yul\":3426:3450   */\n      tag_252\n      jump\t// in\n    tag_338:\n        /* \"#utility.yul\":3421:3424   */\n      dup3\n        /* \"#utility.yul\":3414:3451   */\n      mstore\n        /* \"#utility.yul\":3339:3457   */\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":3463:3685   */\n    tag_35:\n        /* \"#utility.yul\":3556:3560   */\n      0x00\n        /* \"#utility.yul\":3594:3596   */\n      0x20\n        /* \"#utility.yul\":3583:3592   */\n      dup3\n        /* \"#utility.yul\":3579:3597   */\n      add\n        /* \"#utility.yul\":3571:3597   */\n      swap1\n      pop\n        /* \"#utility.yul\":3607:3678   */\n      tag_340\n        /* \"#utility.yul\":3675:3676   */\n      0x00\n        /* \"#utility.yul\":3664:3673   */\n      dup4\n        /* \"#utility.yul\":3660:3677   */\n      add\n        /* \"#utility.yul\":3651:3657   */\n      dup5\n        /* \"#utility.yul\":3607:3678   */\n      tag_257\n      jump\t// in\n    tag_340:\n        /* \"#utility.yul\":3463:3685   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":3691:4310   */\n    tag_38:\n        /* \"#utility.yul\":3768:3774   */\n      0x00\n        /* \"#utility.yul\":3776:3782   */\n      dup1\n        /* \"#utility.yul\":3784:3790   */\n      0x00\n        /* \"#utility.yul\":3833:3835   */\n      0x60\n        /* \"#utility.yul\":3821:3830   */\n      dup5\n        /* \"#utility.yul\":3812:3819   */\n      dup7\n        /* \"#utility.yul\":3808:3831   */\n      sub\n        /* \"#utility.yul\":3804:3836   */\n      slt\n        /* \"#utility.yul\":3801:3920   */\n      iszero\n      tag_342\n      jumpi\n        /* \"#utility.yul\":3839:3918   */\n      tag_343\n      tag_246\n      jump\t// in\n    tag_343:\n        /* \"#utility.yul\":3801:3920   */\n    tag_342:\n        /* \"#utility.yul\":3959:3960   */\n      0x00\n        /* \"#utility.yul\":3984:4037   */\n      tag_344\n        /* \"#utility.yul\":4029:4036   */\n      dup7\n        /* \"#utility.yul\":4020:4026   */\n      dup3\n        /* \"#utility.yul\":4009:4018   */\n      dup8\n        /* \"#utility.yul\":4005:4027   */\n      add\n        /* \"#utility.yul\":3984:4037   */\n      tag_251\n      jump\t// in\n    tag_344:\n        /* \"#utility.yul\":3974:4037   */\n      swap4\n      pop\n        /* \"#utility.yul\":3930:4047   */\n      pop\n        /* \"#utility.yul\":4086:4088   */\n      0x20\n        /* \"#utility.yul\":4112:4165   */\n      tag_345\n        /* \"#utility.yul\":4157:4164   */\n      dup7\n        /* \"#utility.yul\":4148:4154   */\n      dup3\n        /* \"#utility.yul\":4137:4146   */\n      dup8\n        /* \"#utility.yul\":4133:4155   */\n      add\n        /* \"#utility.yul\":4112:4165   */\n      tag_251\n      jump\t// in\n    tag_345:\n        /* \"#utility.yul\":4102:4165   */\n      swap3\n      pop\n        /* \"#utility.yul\":4057:4175   */\n      pop\n        /* \"#utility.yul\":4214:4216   */\n      0x40\n        /* \"#utility.yul\":4240:4293   */\n      tag_346\n        /* \"#utility.yul\":4285:4292   */\n      dup7\n        /* \"#utility.yul\":4276:4282   */\n      dup3\n        /* \"#utility.yul\":4265:4274   */\n      dup8\n        /* \"#utility.yul\":4261:4283   */\n      add\n        /* \"#utility.yul\":4240:4293   */\n      tag_254\n      jump\t// in\n    tag_346:\n        /* \"#utility.yul\":4230:4293   */\n      swap2\n      pop\n        /* \"#utility.yul\":4185:4303   */\n      pop\n        /* \"#utility.yul\":3691:4310   */\n      swap3\n      pop\n      swap3\n      pop\n      swap3\n      jump\t// out\n        /* \"#utility.yul\":4316:4402   */\n    tag_258:\n        /* \"#utility.yul\":4351:4358   */\n      0x00\n        /* \"#utility.yul\":4391:4395   */\n      0xff\n        /* \"#utility.yul\":4384:4389   */\n      dup3\n        /* \"#utility.yul\":4380:4396   */\n      and\n        /* \"#utility.yul\":4369:4396   */\n      swap1\n      pop\n        /* \"#utility.yul\":4316:4402   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":4408:4520   */\n    tag_259:\n        /* \"#utility.yul\":4491:4513   */\n      tag_349\n        /* \"#utility.yul\":4507:4512   */\n      dup2\n        /* \"#utility.yul\":4491:4513   */\n      tag_258\n      jump\t// in\n    tag_349:\n        /* \"#utility.yul\":4486:4489   */\n      dup3\n        /* \"#utility.yul\":4479:4514   */\n      mstore\n        /* \"#utility.yul\":4408:4520   */\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":4526:4740   */\n    tag_44:\n        /* \"#utility.yul\":4615:4619   */\n      0x00\n        /* \"#utility.yul\":4653:4655   */\n      0x20\n        /* \"#utility.yul\":4642:4651   */\n      dup3\n        /* \"#utility.yul\":4638:4656   */\n      add\n        /* \"#utility.yul\":4630:4656   */\n      swap1\n      pop\n        /* \"#utility.yul\":4666:4733   */\n      tag_351\n        /* \"#utility.yul\":4730:4731   */\n      0x00\n        /* \"#utility.yul\":4719:4728   */\n      dup4\n        /* \"#utility.yul\":4715:4732   */\n      add\n        /* \"#utility.yul\":4706:4712   */\n      dup5\n        /* \"#utility.yul\":4666:4733   */\n      tag_259\n      jump\t// in\n    tag_351:\n        /* \"#utility.yul\":4526:4740   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":4746:5075   */\n    tag_49:\n        /* \"#utility.yul\":4805:4811   */\n      0x00\n        /* \"#utility.yul\":4854:4856   */\n      0x20\n        /* \"#utility.yul\":4842:4851   */\n      dup3\n        /* \"#utility.yul\":4833:4840   */\n      dup5\n        /* \"#utility.yul\":4829:4852   */\n      sub\n        /* \"#utility.yul\":4825:4857   */\n      slt\n        /* \"#utility.yul\":4822:4941   */\n      iszero\n      tag_353\n      jumpi\n        /* \"#utility.yul\":4860:4939   */\n      tag_354\n      tag_246\n      jump\t// in\n    tag_354:\n        /* \"#utility.yul\":4822:4941   */\n    tag_353:\n        /* \"#utility.yul\":4980:4981   */\n      0x00\n        /* \"#utility.yul\":5005:5058   */\n      tag_355\n        /* \"#utility.yul\":5050:5057   */\n      dup5\n        /* \"#utility.yul\":5041:5047   */\n      dup3\n        /* \"#utility.yul\":5030:5039   */\n      dup6\n        /* \"#utility.yul\":5026:5048   */\n      add\n        /* \"#utility.yul\":5005:5058   */\n      tag_251\n      jump\t// in\n    tag_355:\n        /* \"#utility.yul\":4995:5058   */\n      swap2\n      pop\n        /* \"#utility.yul\":4951:5068   */\n      pop\n        /* \"#utility.yul\":4746:5075   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":5081:5198   */\n    tag_260:\n        /* \"#utility.yul\":5190:5191   */\n      0x00\n        /* \"#utility.yul\":5187:5188   */\n      dup1\n        /* \"#utility.yul\":5180:5192   */\n      revert\n        /* \"#utility.yul\":5204:5321   */\n    tag_261:\n        /* \"#utility.yul\":5313:5314   */\n      0x00\n        /* \"#utility.yul\":5310:5311   */\n      dup1\n        /* \"#utility.yul\":5303:5315   */\n      revert\n        /* \"#utility.yul\":5327:5444   */\n    tag_262:\n        /* \"#utility.yul\":5436:5437   */\n      0x00\n        /* \"#utility.yul\":5433:5434   */\n      dup1\n        /* \"#utility.yul\":5426:5438   */\n      revert\n        /* \"#utility.yul\":5464:6017   */\n    tag_263:\n        /* \"#utility.yul\":5522:5530   */\n      0x00\n        /* \"#utility.yul\":5532:5538   */\n      dup1\n        /* \"#utility.yul\":5582:5585   */\n      dup4\n        /* \"#utility.yul\":5575:5579   */\n      0x1f\n        /* \"#utility.yul\":5567:5573   */\n      dup5\n        /* \"#utility.yul\":5563:5580   */\n      add\n        /* \"#utility.yul\":5559:5586   */\n      slt\n        /* \"#utility.yul\":5549:5671   */\n      tag_360\n      jumpi\n        /* \"#utility.yul\":5590:5669   */\n      tag_361\n      tag_260\n      jump\t// in\n    tag_361:\n        /* \"#utility.yul\":5549:5671   */\n    tag_360:\n        /* \"#utility.yul\":5703:5709   */\n      dup3\n        /* \"#utility.yul\":5690:5710   */\n      calldataload\n        /* \"#utility.yul\":5680:5710   */\n      swap1\n      pop\n        /* \"#utility.yul\":5733:5751   */\n      0xffffffffffffffff\n        /* \"#utility.yul\":5725:5731   */\n      dup2\n        /* \"#utility.yul\":5722:5752   */\n      gt\n        /* \"#utility.yul\":5719:5836   */\n      iszero\n      tag_362\n      jumpi\n        /* \"#utility.yul\":5755:5834   */\n      tag_363\n      tag_261\n      jump\t// in\n    tag_363:\n        /* \"#utility.yul\":5719:5836   */\n    tag_362:\n        /* \"#utility.yul\":5869:5873   */\n      0x20\n        /* \"#utility.yul\":5861:5867   */\n      dup4\n        /* \"#utility.yul\":5857:5874   */\n      add\n        /* \"#utility.yul\":5845:5874   */\n      swap2\n      pop\n        /* \"#utility.yul\":5923:5926   */\n      dup4\n        /* \"#utility.yul\":5915:5919   */\n      0x01\n        /* \"#utility.yul\":5907:5913   */\n      dup3\n        /* \"#utility.yul\":5903:5920   */\n      mul\n        /* \"#utility.yul\":5893:5901   */\n      dup4\n        /* \"#utility.yul\":5889:5921   */\n      add\n        /* \"#utility.yul\":5886:5927   */\n      gt\n        /* \"#utility.yul\":5883:6011   */\n      iszero\n      tag_364\n      jumpi\n        /* \"#utility.yul\":5930:6009   */\n      tag_365\n      tag_262\n      jump\t// in\n    tag_365:\n        /* \"#utility.yul\":5883:6011   */\n    tag_364:\n        /* \"#utility.yul\":5464:6017   */\n      swap3\n      pop\n      swap3\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":6023:6697   */\n    tag_61:\n        /* \"#utility.yul\":6103:6109   */\n      0x00\n        /* \"#utility.yul\":6111:6117   */\n      dup1\n        /* \"#utility.yul\":6119:6125   */\n      0x00\n        /* \"#utility.yul\":6168:6170   */\n      0x40\n        /* \"#utility.yul\":6156:6165   */\n      dup5\n        /* \"#utility.yul\":6147:6154   */\n      dup7\n        /* \"#utility.yul\":6143:6166   */\n      sub\n        /* \"#utility.yul\":6139:6171   */\n      slt\n        /* \"#utility.yul\":6136:6255   */\n      iszero\n      tag_367\n      jumpi\n        /* \"#utility.yul\":6174:6253   */\n      tag_368\n      tag_246\n      jump\t// in\n    tag_368:\n        /* \"#utility.yul\":6136:6255   */\n    tag_367:\n        /* \"#utility.yul\":6322:6323   */\n      0x00\n        /* \"#utility.yul\":6311:6320   */\n      dup5\n        /* \"#utility.yul\":6307:6324   */\n      add\n        /* \"#utility.yul\":6294:6325   */\n      calldataload\n        /* \"#utility.yul\":6352:6370   */\n      0xffffffffffffffff\n        /* \"#utility.yul\":6344:6350   */\n      dup2\n        /* \"#utility.yul\":6341:6371   */\n      gt\n        /* \"#utility.yul\":6338:6455   */\n      iszero\n      tag_369\n      jumpi\n        /* \"#utility.yul\":6374:6453   */\n      tag_370\n      tag_247\n      jump\t// in\n    tag_370:\n        /* \"#utility.yul\":6338:6455   */\n    tag_369:\n        /* \"#utility.yul\":6487:6552   */\n      tag_371\n        /* \"#utility.yul\":6544:6551   */\n      dup7\n        /* \"#utility.yul\":6535:6541   */\n      dup3\n        /* \"#utility.yul\":6524:6533   */\n      dup8\n        /* \"#utility.yul\":6520:6542   */\n      add\n        /* \"#utility.yul\":6487:6552   */\n      tag_263\n      jump\t// in\n    tag_371:\n        /* \"#utility.yul\":6469:6552   */\n      swap4\n      pop\n      swap4\n      pop\n        /* \"#utility.yul\":6265:6562   */\n      pop\n        /* \"#utility.yul\":6601:6603   */\n      0x20\n        /* \"#utility.yul\":6627:6680   */\n      tag_372\n        /* \"#utility.yul\":6672:6679   */\n      dup7\n        /* \"#utility.yul\":6663:6669   */\n      dup3\n        /* \"#utility.yul\":6652:6661   */\n      dup8\n        /* \"#utility.yul\":6648:6670   */\n      add\n        /* \"#utility.yul\":6627:6680   */\n      tag_254\n      jump\t// in\n    tag_372:\n        /* \"#utility.yul\":6617:6680   */\n      swap2\n      pop\n        /* \"#utility.yul\":6572:6690   */\n      pop\n        /* \"#utility.yul\":6023:6697   */\n      swap3\n      pop\n      swap3\n      pop\n      swap3\n      jump\t// out\n        /* \"#utility.yul\":6703:6811   */\n    tag_264:\n        /* \"#utility.yul\":6785:6786   */\n      0x03\n        /* \"#utility.yul\":6778:6783   */\n      dup2\n        /* \"#utility.yul\":6775:6787   */\n      lt\n        /* \"#utility.yul\":6765:6805   */\n      tag_374\n      jumpi\n        /* \"#utility.yul\":6801:6802   */\n      0x00\n        /* \"#utility.yul\":6798:6799   */\n      dup1\n        /* \"#utility.yul\":6791:6803   */\n      revert\n        /* \"#utility.yul\":6765:6805   */\n    tag_374:\n        /* \"#utility.yul\":6703:6811   */\n      pop\n      jump\t// out\n        /* \"#utility.yul\":6817:6974   */\n    tag_265:\n        /* \"#utility.yul\":6872:6877   */\n      0x00\n        /* \"#utility.yul\":6910:6916   */\n      dup2\n        /* \"#utility.yul\":6897:6917   */\n      calldataload\n        /* \"#utility.yul\":6888:6917   */\n      swap1\n      pop\n        /* \"#utility.yul\":6926:6968   */\n      tag_376\n        /* \"#utility.yul\":6962:6967   */\n      dup2\n        /* \"#utility.yul\":6926:6968   */\n      tag_264\n      jump\t// in\n    tag_376:\n        /* \"#utility.yul\":6817:6974   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":6980:7472   */\n    tag_66:\n        /* \"#utility.yul\":7057:7063   */\n      0x00\n        /* \"#utility.yul\":7065:7071   */\n      dup1\n        /* \"#utility.yul\":7114:7116   */\n      0x40\n        /* \"#utility.yul\":7102:7111   */\n      dup4\n        /* \"#utility.yul\":7093:7100   */\n      dup6\n        /* \"#utility.yul\":7089:7112   */\n      sub\n        /* \"#utility.yul\":7085:7117   */\n      slt\n        /* \"#utility.yul\":7082:7201   */\n      iszero\n      tag_378\n      jumpi\n        /* \"#utility.yul\":7120:7199   */\n      tag_379\n      tag_246\n      jump\t// in\n    tag_379:\n        /* \"#utility.yul\":7082:7201   */\n    tag_378:\n        /* \"#utility.yul\":7240:7241   */\n      0x00\n        /* \"#utility.yul\":7265:7318   */\n      tag_380\n        /* \"#utility.yul\":7310:7317   */\n      dup6\n        /* \"#utility.yul\":7301:7307   */\n      dup3\n        /* \"#utility.yul\":7290:7299   */\n      dup7\n        /* \"#utility.yul\":7286:7308   */\n      add\n        /* \"#utility.yul\":7265:7318   */\n      tag_254\n      jump\t// in\n    tag_380:\n        /* \"#utility.yul\":7255:7318   */\n      swap3\n      pop\n        /* \"#utility.yul\":7211:7328   */\n      pop\n        /* \"#utility.yul\":7367:7369   */\n      0x20\n        /* \"#utility.yul\":7393:7455   */\n      tag_381\n        /* \"#utility.yul\":7447:7454   */\n      dup6\n        /* \"#utility.yul\":7438:7444   */\n      dup3\n        /* \"#utility.yul\":7427:7436   */\n      dup7\n        /* \"#utility.yul\":7423:7445   */\n      add\n        /* \"#utility.yul\":7393:7455   */\n      tag_265\n      jump\t// in\n    tag_381:\n        /* \"#utility.yul\":7383:7455   */\n      swap2\n      pop\n        /* \"#utility.yul\":7338:7465   */\n      pop\n        /* \"#utility.yul\":6980:7472   */\n      swap3\n      pop\n      swap3\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":7478:7807   */\n    tag_73:\n        /* \"#utility.yul\":7537:7543   */\n      0x00\n        /* \"#utility.yul\":7586:7588   */\n      0x20\n        /* \"#utility.yul\":7574:7583   */\n      dup3\n        /* \"#utility.yul\":7565:7572   */\n      dup5\n        /* \"#utility.yul\":7561:7584   */\n      sub\n        /* \"#utility.yul\":7557:7589   */\n      slt\n        /* \"#utility.yul\":7554:7673   */\n      iszero\n      tag_383\n      jumpi\n        /* \"#utility.yul\":7592:7671   */\n      tag_384\n      tag_246\n      jump\t// in\n    tag_384:\n        /* \"#utility.yul\":7554:7673   */\n    tag_383:\n        /* \"#utility.yul\":7712:7713   */\n      0x00\n        /* \"#utility.yul\":7737:7790   */\n      tag_385\n        /* \"#utility.yul\":7782:7789   */\n      dup5\n        /* \"#utility.yul\":7773:7779   */\n      dup3\n        /* \"#utility.yul\":7762:7771   */\n      dup6\n        /* \"#utility.yul\":7758:7780   */\n      add\n        /* \"#utility.yul\":7737:7790   */\n      tag_254\n      jump\t// in\n    tag_385:\n        /* \"#utility.yul\":7727:7790   */\n      swap2\n      pop\n        /* \"#utility.yul\":7683:7800   */\n      pop\n        /* \"#utility.yul\":7478:7807   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":7813:7927   */\n    tag_266:\n        /* \"#utility.yul\":7880:7886   */\n      0x00\n        /* \"#utility.yul\":7914:7919   */\n      dup2\n        /* \"#utility.yul\":7908:7920   */\n      mload\n        /* \"#utility.yul\":7898:7920   */\n      swap1\n      pop\n        /* \"#utility.yul\":7813:7927   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":7933:8107   */\n    tag_267:\n        /* \"#utility.yul\":8022:8033   */\n      0x00\n        /* \"#utility.yul\":8056:8062   */\n      dup3\n        /* \"#utility.yul\":8051:8054   */\n      dup3\n        /* \"#utility.yul\":8044:8063   */\n      mstore\n        /* \"#utility.yul\":8096:8100   */\n      0x20\n        /* \"#utility.yul\":8091:8094   */\n      dup3\n        /* \"#utility.yul\":8087:8101   */\n      add\n        /* \"#utility.yul\":8072:8101   */\n      swap1\n      pop\n        /* \"#utility.yul\":7933:8107   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":8113:8245   */\n    tag_268:\n        /* \"#utility.yul\":8180:8184   */\n      0x00\n        /* \"#utility.yul\":8203:8206   */\n      dup2\n        /* \"#utility.yul\":8195:8206   */\n      swap1\n      pop\n        /* \"#utility.yul\":8233:8237   */\n      0x20\n        /* \"#utility.yul\":8228:8231   */\n      dup3\n        /* \"#utility.yul\":8224:8238   */\n      add\n        /* \"#utility.yul\":8216:8238   */\n      swap1\n      pop\n        /* \"#utility.yul\":8113:8245   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":8251:8359   */\n    tag_269:\n        /* \"#utility.yul\":8328:8352   */\n      tag_390\n        /* \"#utility.yul\":8346:8351   */\n      dup2\n        /* \"#utility.yul\":8328:8352   */\n      tag_249\n      jump\t// in\n    tag_390:\n        /* \"#utility.yul\":8323:8326   */\n      dup3\n        /* \"#utility.yul\":8316:8353   */\n      mstore\n        /* \"#utility.yul\":8251:8359   */\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":8365:8544   */\n    tag_270:\n        /* \"#utility.yul\":8434:8444   */\n      0x00\n        /* \"#utility.yul\":8455:8501   */\n      tag_392\n        /* \"#utility.yul\":8497:8500   */\n      dup4\n        /* \"#utility.yul\":8489:8495   */\n      dup4\n        /* \"#utility.yul\":8455:8501   */\n      tag_269\n      jump\t// in\n    tag_392:\n        /* \"#utility.yul\":8533:8537   */\n      0x20\n        /* \"#utility.yul\":8528:8531   */\n      dup4\n        /* \"#utility.yul\":8524:8538   */\n      add\n        /* \"#utility.yul\":8510:8538   */\n      swap1\n      pop\n        /* \"#utility.yul\":8365:8544   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":8550:8663   */\n    tag_271:\n        /* \"#utility.yul\":8620:8624   */\n      0x00\n        /* \"#utility.yul\":8652:8656   */\n      0x20\n        /* \"#utility.yul\":8647:8650   */\n      dup3\n        /* \"#utility.yul\":8643:8657   */\n      add\n        /* \"#utility.yul\":8635:8657   */\n      swap1\n      pop\n        /* \"#utility.yul\":8550:8663   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":8699:9411   */\n    tag_272:\n        /* \"#utility.yul\":8808:8811   */\n      0x00\n        /* \"#utility.yul\":8837:8891   */\n      tag_395\n        /* \"#utility.yul\":8885:8890   */\n      dup3\n        /* \"#utility.yul\":8837:8891   */\n      tag_266\n      jump\t// in\n    tag_395:\n        /* \"#utility.yul\":8907:8983   */\n      tag_396\n        /* \"#utility.yul\":8976:8982   */\n      dup2\n        /* \"#utility.yul\":8971:8974   */\n      dup6\n        /* \"#utility.yul\":8907:8983   */\n      tag_267\n      jump\t// in\n    tag_396:\n        /* \"#utility.yul\":8900:8983   */\n      swap4\n      pop\n        /* \"#utility.yul\":9007:9063   */\n      tag_397\n        /* \"#utility.yul\":9057:9062   */\n      dup4\n        /* \"#utility.yul\":9007:9063   */\n      tag_268\n      jump\t// in\n    tag_397:\n        /* \"#utility.yul\":9086:9093   */\n      dup1\n        /* \"#utility.yul\":9117:9118   */\n      0x00\n        /* \"#utility.yul\":9102:9386   */\n    tag_398:\n        /* \"#utility.yul\":9127:9133   */\n      dup4\n        /* \"#utility.yul\":9124:9125   */\n      dup2\n        /* \"#utility.yul\":9121:9134   */\n      lt\n        /* \"#utility.yul\":9102:9386   */\n      iszero\n      tag_400\n      jumpi\n        /* \"#utility.yul\":9203:9209   */\n      dup2\n        /* \"#utility.yul\":9197:9210   */\n      mload\n        /* \"#utility.yul\":9230:9293   */\n      tag_401\n        /* \"#utility.yul\":9289:9292   */\n      dup9\n        /* \"#utility.yul\":9274:9287   */\n      dup3\n        /* \"#utility.yul\":9230:9293   */\n      tag_270\n      jump\t// in\n    tag_401:\n        /* \"#utility.yul\":9223:9293   */\n      swap8\n      pop\n        /* \"#utility.yul\":9316:9376   */\n      tag_402\n        /* \"#utility.yul\":9369:9375   */\n      dup4\n        /* \"#utility.yul\":9316:9376   */\n      tag_271\n      jump\t// in\n    tag_402:\n        /* \"#utility.yul\":9306:9376   */\n      swap3\n      pop\n        /* \"#utility.yul\":9162:9386   */\n      pop\n        /* \"#utility.yul\":9149:9150   */\n      0x01\n        /* \"#utility.yul\":9146:9147   */\n      dup2\n        /* \"#utility.yul\":9142:9151   */\n      add\n        /* \"#utility.yul\":9137:9151   */\n      swap1\n      pop\n        /* \"#utility.yul\":9102:9386   */\n      jump(tag_398)\n    tag_400:\n        /* \"#utility.yul\":9106:9120   */\n      pop\n        /* \"#utility.yul\":9402:9405   */\n      dup6\n        /* \"#utility.yul\":9395:9405   */\n      swap4\n      pop\n        /* \"#utility.yul\":8813:9411   */\n      pop\n      pop\n      pop\n        /* \"#utility.yul\":8699:9411   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":9417:9576   */\n    tag_273:\n        /* \"#utility.yul\":9491:9502   */\n      0x00\n        /* \"#utility.yul\":9525:9531   */\n      dup3\n        /* \"#utility.yul\":9520:9523   */\n      dup3\n        /* \"#utility.yul\":9513:9532   */\n      mstore\n        /* \"#utility.yul\":9565:9569   */\n      0x20\n        /* \"#utility.yul\":9560:9563   */\n      dup3\n        /* \"#utility.yul\":9556:9570   */\n      add\n        /* \"#utility.yul\":9541:9570   */\n      swap1\n      pop\n        /* \"#utility.yul\":9417:9576   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":9582:9939   */\n    tag_274:\n        /* \"#utility.yul\":9660:9663   */\n      0x00\n        /* \"#utility.yul\":9688:9727   */\n      tag_405\n        /* \"#utility.yul\":9721:9726   */\n      dup3\n        /* \"#utility.yul\":9688:9727   */\n      tag_240\n      jump\t// in\n    tag_405:\n        /* \"#utility.yul\":9743:9804   */\n      tag_406\n        /* \"#utility.yul\":9797:9803   */\n      dup2\n        /* \"#utility.yul\":9792:9795   */\n      dup6\n        /* \"#utility.yul\":9743:9804   */\n      tag_273\n      jump\t// in\n    tag_406:\n        /* \"#utility.yul\":9736:9804   */\n      swap4\n      pop\n        /* \"#utility.yul\":9813:9878   */\n      tag_407\n        /* \"#utility.yul\":9871:9877   */\n      dup2\n        /* \"#utility.yul\":9866:9869   */\n      dup6\n        /* \"#utility.yul\":9859:9863   */\n      0x20\n        /* \"#utility.yul\":9852:9857   */\n      dup7\n        /* \"#utility.yul\":9848:9864   */\n      add\n        /* \"#utility.yul\":9813:9878   */\n      tag_242\n      jump\t// in\n    tag_407:\n        /* \"#utility.yul\":9903:9932   */\n      tag_408\n        /* \"#utility.yul\":9925:9931   */\n      dup2\n        /* \"#utility.yul\":9903:9932   */\n      tag_243\n      jump\t// in\n    tag_408:\n        /* \"#utility.yul\":9898:9901   */\n      dup5\n        /* \"#utility.yul\":9894:9933   */\n      add\n        /* \"#utility.yul\":9887:9933   */\n      swap2\n      pop\n        /* \"#utility.yul\":9664:9939   */\n      pop\n        /* \"#utility.yul\":9582:9939   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":9945:10053   */\n    tag_275:\n        /* \"#utility.yul\":10022:10046   */\n      tag_410\n        /* \"#utility.yul\":10040:10045   */\n      dup2\n        /* \"#utility.yul\":10022:10046   */\n      tag_252\n      jump\t// in\n    tag_410:\n        /* \"#utility.yul\":10017:10020   */\n      dup3\n        /* \"#utility.yul\":10010:10047   */\n      mstore\n        /* \"#utility.yul\":9945:10053   */\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":10059:10158   */\n    tag_276:\n        /* \"#utility.yul\":10130:10151   */\n      tag_412\n        /* \"#utility.yul\":10145:10150   */\n      dup2\n        /* \"#utility.yul\":10130:10151   */\n      tag_255\n      jump\t// in\n    tag_412:\n        /* \"#utility.yul\":10125:10128   */\n      dup3\n        /* \"#utility.yul\":10118:10152   */\n      mstore\n        /* \"#utility.yul\":10059:10158   */\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":10250:12224   */\n    tag_277:\n        /* \"#utility.yul\":10385:10388   */\n      0x00\n        /* \"#utility.yul\":10421:10427   */\n      0x0120\n        /* \"#utility.yul\":10416:10419   */\n      dup4\n        /* \"#utility.yul\":10412:10428   */\n      add\n        /* \"#utility.yul\":10512:10516   */\n      0x00\n        /* \"#utility.yul\":10505:10510   */\n      dup4\n        /* \"#utility.yul\":10501:10517   */\n      add\n        /* \"#utility.yul\":10495:10518   */\n      mload\n        /* \"#utility.yul\":10565:10568   */\n      dup5\n        /* \"#utility.yul\":10559:10563   */\n      dup3\n        /* \"#utility.yul\":10555:10569   */\n      sub\n        /* \"#utility.yul\":10548:10552   */\n      0x00\n        /* \"#utility.yul\":10543:10546   */\n      dup7\n        /* \"#utility.yul\":10539:10553   */\n      add\n        /* \"#utility.yul\":10532:10570   */\n      mstore\n        /* \"#utility.yul\":10591:10694   */\n      tag_414\n        /* \"#utility.yul\":10689:10693   */\n      dup3\n        /* \"#utility.yul\":10675:10687   */\n      dup3\n        /* \"#utility.yul\":10591:10694   */\n      tag_272\n      jump\t// in\n    tag_414:\n        /* \"#utility.yul\":10583:10694   */\n      swap2\n      pop\n        /* \"#utility.yul\":10438:10705   */\n      pop\n        /* \"#utility.yul\":10792:10796   */\n      0x20\n        /* \"#utility.yul\":10785:10790   */\n      dup4\n        /* \"#utility.yul\":10781:10797   */\n      add\n        /* \"#utility.yul\":10775:10798   */\n      mload\n        /* \"#utility.yul\":10845:10848   */\n      dup5\n        /* \"#utility.yul\":10839:10843   */\n      dup3\n        /* \"#utility.yul\":10835:10849   */\n      sub\n        /* \"#utility.yul\":10828:10832   */\n      0x20\n        /* \"#utility.yul\":10823:10826   */\n      dup7\n        /* \"#utility.yul\":10819:10833   */\n      add\n        /* \"#utility.yul\":10812:10850   */\n      mstore\n        /* \"#utility.yul\":10871:10944   */\n      tag_415\n        /* \"#utility.yul\":10939:10943   */\n      dup3\n        /* \"#utility.yul\":10925:10937   */\n      dup3\n        /* \"#utility.yul\":10871:10944   */\n      tag_274\n      jump\t// in\n    tag_415:\n        /* \"#utility.yul\":10863:10944   */\n      swap2\n      pop\n        /* \"#utility.yul\":10715:10955   */\n      pop\n        /* \"#utility.yul\":11039:11043   */\n      0x40\n        /* \"#utility.yul\":11032:11037   */\n      dup4\n        /* \"#utility.yul\":11028:11044   */\n      add\n        /* \"#utility.yul\":11022:11045   */\n      mload\n        /* \"#utility.yul\":11058:11121   */\n      tag_416\n        /* \"#utility.yul\":11115:11119   */\n      0x40\n        /* \"#utility.yul\":11110:11113   */\n      dup7\n        /* \"#utility.yul\":11106:11120   */\n      add\n        /* \"#utility.yul\":11092:11104   */\n      dup3\n        /* \"#utility.yul\":11058:11121   */\n      tag_275\n      jump\t// in\n    tag_416:\n        /* \"#utility.yul\":10965:11131   */\n      pop\n        /* \"#utility.yul\":11219:11223   */\n      0x60\n        /* \"#utility.yul\":11212:11217   */\n      dup4\n        /* \"#utility.yul\":11208:11224   */\n      add\n        /* \"#utility.yul\":11202:11225   */\n      mload\n        /* \"#utility.yul\":11238:11301   */\n      tag_417\n        /* \"#utility.yul\":11295:11299   */\n      0x60\n        /* \"#utility.yul\":11290:11293   */\n      dup7\n        /* \"#utility.yul\":11286:11300   */\n      add\n        /* \"#utility.yul\":11272:11284   */\n      dup3\n        /* \"#utility.yul\":11238:11301   */\n      tag_275\n      jump\t// in\n    tag_417:\n        /* \"#utility.yul\":11141:11311   */\n      pop\n        /* \"#utility.yul\":11397:11401   */\n      0x80\n        /* \"#utility.yul\":11390:11395   */\n      dup4\n        /* \"#utility.yul\":11386:11402   */\n      add\n        /* \"#utility.yul\":11380:11403   */\n      mload\n        /* \"#utility.yul\":11416:11479   */\n      tag_418\n        /* \"#utility.yul\":11473:11477   */\n      0x80\n        /* \"#utility.yul\":11468:11471   */\n      dup7\n        /* \"#utility.yul\":11464:11478   */\n      add\n        /* \"#utility.yul\":11450:11462   */\n      dup3\n        /* \"#utility.yul\":11416:11479   */\n      tag_275\n      jump\t// in\n    tag_418:\n        /* \"#utility.yul\":11321:11489   */\n      pop\n        /* \"#utility.yul\":11579:11583   */\n      0xa0\n        /* \"#utility.yul\":11572:11577   */\n      dup4\n        /* \"#utility.yul\":11568:11584   */\n      add\n        /* \"#utility.yul\":11562:11585   */\n      mload\n        /* \"#utility.yul\":11598:11661   */\n      tag_419\n        /* \"#utility.yul\":11655:11659   */\n      0xa0\n        /* \"#utility.yul\":11650:11653   */\n      dup7\n        /* \"#utility.yul\":11646:11660   */\n      add\n        /* \"#utility.yul\":11632:11644   */\n      dup3\n        /* \"#utility.yul\":11598:11661   */\n      tag_275\n      jump\t// in\n    tag_419:\n        /* \"#utility.yul\":11499:11671   */\n      pop\n        /* \"#utility.yul\":11761:11765   */\n      0xc0\n        /* \"#utility.yul\":11754:11759   */\n      dup4\n        /* \"#utility.yul\":11750:11766   */\n      add\n        /* \"#utility.yul\":11744:11767   */\n      mload\n        /* \"#utility.yul\":11780:11843   */\n      tag_420\n        /* \"#utility.yul\":11837:11841   */\n      0xc0\n        /* \"#utility.yul\":11832:11835   */\n      dup7\n        /* \"#utility.yul\":11828:11842   */\n      add\n        /* \"#utility.yul\":11814:11826   */\n      dup3\n        /* \"#utility.yul\":11780:11843   */\n      tag_275\n      jump\t// in\n    tag_420:\n        /* \"#utility.yul\":11681:11853   */\n      pop\n        /* \"#utility.yul\":11937:11941   */\n      0xe0\n        /* \"#utility.yul\":11930:11935   */\n      dup4\n        /* \"#utility.yul\":11926:11942   */\n      add\n        /* \"#utility.yul\":11920:11943   */\n      mload\n        /* \"#utility.yul\":11956:12013   */\n      tag_421\n        /* \"#utility.yul\":12007:12011   */\n      0xe0\n        /* \"#utility.yul\":12002:12005   */\n      dup7\n        /* \"#utility.yul\":11998:12012   */\n      add\n        /* \"#utility.yul\":11984:11996   */\n      dup3\n        /* \"#utility.yul\":11956:12013   */\n      tag_276\n      jump\t// in\n    tag_421:\n        /* \"#utility.yul\":11863:12023   */\n      pop\n        /* \"#utility.yul\":12107:12113   */\n      0x0100\n        /* \"#utility.yul\":12100:12105   */\n      dup4\n        /* \"#utility.yul\":12096:12114   */\n      add\n        /* \"#utility.yul\":12090:12115   */\n      mload\n        /* \"#utility.yul\":12128:12187   */\n      tag_422\n        /* \"#utility.yul\":12179:12185   */\n      0x0100\n        /* \"#utility.yul\":12174:12177   */\n      dup7\n        /* \"#utility.yul\":12170:12186   */\n      add\n        /* \"#utility.yul\":12156:12168   */\n      dup3\n        /* \"#utility.yul\":12128:12187   */\n      tag_276\n      jump\t// in\n    tag_422:\n        /* \"#utility.yul\":12033:12197   */\n      pop\n        /* \"#utility.yul\":12214:12218   */\n      dup1\n        /* \"#utility.yul\":12207:12218   */\n      swap2\n      pop\n        /* \"#utility.yul\":10390:12224   */\n      pop\n        /* \"#utility.yul\":10250:12224   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":12230:12635   */\n    tag_76:\n        /* \"#utility.yul\":12389:12393   */\n      0x00\n        /* \"#utility.yul\":12427:12429   */\n      0x20\n        /* \"#utility.yul\":12416:12425   */\n      dup3\n        /* \"#utility.yul\":12412:12430   */\n      add\n        /* \"#utility.yul\":12404:12430   */\n      swap1\n      pop\n        /* \"#utility.yul\":12476:12485   */\n      dup2\n        /* \"#utility.yul\":12470:12474   */\n      dup2\n        /* \"#utility.yul\":12466:12486   */\n      sub\n        /* \"#utility.yul\":12462:12463   */\n      0x00\n        /* \"#utility.yul\":12451:12460   */\n      dup4\n        /* \"#utility.yul\":12447:12464   */\n      add\n        /* \"#utility.yul\":12440:12487   */\n      mstore\n        /* \"#utility.yul\":12504:12628   */\n      tag_424\n        /* \"#utility.yul\":12623:12627   */\n      dup2\n        /* \"#utility.yul\":12614:12620   */\n      dup5\n        /* \"#utility.yul\":12504:12628   */\n      tag_277\n      jump\t// in\n    tag_424:\n        /* \"#utility.yul\":12496:12628   */\n      swap1\n      pop\n        /* \"#utility.yul\":12230:12635   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":12641:13115   */\n    tag_86:\n        /* \"#utility.yul\":12709:12715   */\n      0x00\n        /* \"#utility.yul\":12717:12723   */\n      dup1\n        /* \"#utility.yul\":12766:12768   */\n      0x40\n        /* \"#utility.yul\":12754:12763   */\n      dup4\n        /* \"#utility.yul\":12745:12752   */\n      dup6\n        /* \"#utility.yul\":12741:12764   */\n      sub\n        /* \"#utility.yul\":12737:12769   */\n      slt\n        /* \"#utility.yul\":12734:12853   */\n      iszero\n      tag_426\n      jumpi\n        /* \"#utility.yul\":12772:12851   */\n      tag_427\n      tag_246\n      jump\t// in\n    tag_427:\n        /* \"#utility.yul\":12734:12853   */\n    tag_426:\n        /* \"#utility.yul\":12892:12893   */\n      0x00\n        /* \"#utility.yul\":12917:12970   */\n      tag_428\n        /* \"#utility.yul\":12962:12969   */\n      dup6\n        /* \"#utility.yul\":12953:12959   */\n      dup3\n        /* \"#utility.yul\":12942:12951   */\n      dup7\n        /* \"#utility.yul\":12938:12960   */\n      add\n        /* \"#utility.yul\":12917:12970   */\n      tag_251\n      jump\t// in\n    tag_428:\n        /* \"#utility.yul\":12907:12970   */\n      swap3\n      pop\n        /* \"#utility.yul\":12863:12980   */\n      pop\n        /* \"#utility.yul\":13019:13021   */\n      0x20\n        /* \"#utility.yul\":13045:13098   */\n      tag_429\n        /* \"#utility.yul\":13090:13097   */\n      dup6\n        /* \"#utility.yul\":13081:13087   */\n      dup3\n        /* \"#utility.yul\":13070:13079   */\n      dup7\n        /* \"#utility.yul\":13066:13088   */\n      add\n        /* \"#utility.yul\":13045:13098   */\n      tag_251\n      jump\t// in\n    tag_429:\n        /* \"#utility.yul\":13035:13098   */\n      swap2\n      pop\n        /* \"#utility.yul\":12990:13108   */\n      pop\n        /* \"#utility.yul\":12641:13115   */\n      swap3\n      pop\n      swap3\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":13121:13301   */\n    tag_278:\n        /* \"#utility.yul\":13169:13246   */\n      0x4e487b7100000000000000000000000000000000000000000000000000000000\n        /* \"#utility.yul\":13166:13167   */\n      0x00\n        /* \"#utility.yul\":13159:13247   */\n      mstore\n        /* \"#utility.yul\":13266:13270   */\n      0x22\n        /* \"#utility.yul\":13263:13264   */\n      0x04\n        /* \"#utility.yul\":13256:13271   */\n      mstore\n        /* \"#utility.yul\":13290:13294   */\n      0x24\n        /* \"#utility.yul\":13287:13288   */\n      0x00\n        /* \"#utility.yul\":13280:13295   */\n      revert\n        /* \"#utility.yul\":13307:13627   */\n    tag_91:\n        /* \"#utility.yul\":13351:13357   */\n      0x00\n        /* \"#utility.yul\":13388:13389   */\n      0x02\n        /* \"#utility.yul\":13382:13386   */\n      dup3\n        /* \"#utility.yul\":13378:13390   */\n      div\n        /* \"#utility.yul\":13368:13390   */\n      swap1\n      pop\n        /* \"#utility.yul\":13435:13436   */\n      0x01\n        /* \"#utility.yul\":13429:13433   */\n      dup3\n        /* \"#utility.yul\":13425:13437   */\n      and\n        /* \"#utility.yul\":13456:13474   */\n      dup1\n        /* \"#utility.yul\":13446:13527   */\n      tag_432\n      jumpi\n        /* \"#utility.yul\":13512:13516   */\n      0x7f\n        /* \"#utility.yul\":13504:13510   */\n      dup3\n        /* \"#utility.yul\":13500:13517   */\n      and\n        /* \"#utility.yul\":13490:13517   */\n      swap2\n      pop\n        /* \"#utility.yul\":13446:13527   */\n    tag_432:\n        /* \"#utility.yul\":13574:13576   */\n      0x20\n        /* \"#utility.yul\":13566:13572   */\n      dup3\n        /* \"#utility.yul\":13563:13577   */\n      lt\n        /* \"#utility.yul\":13543:13561   */\n      dup2\n        /* \"#utility.yul\":13540:13578   */\n      sub\n        /* \"#utility.yul\":13537:13621   */\n      tag_433\n      jumpi\n        /* \"#utility.yul\":13593:13611   */\n      tag_434\n      tag_278\n      jump\t// in\n    tag_434:\n        /* \"#utility.yul\":13537:13621   */\n    tag_433:\n        /* \"#utility.yul\":13358:13627   */\n      pop\n        /* \"#utility.yul\":13307:13627   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":13633:13813   */\n    tag_279:\n        /* \"#utility.yul\":13681:13758   */\n      0x4e487b7100000000000000000000000000000000000000000000000000000000\n        /* \"#utility.yul\":13678:13679   */\n      0x00\n        /* \"#utility.yul\":13671:13759   */\n      mstore\n        /* \"#utility.yul\":13778:13782   */\n      0x11\n        /* \"#utility.yul\":13775:13776   */\n      0x04\n        /* \"#utility.yul\":13768:13783   */\n      mstore\n        /* \"#utility.yul\":13802:13806   */\n      0x24\n        /* \"#utility.yul\":13799:13800   */\n      0x00\n        /* \"#utility.yul\":13792:13807   */\n      revert\n        /* \"#utility.yul\":13819:14010   */\n    tag_112:\n        /* \"#utility.yul\":13859:13862   */\n      0x00\n        /* \"#utility.yul\":13878:13898   */\n      tag_437\n        /* \"#utility.yul\":13896:13897   */\n      dup3\n        /* \"#utility.yul\":13878:13898   */\n      tag_252\n      jump\t// in\n    tag_437:\n        /* \"#utility.yul\":13873:13898   */\n      swap2\n      pop\n        /* \"#utility.yul\":13912:13932   */\n      tag_438\n        /* \"#utility.yul\":13930:13931   */\n      dup4\n        /* \"#utility.yul\":13912:13932   */\n      tag_252\n      jump\t// in\n    tag_438:\n        /* \"#utility.yul\":13907:13932   */\n      swap3\n      pop\n        /* \"#utility.yul\":13955:13956   */\n      dup3\n        /* \"#utility.yul\":13952:13953   */\n      dup3\n        /* \"#utility.yul\":13948:13957   */\n      add\n        /* \"#utility.yul\":13941:13957   */\n      swap1\n      pop\n        /* \"#utility.yul\":13976:13979   */\n      dup1\n        /* \"#utility.yul\":13973:13974   */\n      dup3\n        /* \"#utility.yul\":13970:13980   */\n      gt\n        /* \"#utility.yul\":13967:14003   */\n      iszero\n      tag_439\n      jumpi\n        /* \"#utility.yul\":13983:14001   */\n      tag_440\n      tag_279\n      jump\t// in\n    tag_440:\n        /* \"#utility.yul\":13967:14003   */\n    tag_439:\n        /* \"#utility.yul\":13819:14010   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":14016:14113   */\n    tag_280:\n        /* \"#utility.yul\":14075:14081   */\n      0x00\n        /* \"#utility.yul\":14103:14106   */\n      dup3\n        /* \"#utility.yul\":14093:14106   */\n      swap1\n      pop\n        /* \"#utility.yul\":14016:14113   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":14119:14299   */\n    tag_281:\n        /* \"#utility.yul\":14167:14244   */\n      0x4e487b7100000000000000000000000000000000000000000000000000000000\n        /* \"#utility.yul\":14164:14165   */\n      0x00\n        /* \"#utility.yul\":14157:14245   */\n      mstore\n        /* \"#utility.yul\":14264:14268   */\n      0x41\n        /* \"#utility.yul\":14261:14262   */\n      0x04\n        /* \"#utility.yul\":14254:14269   */\n      mstore\n        /* \"#utility.yul\":14288:14292   */\n      0x24\n        /* \"#utility.yul\":14285:14286   */\n      0x00\n        /* \"#utility.yul\":14278:14293   */\n      revert\n        /* \"#utility.yul\":14305:14446   */\n    tag_282:\n        /* \"#utility.yul\":14354:14358   */\n      0x00\n        /* \"#utility.yul\":14377:14380   */\n      dup2\n        /* \"#utility.yul\":14369:14380   */\n      swap1\n      pop\n        /* \"#utility.yul\":14400:14403   */\n      dup2\n        /* \"#utility.yul\":14397:14398   */\n      0x00\n        /* \"#utility.yul\":14390:14404   */\n      mstore\n        /* \"#utility.yul\":14434:14438   */\n      0x20\n        /* \"#utility.yul\":14431:14432   */\n      0x00\n        /* \"#utility.yul\":14421:14439   */\n      keccak256\n        /* \"#utility.yul\":14413:14439   */\n      swap1\n      pop\n        /* \"#utility.yul\":14305:14446   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":14452:14545   */\n    tag_283:\n        /* \"#utility.yul\":14489:14495   */\n      0x00\n        /* \"#utility.yul\":14536:14538   */\n      0x20\n        /* \"#utility.yul\":14531:14533   */\n      0x1f\n        /* \"#utility.yul\":14524:14529   */\n      dup4\n        /* \"#utility.yul\":14520:14534   */\n      add\n        /* \"#utility.yul\":14516:14539   */\n      div\n        /* \"#utility.yul\":14506:14539   */\n      swap1\n      pop\n        /* \"#utility.yul\":14452:14545   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":14551:14658   */\n    tag_284:\n        /* \"#utility.yul\":14595:14603   */\n      0x00\n        /* \"#utility.yul\":14645:14650   */\n      dup3\n        /* \"#utility.yul\":14639:14643   */\n      dup3\n        /* \"#utility.yul\":14635:14651   */\n      shl\n        /* \"#utility.yul\":14614:14651   */\n      swap1\n      pop\n        /* \"#utility.yul\":14551:14658   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":14664:15057   */\n    tag_285:\n        /* \"#utility.yul\":14733:14739   */\n      0x00\n        /* \"#utility.yul\":14783:14784   */\n      0x08\n        /* \"#utility.yul\":14771:14781   */\n      dup4\n        /* \"#utility.yul\":14767:14785   */\n      mul\n        /* \"#utility.yul\":14806:14903   */\n      tag_447\n        /* \"#utility.yul\":14836:14902   */\n      0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff\n        /* \"#utility.yul\":14825:14834   */\n      dup3\n        /* \"#utility.yul\":14806:14903   */\n      tag_284\n      jump\t// in\n    tag_447:\n        /* \"#utility.yul\":14924:14963   */\n      tag_448\n        /* \"#utility.yul\":14954:14962   */\n      dup7\n        /* \"#utility.yul\":14943:14952   */\n      dup4\n        /* \"#utility.yul\":14924:14963   */\n      tag_284\n      jump\t// in\n    tag_448:\n        /* \"#utility.yul\":14912:14963   */\n      swap6\n      pop\n        /* \"#utility.yul\":14996:15000   */\n      dup1\n        /* \"#utility.yul\":14992:15001   */\n      not\n        /* \"#utility.yul\":14985:14990   */\n      dup5\n        /* \"#utility.yul\":14981:15002   */\n      and\n        /* \"#utility.yul\":14972:15002   */\n      swap4\n      pop\n        /* \"#utility.yul\":15045:15049   */\n      dup1\n        /* \"#utility.yul\":15035:15043   */\n      dup7\n        /* \"#utility.yul\":15031:15050   */\n      and\n        /* \"#utility.yul\":15024:15029   */\n      dup5\n        /* \"#utility.yul\":15021:15051   */\n      or\n        /* \"#utility.yul\":15011:15051   */\n      swap3\n      pop\n        /* \"#utility.yul\":14740:15057   */\n      pop\n      pop\n        /* \"#utility.yul\":14664:15057   */\n      swap4\n      swap3\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":15063:15123   */\n    tag_286:\n        /* \"#utility.yul\":15091:15094   */\n      0x00\n        /* \"#utility.yul\":15112:15117   */\n      dup2\n        /* \"#utility.yul\":15105:15117   */\n      swap1\n      pop\n        /* \"#utility.yul\":15063:15123   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":15129:15271   */\n    tag_287:\n        /* \"#utility.yul\":15179:15188   */\n      0x00\n        /* \"#utility.yul\":15212:15265   */\n      tag_451\n        /* \"#utility.yul\":15230:15264   */\n      tag_452\n        /* \"#utility.yul\":15239:15263   */\n      tag_453\n        /* \"#utility.yul\":15257:15262   */\n      dup5\n        /* \"#utility.yul\":15239:15263   */\n      tag_252\n      jump\t// in\n    tag_453:\n        /* \"#utility.yul\":15230:15264   */\n      tag_286\n      jump\t// in\n    tag_452:\n        /* \"#utility.yul\":15212:15265   */\n      tag_252\n      jump\t// in\n    tag_451:\n        /* \"#utility.yul\":15199:15265   */\n      swap1\n      pop\n        /* \"#utility.yul\":15129:15271   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":15277:15352   */\n    tag_288:\n        /* \"#utility.yul\":15320:15323   */\n      0x00\n        /* \"#utility.yul\":15341:15346   */\n      dup2\n        /* \"#utility.yul\":15334:15346   */\n      swap1\n      pop\n        /* \"#utility.yul\":15277:15352   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":15358:15627   */\n    tag_289:\n        /* \"#utility.yul\":15468:15507   */\n      tag_456\n        /* \"#utility.yul\":15499:15506   */\n      dup4\n        /* \"#utility.yul\":15468:15507   */\n      tag_287\n      jump\t// in\n    tag_456:\n        /* \"#utility.yul\":15529:15620   */\n      tag_457\n        /* \"#utility.yul\":15578:15619   */\n      tag_458\n        /* \"#utility.yul\":15602:15618   */\n      dup3\n        /* \"#utility.yul\":15578:15619   */\n      tag_288\n      jump\t// in\n    tag_458:\n        /* \"#utility.yul\":15570:15576   */\n      dup5\n        /* \"#utility.yul\":15563:15567   */\n      dup5\n        /* \"#utility.yul\":15557:15568   */\n      sload\n        /* \"#utility.yul\":15529:15620   */\n      tag_285\n      jump\t// in\n    tag_457:\n        /* \"#utility.yul\":15523:15527   */\n      dup3\n        /* \"#utility.yul\":15516:15621   */\n      sstore\n        /* \"#utility.yul\":15434:15627   */\n      pop\n        /* \"#utility.yul\":15358:15627   */\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":15633:15706   */\n    tag_290:\n        /* \"#utility.yul\":15678:15681   */\n      0x00\n        /* \"#utility.yul\":15633:15706   */\n      swap1\n      jump\t// out\n        /* \"#utility.yul\":15712:15901   */\n    tag_291:\n        /* \"#utility.yul\":15789:15821   */\n      tag_461\n      tag_290\n      jump\t// in\n    tag_461:\n        /* \"#utility.yul\":15830:15895   */\n      tag_462\n        /* \"#utility.yul\":15888:15894   */\n      dup2\n        /* \"#utility.yul\":15880:15886   */\n      dup5\n        /* \"#utility.yul\":15874:15878   */\n      dup5\n        /* \"#utility.yul\":15830:15895   */\n      tag_289\n      jump\t// in\n    tag_462:\n        /* \"#utility.yul\":15765:15901   */\n      pop\n        /* \"#utility.yul\":15712:15901   */\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":15907:16093   */\n    tag_292:\n        /* \"#utility.yul\":15967:16087   */\n    tag_464:\n        /* \"#utility.yul\":15984:15987   */\n      dup2\n        /* \"#utility.yul\":15977:15982   */\n      dup2\n        /* \"#utility.yul\":15974:15988   */\n      lt\n        /* \"#utility.yul\":15967:16087   */\n      iszero\n      tag_466\n      jumpi\n        /* \"#utility.yul\":16038:16077   */\n      tag_467\n        /* \"#utility.yul\":16075:16076   */\n      0x00\n        /* \"#utility.yul\":16068:16073   */\n      dup3\n        /* \"#utility.yul\":16038:16077   */\n      tag_291\n      jump\t// in\n    tag_467:\n        /* \"#utility.yul\":16011:16012   */\n      0x01\n        /* \"#utility.yul\":16004:16009   */\n      dup2\n        /* \"#utility.yul\":16000:16013   */\n      add\n        /* \"#utility.yul\":15991:16013   */\n      swap1\n      pop\n        /* \"#utility.yul\":15967:16087   */\n      jump(tag_464)\n    tag_466:\n        /* \"#utility.yul\":15907:16093   */\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":16099:16642   */\n    tag_293:\n        /* \"#utility.yul\":16200:16202   */\n      0x1f\n        /* \"#utility.yul\":16195:16198   */\n      dup3\n        /* \"#utility.yul\":16192:16203   */\n      gt\n        /* \"#utility.yul\":16189:16635   */\n      iszero\n      tag_469\n      jumpi\n        /* \"#utility.yul\":16234:16272   */\n      tag_470\n        /* \"#utility.yul\":16266:16271   */\n      dup2\n        /* \"#utility.yul\":16234:16272   */\n      tag_282\n      jump\t// in\n    tag_470:\n        /* \"#utility.yul\":16318:16347   */\n      tag_471\n        /* \"#utility.yul\":16336:16346   */\n      dup5\n        /* \"#utility.yul\":16318:16347   */\n      tag_283\n      jump\t// in\n    tag_471:\n        /* \"#utility.yul\":16308:16316   */\n      dup2\n        /* \"#utility.yul\":16304:16348   */\n      add\n        /* \"#utility.yul\":16501:16503   */\n      0x20\n        /* \"#utility.yul\":16489:16499   */\n      dup6\n        /* \"#utility.yul\":16486:16504   */\n      lt\n        /* \"#utility.yul\":16483:16532   */\n      iszero\n      tag_472\n      jumpi\n        /* \"#utility.yul\":16522:16530   */\n      dup2\n        /* \"#utility.yul\":16507:16530   */\n      swap1\n      pop\n        /* \"#utility.yul\":16483:16532   */\n    tag_472:\n        /* \"#utility.yul\":16545:16625   */\n      tag_473\n        /* \"#utility.yul\":16601:16623   */\n      tag_474\n        /* \"#utility.yul\":16619:16622   */\n      dup6\n        /* \"#utility.yul\":16601:16623   */\n      tag_283\n      jump\t// in\n    tag_474:\n        /* \"#utility.yul\":16591:16599   */\n      dup4\n        /* \"#utility.yul\":16587:16624   */\n      add\n        /* \"#utility.yul\":16574:16585   */\n      dup3\n        /* \"#utility.yul\":16545:16625   */\n      tag_292\n      jump\t// in\n    tag_473:\n        /* \"#utility.yul\":16204:16635   */\n      pop\n      pop\n        /* \"#utility.yul\":16189:16635   */\n    tag_469:\n        /* \"#utility.yul\":16099:16642   */\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":16648:16765   */\n    tag_294:\n        /* \"#utility.yul\":16702:16710   */\n      0x00\n        /* \"#utility.yul\":16752:16757   */\n      dup3\n        /* \"#utility.yul\":16746:16750   */\n      dup3\n        /* \"#utility.yul\":16742:16758   */\n      shr\n        /* \"#utility.yul\":16721:16758   */\n      swap1\n      pop\n        /* \"#utility.yul\":16648:16765   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":16771:16940   */\n    tag_295:\n        /* \"#utility.yul\":16815:16821   */\n      0x00\n        /* \"#utility.yul\":16848:16899   */\n      tag_477\n        /* \"#utility.yul\":16896:16897   */\n      0x00\n        /* \"#utility.yul\":16892:16898   */\n      not\n        /* \"#utility.yul\":16884:16889   */\n      dup5\n        /* \"#utility.yul\":16881:16882   */\n      0x08\n        /* \"#utility.yul\":16877:16890   */\n      mul\n        /* \"#utility.yul\":16848:16899   */\n      tag_294\n      jump\t// in\n    tag_477:\n        /* \"#utility.yul\":16844:16900   */\n      not\n        /* \"#utility.yul\":16929:16933   */\n      dup1\n        /* \"#utility.yul\":16923:16927   */\n      dup4\n        /* \"#utility.yul\":16919:16934   */\n      and\n        /* \"#utility.yul\":16909:16934   */\n      swap2\n      pop\n        /* \"#utility.yul\":16822:16940   */\n      pop\n        /* \"#utility.yul\":16771:16940   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":16945:17240   */\n    tag_296:\n        /* \"#utility.yul\":17021:17025   */\n      0x00\n        /* \"#utility.yul\":17167:17196   */\n      tag_479\n        /* \"#utility.yul\":17192:17195   */\n      dup4\n        /* \"#utility.yul\":17186:17190   */\n      dup4\n        /* \"#utility.yul\":17167:17196   */\n      tag_295\n      jump\t// in\n    tag_479:\n        /* \"#utility.yul\":17159:17196   */\n      swap2\n      pop\n        /* \"#utility.yul\":17229:17232   */\n      dup3\n        /* \"#utility.yul\":17226:17227   */\n      0x02\n        /* \"#utility.yul\":17222:17233   */\n      mul\n        /* \"#utility.yul\":17216:17220   */\n      dup3\n        /* \"#utility.yul\":17213:17234   */\n      or\n        /* \"#utility.yul\":17205:17234   */\n      swap1\n      pop\n        /* \"#utility.yul\":16945:17240   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":17245:18648   */\n    tag_125:\n        /* \"#utility.yul\":17369:17413   */\n      tag_481\n        /* \"#utility.yul\":17409:17412   */\n      dup4\n        /* \"#utility.yul\":17404:17407   */\n      dup4\n        /* \"#utility.yul\":17369:17413   */\n      tag_280\n      jump\t// in\n    tag_481:\n        /* \"#utility.yul\":17478:17496   */\n      0xffffffffffffffff\n        /* \"#utility.yul\":17470:17476   */\n      dup2\n        /* \"#utility.yul\":17467:17497   */\n      gt\n        /* \"#utility.yul\":17464:17520   */\n      iszero\n      tag_482\n      jumpi\n        /* \"#utility.yul\":17500:17518   */\n      tag_483\n      tag_281\n      jump\t// in\n    tag_483:\n        /* \"#utility.yul\":17464:17520   */\n    tag_482:\n        /* \"#utility.yul\":17544:17582   */\n      tag_484\n        /* \"#utility.yul\":17576:17580   */\n      dup3\n        /* \"#utility.yul\":17570:17581   */\n      sload\n        /* \"#utility.yul\":17544:17582   */\n      tag_91\n      jump\t// in\n    tag_484:\n        /* \"#utility.yul\":17629:17696   */\n      tag_485\n        /* \"#utility.yul\":17689:17695   */\n      dup3\n        /* \"#utility.yul\":17681:17687   */\n      dup3\n        /* \"#utility.yul\":17675:17679   */\n      dup6\n        /* \"#utility.yul\":17629:17696   */\n      tag_293\n      jump\t// in\n    tag_485:\n        /* \"#utility.yul\":17723:17724   */\n      0x00\n        /* \"#utility.yul\":17752:17754   */\n      0x1f\n        /* \"#utility.yul\":17744:17750   */\n      dup4\n        /* \"#utility.yul\":17741:17755   */\n      gt\n        /* \"#utility.yul\":17769:17770   */\n      0x01\n        /* \"#utility.yul\":17764:18396   */\n      dup2\n      eq\n      tag_487\n      jumpi\n        /* \"#utility.yul\":18440:18441   */\n      0x00\n        /* \"#utility.yul\":18457:18463   */\n      dup5\n        /* \"#utility.yul\":18454:18538   */\n      iszero\n      tag_488\n      jumpi\n        /* \"#utility.yul\":18513:18522   */\n      dup3\n        /* \"#utility.yul\":18508:18511   */\n      dup8\n        /* \"#utility.yul\":18504:18523   */\n      add\n        /* \"#utility.yul\":18491:18524   */\n      calldataload\n        /* \"#utility.yul\":18482:18524   */\n      swap1\n      pop\n        /* \"#utility.yul\":18454:18538   */\n    tag_488:\n        /* \"#utility.yul\":18564:18631   */\n      tag_489\n        /* \"#utility.yul\":18624:18630   */\n      dup6\n        /* \"#utility.yul\":18617:18622   */\n      dup3\n        /* \"#utility.yul\":18564:18631   */\n      tag_296\n      jump\t// in\n    tag_489:\n        /* \"#utility.yul\":18558:18562   */\n      dup7\n        /* \"#utility.yul\":18551:18632   */\n      sstore\n        /* \"#utility.yul\":18413:18642   */\n      pop\n        /* \"#utility.yul\":17734:18642   */\n      jump(tag_486)\n        /* \"#utility.yul\":17764:18396   */\n    tag_487:\n        /* \"#utility.yul\":17816:17820   */\n      0x1f\n        /* \"#utility.yul\":17812:17821   */\n      not\n        /* \"#utility.yul\":17804:17810   */\n      dup5\n        /* \"#utility.yul\":17800:17822   */\n      and\n        /* \"#utility.yul\":17850:17887   */\n      tag_490\n        /* \"#utility.yul\":17882:17886   */\n      dup7\n        /* \"#utility.yul\":17850:17887   */\n      tag_282\n      jump\t// in\n    tag_490:\n        /* \"#utility.yul\":17909:17910   */\n      0x00\n        /* \"#utility.yul\":17923:18138   */\n    tag_491:\n        /* \"#utility.yul\":17937:17944   */\n      dup3\n        /* \"#utility.yul\":17934:17935   */\n      dup2\n        /* \"#utility.yul\":17931:17945   */\n      lt\n        /* \"#utility.yul\":17923:18138   */\n      iszero\n      tag_493\n      jumpi\n        /* \"#utility.yul\":18023:18032   */\n      dup5\n        /* \"#utility.yul\":18018:18021   */\n      dup10\n        /* \"#utility.yul\":18014:18033   */\n      add\n        /* \"#utility.yul\":18001:18034   */\n      calldataload\n        /* \"#utility.yul\":17993:17999   */\n      dup3\n        /* \"#utility.yul\":17986:18035   */\n      sstore\n        /* \"#utility.yul\":18074:18075   */\n      0x01\n        /* \"#utility.yul\":18066:18072   */\n      dup3\n        /* \"#utility.yul\":18062:18076   */\n      add\n        /* \"#utility.yul\":18052:18076   */\n      swap2\n      pop\n        /* \"#utility.yul\":18121:18123   */\n      0x20\n        /* \"#utility.yul\":18110:18119   */\n      dup6\n        /* \"#utility.yul\":18106:18124   */\n      add\n        /* \"#utility.yul\":18093:18124   */\n      swap5\n      pop\n        /* \"#utility.yul\":17960:17964   */\n      0x20\n        /* \"#utility.yul\":17957:17958   */\n      dup2\n        /* \"#utility.yul\":17953:17965   */\n      add\n        /* \"#utility.yul\":17948:17965   */\n      swap1\n      pop\n        /* \"#utility.yul\":17923:18138   */\n      jump(tag_491)\n    tag_493:\n        /* \"#utility.yul\":18166:18172   */\n      dup7\n        /* \"#utility.yul\":18157:18164   */\n      dup4\n        /* \"#utility.yul\":18154:18173   */\n      lt\n        /* \"#utility.yul\":18151:18337   */\n      iszero\n      tag_494\n      jumpi\n        /* \"#utility.yul\":18231:18240   */\n      dup5\n        /* \"#utility.yul\":18226:18229   */\n      dup10\n        /* \"#utility.yul\":18222:18241   */\n      add\n        /* \"#utility.yul\":18209:18242   */\n      calldataload\n        /* \"#utility.yul\":18274:18322   */\n      tag_495\n        /* \"#utility.yul\":18316:18320   */\n      0x1f\n        /* \"#utility.yul\":18308:18314   */\n      dup10\n        /* \"#utility.yul\":18304:18321   */\n      and\n        /* \"#utility.yul\":18293:18302   */\n      dup3\n        /* \"#utility.yul\":18274:18322   */\n      tag_295\n      jump\t// in\n    tag_495:\n        /* \"#utility.yul\":18266:18272   */\n      dup4\n        /* \"#utility.yul\":18259:18323   */\n      sstore\n        /* \"#utility.yul\":18174:18337   */\n      pop\n        /* \"#utility.yul\":18151:18337   */\n    tag_494:\n        /* \"#utility.yul\":18383:18384   */\n      0x01\n        /* \"#utility.yul\":18379:18380   */\n      0x02\n        /* \"#utility.yul\":18371:18377   */\n      dup9\n        /* \"#utility.yul\":18367:18381   */\n      mul\n        /* \"#utility.yul\":18363:18385   */\n      add\n        /* \"#utility.yul\":18357:18361   */\n      dup9\n        /* \"#utility.yul\":18350:18386   */\n      sstore\n        /* \"#utility.yul\":17771:18396   */\n      pop\n      pop\n      pop\n        /* \"#utility.yul\":17734:18642   */\n    tag_486:\n      pop\n        /* \"#utility.yul\":17344:18648   */\n      pop\n      pop\n      pop\n        /* \"#utility.yul\":17245:18648   */\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":18654:18848   */\n    tag_127:\n        /* \"#utility.yul\":18694:18698   */\n      0x00\n        /* \"#utility.yul\":18714:18734   */\n      tag_497\n        /* \"#utility.yul\":18732:18733   */\n      dup3\n        /* \"#utility.yul\":18714:18734   */\n      tag_252\n      jump\t// in\n    tag_497:\n        /* \"#utility.yul\":18709:18734   */\n      swap2\n      pop\n        /* \"#utility.yul\":18748:18768   */\n      tag_498\n        /* \"#utility.yul\":18766:18767   */\n      dup4\n        /* \"#utility.yul\":18748:18768   */\n      tag_252\n      jump\t// in\n    tag_498:\n        /* \"#utility.yul\":18743:18768   */\n      swap3\n      pop\n        /* \"#utility.yul\":18792:18793   */\n      dup3\n        /* \"#utility.yul\":18789:18790   */\n      dup3\n        /* \"#utility.yul\":18785:18794   */\n      sub\n        /* \"#utility.yul\":18777:18794   */\n      swap1\n      pop\n        /* \"#utility.yul\":18816:18817   */\n      dup2\n        /* \"#utility.yul\":18810:18814   */\n      dup2\n        /* \"#utility.yul\":18807:18818   */\n      gt\n        /* \"#utility.yul\":18804:18841   */\n      iszero\n      tag_499\n      jumpi\n        /* \"#utility.yul\":18821:18839   */\n      tag_500\n      tag_279\n      jump\t// in\n    tag_500:\n        /* \"#utility.yul\":18804:18841   */\n    tag_499:\n        /* \"#utility.yul\":18654:18848   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":18854:19034   */\n    tag_131:\n        /* \"#utility.yul\":18902:18979   */\n      0x4e487b7100000000000000000000000000000000000000000000000000000000\n        /* \"#utility.yul\":18899:18900   */\n      0x00\n        /* \"#utility.yul\":18892:18980   */\n      mstore\n        /* \"#utility.yul\":18999:19003   */\n      0x32\n        /* \"#utility.yul\":18996:18997   */\n      0x04\n        /* \"#utility.yul\":18989:19004   */\n      mstore\n        /* \"#utility.yul\":19023:19027   */\n      0x24\n        /* \"#utility.yul\":19020:19021   */\n      0x00\n        /* \"#utility.yul\":19013:19028   */\n      revert\n        /* \"#utility.yul\":19040:19220   */\n    tag_141:\n        /* \"#utility.yul\":19088:19165   */\n      0x4e487b7100000000000000000000000000000000000000000000000000000000\n        /* \"#utility.yul\":19085:19086   */\n      0x00\n        /* \"#utility.yul\":19078:19166   */\n      mstore\n        /* \"#utility.yul\":19185:19189   */\n      0x21\n        /* \"#utility.yul\":19182:19183   */\n      0x04\n        /* \"#utility.yul\":19175:19190   */\n      mstore\n        /* \"#utility.yul\":19209:19213   */\n      0x24\n        /* \"#utility.yul\":19206:19207   */\n      0x00\n        /* \"#utility.yul\":19199:19214   */\n      revert\n        /* \"#utility.yul\":19226:19344   */\n    tag_297:\n        /* \"#utility.yul\":19313:19337   */\n      tag_504\n        /* \"#utility.yul\":19331:19336   */\n      dup2\n        /* \"#utility.yul\":19313:19337   */\n      tag_249\n      jump\t// in\n    tag_504:\n        /* \"#utility.yul\":19308:19311   */\n      dup3\n        /* \"#utility.yul\":19301:19338   */\n      mstore\n        /* \"#utility.yul\":19226:19344   */\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":19350:19792   */\n    tag_192:\n        /* \"#utility.yul\":19499:19503   */\n      0x00\n        /* \"#utility.yul\":19537:19539   */\n      0x60\n        /* \"#utility.yul\":19526:19535   */\n      dup3\n        /* \"#utility.yul\":19522:19540   */\n      add\n        /* \"#utility.yul\":19514:19540   */\n      swap1\n      pop\n        /* \"#utility.yul\":19550:19621   */\n      tag_506\n        /* \"#utility.yul\":19618:19619   */\n      0x00\n        /* \"#utility.yul\":19607:19616   */\n      dup4\n        /* \"#utility.yul\":19603:19620   */\n      add\n        /* \"#utility.yul\":19594:19600   */\n      dup7\n        /* \"#utility.yul\":19550:19621   */\n      tag_297\n      jump\t// in\n    tag_506:\n        /* \"#utility.yul\":19631:19703   */\n      tag_507\n        /* \"#utility.yul\":19699:19701   */\n      0x20\n        /* \"#utility.yul\":19688:19697   */\n      dup4\n        /* \"#utility.yul\":19684:19702   */\n      add\n        /* \"#utility.yul\":19675:19681   */\n      dup6\n        /* \"#utility.yul\":19631:19703   */\n      tag_257\n      jump\t// in\n    tag_507:\n        /* \"#utility.yul\":19713:19785   */\n      tag_508\n        /* \"#utility.yul\":19781:19783   */\n      0x40\n        /* \"#utility.yul\":19770:19779   */\n      dup4\n        /* \"#utility.yul\":19766:19784   */\n      add\n        /* \"#utility.yul\":19757:19763   */\n      dup5\n        /* \"#utility.yul\":19713:19785   */\n      tag_257\n      jump\t// in\n    tag_508:\n        /* \"#utility.yul\":19350:19792   */\n      swap5\n      swap4\n      pop\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":19798:20020   */\n    tag_197:\n        /* \"#utility.yul\":19891:19895   */\n      0x00\n        /* \"#utility.yul\":19929:19931   */\n      0x20\n        /* \"#utility.yul\":19918:19927   */\n      dup3\n        /* \"#utility.yul\":19914:19932   */\n      add\n        /* \"#utility.yul\":19906:19932   */\n      swap1\n      pop\n        /* \"#utility.yul\":19942:20013   */\n      tag_510\n        /* \"#utility.yul\":20010:20011   */\n      0x00\n        /* \"#utility.yul\":19999:20008   */\n      dup4\n        /* \"#utility.yul\":19995:20012   */\n      add\n        /* \"#utility.yul\":19986:19992   */\n      dup5\n        /* \"#utility.yul\":19942:20013   */\n      tag_297\n      jump\t// in\n    tag_510:\n        /* \"#utility.yul\":19798:20020   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n\n    auxdata: 0xa26469706673582212203f33c0d74d6aad406cf6f588bb40936af0535b1c0e1abec039651de87ea33c2464736f6c634300081a0033\n}\n",
						"bytecode": {
							"functionDebugData": {
								"@_1501": {
									"entryPoint": null,
									"id": 1501,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"@_188": {
									"entryPoint": null,
									"id": 188,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"abi_decode_available_length_t_string_memory_ptr_fromMemory": {
									"entryPoint": 1225,
									"id": null,
									"parameterSlots": 3,
									"returnSlots": 1
								},
								"abi_decode_t_string_memory_ptr_fromMemory": {
									"entryPoint": 1290,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_decode_tuple_t_string_memory_ptrt_string_memory_ptr_fromMemory": {
									"entryPoint": 1335,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 2
								},
								"allocate_memory": {
									"entryPoint": 1137,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"allocate_unbounded": {
									"entryPoint": 1047,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 1
								},
								"array_allocation_size_t_string_memory_ptr": {
									"entryPoint": 1163,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"array_dataslot_t_string_storage": {
									"entryPoint": 418,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"array_length_t_string_memory_ptr": {
									"entryPoint": 270,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"clean_up_bytearray_end_slots_t_string_storage": {
									"entryPoint": 703,
									"id": null,
									"parameterSlots": 3,
									"returnSlots": 0
								},
								"cleanup_t_uint256": {
									"entryPoint": 544,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"clear_storage_range_t_bytes1": {
									"entryPoint": 669,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"convert_t_uint256_to_t_uint256": {
									"entryPoint": 562,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"copy_byte_array_to_storage_from_t_string_memory_ptr_to_t_string_storage": {
									"entryPoint": 840,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"copy_memory_to_memory_with_cleanup": {
									"entryPoint": 1211,
									"id": null,
									"parameterSlots": 3,
									"returnSlots": 0
								},
								"divide_by_32_ceil": {
									"entryPoint": 436,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"extract_byte_array_length": {
									"entryPoint": 370,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"extract_used_part_and_set_length_of_short_byte_array": {
									"entryPoint": 813,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"finalize_allocation": {
									"entryPoint": 1088,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"identity": {
									"entryPoint": 553,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"mask_bytes_dynamic": {
									"entryPoint": 785,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"panic_error_0x22": {
									"entryPoint": 325,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"panic_error_0x41": {
									"entryPoint": 280,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"prepare_store_t_uint256": {
									"entryPoint": 595,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"revert_error_1b9f4a0a5773e33b91aa01db23bf8c55fce1411167c872835e7fa00a4f17d46d": {
									"entryPoint": 1064,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"revert_error_987264b3b1d58a9c7f8255e93e81c77d86d6299019c33110a076957a3e06e2ae": {
									"entryPoint": 1068,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db": {
									"entryPoint": 1060,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b": {
									"entryPoint": 1056,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"round_up_to_mul_of_32": {
									"entryPoint": 1072,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"shift_left_dynamic": {
									"entryPoint": 451,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"shift_right_unsigned_dynamic": {
									"entryPoint": 773,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"storage_set_to_zero_t_uint256": {
									"entryPoint": 645,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"update_byte_slice_dynamic32": {
									"entryPoint": 463,
									"id": null,
									"parameterSlots": 3,
									"returnSlots": 1
								},
								"update_storage_value_t_uint256_to_t_uint256": {
									"entryPoint": 604,
									"id": null,
									"parameterSlots": 3,
									"returnSlots": 0
								},
								"zero_value_for_split_t_uint256": {
									"entryPoint": 641,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 1
								}
							},
							"generatedSources": [
								{
									"ast": {
										"nativeSrc": "0:8467:7",
										"nodeType": "YulBlock",
										"src": "0:8467:7",
										"statements": [
											{
												"body": {
													"nativeSrc": "66:40:7",
													"nodeType": "YulBlock",
													"src": "66:40:7",
													"statements": [
														{
															"nativeSrc": "77:22:7",
															"nodeType": "YulAssignment",
															"src": "77:22:7",
															"value": {
																"arguments": [
																	{
																		"name": "value",
																		"nativeSrc": "93:5:7",
																		"nodeType": "YulIdentifier",
																		"src": "93:5:7"
																	}
																],
																"functionName": {
																	"name": "mload",
																	"nativeSrc": "87:5:7",
																	"nodeType": "YulIdentifier",
																	"src": "87:5:7"
																},
																"nativeSrc": "87:12:7",
																"nodeType": "YulFunctionCall",
																"src": "87:12:7"
															},
															"variableNames": [
																{
																	"name": "length",
																	"nativeSrc": "77:6:7",
																	"nodeType": "YulIdentifier",
																	"src": "77:6:7"
																}
															]
														}
													]
												},
												"name": "array_length_t_string_memory_ptr",
												"nativeSrc": "7:99:7",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "49:5:7",
														"nodeType": "YulTypedName",
														"src": "49:5:7",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "length",
														"nativeSrc": "59:6:7",
														"nodeType": "YulTypedName",
														"src": "59:6:7",
														"type": ""
													}
												],
												"src": "7:99:7"
											},
											{
												"body": {
													"nativeSrc": "140:152:7",
													"nodeType": "YulBlock",
													"src": "140:152:7",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "157:1:7",
																		"nodeType": "YulLiteral",
																		"src": "157:1:7",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "160:77:7",
																		"nodeType": "YulLiteral",
																		"src": "160:77:7",
																		"type": "",
																		"value": "35408467139433450592217433187231851964531694900788300625387963629091585785856"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "150:6:7",
																	"nodeType": "YulIdentifier",
																	"src": "150:6:7"
																},
																"nativeSrc": "150:88:7",
																"nodeType": "YulFunctionCall",
																"src": "150:88:7"
															},
															"nativeSrc": "150:88:7",
															"nodeType": "YulExpressionStatement",
															"src": "150:88:7"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "254:1:7",
																		"nodeType": "YulLiteral",
																		"src": "254:1:7",
																		"type": "",
																		"value": "4"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "257:4:7",
																		"nodeType": "YulLiteral",
																		"src": "257:4:7",
																		"type": "",
																		"value": "0x41"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "247:6:7",
																	"nodeType": "YulIdentifier",
																	"src": "247:6:7"
																},
																"nativeSrc": "247:15:7",
																"nodeType": "YulFunctionCall",
																"src": "247:15:7"
															},
															"nativeSrc": "247:15:7",
															"nodeType": "YulExpressionStatement",
															"src": "247:15:7"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "278:1:7",
																		"nodeType": "YulLiteral",
																		"src": "278:1:7",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "281:4:7",
																		"nodeType": "YulLiteral",
																		"src": "281:4:7",
																		"type": "",
																		"value": "0x24"
																	}
																],
																"functionName": {
																	"name": "revert",
																	"nativeSrc": "271:6:7",
																	"nodeType": "YulIdentifier",
																	"src": "271:6:7"
																},
																"nativeSrc": "271:15:7",
																"nodeType": "YulFunctionCall",
																"src": "271:15:7"
															},
															"nativeSrc": "271:15:7",
															"nodeType": "YulExpressionStatement",
															"src": "271:15:7"
														}
													]
												},
												"name": "panic_error_0x41",
												"nativeSrc": "112:180:7",
												"nodeType": "YulFunctionDefinition",
												"src": "112:180:7"
											},
											{
												"body": {
													"nativeSrc": "326:152:7",
													"nodeType": "YulBlock",
													"src": "326:152:7",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "343:1:7",
																		"nodeType": "YulLiteral",
																		"src": "343:1:7",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "346:77:7",
																		"nodeType": "YulLiteral",
																		"src": "346:77:7",
																		"type": "",
																		"value": "35408467139433450592217433187231851964531694900788300625387963629091585785856"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "336:6:7",
																	"nodeType": "YulIdentifier",
																	"src": "336:6:7"
																},
																"nativeSrc": "336:88:7",
																"nodeType": "YulFunctionCall",
																"src": "336:88:7"
															},
															"nativeSrc": "336:88:7",
															"nodeType": "YulExpressionStatement",
															"src": "336:88:7"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "440:1:7",
																		"nodeType": "YulLiteral",
																		"src": "440:1:7",
																		"type": "",
																		"value": "4"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "443:4:7",
																		"nodeType": "YulLiteral",
																		"src": "443:4:7",
																		"type": "",
																		"value": "0x22"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "433:6:7",
																	"nodeType": "YulIdentifier",
																	"src": "433:6:7"
																},
																"nativeSrc": "433:15:7",
																"nodeType": "YulFunctionCall",
																"src": "433:15:7"
															},
															"nativeSrc": "433:15:7",
															"nodeType": "YulExpressionStatement",
															"src": "433:15:7"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "464:1:7",
																		"nodeType": "YulLiteral",
																		"src": "464:1:7",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "467:4:7",
																		"nodeType": "YulLiteral",
																		"src": "467:4:7",
																		"type": "",
																		"value": "0x24"
																	}
																],
																"functionName": {
																	"name": "revert",
																	"nativeSrc": "457:6:7",
																	"nodeType": "YulIdentifier",
																	"src": "457:6:7"
																},
																"nativeSrc": "457:15:7",
																"nodeType": "YulFunctionCall",
																"src": "457:15:7"
															},
															"nativeSrc": "457:15:7",
															"nodeType": "YulExpressionStatement",
															"src": "457:15:7"
														}
													]
												},
												"name": "panic_error_0x22",
												"nativeSrc": "298:180:7",
												"nodeType": "YulFunctionDefinition",
												"src": "298:180:7"
											},
											{
												"body": {
													"nativeSrc": "535:269:7",
													"nodeType": "YulBlock",
													"src": "535:269:7",
													"statements": [
														{
															"nativeSrc": "545:22:7",
															"nodeType": "YulAssignment",
															"src": "545:22:7",
															"value": {
																"arguments": [
																	{
																		"name": "data",
																		"nativeSrc": "559:4:7",
																		"nodeType": "YulIdentifier",
																		"src": "559:4:7"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "565:1:7",
																		"nodeType": "YulLiteral",
																		"src": "565:1:7",
																		"type": "",
																		"value": "2"
																	}
																],
																"functionName": {
																	"name": "div",
																	"nativeSrc": "555:3:7",
																	"nodeType": "YulIdentifier",
																	"src": "555:3:7"
																},
																"nativeSrc": "555:12:7",
																"nodeType": "YulFunctionCall",
																"src": "555:12:7"
															},
															"variableNames": [
																{
																	"name": "length",
																	"nativeSrc": "545:6:7",
																	"nodeType": "YulIdentifier",
																	"src": "545:6:7"
																}
															]
														},
														{
															"nativeSrc": "576:38:7",
															"nodeType": "YulVariableDeclaration",
															"src": "576:38:7",
															"value": {
																"arguments": [
																	{
																		"name": "data",
																		"nativeSrc": "606:4:7",
																		"nodeType": "YulIdentifier",
																		"src": "606:4:7"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "612:1:7",
																		"nodeType": "YulLiteral",
																		"src": "612:1:7",
																		"type": "",
																		"value": "1"
																	}
																],
																"functionName": {
																	"name": "and",
																	"nativeSrc": "602:3:7",
																	"nodeType": "YulIdentifier",
																	"src": "602:3:7"
																},
																"nativeSrc": "602:12:7",
																"nodeType": "YulFunctionCall",
																"src": "602:12:7"
															},
															"variables": [
																{
																	"name": "outOfPlaceEncoding",
																	"nativeSrc": "580:18:7",
																	"nodeType": "YulTypedName",
																	"src": "580:18:7",
																	"type": ""
																}
															]
														},
														{
															"body": {
																"nativeSrc": "653:51:7",
																"nodeType": "YulBlock",
																"src": "653:51:7",
																"statements": [
																	{
																		"nativeSrc": "667:27:7",
																		"nodeType": "YulAssignment",
																		"src": "667:27:7",
																		"value": {
																			"arguments": [
																				{
																					"name": "length",
																					"nativeSrc": "681:6:7",
																					"nodeType": "YulIdentifier",
																					"src": "681:6:7"
																				},
																				{
																					"kind": "number",
																					"nativeSrc": "689:4:7",
																					"nodeType": "YulLiteral",
																					"src": "689:4:7",
																					"type": "",
																					"value": "0x7f"
																				}
																			],
																			"functionName": {
																				"name": "and",
																				"nativeSrc": "677:3:7",
																				"nodeType": "YulIdentifier",
																				"src": "677:3:7"
																			},
																			"nativeSrc": "677:17:7",
																			"nodeType": "YulFunctionCall",
																			"src": "677:17:7"
																		},
																		"variableNames": [
																			{
																				"name": "length",
																				"nativeSrc": "667:6:7",
																				"nodeType": "YulIdentifier",
																				"src": "667:6:7"
																			}
																		]
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "outOfPlaceEncoding",
																		"nativeSrc": "633:18:7",
																		"nodeType": "YulIdentifier",
																		"src": "633:18:7"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nativeSrc": "626:6:7",
																	"nodeType": "YulIdentifier",
																	"src": "626:6:7"
																},
																"nativeSrc": "626:26:7",
																"nodeType": "YulFunctionCall",
																"src": "626:26:7"
															},
															"nativeSrc": "623:81:7",
															"nodeType": "YulIf",
															"src": "623:81:7"
														},
														{
															"body": {
																"nativeSrc": "756:42:7",
																"nodeType": "YulBlock",
																"src": "756:42:7",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "panic_error_0x22",
																				"nativeSrc": "770:16:7",
																				"nodeType": "YulIdentifier",
																				"src": "770:16:7"
																			},
																			"nativeSrc": "770:18:7",
																			"nodeType": "YulFunctionCall",
																			"src": "770:18:7"
																		},
																		"nativeSrc": "770:18:7",
																		"nodeType": "YulExpressionStatement",
																		"src": "770:18:7"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "outOfPlaceEncoding",
																		"nativeSrc": "720:18:7",
																		"nodeType": "YulIdentifier",
																		"src": "720:18:7"
																	},
																	{
																		"arguments": [
																			{
																				"name": "length",
																				"nativeSrc": "743:6:7",
																				"nodeType": "YulIdentifier",
																				"src": "743:6:7"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "751:2:7",
																				"nodeType": "YulLiteral",
																				"src": "751:2:7",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "lt",
																			"nativeSrc": "740:2:7",
																			"nodeType": "YulIdentifier",
																			"src": "740:2:7"
																		},
																		"nativeSrc": "740:14:7",
																		"nodeType": "YulFunctionCall",
																		"src": "740:14:7"
																	}
																],
																"functionName": {
																	"name": "eq",
																	"nativeSrc": "717:2:7",
																	"nodeType": "YulIdentifier",
																	"src": "717:2:7"
																},
																"nativeSrc": "717:38:7",
																"nodeType": "YulFunctionCall",
																"src": "717:38:7"
															},
															"nativeSrc": "714:84:7",
															"nodeType": "YulIf",
															"src": "714:84:7"
														}
													]
												},
												"name": "extract_byte_array_length",
												"nativeSrc": "484:320:7",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "data",
														"nativeSrc": "519:4:7",
														"nodeType": "YulTypedName",
														"src": "519:4:7",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "length",
														"nativeSrc": "528:6:7",
														"nodeType": "YulTypedName",
														"src": "528:6:7",
														"type": ""
													}
												],
												"src": "484:320:7"
											},
											{
												"body": {
													"nativeSrc": "864:87:7",
													"nodeType": "YulBlock",
													"src": "864:87:7",
													"statements": [
														{
															"nativeSrc": "874:11:7",
															"nodeType": "YulAssignment",
															"src": "874:11:7",
															"value": {
																"name": "ptr",
																"nativeSrc": "882:3:7",
																"nodeType": "YulIdentifier",
																"src": "882:3:7"
															},
															"variableNames": [
																{
																	"name": "data",
																	"nativeSrc": "874:4:7",
																	"nodeType": "YulIdentifier",
																	"src": "874:4:7"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "902:1:7",
																		"nodeType": "YulLiteral",
																		"src": "902:1:7",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"name": "ptr",
																		"nativeSrc": "905:3:7",
																		"nodeType": "YulIdentifier",
																		"src": "905:3:7"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "895:6:7",
																	"nodeType": "YulIdentifier",
																	"src": "895:6:7"
																},
																"nativeSrc": "895:14:7",
																"nodeType": "YulFunctionCall",
																"src": "895:14:7"
															},
															"nativeSrc": "895:14:7",
															"nodeType": "YulExpressionStatement",
															"src": "895:14:7"
														},
														{
															"nativeSrc": "918:26:7",
															"nodeType": "YulAssignment",
															"src": "918:26:7",
															"value": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "936:1:7",
																		"nodeType": "YulLiteral",
																		"src": "936:1:7",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "939:4:7",
																		"nodeType": "YulLiteral",
																		"src": "939:4:7",
																		"type": "",
																		"value": "0x20"
																	}
																],
																"functionName": {
																	"name": "keccak256",
																	"nativeSrc": "926:9:7",
																	"nodeType": "YulIdentifier",
																	"src": "926:9:7"
																},
																"nativeSrc": "926:18:7",
																"nodeType": "YulFunctionCall",
																"src": "926:18:7"
															},
															"variableNames": [
																{
																	"name": "data",
																	"nativeSrc": "918:4:7",
																	"nodeType": "YulIdentifier",
																	"src": "918:4:7"
																}
															]
														}
													]
												},
												"name": "array_dataslot_t_string_storage",
												"nativeSrc": "810:141:7",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "ptr",
														"nativeSrc": "851:3:7",
														"nodeType": "YulTypedName",
														"src": "851:3:7",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "data",
														"nativeSrc": "859:4:7",
														"nodeType": "YulTypedName",
														"src": "859:4:7",
														"type": ""
													}
												],
												"src": "810:141:7"
											},
											{
												"body": {
													"nativeSrc": "1001:49:7",
													"nodeType": "YulBlock",
													"src": "1001:49:7",
													"statements": [
														{
															"nativeSrc": "1011:33:7",
															"nodeType": "YulAssignment",
															"src": "1011:33:7",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nativeSrc": "1029:5:7",
																				"nodeType": "YulIdentifier",
																				"src": "1029:5:7"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "1036:2:7",
																				"nodeType": "YulLiteral",
																				"src": "1036:2:7",
																				"type": "",
																				"value": "31"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "1025:3:7",
																			"nodeType": "YulIdentifier",
																			"src": "1025:3:7"
																		},
																		"nativeSrc": "1025:14:7",
																		"nodeType": "YulFunctionCall",
																		"src": "1025:14:7"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "1041:2:7",
																		"nodeType": "YulLiteral",
																		"src": "1041:2:7",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "div",
																	"nativeSrc": "1021:3:7",
																	"nodeType": "YulIdentifier",
																	"src": "1021:3:7"
																},
																"nativeSrc": "1021:23:7",
																"nodeType": "YulFunctionCall",
																"src": "1021:23:7"
															},
															"variableNames": [
																{
																	"name": "result",
																	"nativeSrc": "1011:6:7",
																	"nodeType": "YulIdentifier",
																	"src": "1011:6:7"
																}
															]
														}
													]
												},
												"name": "divide_by_32_ceil",
												"nativeSrc": "957:93:7",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "984:5:7",
														"nodeType": "YulTypedName",
														"src": "984:5:7",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "result",
														"nativeSrc": "994:6:7",
														"nodeType": "YulTypedName",
														"src": "994:6:7",
														"type": ""
													}
												],
												"src": "957:93:7"
											},
											{
												"body": {
													"nativeSrc": "1109:54:7",
													"nodeType": "YulBlock",
													"src": "1109:54:7",
													"statements": [
														{
															"nativeSrc": "1119:37:7",
															"nodeType": "YulAssignment",
															"src": "1119:37:7",
															"value": {
																"arguments": [
																	{
																		"name": "bits",
																		"nativeSrc": "1144:4:7",
																		"nodeType": "YulIdentifier",
																		"src": "1144:4:7"
																	},
																	{
																		"name": "value",
																		"nativeSrc": "1150:5:7",
																		"nodeType": "YulIdentifier",
																		"src": "1150:5:7"
																	}
																],
																"functionName": {
																	"name": "shl",
																	"nativeSrc": "1140:3:7",
																	"nodeType": "YulIdentifier",
																	"src": "1140:3:7"
																},
																"nativeSrc": "1140:16:7",
																"nodeType": "YulFunctionCall",
																"src": "1140:16:7"
															},
															"variableNames": [
																{
																	"name": "newValue",
																	"nativeSrc": "1119:8:7",
																	"nodeType": "YulIdentifier",
																	"src": "1119:8:7"
																}
															]
														}
													]
												},
												"name": "shift_left_dynamic",
												"nativeSrc": "1056:107:7",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "bits",
														"nativeSrc": "1084:4:7",
														"nodeType": "YulTypedName",
														"src": "1084:4:7",
														"type": ""
													},
													{
														"name": "value",
														"nativeSrc": "1090:5:7",
														"nodeType": "YulTypedName",
														"src": "1090:5:7",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "newValue",
														"nativeSrc": "1100:8:7",
														"nodeType": "YulTypedName",
														"src": "1100:8:7",
														"type": ""
													}
												],
												"src": "1056:107:7"
											},
											{
												"body": {
													"nativeSrc": "1245:317:7",
													"nodeType": "YulBlock",
													"src": "1245:317:7",
													"statements": [
														{
															"nativeSrc": "1255:35:7",
															"nodeType": "YulVariableDeclaration",
															"src": "1255:35:7",
															"value": {
																"arguments": [
																	{
																		"name": "shiftBytes",
																		"nativeSrc": "1276:10:7",
																		"nodeType": "YulIdentifier",
																		"src": "1276:10:7"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "1288:1:7",
																		"nodeType": "YulLiteral",
																		"src": "1288:1:7",
																		"type": "",
																		"value": "8"
																	}
																],
																"functionName": {
																	"name": "mul",
																	"nativeSrc": "1272:3:7",
																	"nodeType": "YulIdentifier",
																	"src": "1272:3:7"
																},
																"nativeSrc": "1272:18:7",
																"nodeType": "YulFunctionCall",
																"src": "1272:18:7"
															},
															"variables": [
																{
																	"name": "shiftBits",
																	"nativeSrc": "1259:9:7",
																	"nodeType": "YulTypedName",
																	"src": "1259:9:7",
																	"type": ""
																}
															]
														},
														{
															"nativeSrc": "1299:109:7",
															"nodeType": "YulVariableDeclaration",
															"src": "1299:109:7",
															"value": {
																"arguments": [
																	{
																		"name": "shiftBits",
																		"nativeSrc": "1330:9:7",
																		"nodeType": "YulIdentifier",
																		"src": "1330:9:7"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "1341:66:7",
																		"nodeType": "YulLiteral",
																		"src": "1341:66:7",
																		"type": "",
																		"value": "0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff"
																	}
																],
																"functionName": {
																	"name": "shift_left_dynamic",
																	"nativeSrc": "1311:18:7",
																	"nodeType": "YulIdentifier",
																	"src": "1311:18:7"
																},
																"nativeSrc": "1311:97:7",
																"nodeType": "YulFunctionCall",
																"src": "1311:97:7"
															},
															"variables": [
																{
																	"name": "mask",
																	"nativeSrc": "1303:4:7",
																	"nodeType": "YulTypedName",
																	"src": "1303:4:7",
																	"type": ""
																}
															]
														},
														{
															"nativeSrc": "1417:51:7",
															"nodeType": "YulAssignment",
															"src": "1417:51:7",
															"value": {
																"arguments": [
																	{
																		"name": "shiftBits",
																		"nativeSrc": "1448:9:7",
																		"nodeType": "YulIdentifier",
																		"src": "1448:9:7"
																	},
																	{
																		"name": "toInsert",
																		"nativeSrc": "1459:8:7",
																		"nodeType": "YulIdentifier",
																		"src": "1459:8:7"
																	}
																],
																"functionName": {
																	"name": "shift_left_dynamic",
																	"nativeSrc": "1429:18:7",
																	"nodeType": "YulIdentifier",
																	"src": "1429:18:7"
																},
																"nativeSrc": "1429:39:7",
																"nodeType": "YulFunctionCall",
																"src": "1429:39:7"
															},
															"variableNames": [
																{
																	"name": "toInsert",
																	"nativeSrc": "1417:8:7",
																	"nodeType": "YulIdentifier",
																	"src": "1417:8:7"
																}
															]
														},
														{
															"nativeSrc": "1477:30:7",
															"nodeType": "YulAssignment",
															"src": "1477:30:7",
															"value": {
																"arguments": [
																	{
																		"name": "value",
																		"nativeSrc": "1490:5:7",
																		"nodeType": "YulIdentifier",
																		"src": "1490:5:7"
																	},
																	{
																		"arguments": [
																			{
																				"name": "mask",
																				"nativeSrc": "1501:4:7",
																				"nodeType": "YulIdentifier",
																				"src": "1501:4:7"
																			}
																		],
																		"functionName": {
																			"name": "not",
																			"nativeSrc": "1497:3:7",
																			"nodeType": "YulIdentifier",
																			"src": "1497:3:7"
																		},
																		"nativeSrc": "1497:9:7",
																		"nodeType": "YulFunctionCall",
																		"src": "1497:9:7"
																	}
																],
																"functionName": {
																	"name": "and",
																	"nativeSrc": "1486:3:7",
																	"nodeType": "YulIdentifier",
																	"src": "1486:3:7"
																},
																"nativeSrc": "1486:21:7",
																"nodeType": "YulFunctionCall",
																"src": "1486:21:7"
															},
															"variableNames": [
																{
																	"name": "value",
																	"nativeSrc": "1477:5:7",
																	"nodeType": "YulIdentifier",
																	"src": "1477:5:7"
																}
															]
														},
														{
															"nativeSrc": "1516:40:7",
															"nodeType": "YulAssignment",
															"src": "1516:40:7",
															"value": {
																"arguments": [
																	{
																		"name": "value",
																		"nativeSrc": "1529:5:7",
																		"nodeType": "YulIdentifier",
																		"src": "1529:5:7"
																	},
																	{
																		"arguments": [
																			{
																				"name": "toInsert",
																				"nativeSrc": "1540:8:7",
																				"nodeType": "YulIdentifier",
																				"src": "1540:8:7"
																			},
																			{
																				"name": "mask",
																				"nativeSrc": "1550:4:7",
																				"nodeType": "YulIdentifier",
																				"src": "1550:4:7"
																			}
																		],
																		"functionName": {
																			"name": "and",
																			"nativeSrc": "1536:3:7",
																			"nodeType": "YulIdentifier",
																			"src": "1536:3:7"
																		},
																		"nativeSrc": "1536:19:7",
																		"nodeType": "YulFunctionCall",
																		"src": "1536:19:7"
																	}
																],
																"functionName": {
																	"name": "or",
																	"nativeSrc": "1526:2:7",
																	"nodeType": "YulIdentifier",
																	"src": "1526:2:7"
																},
																"nativeSrc": "1526:30:7",
																"nodeType": "YulFunctionCall",
																"src": "1526:30:7"
															},
															"variableNames": [
																{
																	"name": "result",
																	"nativeSrc": "1516:6:7",
																	"nodeType": "YulIdentifier",
																	"src": "1516:6:7"
																}
															]
														}
													]
												},
												"name": "update_byte_slice_dynamic32",
												"nativeSrc": "1169:393:7",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "1206:5:7",
														"nodeType": "YulTypedName",
														"src": "1206:5:7",
														"type": ""
													},
													{
														"name": "shiftBytes",
														"nativeSrc": "1213:10:7",
														"nodeType": "YulTypedName",
														"src": "1213:10:7",
														"type": ""
													},
													{
														"name": "toInsert",
														"nativeSrc": "1225:8:7",
														"nodeType": "YulTypedName",
														"src": "1225:8:7",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "result",
														"nativeSrc": "1238:6:7",
														"nodeType": "YulTypedName",
														"src": "1238:6:7",
														"type": ""
													}
												],
												"src": "1169:393:7"
											},
											{
												"body": {
													"nativeSrc": "1613:32:7",
													"nodeType": "YulBlock",
													"src": "1613:32:7",
													"statements": [
														{
															"nativeSrc": "1623:16:7",
															"nodeType": "YulAssignment",
															"src": "1623:16:7",
															"value": {
																"name": "value",
																"nativeSrc": "1634:5:7",
																"nodeType": "YulIdentifier",
																"src": "1634:5:7"
															},
															"variableNames": [
																{
																	"name": "cleaned",
																	"nativeSrc": "1623:7:7",
																	"nodeType": "YulIdentifier",
																	"src": "1623:7:7"
																}
															]
														}
													]
												},
												"name": "cleanup_t_uint256",
												"nativeSrc": "1568:77:7",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "1595:5:7",
														"nodeType": "YulTypedName",
														"src": "1595:5:7",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "cleaned",
														"nativeSrc": "1605:7:7",
														"nodeType": "YulTypedName",
														"src": "1605:7:7",
														"type": ""
													}
												],
												"src": "1568:77:7"
											},
											{
												"body": {
													"nativeSrc": "1683:28:7",
													"nodeType": "YulBlock",
													"src": "1683:28:7",
													"statements": [
														{
															"nativeSrc": "1693:12:7",
															"nodeType": "YulAssignment",
															"src": "1693:12:7",
															"value": {
																"name": "value",
																"nativeSrc": "1700:5:7",
																"nodeType": "YulIdentifier",
																"src": "1700:5:7"
															},
															"variableNames": [
																{
																	"name": "ret",
																	"nativeSrc": "1693:3:7",
																	"nodeType": "YulIdentifier",
																	"src": "1693:3:7"
																}
															]
														}
													]
												},
												"name": "identity",
												"nativeSrc": "1651:60:7",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "1669:5:7",
														"nodeType": "YulTypedName",
														"src": "1669:5:7",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "ret",
														"nativeSrc": "1679:3:7",
														"nodeType": "YulTypedName",
														"src": "1679:3:7",
														"type": ""
													}
												],
												"src": "1651:60:7"
											},
											{
												"body": {
													"nativeSrc": "1777:82:7",
													"nodeType": "YulBlock",
													"src": "1777:82:7",
													"statements": [
														{
															"nativeSrc": "1787:66:7",
															"nodeType": "YulAssignment",
															"src": "1787:66:7",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "value",
																						"nativeSrc": "1845:5:7",
																						"nodeType": "YulIdentifier",
																						"src": "1845:5:7"
																					}
																				],
																				"functionName": {
																					"name": "cleanup_t_uint256",
																					"nativeSrc": "1827:17:7",
																					"nodeType": "YulIdentifier",
																					"src": "1827:17:7"
																				},
																				"nativeSrc": "1827:24:7",
																				"nodeType": "YulFunctionCall",
																				"src": "1827:24:7"
																			}
																		],
																		"functionName": {
																			"name": "identity",
																			"nativeSrc": "1818:8:7",
																			"nodeType": "YulIdentifier",
																			"src": "1818:8:7"
																		},
																		"nativeSrc": "1818:34:7",
																		"nodeType": "YulFunctionCall",
																		"src": "1818:34:7"
																	}
																],
																"functionName": {
																	"name": "cleanup_t_uint256",
																	"nativeSrc": "1800:17:7",
																	"nodeType": "YulIdentifier",
																	"src": "1800:17:7"
																},
																"nativeSrc": "1800:53:7",
																"nodeType": "YulFunctionCall",
																"src": "1800:53:7"
															},
															"variableNames": [
																{
																	"name": "converted",
																	"nativeSrc": "1787:9:7",
																	"nodeType": "YulIdentifier",
																	"src": "1787:9:7"
																}
															]
														}
													]
												},
												"name": "convert_t_uint256_to_t_uint256",
												"nativeSrc": "1717:142:7",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "1757:5:7",
														"nodeType": "YulTypedName",
														"src": "1757:5:7",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "converted",
														"nativeSrc": "1767:9:7",
														"nodeType": "YulTypedName",
														"src": "1767:9:7",
														"type": ""
													}
												],
												"src": "1717:142:7"
											},
											{
												"body": {
													"nativeSrc": "1912:28:7",
													"nodeType": "YulBlock",
													"src": "1912:28:7",
													"statements": [
														{
															"nativeSrc": "1922:12:7",
															"nodeType": "YulAssignment",
															"src": "1922:12:7",
															"value": {
																"name": "value",
																"nativeSrc": "1929:5:7",
																"nodeType": "YulIdentifier",
																"src": "1929:5:7"
															},
															"variableNames": [
																{
																	"name": "ret",
																	"nativeSrc": "1922:3:7",
																	"nodeType": "YulIdentifier",
																	"src": "1922:3:7"
																}
															]
														}
													]
												},
												"name": "prepare_store_t_uint256",
												"nativeSrc": "1865:75:7",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "1898:5:7",
														"nodeType": "YulTypedName",
														"src": "1898:5:7",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "ret",
														"nativeSrc": "1908:3:7",
														"nodeType": "YulTypedName",
														"src": "1908:3:7",
														"type": ""
													}
												],
												"src": "1865:75:7"
											},
											{
												"body": {
													"nativeSrc": "2022:193:7",
													"nodeType": "YulBlock",
													"src": "2022:193:7",
													"statements": [
														{
															"nativeSrc": "2032:63:7",
															"nodeType": "YulVariableDeclaration",
															"src": "2032:63:7",
															"value": {
																"arguments": [
																	{
																		"name": "value_0",
																		"nativeSrc": "2087:7:7",
																		"nodeType": "YulIdentifier",
																		"src": "2087:7:7"
																	}
																],
																"functionName": {
																	"name": "convert_t_uint256_to_t_uint256",
																	"nativeSrc": "2056:30:7",
																	"nodeType": "YulIdentifier",
																	"src": "2056:30:7"
																},
																"nativeSrc": "2056:39:7",
																"nodeType": "YulFunctionCall",
																"src": "2056:39:7"
															},
															"variables": [
																{
																	"name": "convertedValue_0",
																	"nativeSrc": "2036:16:7",
																	"nodeType": "YulTypedName",
																	"src": "2036:16:7",
																	"type": ""
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "slot",
																		"nativeSrc": "2111:4:7",
																		"nodeType": "YulIdentifier",
																		"src": "2111:4:7"
																	},
																	{
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "slot",
																						"nativeSrc": "2151:4:7",
																						"nodeType": "YulIdentifier",
																						"src": "2151:4:7"
																					}
																				],
																				"functionName": {
																					"name": "sload",
																					"nativeSrc": "2145:5:7",
																					"nodeType": "YulIdentifier",
																					"src": "2145:5:7"
																				},
																				"nativeSrc": "2145:11:7",
																				"nodeType": "YulFunctionCall",
																				"src": "2145:11:7"
																			},
																			{
																				"name": "offset",
																				"nativeSrc": "2158:6:7",
																				"nodeType": "YulIdentifier",
																				"src": "2158:6:7"
																			},
																			{
																				"arguments": [
																					{
																						"name": "convertedValue_0",
																						"nativeSrc": "2190:16:7",
																						"nodeType": "YulIdentifier",
																						"src": "2190:16:7"
																					}
																				],
																				"functionName": {
																					"name": "prepare_store_t_uint256",
																					"nativeSrc": "2166:23:7",
																					"nodeType": "YulIdentifier",
																					"src": "2166:23:7"
																				},
																				"nativeSrc": "2166:41:7",
																				"nodeType": "YulFunctionCall",
																				"src": "2166:41:7"
																			}
																		],
																		"functionName": {
																			"name": "update_byte_slice_dynamic32",
																			"nativeSrc": "2117:27:7",
																			"nodeType": "YulIdentifier",
																			"src": "2117:27:7"
																		},
																		"nativeSrc": "2117:91:7",
																		"nodeType": "YulFunctionCall",
																		"src": "2117:91:7"
																	}
																],
																"functionName": {
																	"name": "sstore",
																	"nativeSrc": "2104:6:7",
																	"nodeType": "YulIdentifier",
																	"src": "2104:6:7"
																},
																"nativeSrc": "2104:105:7",
																"nodeType": "YulFunctionCall",
																"src": "2104:105:7"
															},
															"nativeSrc": "2104:105:7",
															"nodeType": "YulExpressionStatement",
															"src": "2104:105:7"
														}
													]
												},
												"name": "update_storage_value_t_uint256_to_t_uint256",
												"nativeSrc": "1946:269:7",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "slot",
														"nativeSrc": "1999:4:7",
														"nodeType": "YulTypedName",
														"src": "1999:4:7",
														"type": ""
													},
													{
														"name": "offset",
														"nativeSrc": "2005:6:7",
														"nodeType": "YulTypedName",
														"src": "2005:6:7",
														"type": ""
													},
													{
														"name": "value_0",
														"nativeSrc": "2013:7:7",
														"nodeType": "YulTypedName",
														"src": "2013:7:7",
														"type": ""
													}
												],
												"src": "1946:269:7"
											},
											{
												"body": {
													"nativeSrc": "2270:24:7",
													"nodeType": "YulBlock",
													"src": "2270:24:7",
													"statements": [
														{
															"nativeSrc": "2280:8:7",
															"nodeType": "YulAssignment",
															"src": "2280:8:7",
															"value": {
																"kind": "number",
																"nativeSrc": "2287:1:7",
																"nodeType": "YulLiteral",
																"src": "2287:1:7",
																"type": "",
																"value": "0"
															},
															"variableNames": [
																{
																	"name": "ret",
																	"nativeSrc": "2280:3:7",
																	"nodeType": "YulIdentifier",
																	"src": "2280:3:7"
																}
															]
														}
													]
												},
												"name": "zero_value_for_split_t_uint256",
												"nativeSrc": "2221:73:7",
												"nodeType": "YulFunctionDefinition",
												"returnVariables": [
													{
														"name": "ret",
														"nativeSrc": "2266:3:7",
														"nodeType": "YulTypedName",
														"src": "2266:3:7",
														"type": ""
													}
												],
												"src": "2221:73:7"
											},
											{
												"body": {
													"nativeSrc": "2353:136:7",
													"nodeType": "YulBlock",
													"src": "2353:136:7",
													"statements": [
														{
															"nativeSrc": "2363:46:7",
															"nodeType": "YulVariableDeclaration",
															"src": "2363:46:7",
															"value": {
																"arguments": [],
																"functionName": {
																	"name": "zero_value_for_split_t_uint256",
																	"nativeSrc": "2377:30:7",
																	"nodeType": "YulIdentifier",
																	"src": "2377:30:7"
																},
																"nativeSrc": "2377:32:7",
																"nodeType": "YulFunctionCall",
																"src": "2377:32:7"
															},
															"variables": [
																{
																	"name": "zero_0",
																	"nativeSrc": "2367:6:7",
																	"nodeType": "YulTypedName",
																	"src": "2367:6:7",
																	"type": ""
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "slot",
																		"nativeSrc": "2462:4:7",
																		"nodeType": "YulIdentifier",
																		"src": "2462:4:7"
																	},
																	{
																		"name": "offset",
																		"nativeSrc": "2468:6:7",
																		"nodeType": "YulIdentifier",
																		"src": "2468:6:7"
																	},
																	{
																		"name": "zero_0",
																		"nativeSrc": "2476:6:7",
																		"nodeType": "YulIdentifier",
																		"src": "2476:6:7"
																	}
																],
																"functionName": {
																	"name": "update_storage_value_t_uint256_to_t_uint256",
																	"nativeSrc": "2418:43:7",
																	"nodeType": "YulIdentifier",
																	"src": "2418:43:7"
																},
																"nativeSrc": "2418:65:7",
																"nodeType": "YulFunctionCall",
																"src": "2418:65:7"
															},
															"nativeSrc": "2418:65:7",
															"nodeType": "YulExpressionStatement",
															"src": "2418:65:7"
														}
													]
												},
												"name": "storage_set_to_zero_t_uint256",
												"nativeSrc": "2300:189:7",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "slot",
														"nativeSrc": "2339:4:7",
														"nodeType": "YulTypedName",
														"src": "2339:4:7",
														"type": ""
													},
													{
														"name": "offset",
														"nativeSrc": "2345:6:7",
														"nodeType": "YulTypedName",
														"src": "2345:6:7",
														"type": ""
													}
												],
												"src": "2300:189:7"
											},
											{
												"body": {
													"nativeSrc": "2545:136:7",
													"nodeType": "YulBlock",
													"src": "2545:136:7",
													"statements": [
														{
															"body": {
																"nativeSrc": "2612:63:7",
																"nodeType": "YulBlock",
																"src": "2612:63:7",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"name": "start",
																					"nativeSrc": "2656:5:7",
																					"nodeType": "YulIdentifier",
																					"src": "2656:5:7"
																				},
																				{
																					"kind": "number",
																					"nativeSrc": "2663:1:7",
																					"nodeType": "YulLiteral",
																					"src": "2663:1:7",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "storage_set_to_zero_t_uint256",
																				"nativeSrc": "2626:29:7",
																				"nodeType": "YulIdentifier",
																				"src": "2626:29:7"
																			},
																			"nativeSrc": "2626:39:7",
																			"nodeType": "YulFunctionCall",
																			"src": "2626:39:7"
																		},
																		"nativeSrc": "2626:39:7",
																		"nodeType": "YulExpressionStatement",
																		"src": "2626:39:7"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "start",
																		"nativeSrc": "2565:5:7",
																		"nodeType": "YulIdentifier",
																		"src": "2565:5:7"
																	},
																	{
																		"name": "end",
																		"nativeSrc": "2572:3:7",
																		"nodeType": "YulIdentifier",
																		"src": "2572:3:7"
																	}
																],
																"functionName": {
																	"name": "lt",
																	"nativeSrc": "2562:2:7",
																	"nodeType": "YulIdentifier",
																	"src": "2562:2:7"
																},
																"nativeSrc": "2562:14:7",
																"nodeType": "YulFunctionCall",
																"src": "2562:14:7"
															},
															"nativeSrc": "2555:120:7",
															"nodeType": "YulForLoop",
															"post": {
																"nativeSrc": "2577:26:7",
																"nodeType": "YulBlock",
																"src": "2577:26:7",
																"statements": [
																	{
																		"nativeSrc": "2579:22:7",
																		"nodeType": "YulAssignment",
																		"src": "2579:22:7",
																		"value": {
																			"arguments": [
																				{
																					"name": "start",
																					"nativeSrc": "2592:5:7",
																					"nodeType": "YulIdentifier",
																					"src": "2592:5:7"
																				},
																				{
																					"kind": "number",
																					"nativeSrc": "2599:1:7",
																					"nodeType": "YulLiteral",
																					"src": "2599:1:7",
																					"type": "",
																					"value": "1"
																				}
																			],
																			"functionName": {
																				"name": "add",
																				"nativeSrc": "2588:3:7",
																				"nodeType": "YulIdentifier",
																				"src": "2588:3:7"
																			},
																			"nativeSrc": "2588:13:7",
																			"nodeType": "YulFunctionCall",
																			"src": "2588:13:7"
																		},
																		"variableNames": [
																			{
																				"name": "start",
																				"nativeSrc": "2579:5:7",
																				"nodeType": "YulIdentifier",
																				"src": "2579:5:7"
																			}
																		]
																	}
																]
															},
															"pre": {
																"nativeSrc": "2559:2:7",
																"nodeType": "YulBlock",
																"src": "2559:2:7",
																"statements": []
															},
															"src": "2555:120:7"
														}
													]
												},
												"name": "clear_storage_range_t_bytes1",
												"nativeSrc": "2495:186:7",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "start",
														"nativeSrc": "2533:5:7",
														"nodeType": "YulTypedName",
														"src": "2533:5:7",
														"type": ""
													},
													{
														"name": "end",
														"nativeSrc": "2540:3:7",
														"nodeType": "YulTypedName",
														"src": "2540:3:7",
														"type": ""
													}
												],
												"src": "2495:186:7"
											},
											{
												"body": {
													"nativeSrc": "2766:464:7",
													"nodeType": "YulBlock",
													"src": "2766:464:7",
													"statements": [
														{
															"body": {
																"nativeSrc": "2792:431:7",
																"nodeType": "YulBlock",
																"src": "2792:431:7",
																"statements": [
																	{
																		"nativeSrc": "2806:54:7",
																		"nodeType": "YulVariableDeclaration",
																		"src": "2806:54:7",
																		"value": {
																			"arguments": [
																				{
																					"name": "array",
																					"nativeSrc": "2854:5:7",
																					"nodeType": "YulIdentifier",
																					"src": "2854:5:7"
																				}
																			],
																			"functionName": {
																				"name": "array_dataslot_t_string_storage",
																				"nativeSrc": "2822:31:7",
																				"nodeType": "YulIdentifier",
																				"src": "2822:31:7"
																			},
																			"nativeSrc": "2822:38:7",
																			"nodeType": "YulFunctionCall",
																			"src": "2822:38:7"
																		},
																		"variables": [
																			{
																				"name": "dataArea",
																				"nativeSrc": "2810:8:7",
																				"nodeType": "YulTypedName",
																				"src": "2810:8:7",
																				"type": ""
																			}
																		]
																	},
																	{
																		"nativeSrc": "2873:63:7",
																		"nodeType": "YulVariableDeclaration",
																		"src": "2873:63:7",
																		"value": {
																			"arguments": [
																				{
																					"name": "dataArea",
																					"nativeSrc": "2896:8:7",
																					"nodeType": "YulIdentifier",
																					"src": "2896:8:7"
																				},
																				{
																					"arguments": [
																						{
																							"name": "startIndex",
																							"nativeSrc": "2924:10:7",
																							"nodeType": "YulIdentifier",
																							"src": "2924:10:7"
																						}
																					],
																					"functionName": {
																						"name": "divide_by_32_ceil",
																						"nativeSrc": "2906:17:7",
																						"nodeType": "YulIdentifier",
																						"src": "2906:17:7"
																					},
																					"nativeSrc": "2906:29:7",
																					"nodeType": "YulFunctionCall",
																					"src": "2906:29:7"
																				}
																			],
																			"functionName": {
																				"name": "add",
																				"nativeSrc": "2892:3:7",
																				"nodeType": "YulIdentifier",
																				"src": "2892:3:7"
																			},
																			"nativeSrc": "2892:44:7",
																			"nodeType": "YulFunctionCall",
																			"src": "2892:44:7"
																		},
																		"variables": [
																			{
																				"name": "deleteStart",
																				"nativeSrc": "2877:11:7",
																				"nodeType": "YulTypedName",
																				"src": "2877:11:7",
																				"type": ""
																			}
																		]
																	},
																	{
																		"body": {
																			"nativeSrc": "3093:27:7",
																			"nodeType": "YulBlock",
																			"src": "3093:27:7",
																			"statements": [
																				{
																					"nativeSrc": "3095:23:7",
																					"nodeType": "YulAssignment",
																					"src": "3095:23:7",
																					"value": {
																						"name": "dataArea",
																						"nativeSrc": "3110:8:7",
																						"nodeType": "YulIdentifier",
																						"src": "3110:8:7"
																					},
																					"variableNames": [
																						{
																							"name": "deleteStart",
																							"nativeSrc": "3095:11:7",
																							"nodeType": "YulIdentifier",
																							"src": "3095:11:7"
																						}
																					]
																				}
																			]
																		},
																		"condition": {
																			"arguments": [
																				{
																					"name": "startIndex",
																					"nativeSrc": "3077:10:7",
																					"nodeType": "YulIdentifier",
																					"src": "3077:10:7"
																				},
																				{
																					"kind": "number",
																					"nativeSrc": "3089:2:7",
																					"nodeType": "YulLiteral",
																					"src": "3089:2:7",
																					"type": "",
																					"value": "32"
																				}
																			],
																			"functionName": {
																				"name": "lt",
																				"nativeSrc": "3074:2:7",
																				"nodeType": "YulIdentifier",
																				"src": "3074:2:7"
																			},
																			"nativeSrc": "3074:18:7",
																			"nodeType": "YulFunctionCall",
																			"src": "3074:18:7"
																		},
																		"nativeSrc": "3071:49:7",
																		"nodeType": "YulIf",
																		"src": "3071:49:7"
																	},
																	{
																		"expression": {
																			"arguments": [
																				{
																					"name": "deleteStart",
																					"nativeSrc": "3162:11:7",
																					"nodeType": "YulIdentifier",
																					"src": "3162:11:7"
																				},
																				{
																					"arguments": [
																						{
																							"name": "dataArea",
																							"nativeSrc": "3179:8:7",
																							"nodeType": "YulIdentifier",
																							"src": "3179:8:7"
																						},
																						{
																							"arguments": [
																								{
																									"name": "len",
																									"nativeSrc": "3207:3:7",
																									"nodeType": "YulIdentifier",
																									"src": "3207:3:7"
																								}
																							],
																							"functionName": {
																								"name": "divide_by_32_ceil",
																								"nativeSrc": "3189:17:7",
																								"nodeType": "YulIdentifier",
																								"src": "3189:17:7"
																							},
																							"nativeSrc": "3189:22:7",
																							"nodeType": "YulFunctionCall",
																							"src": "3189:22:7"
																						}
																					],
																					"functionName": {
																						"name": "add",
																						"nativeSrc": "3175:3:7",
																						"nodeType": "YulIdentifier",
																						"src": "3175:3:7"
																					},
																					"nativeSrc": "3175:37:7",
																					"nodeType": "YulFunctionCall",
																					"src": "3175:37:7"
																				}
																			],
																			"functionName": {
																				"name": "clear_storage_range_t_bytes1",
																				"nativeSrc": "3133:28:7",
																				"nodeType": "YulIdentifier",
																				"src": "3133:28:7"
																			},
																			"nativeSrc": "3133:80:7",
																			"nodeType": "YulFunctionCall",
																			"src": "3133:80:7"
																		},
																		"nativeSrc": "3133:80:7",
																		"nodeType": "YulExpressionStatement",
																		"src": "3133:80:7"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "len",
																		"nativeSrc": "2783:3:7",
																		"nodeType": "YulIdentifier",
																		"src": "2783:3:7"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "2788:2:7",
																		"nodeType": "YulLiteral",
																		"src": "2788:2:7",
																		"type": "",
																		"value": "31"
																	}
																],
																"functionName": {
																	"name": "gt",
																	"nativeSrc": "2780:2:7",
																	"nodeType": "YulIdentifier",
																	"src": "2780:2:7"
																},
																"nativeSrc": "2780:11:7",
																"nodeType": "YulFunctionCall",
																"src": "2780:11:7"
															},
															"nativeSrc": "2777:446:7",
															"nodeType": "YulIf",
															"src": "2777:446:7"
														}
													]
												},
												"name": "clean_up_bytearray_end_slots_t_string_storage",
												"nativeSrc": "2687:543:7",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "array",
														"nativeSrc": "2742:5:7",
														"nodeType": "YulTypedName",
														"src": "2742:5:7",
														"type": ""
													},
													{
														"name": "len",
														"nativeSrc": "2749:3:7",
														"nodeType": "YulTypedName",
														"src": "2749:3:7",
														"type": ""
													},
													{
														"name": "startIndex",
														"nativeSrc": "2754:10:7",
														"nodeType": "YulTypedName",
														"src": "2754:10:7",
														"type": ""
													}
												],
												"src": "2687:543:7"
											},
											{
												"body": {
													"nativeSrc": "3299:54:7",
													"nodeType": "YulBlock",
													"src": "3299:54:7",
													"statements": [
														{
															"nativeSrc": "3309:37:7",
															"nodeType": "YulAssignment",
															"src": "3309:37:7",
															"value": {
																"arguments": [
																	{
																		"name": "bits",
																		"nativeSrc": "3334:4:7",
																		"nodeType": "YulIdentifier",
																		"src": "3334:4:7"
																	},
																	{
																		"name": "value",
																		"nativeSrc": "3340:5:7",
																		"nodeType": "YulIdentifier",
																		"src": "3340:5:7"
																	}
																],
																"functionName": {
																	"name": "shr",
																	"nativeSrc": "3330:3:7",
																	"nodeType": "YulIdentifier",
																	"src": "3330:3:7"
																},
																"nativeSrc": "3330:16:7",
																"nodeType": "YulFunctionCall",
																"src": "3330:16:7"
															},
															"variableNames": [
																{
																	"name": "newValue",
																	"nativeSrc": "3309:8:7",
																	"nodeType": "YulIdentifier",
																	"src": "3309:8:7"
																}
															]
														}
													]
												},
												"name": "shift_right_unsigned_dynamic",
												"nativeSrc": "3236:117:7",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "bits",
														"nativeSrc": "3274:4:7",
														"nodeType": "YulTypedName",
														"src": "3274:4:7",
														"type": ""
													},
													{
														"name": "value",
														"nativeSrc": "3280:5:7",
														"nodeType": "YulTypedName",
														"src": "3280:5:7",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "newValue",
														"nativeSrc": "3290:8:7",
														"nodeType": "YulTypedName",
														"src": "3290:8:7",
														"type": ""
													}
												],
												"src": "3236:117:7"
											},
											{
												"body": {
													"nativeSrc": "3410:118:7",
													"nodeType": "YulBlock",
													"src": "3410:118:7",
													"statements": [
														{
															"nativeSrc": "3420:68:7",
															"nodeType": "YulVariableDeclaration",
															"src": "3420:68:7",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"kind": "number",
																						"nativeSrc": "3469:1:7",
																						"nodeType": "YulLiteral",
																						"src": "3469:1:7",
																						"type": "",
																						"value": "8"
																					},
																					{
																						"name": "bytes",
																						"nativeSrc": "3472:5:7",
																						"nodeType": "YulIdentifier",
																						"src": "3472:5:7"
																					}
																				],
																				"functionName": {
																					"name": "mul",
																					"nativeSrc": "3465:3:7",
																					"nodeType": "YulIdentifier",
																					"src": "3465:3:7"
																				},
																				"nativeSrc": "3465:13:7",
																				"nodeType": "YulFunctionCall",
																				"src": "3465:13:7"
																			},
																			{
																				"arguments": [
																					{
																						"kind": "number",
																						"nativeSrc": "3484:1:7",
																						"nodeType": "YulLiteral",
																						"src": "3484:1:7",
																						"type": "",
																						"value": "0"
																					}
																				],
																				"functionName": {
																					"name": "not",
																					"nativeSrc": "3480:3:7",
																					"nodeType": "YulIdentifier",
																					"src": "3480:3:7"
																				},
																				"nativeSrc": "3480:6:7",
																				"nodeType": "YulFunctionCall",
																				"src": "3480:6:7"
																			}
																		],
																		"functionName": {
																			"name": "shift_right_unsigned_dynamic",
																			"nativeSrc": "3436:28:7",
																			"nodeType": "YulIdentifier",
																			"src": "3436:28:7"
																		},
																		"nativeSrc": "3436:51:7",
																		"nodeType": "YulFunctionCall",
																		"src": "3436:51:7"
																	}
																],
																"functionName": {
																	"name": "not",
																	"nativeSrc": "3432:3:7",
																	"nodeType": "YulIdentifier",
																	"src": "3432:3:7"
																},
																"nativeSrc": "3432:56:7",
																"nodeType": "YulFunctionCall",
																"src": "3432:56:7"
															},
															"variables": [
																{
																	"name": "mask",
																	"nativeSrc": "3424:4:7",
																	"nodeType": "YulTypedName",
																	"src": "3424:4:7",
																	"type": ""
																}
															]
														},
														{
															"nativeSrc": "3497:25:7",
															"nodeType": "YulAssignment",
															"src": "3497:25:7",
															"value": {
																"arguments": [
																	{
																		"name": "data",
																		"nativeSrc": "3511:4:7",
																		"nodeType": "YulIdentifier",
																		"src": "3511:4:7"
																	},
																	{
																		"name": "mask",
																		"nativeSrc": "3517:4:7",
																		"nodeType": "YulIdentifier",
																		"src": "3517:4:7"
																	}
																],
																"functionName": {
																	"name": "and",
																	"nativeSrc": "3507:3:7",
																	"nodeType": "YulIdentifier",
																	"src": "3507:3:7"
																},
																"nativeSrc": "3507:15:7",
																"nodeType": "YulFunctionCall",
																"src": "3507:15:7"
															},
															"variableNames": [
																{
																	"name": "result",
																	"nativeSrc": "3497:6:7",
																	"nodeType": "YulIdentifier",
																	"src": "3497:6:7"
																}
															]
														}
													]
												},
												"name": "mask_bytes_dynamic",
												"nativeSrc": "3359:169:7",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "data",
														"nativeSrc": "3387:4:7",
														"nodeType": "YulTypedName",
														"src": "3387:4:7",
														"type": ""
													},
													{
														"name": "bytes",
														"nativeSrc": "3393:5:7",
														"nodeType": "YulTypedName",
														"src": "3393:5:7",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "result",
														"nativeSrc": "3403:6:7",
														"nodeType": "YulTypedName",
														"src": "3403:6:7",
														"type": ""
													}
												],
												"src": "3359:169:7"
											},
											{
												"body": {
													"nativeSrc": "3614:214:7",
													"nodeType": "YulBlock",
													"src": "3614:214:7",
													"statements": [
														{
															"nativeSrc": "3747:37:7",
															"nodeType": "YulAssignment",
															"src": "3747:37:7",
															"value": {
																"arguments": [
																	{
																		"name": "data",
																		"nativeSrc": "3774:4:7",
																		"nodeType": "YulIdentifier",
																		"src": "3774:4:7"
																	},
																	{
																		"name": "len",
																		"nativeSrc": "3780:3:7",
																		"nodeType": "YulIdentifier",
																		"src": "3780:3:7"
																	}
																],
																"functionName": {
																	"name": "mask_bytes_dynamic",
																	"nativeSrc": "3755:18:7",
																	"nodeType": "YulIdentifier",
																	"src": "3755:18:7"
																},
																"nativeSrc": "3755:29:7",
																"nodeType": "YulFunctionCall",
																"src": "3755:29:7"
															},
															"variableNames": [
																{
																	"name": "data",
																	"nativeSrc": "3747:4:7",
																	"nodeType": "YulIdentifier",
																	"src": "3747:4:7"
																}
															]
														},
														{
															"nativeSrc": "3793:29:7",
															"nodeType": "YulAssignment",
															"src": "3793:29:7",
															"value": {
																"arguments": [
																	{
																		"name": "data",
																		"nativeSrc": "3804:4:7",
																		"nodeType": "YulIdentifier",
																		"src": "3804:4:7"
																	},
																	{
																		"arguments": [
																			{
																				"kind": "number",
																				"nativeSrc": "3814:1:7",
																				"nodeType": "YulLiteral",
																				"src": "3814:1:7",
																				"type": "",
																				"value": "2"
																			},
																			{
																				"name": "len",
																				"nativeSrc": "3817:3:7",
																				"nodeType": "YulIdentifier",
																				"src": "3817:3:7"
																			}
																		],
																		"functionName": {
																			"name": "mul",
																			"nativeSrc": "3810:3:7",
																			"nodeType": "YulIdentifier",
																			"src": "3810:3:7"
																		},
																		"nativeSrc": "3810:11:7",
																		"nodeType": "YulFunctionCall",
																		"src": "3810:11:7"
																	}
																],
																"functionName": {
																	"name": "or",
																	"nativeSrc": "3801:2:7",
																	"nodeType": "YulIdentifier",
																	"src": "3801:2:7"
																},
																"nativeSrc": "3801:21:7",
																"nodeType": "YulFunctionCall",
																"src": "3801:21:7"
															},
															"variableNames": [
																{
																	"name": "used",
																	"nativeSrc": "3793:4:7",
																	"nodeType": "YulIdentifier",
																	"src": "3793:4:7"
																}
															]
														}
													]
												},
												"name": "extract_used_part_and_set_length_of_short_byte_array",
												"nativeSrc": "3533:295:7",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "data",
														"nativeSrc": "3595:4:7",
														"nodeType": "YulTypedName",
														"src": "3595:4:7",
														"type": ""
													},
													{
														"name": "len",
														"nativeSrc": "3601:3:7",
														"nodeType": "YulTypedName",
														"src": "3601:3:7",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "used",
														"nativeSrc": "3609:4:7",
														"nodeType": "YulTypedName",
														"src": "3609:4:7",
														"type": ""
													}
												],
												"src": "3533:295:7"
											},
											{
												"body": {
													"nativeSrc": "3925:1303:7",
													"nodeType": "YulBlock",
													"src": "3925:1303:7",
													"statements": [
														{
															"nativeSrc": "3936:51:7",
															"nodeType": "YulVariableDeclaration",
															"src": "3936:51:7",
															"value": {
																"arguments": [
																	{
																		"name": "src",
																		"nativeSrc": "3983:3:7",
																		"nodeType": "YulIdentifier",
																		"src": "3983:3:7"
																	}
																],
																"functionName": {
																	"name": "array_length_t_string_memory_ptr",
																	"nativeSrc": "3950:32:7",
																	"nodeType": "YulIdentifier",
																	"src": "3950:32:7"
																},
																"nativeSrc": "3950:37:7",
																"nodeType": "YulFunctionCall",
																"src": "3950:37:7"
															},
															"variables": [
																{
																	"name": "newLen",
																	"nativeSrc": "3940:6:7",
																	"nodeType": "YulTypedName",
																	"src": "3940:6:7",
																	"type": ""
																}
															]
														},
														{
															"body": {
																"nativeSrc": "4072:22:7",
																"nodeType": "YulBlock",
																"src": "4072:22:7",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "panic_error_0x41",
																				"nativeSrc": "4074:16:7",
																				"nodeType": "YulIdentifier",
																				"src": "4074:16:7"
																			},
																			"nativeSrc": "4074:18:7",
																			"nodeType": "YulFunctionCall",
																			"src": "4074:18:7"
																		},
																		"nativeSrc": "4074:18:7",
																		"nodeType": "YulExpressionStatement",
																		"src": "4074:18:7"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "newLen",
																		"nativeSrc": "4044:6:7",
																		"nodeType": "YulIdentifier",
																		"src": "4044:6:7"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "4052:18:7",
																		"nodeType": "YulLiteral",
																		"src": "4052:18:7",
																		"type": "",
																		"value": "0xffffffffffffffff"
																	}
																],
																"functionName": {
																	"name": "gt",
																	"nativeSrc": "4041:2:7",
																	"nodeType": "YulIdentifier",
																	"src": "4041:2:7"
																},
																"nativeSrc": "4041:30:7",
																"nodeType": "YulFunctionCall",
																"src": "4041:30:7"
															},
															"nativeSrc": "4038:56:7",
															"nodeType": "YulIf",
															"src": "4038:56:7"
														},
														{
															"nativeSrc": "4104:52:7",
															"nodeType": "YulVariableDeclaration",
															"src": "4104:52:7",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "slot",
																				"nativeSrc": "4150:4:7",
																				"nodeType": "YulIdentifier",
																				"src": "4150:4:7"
																			}
																		],
																		"functionName": {
																			"name": "sload",
																			"nativeSrc": "4144:5:7",
																			"nodeType": "YulIdentifier",
																			"src": "4144:5:7"
																		},
																		"nativeSrc": "4144:11:7",
																		"nodeType": "YulFunctionCall",
																		"src": "4144:11:7"
																	}
																],
																"functionName": {
																	"name": "extract_byte_array_length",
																	"nativeSrc": "4118:25:7",
																	"nodeType": "YulIdentifier",
																	"src": "4118:25:7"
																},
																"nativeSrc": "4118:38:7",
																"nodeType": "YulFunctionCall",
																"src": "4118:38:7"
															},
															"variables": [
																{
																	"name": "oldLen",
																	"nativeSrc": "4108:6:7",
																	"nodeType": "YulTypedName",
																	"src": "4108:6:7",
																	"type": ""
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "slot",
																		"nativeSrc": "4249:4:7",
																		"nodeType": "YulIdentifier",
																		"src": "4249:4:7"
																	},
																	{
																		"name": "oldLen",
																		"nativeSrc": "4255:6:7",
																		"nodeType": "YulIdentifier",
																		"src": "4255:6:7"
																	},
																	{
																		"name": "newLen",
																		"nativeSrc": "4263:6:7",
																		"nodeType": "YulIdentifier",
																		"src": "4263:6:7"
																	}
																],
																"functionName": {
																	"name": "clean_up_bytearray_end_slots_t_string_storage",
																	"nativeSrc": "4203:45:7",
																	"nodeType": "YulIdentifier",
																	"src": "4203:45:7"
																},
																"nativeSrc": "4203:67:7",
																"nodeType": "YulFunctionCall",
																"src": "4203:67:7"
															},
															"nativeSrc": "4203:67:7",
															"nodeType": "YulExpressionStatement",
															"src": "4203:67:7"
														},
														{
															"nativeSrc": "4280:18:7",
															"nodeType": "YulVariableDeclaration",
															"src": "4280:18:7",
															"value": {
																"kind": "number",
																"nativeSrc": "4297:1:7",
																"nodeType": "YulLiteral",
																"src": "4297:1:7",
																"type": "",
																"value": "0"
															},
															"variables": [
																{
																	"name": "srcOffset",
																	"nativeSrc": "4284:9:7",
																	"nodeType": "YulTypedName",
																	"src": "4284:9:7",
																	"type": ""
																}
															]
														},
														{
															"nativeSrc": "4308:17:7",
															"nodeType": "YulAssignment",
															"src": "4308:17:7",
															"value": {
																"kind": "number",
																"nativeSrc": "4321:4:7",
																"nodeType": "YulLiteral",
																"src": "4321:4:7",
																"type": "",
																"value": "0x20"
															},
															"variableNames": [
																{
																	"name": "srcOffset",
																	"nativeSrc": "4308:9:7",
																	"nodeType": "YulIdentifier",
																	"src": "4308:9:7"
																}
															]
														},
														{
															"cases": [
																{
																	"body": {
																		"nativeSrc": "4372:611:7",
																		"nodeType": "YulBlock",
																		"src": "4372:611:7",
																		"statements": [
																			{
																				"nativeSrc": "4386:37:7",
																				"nodeType": "YulVariableDeclaration",
																				"src": "4386:37:7",
																				"value": {
																					"arguments": [
																						{
																							"name": "newLen",
																							"nativeSrc": "4405:6:7",
																							"nodeType": "YulIdentifier",
																							"src": "4405:6:7"
																						},
																						{
																							"arguments": [
																								{
																									"kind": "number",
																									"nativeSrc": "4417:4:7",
																									"nodeType": "YulLiteral",
																									"src": "4417:4:7",
																									"type": "",
																									"value": "0x1f"
																								}
																							],
																							"functionName": {
																								"name": "not",
																								"nativeSrc": "4413:3:7",
																								"nodeType": "YulIdentifier",
																								"src": "4413:3:7"
																							},
																							"nativeSrc": "4413:9:7",
																							"nodeType": "YulFunctionCall",
																							"src": "4413:9:7"
																						}
																					],
																					"functionName": {
																						"name": "and",
																						"nativeSrc": "4401:3:7",
																						"nodeType": "YulIdentifier",
																						"src": "4401:3:7"
																					},
																					"nativeSrc": "4401:22:7",
																					"nodeType": "YulFunctionCall",
																					"src": "4401:22:7"
																				},
																				"variables": [
																					{
																						"name": "loopEnd",
																						"nativeSrc": "4390:7:7",
																						"nodeType": "YulTypedName",
																						"src": "4390:7:7",
																						"type": ""
																					}
																				]
																			},
																			{
																				"nativeSrc": "4437:51:7",
																				"nodeType": "YulVariableDeclaration",
																				"src": "4437:51:7",
																				"value": {
																					"arguments": [
																						{
																							"name": "slot",
																							"nativeSrc": "4483:4:7",
																							"nodeType": "YulIdentifier",
																							"src": "4483:4:7"
																						}
																					],
																					"functionName": {
																						"name": "array_dataslot_t_string_storage",
																						"nativeSrc": "4451:31:7",
																						"nodeType": "YulIdentifier",
																						"src": "4451:31:7"
																					},
																					"nativeSrc": "4451:37:7",
																					"nodeType": "YulFunctionCall",
																					"src": "4451:37:7"
																				},
																				"variables": [
																					{
																						"name": "dstPtr",
																						"nativeSrc": "4441:6:7",
																						"nodeType": "YulTypedName",
																						"src": "4441:6:7",
																						"type": ""
																					}
																				]
																			},
																			{
																				"nativeSrc": "4501:10:7",
																				"nodeType": "YulVariableDeclaration",
																				"src": "4501:10:7",
																				"value": {
																					"kind": "number",
																					"nativeSrc": "4510:1:7",
																					"nodeType": "YulLiteral",
																					"src": "4510:1:7",
																					"type": "",
																					"value": "0"
																				},
																				"variables": [
																					{
																						"name": "i",
																						"nativeSrc": "4505:1:7",
																						"nodeType": "YulTypedName",
																						"src": "4505:1:7",
																						"type": ""
																					}
																				]
																			},
																			{
																				"body": {
																					"nativeSrc": "4569:163:7",
																					"nodeType": "YulBlock",
																					"src": "4569:163:7",
																					"statements": [
																						{
																							"expression": {
																								"arguments": [
																									{
																										"name": "dstPtr",
																										"nativeSrc": "4594:6:7",
																										"nodeType": "YulIdentifier",
																										"src": "4594:6:7"
																									},
																									{
																										"arguments": [
																											{
																												"arguments": [
																													{
																														"name": "src",
																														"nativeSrc": "4612:3:7",
																														"nodeType": "YulIdentifier",
																														"src": "4612:3:7"
																													},
																													{
																														"name": "srcOffset",
																														"nativeSrc": "4617:9:7",
																														"nodeType": "YulIdentifier",
																														"src": "4617:9:7"
																													}
																												],
																												"functionName": {
																													"name": "add",
																													"nativeSrc": "4608:3:7",
																													"nodeType": "YulIdentifier",
																													"src": "4608:3:7"
																												},
																												"nativeSrc": "4608:19:7",
																												"nodeType": "YulFunctionCall",
																												"src": "4608:19:7"
																											}
																										],
																										"functionName": {
																											"name": "mload",
																											"nativeSrc": "4602:5:7",
																											"nodeType": "YulIdentifier",
																											"src": "4602:5:7"
																										},
																										"nativeSrc": "4602:26:7",
																										"nodeType": "YulFunctionCall",
																										"src": "4602:26:7"
																									}
																								],
																								"functionName": {
																									"name": "sstore",
																									"nativeSrc": "4587:6:7",
																									"nodeType": "YulIdentifier",
																									"src": "4587:6:7"
																								},
																								"nativeSrc": "4587:42:7",
																								"nodeType": "YulFunctionCall",
																								"src": "4587:42:7"
																							},
																							"nativeSrc": "4587:42:7",
																							"nodeType": "YulExpressionStatement",
																							"src": "4587:42:7"
																						},
																						{
																							"nativeSrc": "4646:24:7",
																							"nodeType": "YulAssignment",
																							"src": "4646:24:7",
																							"value": {
																								"arguments": [
																									{
																										"name": "dstPtr",
																										"nativeSrc": "4660:6:7",
																										"nodeType": "YulIdentifier",
																										"src": "4660:6:7"
																									},
																									{
																										"kind": "number",
																										"nativeSrc": "4668:1:7",
																										"nodeType": "YulLiteral",
																										"src": "4668:1:7",
																										"type": "",
																										"value": "1"
																									}
																								],
																								"functionName": {
																									"name": "add",
																									"nativeSrc": "4656:3:7",
																									"nodeType": "YulIdentifier",
																									"src": "4656:3:7"
																								},
																								"nativeSrc": "4656:14:7",
																								"nodeType": "YulFunctionCall",
																								"src": "4656:14:7"
																							},
																							"variableNames": [
																								{
																									"name": "dstPtr",
																									"nativeSrc": "4646:6:7",
																									"nodeType": "YulIdentifier",
																									"src": "4646:6:7"
																								}
																							]
																						},
																						{
																							"nativeSrc": "4687:31:7",
																							"nodeType": "YulAssignment",
																							"src": "4687:31:7",
																							"value": {
																								"arguments": [
																									{
																										"name": "srcOffset",
																										"nativeSrc": "4704:9:7",
																										"nodeType": "YulIdentifier",
																										"src": "4704:9:7"
																									},
																									{
																										"kind": "number",
																										"nativeSrc": "4715:2:7",
																										"nodeType": "YulLiteral",
																										"src": "4715:2:7",
																										"type": "",
																										"value": "32"
																									}
																								],
																								"functionName": {
																									"name": "add",
																									"nativeSrc": "4700:3:7",
																									"nodeType": "YulIdentifier",
																									"src": "4700:3:7"
																								},
																								"nativeSrc": "4700:18:7",
																								"nodeType": "YulFunctionCall",
																								"src": "4700:18:7"
																							},
																							"variableNames": [
																								{
																									"name": "srcOffset",
																									"nativeSrc": "4687:9:7",
																									"nodeType": "YulIdentifier",
																									"src": "4687:9:7"
																								}
																							]
																						}
																					]
																				},
																				"condition": {
																					"arguments": [
																						{
																							"name": "i",
																							"nativeSrc": "4535:1:7",
																							"nodeType": "YulIdentifier",
																							"src": "4535:1:7"
																						},
																						{
																							"name": "loopEnd",
																							"nativeSrc": "4538:7:7",
																							"nodeType": "YulIdentifier",
																							"src": "4538:7:7"
																						}
																					],
																					"functionName": {
																						"name": "lt",
																						"nativeSrc": "4532:2:7",
																						"nodeType": "YulIdentifier",
																						"src": "4532:2:7"
																					},
																					"nativeSrc": "4532:14:7",
																					"nodeType": "YulFunctionCall",
																					"src": "4532:14:7"
																				},
																				"nativeSrc": "4524:208:7",
																				"nodeType": "YulForLoop",
																				"post": {
																					"nativeSrc": "4547:21:7",
																					"nodeType": "YulBlock",
																					"src": "4547:21:7",
																					"statements": [
																						{
																							"nativeSrc": "4549:17:7",
																							"nodeType": "YulAssignment",
																							"src": "4549:17:7",
																							"value": {
																								"arguments": [
																									{
																										"name": "i",
																										"nativeSrc": "4558:1:7",
																										"nodeType": "YulIdentifier",
																										"src": "4558:1:7"
																									},
																									{
																										"kind": "number",
																										"nativeSrc": "4561:4:7",
																										"nodeType": "YulLiteral",
																										"src": "4561:4:7",
																										"type": "",
																										"value": "0x20"
																									}
																								],
																								"functionName": {
																									"name": "add",
																									"nativeSrc": "4554:3:7",
																									"nodeType": "YulIdentifier",
																									"src": "4554:3:7"
																								},
																								"nativeSrc": "4554:12:7",
																								"nodeType": "YulFunctionCall",
																								"src": "4554:12:7"
																							},
																							"variableNames": [
																								{
																									"name": "i",
																									"nativeSrc": "4549:1:7",
																									"nodeType": "YulIdentifier",
																									"src": "4549:1:7"
																								}
																							]
																						}
																					]
																				},
																				"pre": {
																					"nativeSrc": "4528:3:7",
																					"nodeType": "YulBlock",
																					"src": "4528:3:7",
																					"statements": []
																				},
																				"src": "4524:208:7"
																			},
																			{
																				"body": {
																					"nativeSrc": "4768:156:7",
																					"nodeType": "YulBlock",
																					"src": "4768:156:7",
																					"statements": [
																						{
																							"nativeSrc": "4786:43:7",
																							"nodeType": "YulVariableDeclaration",
																							"src": "4786:43:7",
																							"value": {
																								"arguments": [
																									{
																										"arguments": [
																											{
																												"name": "src",
																												"nativeSrc": "4813:3:7",
																												"nodeType": "YulIdentifier",
																												"src": "4813:3:7"
																											},
																											{
																												"name": "srcOffset",
																												"nativeSrc": "4818:9:7",
																												"nodeType": "YulIdentifier",
																												"src": "4818:9:7"
																											}
																										],
																										"functionName": {
																											"name": "add",
																											"nativeSrc": "4809:3:7",
																											"nodeType": "YulIdentifier",
																											"src": "4809:3:7"
																										},
																										"nativeSrc": "4809:19:7",
																										"nodeType": "YulFunctionCall",
																										"src": "4809:19:7"
																									}
																								],
																								"functionName": {
																									"name": "mload",
																									"nativeSrc": "4803:5:7",
																									"nodeType": "YulIdentifier",
																									"src": "4803:5:7"
																								},
																								"nativeSrc": "4803:26:7",
																								"nodeType": "YulFunctionCall",
																								"src": "4803:26:7"
																							},
																							"variables": [
																								{
																									"name": "lastValue",
																									"nativeSrc": "4790:9:7",
																									"nodeType": "YulTypedName",
																									"src": "4790:9:7",
																									"type": ""
																								}
																							]
																						},
																						{
																							"expression": {
																								"arguments": [
																									{
																										"name": "dstPtr",
																										"nativeSrc": "4853:6:7",
																										"nodeType": "YulIdentifier",
																										"src": "4853:6:7"
																									},
																									{
																										"arguments": [
																											{
																												"name": "lastValue",
																												"nativeSrc": "4880:9:7",
																												"nodeType": "YulIdentifier",
																												"src": "4880:9:7"
																											},
																											{
																												"arguments": [
																													{
																														"name": "newLen",
																														"nativeSrc": "4895:6:7",
																														"nodeType": "YulIdentifier",
																														"src": "4895:6:7"
																													},
																													{
																														"kind": "number",
																														"nativeSrc": "4903:4:7",
																														"nodeType": "YulLiteral",
																														"src": "4903:4:7",
																														"type": "",
																														"value": "0x1f"
																													}
																												],
																												"functionName": {
																													"name": "and",
																													"nativeSrc": "4891:3:7",
																													"nodeType": "YulIdentifier",
																													"src": "4891:3:7"
																												},
																												"nativeSrc": "4891:17:7",
																												"nodeType": "YulFunctionCall",
																												"src": "4891:17:7"
																											}
																										],
																										"functionName": {
																											"name": "mask_bytes_dynamic",
																											"nativeSrc": "4861:18:7",
																											"nodeType": "YulIdentifier",
																											"src": "4861:18:7"
																										},
																										"nativeSrc": "4861:48:7",
																										"nodeType": "YulFunctionCall",
																										"src": "4861:48:7"
																									}
																								],
																								"functionName": {
																									"name": "sstore",
																									"nativeSrc": "4846:6:7",
																									"nodeType": "YulIdentifier",
																									"src": "4846:6:7"
																								},
																								"nativeSrc": "4846:64:7",
																								"nodeType": "YulFunctionCall",
																								"src": "4846:64:7"
																							},
																							"nativeSrc": "4846:64:7",
																							"nodeType": "YulExpressionStatement",
																							"src": "4846:64:7"
																						}
																					]
																				},
																				"condition": {
																					"arguments": [
																						{
																							"name": "loopEnd",
																							"nativeSrc": "4751:7:7",
																							"nodeType": "YulIdentifier",
																							"src": "4751:7:7"
																						},
																						{
																							"name": "newLen",
																							"nativeSrc": "4760:6:7",
																							"nodeType": "YulIdentifier",
																							"src": "4760:6:7"
																						}
																					],
																					"functionName": {
																						"name": "lt",
																						"nativeSrc": "4748:2:7",
																						"nodeType": "YulIdentifier",
																						"src": "4748:2:7"
																					},
																					"nativeSrc": "4748:19:7",
																					"nodeType": "YulFunctionCall",
																					"src": "4748:19:7"
																				},
																				"nativeSrc": "4745:179:7",
																				"nodeType": "YulIf",
																				"src": "4745:179:7"
																			},
																			{
																				"expression": {
																					"arguments": [
																						{
																							"name": "slot",
																							"nativeSrc": "4944:4:7",
																							"nodeType": "YulIdentifier",
																							"src": "4944:4:7"
																						},
																						{
																							"arguments": [
																								{
																									"arguments": [
																										{
																											"name": "newLen",
																											"nativeSrc": "4958:6:7",
																											"nodeType": "YulIdentifier",
																											"src": "4958:6:7"
																										},
																										{
																											"kind": "number",
																											"nativeSrc": "4966:1:7",
																											"nodeType": "YulLiteral",
																											"src": "4966:1:7",
																											"type": "",
																											"value": "2"
																										}
																									],
																									"functionName": {
																										"name": "mul",
																										"nativeSrc": "4954:3:7",
																										"nodeType": "YulIdentifier",
																										"src": "4954:3:7"
																									},
																									"nativeSrc": "4954:14:7",
																									"nodeType": "YulFunctionCall",
																									"src": "4954:14:7"
																								},
																								{
																									"kind": "number",
																									"nativeSrc": "4970:1:7",
																									"nodeType": "YulLiteral",
																									"src": "4970:1:7",
																									"type": "",
																									"value": "1"
																								}
																							],
																							"functionName": {
																								"name": "add",
																								"nativeSrc": "4950:3:7",
																								"nodeType": "YulIdentifier",
																								"src": "4950:3:7"
																							},
																							"nativeSrc": "4950:22:7",
																							"nodeType": "YulFunctionCall",
																							"src": "4950:22:7"
																						}
																					],
																					"functionName": {
																						"name": "sstore",
																						"nativeSrc": "4937:6:7",
																						"nodeType": "YulIdentifier",
																						"src": "4937:6:7"
																					},
																					"nativeSrc": "4937:36:7",
																					"nodeType": "YulFunctionCall",
																					"src": "4937:36:7"
																				},
																				"nativeSrc": "4937:36:7",
																				"nodeType": "YulExpressionStatement",
																				"src": "4937:36:7"
																			}
																		]
																	},
																	"nativeSrc": "4365:618:7",
																	"nodeType": "YulCase",
																	"src": "4365:618:7",
																	"value": {
																		"kind": "number",
																		"nativeSrc": "4370:1:7",
																		"nodeType": "YulLiteral",
																		"src": "4370:1:7",
																		"type": "",
																		"value": "1"
																	}
																},
																{
																	"body": {
																		"nativeSrc": "5000:222:7",
																		"nodeType": "YulBlock",
																		"src": "5000:222:7",
																		"statements": [
																			{
																				"nativeSrc": "5014:14:7",
																				"nodeType": "YulVariableDeclaration",
																				"src": "5014:14:7",
																				"value": {
																					"kind": "number",
																					"nativeSrc": "5027:1:7",
																					"nodeType": "YulLiteral",
																					"src": "5027:1:7",
																					"type": "",
																					"value": "0"
																				},
																				"variables": [
																					{
																						"name": "value",
																						"nativeSrc": "5018:5:7",
																						"nodeType": "YulTypedName",
																						"src": "5018:5:7",
																						"type": ""
																					}
																				]
																			},
																			{
																				"body": {
																					"nativeSrc": "5051:67:7",
																					"nodeType": "YulBlock",
																					"src": "5051:67:7",
																					"statements": [
																						{
																							"nativeSrc": "5069:35:7",
																							"nodeType": "YulAssignment",
																							"src": "5069:35:7",
																							"value": {
																								"arguments": [
																									{
																										"arguments": [
																											{
																												"name": "src",
																												"nativeSrc": "5088:3:7",
																												"nodeType": "YulIdentifier",
																												"src": "5088:3:7"
																											},
																											{
																												"name": "srcOffset",
																												"nativeSrc": "5093:9:7",
																												"nodeType": "YulIdentifier",
																												"src": "5093:9:7"
																											}
																										],
																										"functionName": {
																											"name": "add",
																											"nativeSrc": "5084:3:7",
																											"nodeType": "YulIdentifier",
																											"src": "5084:3:7"
																										},
																										"nativeSrc": "5084:19:7",
																										"nodeType": "YulFunctionCall",
																										"src": "5084:19:7"
																									}
																								],
																								"functionName": {
																									"name": "mload",
																									"nativeSrc": "5078:5:7",
																									"nodeType": "YulIdentifier",
																									"src": "5078:5:7"
																								},
																								"nativeSrc": "5078:26:7",
																								"nodeType": "YulFunctionCall",
																								"src": "5078:26:7"
																							},
																							"variableNames": [
																								{
																									"name": "value",
																									"nativeSrc": "5069:5:7",
																									"nodeType": "YulIdentifier",
																									"src": "5069:5:7"
																								}
																							]
																						}
																					]
																				},
																				"condition": {
																					"name": "newLen",
																					"nativeSrc": "5044:6:7",
																					"nodeType": "YulIdentifier",
																					"src": "5044:6:7"
																				},
																				"nativeSrc": "5041:77:7",
																				"nodeType": "YulIf",
																				"src": "5041:77:7"
																			},
																			{
																				"expression": {
																					"arguments": [
																						{
																							"name": "slot",
																							"nativeSrc": "5138:4:7",
																							"nodeType": "YulIdentifier",
																							"src": "5138:4:7"
																						},
																						{
																							"arguments": [
																								{
																									"name": "value",
																									"nativeSrc": "5197:5:7",
																									"nodeType": "YulIdentifier",
																									"src": "5197:5:7"
																								},
																								{
																									"name": "newLen",
																									"nativeSrc": "5204:6:7",
																									"nodeType": "YulIdentifier",
																									"src": "5204:6:7"
																								}
																							],
																							"functionName": {
																								"name": "extract_used_part_and_set_length_of_short_byte_array",
																								"nativeSrc": "5144:52:7",
																								"nodeType": "YulIdentifier",
																								"src": "5144:52:7"
																							},
																							"nativeSrc": "5144:67:7",
																							"nodeType": "YulFunctionCall",
																							"src": "5144:67:7"
																						}
																					],
																					"functionName": {
																						"name": "sstore",
																						"nativeSrc": "5131:6:7",
																						"nodeType": "YulIdentifier",
																						"src": "5131:6:7"
																					},
																					"nativeSrc": "5131:81:7",
																					"nodeType": "YulFunctionCall",
																					"src": "5131:81:7"
																				},
																				"nativeSrc": "5131:81:7",
																				"nodeType": "YulExpressionStatement",
																				"src": "5131:81:7"
																			}
																		]
																	},
																	"nativeSrc": "4992:230:7",
																	"nodeType": "YulCase",
																	"src": "4992:230:7",
																	"value": "default"
																}
															],
															"expression": {
																"arguments": [
																	{
																		"name": "newLen",
																		"nativeSrc": "4345:6:7",
																		"nodeType": "YulIdentifier",
																		"src": "4345:6:7"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "4353:2:7",
																		"nodeType": "YulLiteral",
																		"src": "4353:2:7",
																		"type": "",
																		"value": "31"
																	}
																],
																"functionName": {
																	"name": "gt",
																	"nativeSrc": "4342:2:7",
																	"nodeType": "YulIdentifier",
																	"src": "4342:2:7"
																},
																"nativeSrc": "4342:14:7",
																"nodeType": "YulFunctionCall",
																"src": "4342:14:7"
															},
															"nativeSrc": "4335:887:7",
															"nodeType": "YulSwitch",
															"src": "4335:887:7"
														}
													]
												},
												"name": "copy_byte_array_to_storage_from_t_string_memory_ptr_to_t_string_storage",
												"nativeSrc": "3833:1395:7",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "slot",
														"nativeSrc": "3914:4:7",
														"nodeType": "YulTypedName",
														"src": "3914:4:7",
														"type": ""
													},
													{
														"name": "src",
														"nativeSrc": "3920:3:7",
														"nodeType": "YulTypedName",
														"src": "3920:3:7",
														"type": ""
													}
												],
												"src": "3833:1395:7"
											},
											{
												"body": {
													"nativeSrc": "5274:35:7",
													"nodeType": "YulBlock",
													"src": "5274:35:7",
													"statements": [
														{
															"nativeSrc": "5284:19:7",
															"nodeType": "YulAssignment",
															"src": "5284:19:7",
															"value": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "5300:2:7",
																		"nodeType": "YulLiteral",
																		"src": "5300:2:7",
																		"type": "",
																		"value": "64"
																	}
																],
																"functionName": {
																	"name": "mload",
																	"nativeSrc": "5294:5:7",
																	"nodeType": "YulIdentifier",
																	"src": "5294:5:7"
																},
																"nativeSrc": "5294:9:7",
																"nodeType": "YulFunctionCall",
																"src": "5294:9:7"
															},
															"variableNames": [
																{
																	"name": "memPtr",
																	"nativeSrc": "5284:6:7",
																	"nodeType": "YulIdentifier",
																	"src": "5284:6:7"
																}
															]
														}
													]
												},
												"name": "allocate_unbounded",
												"nativeSrc": "5234:75:7",
												"nodeType": "YulFunctionDefinition",
												"returnVariables": [
													{
														"name": "memPtr",
														"nativeSrc": "5267:6:7",
														"nodeType": "YulTypedName",
														"src": "5267:6:7",
														"type": ""
													}
												],
												"src": "5234:75:7"
											},
											{
												"body": {
													"nativeSrc": "5404:28:7",
													"nodeType": "YulBlock",
													"src": "5404:28:7",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "5421:1:7",
																		"nodeType": "YulLiteral",
																		"src": "5421:1:7",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "5424:1:7",
																		"nodeType": "YulLiteral",
																		"src": "5424:1:7",
																		"type": "",
																		"value": "0"
																	}
																],
																"functionName": {
																	"name": "revert",
																	"nativeSrc": "5414:6:7",
																	"nodeType": "YulIdentifier",
																	"src": "5414:6:7"
																},
																"nativeSrc": "5414:12:7",
																"nodeType": "YulFunctionCall",
																"src": "5414:12:7"
															},
															"nativeSrc": "5414:12:7",
															"nodeType": "YulExpressionStatement",
															"src": "5414:12:7"
														}
													]
												},
												"name": "revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b",
												"nativeSrc": "5315:117:7",
												"nodeType": "YulFunctionDefinition",
												"src": "5315:117:7"
											},
											{
												"body": {
													"nativeSrc": "5527:28:7",
													"nodeType": "YulBlock",
													"src": "5527:28:7",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "5544:1:7",
																		"nodeType": "YulLiteral",
																		"src": "5544:1:7",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "5547:1:7",
																		"nodeType": "YulLiteral",
																		"src": "5547:1:7",
																		"type": "",
																		"value": "0"
																	}
																],
																"functionName": {
																	"name": "revert",
																	"nativeSrc": "5537:6:7",
																	"nodeType": "YulIdentifier",
																	"src": "5537:6:7"
																},
																"nativeSrc": "5537:12:7",
																"nodeType": "YulFunctionCall",
																"src": "5537:12:7"
															},
															"nativeSrc": "5537:12:7",
															"nodeType": "YulExpressionStatement",
															"src": "5537:12:7"
														}
													]
												},
												"name": "revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db",
												"nativeSrc": "5438:117:7",
												"nodeType": "YulFunctionDefinition",
												"src": "5438:117:7"
											},
											{
												"body": {
													"nativeSrc": "5650:28:7",
													"nodeType": "YulBlock",
													"src": "5650:28:7",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "5667:1:7",
																		"nodeType": "YulLiteral",
																		"src": "5667:1:7",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "5670:1:7",
																		"nodeType": "YulLiteral",
																		"src": "5670:1:7",
																		"type": "",
																		"value": "0"
																	}
																],
																"functionName": {
																	"name": "revert",
																	"nativeSrc": "5660:6:7",
																	"nodeType": "YulIdentifier",
																	"src": "5660:6:7"
																},
																"nativeSrc": "5660:12:7",
																"nodeType": "YulFunctionCall",
																"src": "5660:12:7"
															},
															"nativeSrc": "5660:12:7",
															"nodeType": "YulExpressionStatement",
															"src": "5660:12:7"
														}
													]
												},
												"name": "revert_error_1b9f4a0a5773e33b91aa01db23bf8c55fce1411167c872835e7fa00a4f17d46d",
												"nativeSrc": "5561:117:7",
												"nodeType": "YulFunctionDefinition",
												"src": "5561:117:7"
											},
											{
												"body": {
													"nativeSrc": "5773:28:7",
													"nodeType": "YulBlock",
													"src": "5773:28:7",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "5790:1:7",
																		"nodeType": "YulLiteral",
																		"src": "5790:1:7",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "5793:1:7",
																		"nodeType": "YulLiteral",
																		"src": "5793:1:7",
																		"type": "",
																		"value": "0"
																	}
																],
																"functionName": {
																	"name": "revert",
																	"nativeSrc": "5783:6:7",
																	"nodeType": "YulIdentifier",
																	"src": "5783:6:7"
																},
																"nativeSrc": "5783:12:7",
																"nodeType": "YulFunctionCall",
																"src": "5783:12:7"
															},
															"nativeSrc": "5783:12:7",
															"nodeType": "YulExpressionStatement",
															"src": "5783:12:7"
														}
													]
												},
												"name": "revert_error_987264b3b1d58a9c7f8255e93e81c77d86d6299019c33110a076957a3e06e2ae",
												"nativeSrc": "5684:117:7",
												"nodeType": "YulFunctionDefinition",
												"src": "5684:117:7"
											},
											{
												"body": {
													"nativeSrc": "5855:54:7",
													"nodeType": "YulBlock",
													"src": "5855:54:7",
													"statements": [
														{
															"nativeSrc": "5865:38:7",
															"nodeType": "YulAssignment",
															"src": "5865:38:7",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nativeSrc": "5883:5:7",
																				"nodeType": "YulIdentifier",
																				"src": "5883:5:7"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "5890:2:7",
																				"nodeType": "YulLiteral",
																				"src": "5890:2:7",
																				"type": "",
																				"value": "31"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "5879:3:7",
																			"nodeType": "YulIdentifier",
																			"src": "5879:3:7"
																		},
																		"nativeSrc": "5879:14:7",
																		"nodeType": "YulFunctionCall",
																		"src": "5879:14:7"
																	},
																	{
																		"arguments": [
																			{
																				"kind": "number",
																				"nativeSrc": "5899:2:7",
																				"nodeType": "YulLiteral",
																				"src": "5899:2:7",
																				"type": "",
																				"value": "31"
																			}
																		],
																		"functionName": {
																			"name": "not",
																			"nativeSrc": "5895:3:7",
																			"nodeType": "YulIdentifier",
																			"src": "5895:3:7"
																		},
																		"nativeSrc": "5895:7:7",
																		"nodeType": "YulFunctionCall",
																		"src": "5895:7:7"
																	}
																],
																"functionName": {
																	"name": "and",
																	"nativeSrc": "5875:3:7",
																	"nodeType": "YulIdentifier",
																	"src": "5875:3:7"
																},
																"nativeSrc": "5875:28:7",
																"nodeType": "YulFunctionCall",
																"src": "5875:28:7"
															},
															"variableNames": [
																{
																	"name": "result",
																	"nativeSrc": "5865:6:7",
																	"nodeType": "YulIdentifier",
																	"src": "5865:6:7"
																}
															]
														}
													]
												},
												"name": "round_up_to_mul_of_32",
												"nativeSrc": "5807:102:7",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "5838:5:7",
														"nodeType": "YulTypedName",
														"src": "5838:5:7",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "result",
														"nativeSrc": "5848:6:7",
														"nodeType": "YulTypedName",
														"src": "5848:6:7",
														"type": ""
													}
												],
												"src": "5807:102:7"
											},
											{
												"body": {
													"nativeSrc": "5958:238:7",
													"nodeType": "YulBlock",
													"src": "5958:238:7",
													"statements": [
														{
															"nativeSrc": "5968:58:7",
															"nodeType": "YulVariableDeclaration",
															"src": "5968:58:7",
															"value": {
																"arguments": [
																	{
																		"name": "memPtr",
																		"nativeSrc": "5990:6:7",
																		"nodeType": "YulIdentifier",
																		"src": "5990:6:7"
																	},
																	{
																		"arguments": [
																			{
																				"name": "size",
																				"nativeSrc": "6020:4:7",
																				"nodeType": "YulIdentifier",
																				"src": "6020:4:7"
																			}
																		],
																		"functionName": {
																			"name": "round_up_to_mul_of_32",
																			"nativeSrc": "5998:21:7",
																			"nodeType": "YulIdentifier",
																			"src": "5998:21:7"
																		},
																		"nativeSrc": "5998:27:7",
																		"nodeType": "YulFunctionCall",
																		"src": "5998:27:7"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "5986:3:7",
																	"nodeType": "YulIdentifier",
																	"src": "5986:3:7"
																},
																"nativeSrc": "5986:40:7",
																"nodeType": "YulFunctionCall",
																"src": "5986:40:7"
															},
															"variables": [
																{
																	"name": "newFreePtr",
																	"nativeSrc": "5972:10:7",
																	"nodeType": "YulTypedName",
																	"src": "5972:10:7",
																	"type": ""
																}
															]
														},
														{
															"body": {
																"nativeSrc": "6137:22:7",
																"nodeType": "YulBlock",
																"src": "6137:22:7",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "panic_error_0x41",
																				"nativeSrc": "6139:16:7",
																				"nodeType": "YulIdentifier",
																				"src": "6139:16:7"
																			},
																			"nativeSrc": "6139:18:7",
																			"nodeType": "YulFunctionCall",
																			"src": "6139:18:7"
																		},
																		"nativeSrc": "6139:18:7",
																		"nodeType": "YulExpressionStatement",
																		"src": "6139:18:7"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "newFreePtr",
																				"nativeSrc": "6080:10:7",
																				"nodeType": "YulIdentifier",
																				"src": "6080:10:7"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "6092:18:7",
																				"nodeType": "YulLiteral",
																				"src": "6092:18:7",
																				"type": "",
																				"value": "0xffffffffffffffff"
																			}
																		],
																		"functionName": {
																			"name": "gt",
																			"nativeSrc": "6077:2:7",
																			"nodeType": "YulIdentifier",
																			"src": "6077:2:7"
																		},
																		"nativeSrc": "6077:34:7",
																		"nodeType": "YulFunctionCall",
																		"src": "6077:34:7"
																	},
																	{
																		"arguments": [
																			{
																				"name": "newFreePtr",
																				"nativeSrc": "6116:10:7",
																				"nodeType": "YulIdentifier",
																				"src": "6116:10:7"
																			},
																			{
																				"name": "memPtr",
																				"nativeSrc": "6128:6:7",
																				"nodeType": "YulIdentifier",
																				"src": "6128:6:7"
																			}
																		],
																		"functionName": {
																			"name": "lt",
																			"nativeSrc": "6113:2:7",
																			"nodeType": "YulIdentifier",
																			"src": "6113:2:7"
																		},
																		"nativeSrc": "6113:22:7",
																		"nodeType": "YulFunctionCall",
																		"src": "6113:22:7"
																	}
																],
																"functionName": {
																	"name": "or",
																	"nativeSrc": "6074:2:7",
																	"nodeType": "YulIdentifier",
																	"src": "6074:2:7"
																},
																"nativeSrc": "6074:62:7",
																"nodeType": "YulFunctionCall",
																"src": "6074:62:7"
															},
															"nativeSrc": "6071:88:7",
															"nodeType": "YulIf",
															"src": "6071:88:7"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "6175:2:7",
																		"nodeType": "YulLiteral",
																		"src": "6175:2:7",
																		"type": "",
																		"value": "64"
																	},
																	{
																		"name": "newFreePtr",
																		"nativeSrc": "6179:10:7",
																		"nodeType": "YulIdentifier",
																		"src": "6179:10:7"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "6168:6:7",
																	"nodeType": "YulIdentifier",
																	"src": "6168:6:7"
																},
																"nativeSrc": "6168:22:7",
																"nodeType": "YulFunctionCall",
																"src": "6168:22:7"
															},
															"nativeSrc": "6168:22:7",
															"nodeType": "YulExpressionStatement",
															"src": "6168:22:7"
														}
													]
												},
												"name": "finalize_allocation",
												"nativeSrc": "5915:281:7",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "memPtr",
														"nativeSrc": "5944:6:7",
														"nodeType": "YulTypedName",
														"src": "5944:6:7",
														"type": ""
													},
													{
														"name": "size",
														"nativeSrc": "5952:4:7",
														"nodeType": "YulTypedName",
														"src": "5952:4:7",
														"type": ""
													}
												],
												"src": "5915:281:7"
											},
											{
												"body": {
													"nativeSrc": "6243:88:7",
													"nodeType": "YulBlock",
													"src": "6243:88:7",
													"statements": [
														{
															"nativeSrc": "6253:30:7",
															"nodeType": "YulAssignment",
															"src": "6253:30:7",
															"value": {
																"arguments": [],
																"functionName": {
																	"name": "allocate_unbounded",
																	"nativeSrc": "6263:18:7",
																	"nodeType": "YulIdentifier",
																	"src": "6263:18:7"
																},
																"nativeSrc": "6263:20:7",
																"nodeType": "YulFunctionCall",
																"src": "6263:20:7"
															},
															"variableNames": [
																{
																	"name": "memPtr",
																	"nativeSrc": "6253:6:7",
																	"nodeType": "YulIdentifier",
																	"src": "6253:6:7"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "memPtr",
																		"nativeSrc": "6312:6:7",
																		"nodeType": "YulIdentifier",
																		"src": "6312:6:7"
																	},
																	{
																		"name": "size",
																		"nativeSrc": "6320:4:7",
																		"nodeType": "YulIdentifier",
																		"src": "6320:4:7"
																	}
																],
																"functionName": {
																	"name": "finalize_allocation",
																	"nativeSrc": "6292:19:7",
																	"nodeType": "YulIdentifier",
																	"src": "6292:19:7"
																},
																"nativeSrc": "6292:33:7",
																"nodeType": "YulFunctionCall",
																"src": "6292:33:7"
															},
															"nativeSrc": "6292:33:7",
															"nodeType": "YulExpressionStatement",
															"src": "6292:33:7"
														}
													]
												},
												"name": "allocate_memory",
												"nativeSrc": "6202:129:7",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "size",
														"nativeSrc": "6227:4:7",
														"nodeType": "YulTypedName",
														"src": "6227:4:7",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "memPtr",
														"nativeSrc": "6236:6:7",
														"nodeType": "YulTypedName",
														"src": "6236:6:7",
														"type": ""
													}
												],
												"src": "6202:129:7"
											},
											{
												"body": {
													"nativeSrc": "6404:241:7",
													"nodeType": "YulBlock",
													"src": "6404:241:7",
													"statements": [
														{
															"body": {
																"nativeSrc": "6509:22:7",
																"nodeType": "YulBlock",
																"src": "6509:22:7",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "panic_error_0x41",
																				"nativeSrc": "6511:16:7",
																				"nodeType": "YulIdentifier",
																				"src": "6511:16:7"
																			},
																			"nativeSrc": "6511:18:7",
																			"nodeType": "YulFunctionCall",
																			"src": "6511:18:7"
																		},
																		"nativeSrc": "6511:18:7",
																		"nodeType": "YulExpressionStatement",
																		"src": "6511:18:7"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "length",
																		"nativeSrc": "6481:6:7",
																		"nodeType": "YulIdentifier",
																		"src": "6481:6:7"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "6489:18:7",
																		"nodeType": "YulLiteral",
																		"src": "6489:18:7",
																		"type": "",
																		"value": "0xffffffffffffffff"
																	}
																],
																"functionName": {
																	"name": "gt",
																	"nativeSrc": "6478:2:7",
																	"nodeType": "YulIdentifier",
																	"src": "6478:2:7"
																},
																"nativeSrc": "6478:30:7",
																"nodeType": "YulFunctionCall",
																"src": "6478:30:7"
															},
															"nativeSrc": "6475:56:7",
															"nodeType": "YulIf",
															"src": "6475:56:7"
														},
														{
															"nativeSrc": "6541:37:7",
															"nodeType": "YulAssignment",
															"src": "6541:37:7",
															"value": {
																"arguments": [
																	{
																		"name": "length",
																		"nativeSrc": "6571:6:7",
																		"nodeType": "YulIdentifier",
																		"src": "6571:6:7"
																	}
																],
																"functionName": {
																	"name": "round_up_to_mul_of_32",
																	"nativeSrc": "6549:21:7",
																	"nodeType": "YulIdentifier",
																	"src": "6549:21:7"
																},
																"nativeSrc": "6549:29:7",
																"nodeType": "YulFunctionCall",
																"src": "6549:29:7"
															},
															"variableNames": [
																{
																	"name": "size",
																	"nativeSrc": "6541:4:7",
																	"nodeType": "YulIdentifier",
																	"src": "6541:4:7"
																}
															]
														},
														{
															"nativeSrc": "6615:23:7",
															"nodeType": "YulAssignment",
															"src": "6615:23:7",
															"value": {
																"arguments": [
																	{
																		"name": "size",
																		"nativeSrc": "6627:4:7",
																		"nodeType": "YulIdentifier",
																		"src": "6627:4:7"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "6633:4:7",
																		"nodeType": "YulLiteral",
																		"src": "6633:4:7",
																		"type": "",
																		"value": "0x20"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "6623:3:7",
																	"nodeType": "YulIdentifier",
																	"src": "6623:3:7"
																},
																"nativeSrc": "6623:15:7",
																"nodeType": "YulFunctionCall",
																"src": "6623:15:7"
															},
															"variableNames": [
																{
																	"name": "size",
																	"nativeSrc": "6615:4:7",
																	"nodeType": "YulIdentifier",
																	"src": "6615:4:7"
																}
															]
														}
													]
												},
												"name": "array_allocation_size_t_string_memory_ptr",
												"nativeSrc": "6337:308:7",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "length",
														"nativeSrc": "6388:6:7",
														"nodeType": "YulTypedName",
														"src": "6388:6:7",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "size",
														"nativeSrc": "6399:4:7",
														"nodeType": "YulTypedName",
														"src": "6399:4:7",
														"type": ""
													}
												],
												"src": "6337:308:7"
											},
											{
												"body": {
													"nativeSrc": "6713:77:7",
													"nodeType": "YulBlock",
													"src": "6713:77:7",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "dst",
																		"nativeSrc": "6730:3:7",
																		"nodeType": "YulIdentifier",
																		"src": "6730:3:7"
																	},
																	{
																		"name": "src",
																		"nativeSrc": "6735:3:7",
																		"nodeType": "YulIdentifier",
																		"src": "6735:3:7"
																	},
																	{
																		"name": "length",
																		"nativeSrc": "6740:6:7",
																		"nodeType": "YulIdentifier",
																		"src": "6740:6:7"
																	}
																],
																"functionName": {
																	"name": "mcopy",
																	"nativeSrc": "6724:5:7",
																	"nodeType": "YulIdentifier",
																	"src": "6724:5:7"
																},
																"nativeSrc": "6724:23:7",
																"nodeType": "YulFunctionCall",
																"src": "6724:23:7"
															},
															"nativeSrc": "6724:23:7",
															"nodeType": "YulExpressionStatement",
															"src": "6724:23:7"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dst",
																				"nativeSrc": "6767:3:7",
																				"nodeType": "YulIdentifier",
																				"src": "6767:3:7"
																			},
																			{
																				"name": "length",
																				"nativeSrc": "6772:6:7",
																				"nodeType": "YulIdentifier",
																				"src": "6772:6:7"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "6763:3:7",
																			"nodeType": "YulIdentifier",
																			"src": "6763:3:7"
																		},
																		"nativeSrc": "6763:16:7",
																		"nodeType": "YulFunctionCall",
																		"src": "6763:16:7"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "6781:1:7",
																		"nodeType": "YulLiteral",
																		"src": "6781:1:7",
																		"type": "",
																		"value": "0"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "6756:6:7",
																	"nodeType": "YulIdentifier",
																	"src": "6756:6:7"
																},
																"nativeSrc": "6756:27:7",
																"nodeType": "YulFunctionCall",
																"src": "6756:27:7"
															},
															"nativeSrc": "6756:27:7",
															"nodeType": "YulExpressionStatement",
															"src": "6756:27:7"
														}
													]
												},
												"name": "copy_memory_to_memory_with_cleanup",
												"nativeSrc": "6651:139:7",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "src",
														"nativeSrc": "6695:3:7",
														"nodeType": "YulTypedName",
														"src": "6695:3:7",
														"type": ""
													},
													{
														"name": "dst",
														"nativeSrc": "6700:3:7",
														"nodeType": "YulTypedName",
														"src": "6700:3:7",
														"type": ""
													},
													{
														"name": "length",
														"nativeSrc": "6705:6:7",
														"nodeType": "YulTypedName",
														"src": "6705:6:7",
														"type": ""
													}
												],
												"src": "6651:139:7"
											},
											{
												"body": {
													"nativeSrc": "6891:339:7",
													"nodeType": "YulBlock",
													"src": "6891:339:7",
													"statements": [
														{
															"nativeSrc": "6901:75:7",
															"nodeType": "YulAssignment",
															"src": "6901:75:7",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "length",
																				"nativeSrc": "6968:6:7",
																				"nodeType": "YulIdentifier",
																				"src": "6968:6:7"
																			}
																		],
																		"functionName": {
																			"name": "array_allocation_size_t_string_memory_ptr",
																			"nativeSrc": "6926:41:7",
																			"nodeType": "YulIdentifier",
																			"src": "6926:41:7"
																		},
																		"nativeSrc": "6926:49:7",
																		"nodeType": "YulFunctionCall",
																		"src": "6926:49:7"
																	}
																],
																"functionName": {
																	"name": "allocate_memory",
																	"nativeSrc": "6910:15:7",
																	"nodeType": "YulIdentifier",
																	"src": "6910:15:7"
																},
																"nativeSrc": "6910:66:7",
																"nodeType": "YulFunctionCall",
																"src": "6910:66:7"
															},
															"variableNames": [
																{
																	"name": "array",
																	"nativeSrc": "6901:5:7",
																	"nodeType": "YulIdentifier",
																	"src": "6901:5:7"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "array",
																		"nativeSrc": "6992:5:7",
																		"nodeType": "YulIdentifier",
																		"src": "6992:5:7"
																	},
																	{
																		"name": "length",
																		"nativeSrc": "6999:6:7",
																		"nodeType": "YulIdentifier",
																		"src": "6999:6:7"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "6985:6:7",
																	"nodeType": "YulIdentifier",
																	"src": "6985:6:7"
																},
																"nativeSrc": "6985:21:7",
																"nodeType": "YulFunctionCall",
																"src": "6985:21:7"
															},
															"nativeSrc": "6985:21:7",
															"nodeType": "YulExpressionStatement",
															"src": "6985:21:7"
														},
														{
															"nativeSrc": "7015:27:7",
															"nodeType": "YulVariableDeclaration",
															"src": "7015:27:7",
															"value": {
																"arguments": [
																	{
																		"name": "array",
																		"nativeSrc": "7030:5:7",
																		"nodeType": "YulIdentifier",
																		"src": "7030:5:7"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "7037:4:7",
																		"nodeType": "YulLiteral",
																		"src": "7037:4:7",
																		"type": "",
																		"value": "0x20"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "7026:3:7",
																	"nodeType": "YulIdentifier",
																	"src": "7026:3:7"
																},
																"nativeSrc": "7026:16:7",
																"nodeType": "YulFunctionCall",
																"src": "7026:16:7"
															},
															"variables": [
																{
																	"name": "dst",
																	"nativeSrc": "7019:3:7",
																	"nodeType": "YulTypedName",
																	"src": "7019:3:7",
																	"type": ""
																}
															]
														},
														{
															"body": {
																"nativeSrc": "7080:83:7",
																"nodeType": "YulBlock",
																"src": "7080:83:7",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "revert_error_987264b3b1d58a9c7f8255e93e81c77d86d6299019c33110a076957a3e06e2ae",
																				"nativeSrc": "7082:77:7",
																				"nodeType": "YulIdentifier",
																				"src": "7082:77:7"
																			},
																			"nativeSrc": "7082:79:7",
																			"nodeType": "YulFunctionCall",
																			"src": "7082:79:7"
																		},
																		"nativeSrc": "7082:79:7",
																		"nodeType": "YulExpressionStatement",
																		"src": "7082:79:7"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "src",
																				"nativeSrc": "7061:3:7",
																				"nodeType": "YulIdentifier",
																				"src": "7061:3:7"
																			},
																			{
																				"name": "length",
																				"nativeSrc": "7066:6:7",
																				"nodeType": "YulIdentifier",
																				"src": "7066:6:7"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "7057:3:7",
																			"nodeType": "YulIdentifier",
																			"src": "7057:3:7"
																		},
																		"nativeSrc": "7057:16:7",
																		"nodeType": "YulFunctionCall",
																		"src": "7057:16:7"
																	},
																	{
																		"name": "end",
																		"nativeSrc": "7075:3:7",
																		"nodeType": "YulIdentifier",
																		"src": "7075:3:7"
																	}
																],
																"functionName": {
																	"name": "gt",
																	"nativeSrc": "7054:2:7",
																	"nodeType": "YulIdentifier",
																	"src": "7054:2:7"
																},
																"nativeSrc": "7054:25:7",
																"nodeType": "YulFunctionCall",
																"src": "7054:25:7"
															},
															"nativeSrc": "7051:112:7",
															"nodeType": "YulIf",
															"src": "7051:112:7"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "src",
																		"nativeSrc": "7207:3:7",
																		"nodeType": "YulIdentifier",
																		"src": "7207:3:7"
																	},
																	{
																		"name": "dst",
																		"nativeSrc": "7212:3:7",
																		"nodeType": "YulIdentifier",
																		"src": "7212:3:7"
																	},
																	{
																		"name": "length",
																		"nativeSrc": "7217:6:7",
																		"nodeType": "YulIdentifier",
																		"src": "7217:6:7"
																	}
																],
																"functionName": {
																	"name": "copy_memory_to_memory_with_cleanup",
																	"nativeSrc": "7172:34:7",
																	"nodeType": "YulIdentifier",
																	"src": "7172:34:7"
																},
																"nativeSrc": "7172:52:7",
																"nodeType": "YulFunctionCall",
																"src": "7172:52:7"
															},
															"nativeSrc": "7172:52:7",
															"nodeType": "YulExpressionStatement",
															"src": "7172:52:7"
														}
													]
												},
												"name": "abi_decode_available_length_t_string_memory_ptr_fromMemory",
												"nativeSrc": "6796:434:7",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "src",
														"nativeSrc": "6864:3:7",
														"nodeType": "YulTypedName",
														"src": "6864:3:7",
														"type": ""
													},
													{
														"name": "length",
														"nativeSrc": "6869:6:7",
														"nodeType": "YulTypedName",
														"src": "6869:6:7",
														"type": ""
													},
													{
														"name": "end",
														"nativeSrc": "6877:3:7",
														"nodeType": "YulTypedName",
														"src": "6877:3:7",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "array",
														"nativeSrc": "6885:5:7",
														"nodeType": "YulTypedName",
														"src": "6885:5:7",
														"type": ""
													}
												],
												"src": "6796:434:7"
											},
											{
												"body": {
													"nativeSrc": "7323:282:7",
													"nodeType": "YulBlock",
													"src": "7323:282:7",
													"statements": [
														{
															"body": {
																"nativeSrc": "7372:83:7",
																"nodeType": "YulBlock",
																"src": "7372:83:7",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "revert_error_1b9f4a0a5773e33b91aa01db23bf8c55fce1411167c872835e7fa00a4f17d46d",
																				"nativeSrc": "7374:77:7",
																				"nodeType": "YulIdentifier",
																				"src": "7374:77:7"
																			},
																			"nativeSrc": "7374:79:7",
																			"nodeType": "YulFunctionCall",
																			"src": "7374:79:7"
																		},
																		"nativeSrc": "7374:79:7",
																		"nodeType": "YulExpressionStatement",
																		"src": "7374:79:7"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "offset",
																						"nativeSrc": "7351:6:7",
																						"nodeType": "YulIdentifier",
																						"src": "7351:6:7"
																					},
																					{
																						"kind": "number",
																						"nativeSrc": "7359:4:7",
																						"nodeType": "YulLiteral",
																						"src": "7359:4:7",
																						"type": "",
																						"value": "0x1f"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nativeSrc": "7347:3:7",
																					"nodeType": "YulIdentifier",
																					"src": "7347:3:7"
																				},
																				"nativeSrc": "7347:17:7",
																				"nodeType": "YulFunctionCall",
																				"src": "7347:17:7"
																			},
																			{
																				"name": "end",
																				"nativeSrc": "7366:3:7",
																				"nodeType": "YulIdentifier",
																				"src": "7366:3:7"
																			}
																		],
																		"functionName": {
																			"name": "slt",
																			"nativeSrc": "7343:3:7",
																			"nodeType": "YulIdentifier",
																			"src": "7343:3:7"
																		},
																		"nativeSrc": "7343:27:7",
																		"nodeType": "YulFunctionCall",
																		"src": "7343:27:7"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nativeSrc": "7336:6:7",
																	"nodeType": "YulIdentifier",
																	"src": "7336:6:7"
																},
																"nativeSrc": "7336:35:7",
																"nodeType": "YulFunctionCall",
																"src": "7336:35:7"
															},
															"nativeSrc": "7333:122:7",
															"nodeType": "YulIf",
															"src": "7333:122:7"
														},
														{
															"nativeSrc": "7464:27:7",
															"nodeType": "YulVariableDeclaration",
															"src": "7464:27:7",
															"value": {
																"arguments": [
																	{
																		"name": "offset",
																		"nativeSrc": "7484:6:7",
																		"nodeType": "YulIdentifier",
																		"src": "7484:6:7"
																	}
																],
																"functionName": {
																	"name": "mload",
																	"nativeSrc": "7478:5:7",
																	"nodeType": "YulIdentifier",
																	"src": "7478:5:7"
																},
																"nativeSrc": "7478:13:7",
																"nodeType": "YulFunctionCall",
																"src": "7478:13:7"
															},
															"variables": [
																{
																	"name": "length",
																	"nativeSrc": "7468:6:7",
																	"nodeType": "YulTypedName",
																	"src": "7468:6:7",
																	"type": ""
																}
															]
														},
														{
															"nativeSrc": "7500:99:7",
															"nodeType": "YulAssignment",
															"src": "7500:99:7",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "offset",
																				"nativeSrc": "7572:6:7",
																				"nodeType": "YulIdentifier",
																				"src": "7572:6:7"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "7580:4:7",
																				"nodeType": "YulLiteral",
																				"src": "7580:4:7",
																				"type": "",
																				"value": "0x20"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "7568:3:7",
																			"nodeType": "YulIdentifier",
																			"src": "7568:3:7"
																		},
																		"nativeSrc": "7568:17:7",
																		"nodeType": "YulFunctionCall",
																		"src": "7568:17:7"
																	},
																	{
																		"name": "length",
																		"nativeSrc": "7587:6:7",
																		"nodeType": "YulIdentifier",
																		"src": "7587:6:7"
																	},
																	{
																		"name": "end",
																		"nativeSrc": "7595:3:7",
																		"nodeType": "YulIdentifier",
																		"src": "7595:3:7"
																	}
																],
																"functionName": {
																	"name": "abi_decode_available_length_t_string_memory_ptr_fromMemory",
																	"nativeSrc": "7509:58:7",
																	"nodeType": "YulIdentifier",
																	"src": "7509:58:7"
																},
																"nativeSrc": "7509:90:7",
																"nodeType": "YulFunctionCall",
																"src": "7509:90:7"
															},
															"variableNames": [
																{
																	"name": "array",
																	"nativeSrc": "7500:5:7",
																	"nodeType": "YulIdentifier",
																	"src": "7500:5:7"
																}
															]
														}
													]
												},
												"name": "abi_decode_t_string_memory_ptr_fromMemory",
												"nativeSrc": "7250:355:7",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "offset",
														"nativeSrc": "7301:6:7",
														"nodeType": "YulTypedName",
														"src": "7301:6:7",
														"type": ""
													},
													{
														"name": "end",
														"nativeSrc": "7309:3:7",
														"nodeType": "YulTypedName",
														"src": "7309:3:7",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "array",
														"nativeSrc": "7317:5:7",
														"nodeType": "YulTypedName",
														"src": "7317:5:7",
														"type": ""
													}
												],
												"src": "7250:355:7"
											},
											{
												"body": {
													"nativeSrc": "7725:739:7",
													"nodeType": "YulBlock",
													"src": "7725:739:7",
													"statements": [
														{
															"body": {
																"nativeSrc": "7771:83:7",
																"nodeType": "YulBlock",
																"src": "7771:83:7",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b",
																				"nativeSrc": "7773:77:7",
																				"nodeType": "YulIdentifier",
																				"src": "7773:77:7"
																			},
																			"nativeSrc": "7773:79:7",
																			"nodeType": "YulFunctionCall",
																			"src": "7773:79:7"
																		},
																		"nativeSrc": "7773:79:7",
																		"nodeType": "YulExpressionStatement",
																		"src": "7773:79:7"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dataEnd",
																				"nativeSrc": "7746:7:7",
																				"nodeType": "YulIdentifier",
																				"src": "7746:7:7"
																			},
																			{
																				"name": "headStart",
																				"nativeSrc": "7755:9:7",
																				"nodeType": "YulIdentifier",
																				"src": "7755:9:7"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nativeSrc": "7742:3:7",
																			"nodeType": "YulIdentifier",
																			"src": "7742:3:7"
																		},
																		"nativeSrc": "7742:23:7",
																		"nodeType": "YulFunctionCall",
																		"src": "7742:23:7"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "7767:2:7",
																		"nodeType": "YulLiteral",
																		"src": "7767:2:7",
																		"type": "",
																		"value": "64"
																	}
																],
																"functionName": {
																	"name": "slt",
																	"nativeSrc": "7738:3:7",
																	"nodeType": "YulIdentifier",
																	"src": "7738:3:7"
																},
																"nativeSrc": "7738:32:7",
																"nodeType": "YulFunctionCall",
																"src": "7738:32:7"
															},
															"nativeSrc": "7735:119:7",
															"nodeType": "YulIf",
															"src": "7735:119:7"
														},
														{
															"nativeSrc": "7864:291:7",
															"nodeType": "YulBlock",
															"src": "7864:291:7",
															"statements": [
																{
																	"nativeSrc": "7879:38:7",
																	"nodeType": "YulVariableDeclaration",
																	"src": "7879:38:7",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nativeSrc": "7903:9:7",
																						"nodeType": "YulIdentifier",
																						"src": "7903:9:7"
																					},
																					{
																						"kind": "number",
																						"nativeSrc": "7914:1:7",
																						"nodeType": "YulLiteral",
																						"src": "7914:1:7",
																						"type": "",
																						"value": "0"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nativeSrc": "7899:3:7",
																					"nodeType": "YulIdentifier",
																					"src": "7899:3:7"
																				},
																				"nativeSrc": "7899:17:7",
																				"nodeType": "YulFunctionCall",
																				"src": "7899:17:7"
																			}
																		],
																		"functionName": {
																			"name": "mload",
																			"nativeSrc": "7893:5:7",
																			"nodeType": "YulIdentifier",
																			"src": "7893:5:7"
																		},
																		"nativeSrc": "7893:24:7",
																		"nodeType": "YulFunctionCall",
																		"src": "7893:24:7"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nativeSrc": "7883:6:7",
																			"nodeType": "YulTypedName",
																			"src": "7883:6:7",
																			"type": ""
																		}
																	]
																},
																{
																	"body": {
																		"nativeSrc": "7964:83:7",
																		"nodeType": "YulBlock",
																		"src": "7964:83:7",
																		"statements": [
																			{
																				"expression": {
																					"arguments": [],
																					"functionName": {
																						"name": "revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db",
																						"nativeSrc": "7966:77:7",
																						"nodeType": "YulIdentifier",
																						"src": "7966:77:7"
																					},
																					"nativeSrc": "7966:79:7",
																					"nodeType": "YulFunctionCall",
																					"src": "7966:79:7"
																				},
																				"nativeSrc": "7966:79:7",
																				"nodeType": "YulExpressionStatement",
																				"src": "7966:79:7"
																			}
																		]
																	},
																	"condition": {
																		"arguments": [
																			{
																				"name": "offset",
																				"nativeSrc": "7936:6:7",
																				"nodeType": "YulIdentifier",
																				"src": "7936:6:7"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "7944:18:7",
																				"nodeType": "YulLiteral",
																				"src": "7944:18:7",
																				"type": "",
																				"value": "0xffffffffffffffff"
																			}
																		],
																		"functionName": {
																			"name": "gt",
																			"nativeSrc": "7933:2:7",
																			"nodeType": "YulIdentifier",
																			"src": "7933:2:7"
																		},
																		"nativeSrc": "7933:30:7",
																		"nodeType": "YulFunctionCall",
																		"src": "7933:30:7"
																	},
																	"nativeSrc": "7930:117:7",
																	"nodeType": "YulIf",
																	"src": "7930:117:7"
																},
																{
																	"nativeSrc": "8061:84:7",
																	"nodeType": "YulAssignment",
																	"src": "8061:84:7",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nativeSrc": "8117:9:7",
																						"nodeType": "YulIdentifier",
																						"src": "8117:9:7"
																					},
																					{
																						"name": "offset",
																						"nativeSrc": "8128:6:7",
																						"nodeType": "YulIdentifier",
																						"src": "8128:6:7"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nativeSrc": "8113:3:7",
																					"nodeType": "YulIdentifier",
																					"src": "8113:3:7"
																				},
																				"nativeSrc": "8113:22:7",
																				"nodeType": "YulFunctionCall",
																				"src": "8113:22:7"
																			},
																			{
																				"name": "dataEnd",
																				"nativeSrc": "8137:7:7",
																				"nodeType": "YulIdentifier",
																				"src": "8137:7:7"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_string_memory_ptr_fromMemory",
																			"nativeSrc": "8071:41:7",
																			"nodeType": "YulIdentifier",
																			"src": "8071:41:7"
																		},
																		"nativeSrc": "8071:74:7",
																		"nodeType": "YulFunctionCall",
																		"src": "8071:74:7"
																	},
																	"variableNames": [
																		{
																			"name": "value0",
																			"nativeSrc": "8061:6:7",
																			"nodeType": "YulIdentifier",
																			"src": "8061:6:7"
																		}
																	]
																}
															]
														},
														{
															"nativeSrc": "8165:292:7",
															"nodeType": "YulBlock",
															"src": "8165:292:7",
															"statements": [
																{
																	"nativeSrc": "8180:39:7",
																	"nodeType": "YulVariableDeclaration",
																	"src": "8180:39:7",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nativeSrc": "8204:9:7",
																						"nodeType": "YulIdentifier",
																						"src": "8204:9:7"
																					},
																					{
																						"kind": "number",
																						"nativeSrc": "8215:2:7",
																						"nodeType": "YulLiteral",
																						"src": "8215:2:7",
																						"type": "",
																						"value": "32"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nativeSrc": "8200:3:7",
																					"nodeType": "YulIdentifier",
																					"src": "8200:3:7"
																				},
																				"nativeSrc": "8200:18:7",
																				"nodeType": "YulFunctionCall",
																				"src": "8200:18:7"
																			}
																		],
																		"functionName": {
																			"name": "mload",
																			"nativeSrc": "8194:5:7",
																			"nodeType": "YulIdentifier",
																			"src": "8194:5:7"
																		},
																		"nativeSrc": "8194:25:7",
																		"nodeType": "YulFunctionCall",
																		"src": "8194:25:7"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nativeSrc": "8184:6:7",
																			"nodeType": "YulTypedName",
																			"src": "8184:6:7",
																			"type": ""
																		}
																	]
																},
																{
																	"body": {
																		"nativeSrc": "8266:83:7",
																		"nodeType": "YulBlock",
																		"src": "8266:83:7",
																		"statements": [
																			{
																				"expression": {
																					"arguments": [],
																					"functionName": {
																						"name": "revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db",
																						"nativeSrc": "8268:77:7",
																						"nodeType": "YulIdentifier",
																						"src": "8268:77:7"
																					},
																					"nativeSrc": "8268:79:7",
																					"nodeType": "YulFunctionCall",
																					"src": "8268:79:7"
																				},
																				"nativeSrc": "8268:79:7",
																				"nodeType": "YulExpressionStatement",
																				"src": "8268:79:7"
																			}
																		]
																	},
																	"condition": {
																		"arguments": [
																			{
																				"name": "offset",
																				"nativeSrc": "8238:6:7",
																				"nodeType": "YulIdentifier",
																				"src": "8238:6:7"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "8246:18:7",
																				"nodeType": "YulLiteral",
																				"src": "8246:18:7",
																				"type": "",
																				"value": "0xffffffffffffffff"
																			}
																		],
																		"functionName": {
																			"name": "gt",
																			"nativeSrc": "8235:2:7",
																			"nodeType": "YulIdentifier",
																			"src": "8235:2:7"
																		},
																		"nativeSrc": "8235:30:7",
																		"nodeType": "YulFunctionCall",
																		"src": "8235:30:7"
																	},
																	"nativeSrc": "8232:117:7",
																	"nodeType": "YulIf",
																	"src": "8232:117:7"
																},
																{
																	"nativeSrc": "8363:84:7",
																	"nodeType": "YulAssignment",
																	"src": "8363:84:7",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nativeSrc": "8419:9:7",
																						"nodeType": "YulIdentifier",
																						"src": "8419:9:7"
																					},
																					{
																						"name": "offset",
																						"nativeSrc": "8430:6:7",
																						"nodeType": "YulIdentifier",
																						"src": "8430:6:7"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nativeSrc": "8415:3:7",
																					"nodeType": "YulIdentifier",
																					"src": "8415:3:7"
																				},
																				"nativeSrc": "8415:22:7",
																				"nodeType": "YulFunctionCall",
																				"src": "8415:22:7"
																			},
																			{
																				"name": "dataEnd",
																				"nativeSrc": "8439:7:7",
																				"nodeType": "YulIdentifier",
																				"src": "8439:7:7"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_string_memory_ptr_fromMemory",
																			"nativeSrc": "8373:41:7",
																			"nodeType": "YulIdentifier",
																			"src": "8373:41:7"
																		},
																		"nativeSrc": "8373:74:7",
																		"nodeType": "YulFunctionCall",
																		"src": "8373:74:7"
																	},
																	"variableNames": [
																		{
																			"name": "value1",
																			"nativeSrc": "8363:6:7",
																			"nodeType": "YulIdentifier",
																			"src": "8363:6:7"
																		}
																	]
																}
															]
														}
													]
												},
												"name": "abi_decode_tuple_t_string_memory_ptrt_string_memory_ptr_fromMemory",
												"nativeSrc": "7611:853:7",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "7687:9:7",
														"nodeType": "YulTypedName",
														"src": "7687:9:7",
														"type": ""
													},
													{
														"name": "dataEnd",
														"nativeSrc": "7698:7:7",
														"nodeType": "YulTypedName",
														"src": "7698:7:7",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value0",
														"nativeSrc": "7710:6:7",
														"nodeType": "YulTypedName",
														"src": "7710:6:7",
														"type": ""
													},
													{
														"name": "value1",
														"nativeSrc": "7718:6:7",
														"nodeType": "YulTypedName",
														"src": "7718:6:7",
														"type": ""
													}
												],
												"src": "7611:853:7"
											}
										]
									},
									"contents": "{\n\n    function array_length_t_string_memory_ptr(value) -> length {\n\n        length := mload(value)\n\n    }\n\n    function panic_error_0x41() {\n        mstore(0, 35408467139433450592217433187231851964531694900788300625387963629091585785856)\n        mstore(4, 0x41)\n        revert(0, 0x24)\n    }\n\n    function panic_error_0x22() {\n        mstore(0, 35408467139433450592217433187231851964531694900788300625387963629091585785856)\n        mstore(4, 0x22)\n        revert(0, 0x24)\n    }\n\n    function extract_byte_array_length(data) -> length {\n        length := div(data, 2)\n        let outOfPlaceEncoding := and(data, 1)\n        if iszero(outOfPlaceEncoding) {\n            length := and(length, 0x7f)\n        }\n\n        if eq(outOfPlaceEncoding, lt(length, 32)) {\n            panic_error_0x22()\n        }\n    }\n\n    function array_dataslot_t_string_storage(ptr) -> data {\n        data := ptr\n\n        mstore(0, ptr)\n        data := keccak256(0, 0x20)\n\n    }\n\n    function divide_by_32_ceil(value) -> result {\n        result := div(add(value, 31), 32)\n    }\n\n    function shift_left_dynamic(bits, value) -> newValue {\n        newValue :=\n\n        shl(bits, value)\n\n    }\n\n    function update_byte_slice_dynamic32(value, shiftBytes, toInsert) -> result {\n        let shiftBits := mul(shiftBytes, 8)\n        let mask := shift_left_dynamic(shiftBits, 0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff)\n        toInsert := shift_left_dynamic(shiftBits, toInsert)\n        value := and(value, not(mask))\n        result := or(value, and(toInsert, mask))\n    }\n\n    function cleanup_t_uint256(value) -> cleaned {\n        cleaned := value\n    }\n\n    function identity(value) -> ret {\n        ret := value\n    }\n\n    function convert_t_uint256_to_t_uint256(value) -> converted {\n        converted := cleanup_t_uint256(identity(cleanup_t_uint256(value)))\n    }\n\n    function prepare_store_t_uint256(value) -> ret {\n        ret := value\n    }\n\n    function update_storage_value_t_uint256_to_t_uint256(slot, offset, value_0) {\n        let convertedValue_0 := convert_t_uint256_to_t_uint256(value_0)\n        sstore(slot, update_byte_slice_dynamic32(sload(slot), offset, prepare_store_t_uint256(convertedValue_0)))\n    }\n\n    function zero_value_for_split_t_uint256() -> ret {\n        ret := 0\n    }\n\n    function storage_set_to_zero_t_uint256(slot, offset) {\n        let zero_0 := zero_value_for_split_t_uint256()\n        update_storage_value_t_uint256_to_t_uint256(slot, offset, zero_0)\n    }\n\n    function clear_storage_range_t_bytes1(start, end) {\n        for {} lt(start, end) { start := add(start, 1) }\n        {\n            storage_set_to_zero_t_uint256(start, 0)\n        }\n    }\n\n    function clean_up_bytearray_end_slots_t_string_storage(array, len, startIndex) {\n\n        if gt(len, 31) {\n            let dataArea := array_dataslot_t_string_storage(array)\n            let deleteStart := add(dataArea, divide_by_32_ceil(startIndex))\n            // If we are clearing array to be short byte array, we want to clear only data starting from array data area.\n            if lt(startIndex, 32) { deleteStart := dataArea }\n            clear_storage_range_t_bytes1(deleteStart, add(dataArea, divide_by_32_ceil(len)))\n        }\n\n    }\n\n    function shift_right_unsigned_dynamic(bits, value) -> newValue {\n        newValue :=\n\n        shr(bits, value)\n\n    }\n\n    function mask_bytes_dynamic(data, bytes) -> result {\n        let mask := not(shift_right_unsigned_dynamic(mul(8, bytes), not(0)))\n        result := and(data, mask)\n    }\n    function extract_used_part_and_set_length_of_short_byte_array(data, len) -> used {\n        // we want to save only elements that are part of the array after resizing\n        // others should be set to zero\n        data := mask_bytes_dynamic(data, len)\n        used := or(data, mul(2, len))\n    }\n    function copy_byte_array_to_storage_from_t_string_memory_ptr_to_t_string_storage(slot, src) {\n\n        let newLen := array_length_t_string_memory_ptr(src)\n        // Make sure array length is sane\n        if gt(newLen, 0xffffffffffffffff) { panic_error_0x41() }\n\n        let oldLen := extract_byte_array_length(sload(slot))\n\n        // potentially truncate data\n        clean_up_bytearray_end_slots_t_string_storage(slot, oldLen, newLen)\n\n        let srcOffset := 0\n\n        srcOffset := 0x20\n\n        switch gt(newLen, 31)\n        case 1 {\n            let loopEnd := and(newLen, not(0x1f))\n\n            let dstPtr := array_dataslot_t_string_storage(slot)\n            let i := 0\n            for { } lt(i, loopEnd) { i := add(i, 0x20) } {\n                sstore(dstPtr, mload(add(src, srcOffset)))\n                dstPtr := add(dstPtr, 1)\n                srcOffset := add(srcOffset, 32)\n            }\n            if lt(loopEnd, newLen) {\n                let lastValue := mload(add(src, srcOffset))\n                sstore(dstPtr, mask_bytes_dynamic(lastValue, and(newLen, 0x1f)))\n            }\n            sstore(slot, add(mul(newLen, 2), 1))\n        }\n        default {\n            let value := 0\n            if newLen {\n                value := mload(add(src, srcOffset))\n            }\n            sstore(slot, extract_used_part_and_set_length_of_short_byte_array(value, newLen))\n        }\n    }\n\n    function allocate_unbounded() -> memPtr {\n        memPtr := mload(64)\n    }\n\n    function revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() {\n        revert(0, 0)\n    }\n\n    function revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db() {\n        revert(0, 0)\n    }\n\n    function revert_error_1b9f4a0a5773e33b91aa01db23bf8c55fce1411167c872835e7fa00a4f17d46d() {\n        revert(0, 0)\n    }\n\n    function revert_error_987264b3b1d58a9c7f8255e93e81c77d86d6299019c33110a076957a3e06e2ae() {\n        revert(0, 0)\n    }\n\n    function round_up_to_mul_of_32(value) -> result {\n        result := and(add(value, 31), not(31))\n    }\n\n    function finalize_allocation(memPtr, size) {\n        let newFreePtr := add(memPtr, round_up_to_mul_of_32(size))\n        // protect against overflow\n        if or(gt(newFreePtr, 0xffffffffffffffff), lt(newFreePtr, memPtr)) { panic_error_0x41() }\n        mstore(64, newFreePtr)\n    }\n\n    function allocate_memory(size) -> memPtr {\n        memPtr := allocate_unbounded()\n        finalize_allocation(memPtr, size)\n    }\n\n    function array_allocation_size_t_string_memory_ptr(length) -> size {\n        // Make sure we can allocate memory without overflow\n        if gt(length, 0xffffffffffffffff) { panic_error_0x41() }\n\n        size := round_up_to_mul_of_32(length)\n\n        // add length slot\n        size := add(size, 0x20)\n\n    }\n\n    function copy_memory_to_memory_with_cleanup(src, dst, length) {\n\n        mcopy(dst, src, length)\n        mstore(add(dst, length), 0)\n\n    }\n\n    function abi_decode_available_length_t_string_memory_ptr_fromMemory(src, length, end) -> array {\n        array := allocate_memory(array_allocation_size_t_string_memory_ptr(length))\n        mstore(array, length)\n        let dst := add(array, 0x20)\n        if gt(add(src, length), end) { revert_error_987264b3b1d58a9c7f8255e93e81c77d86d6299019c33110a076957a3e06e2ae() }\n        copy_memory_to_memory_with_cleanup(src, dst, length)\n    }\n\n    // string\n    function abi_decode_t_string_memory_ptr_fromMemory(offset, end) -> array {\n        if iszero(slt(add(offset, 0x1f), end)) { revert_error_1b9f4a0a5773e33b91aa01db23bf8c55fce1411167c872835e7fa00a4f17d46d() }\n        let length := mload(offset)\n        array := abi_decode_available_length_t_string_memory_ptr_fromMemory(add(offset, 0x20), length, end)\n    }\n\n    function abi_decode_tuple_t_string_memory_ptrt_string_memory_ptr_fromMemory(headStart, dataEnd) -> value0, value1 {\n        if slt(sub(dataEnd, headStart), 64) { revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() }\n\n        {\n\n            let offset := mload(add(headStart, 0))\n            if gt(offset, 0xffffffffffffffff) { revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db() }\n\n            value0 := abi_decode_t_string_memory_ptr_fromMemory(add(headStart, offset), dataEnd)\n        }\n\n        {\n\n            let offset := mload(add(headStart, 32))\n            if gt(offset, 0xffffffffffffffff) { revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db() }\n\n            value1 := abi_decode_t_string_memory_ptr_fromMemory(add(headStart, offset), dataEnd)\n        }\n\n    }\n\n}\n",
									"id": 7,
									"language": "Yul",
									"name": "#utility.yul"
								}
							],
							"linkReferences": {},
							"object": "",
							"opcodes": "PUSH1 0x80 PUSH1 0x40 MSTORE PUSH1 0x40 MLOAD DUP1 PUSH1 0x40 ADD PUSH1 0x40 MSTORE DUP1 PUSH1 0x5 DUP2 MSTORE PUSH1 0x20 ADD PUSH32 0x76616C7565000000000000000000000000000000000000000000000000000000 DUP2 MSTORE POP PUSH1 0x5 SWAP1 DUP2 PUSH2 0x48 SWAP2 SWAP1 PUSH2 0x348 JUMP JUMPDEST POP PUSH3 0xF4240 PUSH1 0x8 SSTORE PUSH1 0x64 PUSH1 0x9 SSTORE PUSH1 0x40 MLOAD DUP1 PUSH1 0x40 ADD PUSH1 0x40 MSTORE DUP1 PUSH1 0x3 DUP2 MSTORE PUSH1 0x20 ADD PUSH32 0x616E790000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE POP PUSH1 0xA SWAP1 DUP2 PUSH2 0x99 SWAP2 SWAP1 PUSH2 0x348 JUMP JUMPDEST POP CALLVALUE DUP1 ISZERO PUSH2 0xA5 JUMPI PUSH0 DUP1 REVERT JUMPDEST POP PUSH1 0x40 MLOAD PUSH2 0x2356 CODESIZE SUB DUP1 PUSH2 0x2356 DUP4 CODECOPY DUP2 DUP2 ADD PUSH1 0x40 MSTORE DUP2 ADD SWAP1 PUSH2 0xC7 SWAP2 SWAP1 PUSH2 0x537 JUMP JUMPDEST DUP2 DUP2 DUP2 PUSH1 0x3 SWAP1 DUP2 PUSH2 0xD8 SWAP2 SWAP1 PUSH2 0x348 JUMP JUMPDEST POP DUP1 PUSH1 0x4 SWAP1 DUP2 PUSH2 0xE8 SWAP2 SWAP1 PUSH2 0x348 JUMP JUMPDEST POP POP POP PUSH1 0x6 PUSH1 0x1 DUP2 PUSH1 0x1 DUP2 SLOAD ADD DUP1 DUP3 SSTORE DUP1 SWAP2 POP POP SUB SWAP1 PUSH0 MSTORE PUSH1 0x20 PUSH0 KECCAK256 SWAP1 POP POP POP POP PUSH2 0x5AD JUMP JUMPDEST PUSH0 DUP2 MLOAD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH0 MSTORE PUSH1 0x41 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH0 REVERT JUMPDEST PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH0 MSTORE PUSH1 0x22 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH0 REVERT JUMPDEST PUSH0 PUSH1 0x2 DUP3 DIV SWAP1 POP PUSH1 0x1 DUP3 AND DUP1 PUSH2 0x189 JUMPI PUSH1 0x7F DUP3 AND SWAP2 POP JUMPDEST PUSH1 0x20 DUP3 LT DUP2 SUB PUSH2 0x19C JUMPI PUSH2 0x19B PUSH2 0x145 JUMP JUMPDEST JUMPDEST POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 DUP2 SWAP1 POP DUP2 PUSH0 MSTORE PUSH1 0x20 PUSH0 KECCAK256 SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH1 0x20 PUSH1 0x1F DUP4 ADD DIV SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 DUP3 DUP3 SHL SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH1 0x8 DUP4 MUL PUSH2 0x1FE PUSH32 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP3 PUSH2 0x1C3 JUMP JUMPDEST PUSH2 0x208 DUP7 DUP4 PUSH2 0x1C3 JUMP JUMPDEST SWAP6 POP DUP1 NOT DUP5 AND SWAP4 POP DUP1 DUP7 AND DUP5 OR SWAP3 POP POP POP SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH0 DUP2 SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 DUP2 SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH2 0x24C PUSH2 0x247 PUSH2 0x242 DUP5 PUSH2 0x220 JUMP JUMPDEST PUSH2 0x229 JUMP JUMPDEST PUSH2 0x220 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 DUP2 SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x265 DUP4 PUSH2 0x232 JUMP JUMPDEST PUSH2 0x279 PUSH2 0x271 DUP3 PUSH2 0x253 JUMP JUMPDEST DUP5 DUP5 SLOAD PUSH2 0x1CF JUMP JUMPDEST DUP3 SSTORE POP POP POP POP JUMP JUMPDEST PUSH0 SWAP1 JUMP JUMPDEST PUSH2 0x28D PUSH2 0x281 JUMP JUMPDEST PUSH2 0x298 DUP2 DUP5 DUP5 PUSH2 0x25C JUMP JUMPDEST POP POP POP JUMP JUMPDEST JUMPDEST DUP2 DUP2 LT ISZERO PUSH2 0x2BB JUMPI PUSH2 0x2B0 PUSH0 DUP3 PUSH2 0x285 JUMP JUMPDEST PUSH1 0x1 DUP2 ADD SWAP1 POP PUSH2 0x29E JUMP JUMPDEST POP POP JUMP JUMPDEST PUSH1 0x1F DUP3 GT ISZERO PUSH2 0x300 JUMPI PUSH2 0x2D1 DUP2 PUSH2 0x1A2 JUMP JUMPDEST PUSH2 0x2DA DUP5 PUSH2 0x1B4 JUMP JUMPDEST DUP2 ADD PUSH1 0x20 DUP6 LT ISZERO PUSH2 0x2E9 JUMPI DUP2 SWAP1 POP JUMPDEST PUSH2 0x2FD PUSH2 0x2F5 DUP6 PUSH2 0x1B4 JUMP JUMPDEST DUP4 ADD DUP3 PUSH2 0x29D JUMP JUMPDEST POP POP JUMPDEST POP POP POP JUMP JUMPDEST PUSH0 DUP3 DUP3 SHR SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH2 0x320 PUSH0 NOT DUP5 PUSH1 0x8 MUL PUSH2 0x305 JUMP JUMPDEST NOT DUP1 DUP4 AND SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH2 0x338 DUP4 DUP4 PUSH2 0x311 JUMP JUMPDEST SWAP2 POP DUP3 PUSH1 0x2 MUL DUP3 OR SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH2 0x351 DUP3 PUSH2 0x10E JUMP JUMPDEST PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT ISZERO PUSH2 0x36A JUMPI PUSH2 0x369 PUSH2 0x118 JUMP JUMPDEST JUMPDEST PUSH2 0x374 DUP3 SLOAD PUSH2 0x172 JUMP JUMPDEST PUSH2 0x37F DUP3 DUP3 DUP6 PUSH2 0x2BF JUMP JUMPDEST PUSH0 PUSH1 0x20 SWAP1 POP PUSH1 0x1F DUP4 GT PUSH1 0x1 DUP2 EQ PUSH2 0x3B0 JUMPI PUSH0 DUP5 ISZERO PUSH2 0x39E JUMPI DUP3 DUP8 ADD MLOAD SWAP1 POP JUMPDEST PUSH2 0x3A8 DUP6 DUP3 PUSH2 0x32D JUMP JUMPDEST DUP7 SSTORE POP PUSH2 0x40F JUMP JUMPDEST PUSH1 0x1F NOT DUP5 AND PUSH2 0x3BE DUP7 PUSH2 0x1A2 JUMP JUMPDEST PUSH0 JUMPDEST DUP3 DUP2 LT ISZERO PUSH2 0x3E5 JUMPI DUP5 DUP10 ADD MLOAD DUP3 SSTORE PUSH1 0x1 DUP3 ADD SWAP2 POP PUSH1 0x20 DUP6 ADD SWAP5 POP PUSH1 0x20 DUP2 ADD SWAP1 POP PUSH2 0x3C0 JUMP JUMPDEST DUP7 DUP4 LT ISZERO PUSH2 0x402 JUMPI DUP5 DUP10 ADD MLOAD PUSH2 0x3FE PUSH1 0x1F DUP10 AND DUP3 PUSH2 0x311 JUMP JUMPDEST DUP4 SSTORE POP JUMPDEST PUSH1 0x1 PUSH1 0x2 DUP9 MUL ADD DUP9 SSTORE POP POP POP JUMPDEST POP POP POP POP POP POP JUMP JUMPDEST PUSH0 PUSH1 0x40 MLOAD SWAP1 POP SWAP1 JUMP JUMPDEST PUSH0 DUP1 REVERT JUMPDEST PUSH0 DUP1 REVERT JUMPDEST PUSH0 DUP1 REVERT JUMPDEST PUSH0 DUP1 REVERT JUMPDEST PUSH0 PUSH1 0x1F NOT PUSH1 0x1F DUP4 ADD AND SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x449 DUP3 PUSH2 0x430 JUMP JUMPDEST DUP2 ADD DUP2 DUP2 LT PUSH8 0xFFFFFFFFFFFFFFFF DUP3 GT OR ISZERO PUSH2 0x468 JUMPI PUSH2 0x467 PUSH2 0x118 JUMP JUMPDEST JUMPDEST DUP1 PUSH1 0x40 MSTORE POP POP POP JUMP JUMPDEST PUSH0 PUSH2 0x47A PUSH2 0x417 JUMP JUMPDEST SWAP1 POP PUSH2 0x486 DUP3 DUP3 PUSH2 0x440 JUMP JUMPDEST SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH8 0xFFFFFFFFFFFFFFFF DUP3 GT ISZERO PUSH2 0x4A5 JUMPI PUSH2 0x4A4 PUSH2 0x118 JUMP JUMPDEST JUMPDEST PUSH2 0x4AE DUP3 PUSH2 0x430 JUMP JUMPDEST SWAP1 POP PUSH1 0x20 DUP2 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST DUP3 DUP2 DUP4 MCOPY PUSH0 DUP4 DUP4 ADD MSTORE POP POP POP JUMP JUMPDEST PUSH0 PUSH2 0x4DB PUSH2 0x4D6 DUP5 PUSH2 0x48B JUMP JUMPDEST PUSH2 0x471 JUMP JUMPDEST SWAP1 POP DUP3 DUP2 MSTORE PUSH1 0x20 DUP2 ADD DUP5 DUP5 DUP5 ADD GT ISZERO PUSH2 0x4F7 JUMPI PUSH2 0x4F6 PUSH2 0x42C JUMP JUMPDEST JUMPDEST PUSH2 0x502 DUP5 DUP3 DUP6 PUSH2 0x4BB JUMP JUMPDEST POP SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH0 DUP3 PUSH1 0x1F DUP4 ADD SLT PUSH2 0x51E JUMPI PUSH2 0x51D PUSH2 0x428 JUMP JUMPDEST JUMPDEST DUP2 MLOAD PUSH2 0x52E DUP5 DUP3 PUSH1 0x20 DUP7 ADD PUSH2 0x4C9 JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 DUP1 PUSH1 0x40 DUP4 DUP6 SUB SLT ISZERO PUSH2 0x54D JUMPI PUSH2 0x54C PUSH2 0x420 JUMP JUMPDEST JUMPDEST PUSH0 DUP4 ADD MLOAD PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT ISZERO PUSH2 0x56A JUMPI PUSH2 0x569 PUSH2 0x424 JUMP JUMPDEST JUMPDEST PUSH2 0x576 DUP6 DUP3 DUP7 ADD PUSH2 0x50A JUMP JUMPDEST SWAP3 POP POP PUSH1 0x20 DUP4 ADD MLOAD PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT ISZERO PUSH2 0x597 JUMPI PUSH2 0x596 PUSH2 0x424 JUMP JUMPDEST JUMPDEST PUSH2 0x5A3 DUP6 DUP3 DUP7 ADD PUSH2 0x50A JUMP JUMPDEST SWAP2 POP POP SWAP3 POP SWAP3 SWAP1 POP JUMP JUMPDEST PUSH2 0x1D9C DUP1 PUSH2 0x5BA PUSH0 CODECOPY PUSH0 RETURN INVALID PUSH1 0x80 PUSH1 0x40 MSTORE CALLVALUE DUP1 ISZERO PUSH2 0xF JUMPI PUSH0 DUP1 REVERT JUMPDEST POP PUSH1 0x4 CALLDATASIZE LT PUSH2 0xFE JUMPI PUSH0 CALLDATALOAD PUSH1 0xE0 SHR DUP1 PUSH4 0x830953AB GT PUSH2 0x95 JUMPI DUP1 PUSH4 0x976B3113 GT PUSH2 0x64 JUMPI DUP1 PUSH4 0x976B3113 EQ PUSH2 0x2AE JUMPI DUP1 PUSH4 0xA9059CBB EQ PUSH2 0x2DE JUMPI DUP1 PUSH4 0xD5ABEB01 EQ PUSH2 0x30E JUMPI DUP1 PUSH4 0xDD62ED3E EQ PUSH2 0x32C JUMPI PUSH2 0xFE JUMP JUMPDEST DUP1 PUSH4 0x830953AB EQ PUSH2 0x226 JUMPI DUP1 PUSH4 0x8615D855 EQ PUSH2 0x244 JUMPI DUP1 PUSH4 0x943E8216 EQ PUSH2 0x274 JUMPI DUP1 PUSH4 0x95D89B41 EQ PUSH2 0x290 JUMPI PUSH2 0xFE JUMP JUMPDEST DUP1 PUSH4 0x313CE567 GT PUSH2 0xD1 JUMPI DUP1 PUSH4 0x313CE567 EQ PUSH2 0x19E JUMPI DUP1 PUSH4 0x4E71D92D EQ PUSH2 0x1BC JUMPI DUP1 PUSH4 0x624601B6 EQ PUSH2 0x1C6 JUMPI DUP1 PUSH4 0x70A08231 EQ PUSH2 0x1F6 JUMPI PUSH2 0xFE JUMP JUMPDEST DUP1 PUSH4 0x6FDDE03 EQ PUSH2 0x102 JUMPI DUP1 PUSH4 0x95EA7B3 EQ PUSH2 0x120 JUMPI DUP1 PUSH4 0x18160DDD EQ PUSH2 0x150 JUMPI DUP1 PUSH4 0x23B872DD EQ PUSH2 0x16E JUMPI JUMPDEST PUSH0 DUP1 REVERT JUMPDEST PUSH2 0x10A PUSH2 0x35C JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x117 SWAP2 SWAP1 PUSH2 0x1393 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x13A PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x135 SWAP2 SWAP1 PUSH2 0x1448 JUMP JUMPDEST PUSH2 0x3EC JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x147 SWAP2 SWAP1 PUSH2 0x14A0 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x158 PUSH2 0x40E JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x165 SWAP2 SWAP1 PUSH2 0x14C8 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x188 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x183 SWAP2 SWAP1 PUSH2 0x14E1 JUMP JUMPDEST PUSH2 0x417 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x195 SWAP2 SWAP1 PUSH2 0x14A0 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x1A6 PUSH2 0x445 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x1B3 SWAP2 SWAP1 PUSH2 0x154C JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x1C4 PUSH2 0x44D JUMP JUMPDEST STOP JUMPDEST PUSH2 0x1E0 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x1DB SWAP2 SWAP1 PUSH2 0x1565 JUMP JUMPDEST PUSH2 0x581 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x1ED SWAP2 SWAP1 PUSH2 0x14A0 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x210 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x20B SWAP2 SWAP1 PUSH2 0x1565 JUMP JUMPDEST PUSH2 0x59E JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x21D SWAP2 SWAP1 PUSH2 0x14C8 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x22E PUSH2 0x5E3 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x23B SWAP2 SWAP1 PUSH2 0x14C8 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x25E PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x259 SWAP2 SWAP1 PUSH2 0x15F1 JUMP JUMPDEST PUSH2 0x5E9 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x26B SWAP2 SWAP1 PUSH2 0x14C8 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x28E PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x289 SWAP2 SWAP1 PUSH2 0x1671 JUMP JUMPDEST PUSH2 0x6C6 JUMP JUMPDEST STOP JUMPDEST PUSH2 0x298 PUSH2 0x904 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x2A5 SWAP2 SWAP1 PUSH2 0x1393 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x2C8 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x2C3 SWAP2 SWAP1 PUSH2 0x16AF JUMP JUMPDEST PUSH2 0x994 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x2D5 SWAP2 SWAP1 PUSH2 0x18C0 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x2F8 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x2F3 SWAP2 SWAP1 PUSH2 0x1448 JUMP JUMPDEST PUSH2 0xAD4 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x305 SWAP2 SWAP1 PUSH2 0x14A0 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x316 PUSH2 0xAF6 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x323 SWAP2 SWAP1 PUSH2 0x14C8 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x346 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x341 SWAP2 SWAP1 PUSH2 0x18E0 JUMP JUMPDEST PUSH2 0xAFC JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x353 SWAP2 SWAP1 PUSH2 0x14C8 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH1 0x60 PUSH1 0x3 DUP1 SLOAD PUSH2 0x36B SWAP1 PUSH2 0x194B JUMP JUMPDEST DUP1 PUSH1 0x1F ADD PUSH1 0x20 DUP1 SWAP2 DIV MUL PUSH1 0x20 ADD PUSH1 0x40 MLOAD SWAP1 DUP2 ADD PUSH1 0x40 MSTORE DUP1 SWAP3 SWAP2 SWAP1 DUP2 DUP2 MSTORE PUSH1 0x20 ADD DUP3 DUP1 SLOAD PUSH2 0x397 SWAP1 PUSH2 0x194B JUMP JUMPDEST DUP1 ISZERO PUSH2 0x3E2 JUMPI DUP1 PUSH1 0x1F LT PUSH2 0x3B9 JUMPI PUSH2 0x100 DUP1 DUP4 SLOAD DIV MUL DUP4 MSTORE SWAP2 PUSH1 0x20 ADD SWAP2 PUSH2 0x3E2 JUMP JUMPDEST DUP3 ADD SWAP2 SWAP1 PUSH0 MSTORE PUSH1 0x20 PUSH0 KECCAK256 SWAP1 JUMPDEST DUP2 SLOAD DUP2 MSTORE SWAP1 PUSH1 0x1 ADD SWAP1 PUSH1 0x20 ADD DUP1 DUP4 GT PUSH2 0x3C5 JUMPI DUP3 SWAP1 SUB PUSH1 0x1F AND DUP3 ADD SWAP2 JUMPDEST POP POP POP POP POP SWAP1 POP SWAP1 JUMP JUMPDEST PUSH0 DUP1 PUSH2 0x3F6 PUSH2 0xB7E JUMP JUMPDEST SWAP1 POP PUSH2 0x403 DUP2 DUP6 DUP6 PUSH2 0xB85 JUMP JUMPDEST PUSH1 0x1 SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH1 0x2 SLOAD SWAP1 POP SWAP1 JUMP JUMPDEST PUSH0 DUP1 PUSH2 0x421 PUSH2 0xB7E JUMP JUMPDEST SWAP1 POP PUSH2 0x42E DUP6 DUP3 DUP6 PUSH2 0xB97 JUMP JUMPDEST PUSH2 0x439 DUP6 DUP6 DUP6 PUSH2 0xC2A JUMP JUMPDEST PUSH1 0x1 SWAP2 POP POP SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH0 PUSH1 0x12 SWAP1 POP SWAP1 JUMP JUMPDEST PUSH1 0x8 SLOAD PUSH1 0x9 SLOAD PUSH2 0x45B PUSH2 0x40E JUMP JUMPDEST PUSH2 0x465 SWAP2 SWAP1 PUSH2 0x19A8 JUMP JUMPDEST GT ISZERO PUSH2 0x49D JUMPI PUSH1 0x40 MLOAD PUSH32 0xCBE2483100000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x7 PUSH0 CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 PUSH0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH1 0xFF AND ISZERO PUSH2 0x51E JUMPI PUSH1 0x40 MLOAD PUSH32 0xB1327A600000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH2 0x52A CALLER PUSH1 0x9 SLOAD PUSH2 0xD1A JUMP JUMPDEST PUSH1 0x1 PUSH1 0x7 PUSH0 CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 PUSH0 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH1 0xFF MUL NOT AND SWAP1 DUP4 ISZERO ISZERO MUL OR SWAP1 SSTORE POP JUMP JUMPDEST PUSH1 0x7 PUSH1 0x20 MSTORE DUP1 PUSH0 MSTORE PUSH1 0x40 PUSH0 KECCAK256 PUSH0 SWAP2 POP SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH1 0xFF AND DUP2 JUMP JUMPDEST PUSH0 DUP1 PUSH0 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 SLOAD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x9 SLOAD DUP2 JUMP JUMPDEST PUSH0 DUP1 PUSH2 0x5F4 CALLER PUSH2 0x59E JUMP JUMPDEST SUB PUSH2 0x62B JUMPI PUSH1 0x40 MLOAD PUSH32 0x8439960D00000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH2 0x633 PUSH2 0x40E JUMP JUMPDEST DUP3 GT ISZERO PUSH2 0x66C JUMPI PUSH1 0x40 MLOAD PUSH32 0xD92730000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH0 PUSH1 0x6 PUSH1 0x1 DUP2 PUSH1 0x1 DUP2 SLOAD ADD DUP1 DUP3 SSTORE DUP1 SWAP2 POP POP SUB SWAP1 PUSH0 MSTORE PUSH1 0x20 PUSH0 KECCAK256 SWAP1 PUSH1 0x9 MUL ADD SWAP1 POP DUP5 DUP5 DUP3 PUSH1 0x2 ADD SWAP2 DUP3 PUSH2 0x6A0 SWAP3 SWAP2 SWAP1 PUSH2 0x1BAF JUMP JUMPDEST POP DUP3 DUP2 PUSH1 0x3 ADD DUP2 SWAP1 SSTORE POP PUSH1 0x1 PUSH1 0x6 DUP1 SLOAD SWAP1 POP PUSH2 0x6BC SWAP2 SWAP1 PUSH2 0x1C7C JUMP JUMPDEST SWAP2 POP POP SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH0 PUSH1 0x6 DUP4 DUP2 SLOAD DUP2 LT PUSH2 0x6DB JUMPI PUSH2 0x6DA PUSH2 0x1CAF JUMP JUMPDEST JUMPDEST SWAP1 PUSH0 MSTORE PUSH1 0x20 PUSH0 KECCAK256 SWAP1 PUSH1 0x9 MUL ADD SWAP1 POP DUP1 PUSH1 0x8 ADD PUSH1 0x1 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH1 0xFF AND ISZERO PUSH2 0x732 JUMPI PUSH1 0x40 MLOAD PUSH32 0x66B6CB4A00000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH2 0x747 CALLER DUP3 PUSH0 ADD PUSH2 0xD99 SWAP1 SWAP2 SWAP1 PUSH4 0xFFFFFFFF AND JUMP JUMPDEST ISZERO PUSH2 0x77E JUMPI PUSH1 0x40 MLOAD PUSH32 0x7C9A1CF900000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH0 PUSH2 0x788 CALLER PUSH2 0x59E JUMP JUMPDEST SWAP1 POP PUSH0 DUP2 SUB PUSH2 0x7C3 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8439960D00000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH0 PUSH1 0x2 DUP2 GT ISZERO PUSH2 0x7D6 JUMPI PUSH2 0x7D5 PUSH2 0x1CDC JUMP JUMPDEST JUMPDEST DUP4 PUSH1 0x2 DUP2 GT ISZERO PUSH2 0x7E9 JUMPI PUSH2 0x7E8 PUSH2 0x1CDC JUMP JUMPDEST JUMPDEST SUB PUSH2 0x80D JUMPI DUP1 DUP3 PUSH1 0x6 ADD PUSH0 DUP3 DUP3 SLOAD PUSH2 0x801 SWAP2 SWAP1 PUSH2 0x19A8 JUMP JUMPDEST SWAP3 POP POP DUP2 SWAP1 SSTORE POP PUSH2 0x874 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x2 DUP2 GT ISZERO PUSH2 0x821 JUMPI PUSH2 0x820 PUSH2 0x1CDC JUMP JUMPDEST JUMPDEST DUP4 PUSH1 0x2 DUP2 GT ISZERO PUSH2 0x834 JUMPI PUSH2 0x833 PUSH2 0x1CDC JUMP JUMPDEST JUMPDEST SUB PUSH2 0x858 JUMPI DUP1 DUP3 PUSH1 0x5 ADD PUSH0 DUP3 DUP3 SLOAD PUSH2 0x84C SWAP2 SWAP1 PUSH2 0x19A8 JUMP JUMPDEST SWAP3 POP POP DUP2 SWAP1 SSTORE POP PUSH2 0x873 JUMP JUMPDEST DUP1 DUP3 PUSH1 0x7 ADD PUSH0 DUP3 DUP3 SLOAD PUSH2 0x86B SWAP2 SWAP1 PUSH2 0x19A8 JUMP JUMPDEST SWAP3 POP POP DUP2 SWAP1 SSTORE POP JUMPDEST JUMPDEST PUSH2 0x889 CALLER DUP4 PUSH0 ADD PUSH2 0xDC6 SWAP1 SWAP2 SWAP1 PUSH4 0xFFFFFFFF AND JUMP JUMPDEST POP DUP1 DUP3 PUSH1 0x4 ADD PUSH0 DUP3 DUP3 SLOAD PUSH2 0x89D SWAP2 SWAP1 PUSH2 0x19A8 JUMP JUMPDEST SWAP3 POP POP DUP2 SWAP1 SSTORE POP DUP2 PUSH1 0x3 ADD SLOAD DUP3 PUSH1 0x4 ADD SLOAD LT PUSH2 0x8FE JUMPI PUSH1 0x1 DUP3 PUSH1 0x8 ADD PUSH1 0x1 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH1 0xFF MUL NOT AND SWAP1 DUP4 ISZERO ISZERO MUL OR SWAP1 SSTORE POP DUP2 PUSH1 0x6 ADD SLOAD DUP3 PUSH1 0x5 ADD SLOAD GT ISZERO PUSH2 0x8FD JUMPI PUSH1 0x1 DUP3 PUSH1 0x8 ADD PUSH0 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH1 0xFF MUL NOT AND SWAP1 DUP4 ISZERO ISZERO MUL OR SWAP1 SSTORE POP JUMPDEST JUMPDEST POP POP POP POP JUMP JUMPDEST PUSH1 0x60 PUSH1 0x4 DUP1 SLOAD PUSH2 0x913 SWAP1 PUSH2 0x194B JUMP JUMPDEST DUP1 PUSH1 0x1F ADD PUSH1 0x20 DUP1 SWAP2 DIV MUL PUSH1 0x20 ADD PUSH1 0x40 MLOAD SWAP1 DUP2 ADD PUSH1 0x40 MSTORE DUP1 SWAP3 SWAP2 SWAP1 DUP2 DUP2 MSTORE PUSH1 0x20 ADD DUP3 DUP1 SLOAD PUSH2 0x93F SWAP1 PUSH2 0x194B JUMP JUMPDEST DUP1 ISZERO PUSH2 0x98A JUMPI DUP1 PUSH1 0x1F LT PUSH2 0x961 JUMPI PUSH2 0x100 DUP1 DUP4 SLOAD DIV MUL DUP4 MSTORE SWAP2 PUSH1 0x20 ADD SWAP2 PUSH2 0x98A JUMP JUMPDEST DUP3 ADD SWAP2 SWAP1 PUSH0 MSTORE PUSH1 0x20 PUSH0 KECCAK256 SWAP1 JUMPDEST DUP2 SLOAD DUP2 MSTORE SWAP1 PUSH1 0x1 ADD SWAP1 PUSH1 0x20 ADD DUP1 DUP4 GT PUSH2 0x96D JUMPI DUP3 SWAP1 SUB PUSH1 0x1F AND DUP3 ADD SWAP2 JUMPDEST POP POP POP POP POP SWAP1 POP SWAP1 JUMP JUMPDEST PUSH2 0x99C PUSH2 0x12DA JUMP JUMPDEST PUSH0 PUSH1 0x6 DUP4 DUP2 SLOAD DUP2 LT PUSH2 0x9B1 JUMPI PUSH2 0x9B0 PUSH2 0x1CAF JUMP JUMPDEST JUMPDEST SWAP1 PUSH0 MSTORE PUSH1 0x20 PUSH0 KECCAK256 SWAP1 PUSH1 0x9 MUL ADD SWAP1 POP PUSH1 0x40 MLOAD DUP1 PUSH2 0x120 ADD PUSH1 0x40 MSTORE DUP1 PUSH2 0x9D6 DUP4 PUSH0 ADD PUSH2 0xDF3 JUMP JUMPDEST DUP2 MSTORE PUSH1 0x20 ADD DUP3 PUSH1 0x2 ADD DUP1 SLOAD PUSH2 0x9EA SWAP1 PUSH2 0x194B JUMP JUMPDEST DUP1 PUSH1 0x1F ADD PUSH1 0x20 DUP1 SWAP2 DIV MUL PUSH1 0x20 ADD PUSH1 0x40 MLOAD SWAP1 DUP2 ADD PUSH1 0x40 MSTORE DUP1 SWAP3 SWAP2 SWAP1 DUP2 DUP2 MSTORE PUSH1 0x20 ADD DUP3 DUP1 SLOAD PUSH2 0xA16 SWAP1 PUSH2 0x194B JUMP JUMPDEST DUP1 ISZERO PUSH2 0xA61 JUMPI DUP1 PUSH1 0x1F LT PUSH2 0xA38 JUMPI PUSH2 0x100 DUP1 DUP4 SLOAD DIV MUL DUP4 MSTORE SWAP2 PUSH1 0x20 ADD SWAP2 PUSH2 0xA61 JUMP JUMPDEST DUP3 ADD SWAP2 SWAP1 PUSH0 MSTORE PUSH1 0x20 PUSH0 KECCAK256 SWAP1 JUMPDEST DUP2 SLOAD DUP2 MSTORE SWAP1 PUSH1 0x1 ADD SWAP1 PUSH1 0x20 ADD DUP1 DUP4 GT PUSH2 0xA44 JUMPI DUP3 SWAP1 SUB PUSH1 0x1F AND DUP3 ADD SWAP2 JUMPDEST POP POP POP POP POP DUP2 MSTORE PUSH1 0x20 ADD DUP3 PUSH1 0x3 ADD SLOAD DUP2 MSTORE PUSH1 0x20 ADD DUP3 PUSH1 0x4 ADD SLOAD DUP2 MSTORE PUSH1 0x20 ADD DUP3 PUSH1 0x5 ADD SLOAD DUP2 MSTORE PUSH1 0x20 ADD DUP3 PUSH1 0x6 ADD SLOAD DUP2 MSTORE PUSH1 0x20 ADD DUP3 PUSH1 0x7 ADD SLOAD DUP2 MSTORE PUSH1 0x20 ADD DUP3 PUSH1 0x8 ADD PUSH0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH1 0xFF AND ISZERO ISZERO DUP2 MSTORE PUSH1 0x20 ADD DUP3 PUSH1 0x8 ADD PUSH1 0x1 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH1 0xFF AND ISZERO ISZERO DUP2 MSTORE POP SWAP2 POP POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 DUP1 PUSH2 0xADE PUSH2 0xB7E JUMP JUMPDEST SWAP1 POP PUSH2 0xAEB DUP2 DUP6 DUP6 PUSH2 0xC2A JUMP JUMPDEST PUSH1 0x1 SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x8 SLOAD DUP2 JUMP JUMPDEST PUSH0 PUSH1 0x1 PUSH0 DUP5 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 PUSH0 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 SLOAD SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 CALLER SWAP1 POP SWAP1 JUMP JUMPDEST PUSH2 0xB92 DUP4 DUP4 DUP4 PUSH1 0x1 PUSH2 0xE12 JUMP JUMPDEST POP POP POP JUMP JUMPDEST PUSH0 PUSH2 0xBA2 DUP5 DUP5 PUSH2 0xAFC JUMP JUMPDEST SWAP1 POP PUSH32 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP2 LT ISZERO PUSH2 0xC24 JUMPI DUP2 DUP2 LT ISZERO PUSH2 0xC15 JUMPI DUP3 DUP2 DUP4 PUSH1 0x40 MLOAD PUSH32 0xFB8F41B200000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0xC0C SWAP4 SWAP3 SWAP2 SWAP1 PUSH2 0x1D18 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH2 0xC23 DUP5 DUP5 DUP5 DUP5 SUB PUSH0 PUSH2 0xE12 JUMP JUMPDEST JUMPDEST POP POP POP POP JUMP JUMPDEST PUSH0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SUB PUSH2 0xC9A JUMPI PUSH0 PUSH1 0x40 MLOAD PUSH32 0x96C6FD1E00000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0xC91 SWAP2 SWAP1 PUSH2 0x1D4D JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP3 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SUB PUSH2 0xD0A JUMPI PUSH0 PUSH1 0x40 MLOAD PUSH32 0xEC442F0500000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0xD01 SWAP2 SWAP1 PUSH2 0x1D4D JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH2 0xD15 DUP4 DUP4 DUP4 PUSH2 0xFE1 JUMP JUMPDEST POP POP POP JUMP JUMPDEST PUSH0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP3 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SUB PUSH2 0xD8A JUMPI PUSH0 PUSH1 0x40 MLOAD PUSH32 0xEC442F0500000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0xD81 SWAP2 SWAP1 PUSH2 0x1D4D JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH2 0xD95 PUSH0 DUP4 DUP4 PUSH2 0xFE1 JUMP JUMPDEST POP POP JUMP JUMPDEST PUSH0 PUSH2 0xDBE DUP4 PUSH0 ADD DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH0 SHL PUSH2 0x11FA JUMP JUMPDEST SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH2 0xDEB DUP4 PUSH0 ADD DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH0 SHL PUSH2 0x121A JUMP JUMPDEST SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x60 PUSH0 PUSH2 0xE01 DUP4 PUSH0 ADD PUSH2 0x1281 JUMP JUMPDEST SWAP1 POP PUSH1 0x60 DUP2 SWAP1 POP DUP1 SWAP3 POP POP POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP5 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SUB PUSH2 0xE82 JUMPI PUSH0 PUSH1 0x40 MLOAD PUSH32 0xE602DF0500000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0xE79 SWAP2 SWAP1 PUSH2 0x1D4D JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SUB PUSH2 0xEF2 JUMPI PUSH0 PUSH1 0x40 MLOAD PUSH32 0x94280D6200000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0xEE9 SWAP2 SWAP1 PUSH2 0x1D4D JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST DUP2 PUSH1 0x1 PUSH0 DUP7 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 PUSH0 DUP6 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 DUP2 SWAP1 SSTORE POP DUP1 ISZERO PUSH2 0xFDB JUMPI DUP3 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP5 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH32 0x8C5BE1E5EBEC7D5BD14F71427D1E84F3DD0314C0F7B2291E5B200AC8C7C3B925 DUP5 PUSH1 0x40 MLOAD PUSH2 0xFD2 SWAP2 SWAP1 PUSH2 0x14C8 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG3 JUMPDEST POP POP POP POP JUMP JUMPDEST PUSH0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SUB PUSH2 0x1031 JUMPI DUP1 PUSH1 0x2 PUSH0 DUP3 DUP3 SLOAD PUSH2 0x1025 SWAP2 SWAP1 PUSH2 0x19A8 JUMP JUMPDEST SWAP3 POP POP DUP2 SWAP1 SSTORE POP PUSH2 0x10FF JUMP JUMPDEST PUSH0 DUP1 PUSH0 DUP6 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 SLOAD SWAP1 POP DUP2 DUP2 LT ISZERO PUSH2 0x10BA JUMPI DUP4 DUP2 DUP4 PUSH1 0x40 MLOAD PUSH32 0xE450D38C00000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x10B1 SWAP4 SWAP3 SWAP2 SWAP1 PUSH2 0x1D18 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST DUP2 DUP2 SUB PUSH0 DUP1 DUP7 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 DUP2 SWAP1 SSTORE POP POP JUMPDEST PUSH0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP3 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SUB PUSH2 0x1146 JUMPI DUP1 PUSH1 0x2 PUSH0 DUP3 DUP3 SLOAD SUB SWAP3 POP POP DUP2 SWAP1 SSTORE POP PUSH2 0x1190 JUMP JUMPDEST DUP1 PUSH0 DUP1 DUP5 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 PUSH0 DUP3 DUP3 SLOAD ADD SWAP3 POP POP DUP2 SWAP1 SSTORE POP JUMPDEST DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH32 0xDDF252AD1BE2C89B69C2B068FC378DAA952BA7F163C4A11628F55A4DF523B3EF DUP4 PUSH1 0x40 MLOAD PUSH2 0x11ED SWAP2 SWAP1 PUSH2 0x14C8 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG3 POP POP POP JUMP JUMPDEST PUSH0 DUP1 DUP4 PUSH1 0x1 ADD PUSH0 DUP5 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 SLOAD EQ ISZERO SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH2 0x1225 DUP4 DUP4 PUSH2 0x11FA JUMP JUMPDEST PUSH2 0x1277 JUMPI DUP3 PUSH0 ADD DUP3 SWAP1 DUP1 PUSH1 0x1 DUP2 SLOAD ADD DUP1 DUP3 SSTORE DUP1 SWAP2 POP POP PUSH1 0x1 SWAP1 SUB SWAP1 PUSH0 MSTORE PUSH1 0x20 PUSH0 KECCAK256 ADD PUSH0 SWAP1 SWAP2 SWAP1 SWAP2 SWAP1 SWAP2 POP SSTORE DUP3 PUSH0 ADD DUP1 SLOAD SWAP1 POP DUP4 PUSH1 0x1 ADD PUSH0 DUP5 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 DUP2 SWAP1 SSTORE POP PUSH1 0x1 SWAP1 POP PUSH2 0x127B JUMP JUMPDEST PUSH0 SWAP1 POP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x60 DUP2 PUSH0 ADD DUP1 SLOAD DUP1 PUSH1 0x20 MUL PUSH1 0x20 ADD PUSH1 0x40 MLOAD SWAP1 DUP2 ADD PUSH1 0x40 MSTORE DUP1 SWAP3 SWAP2 SWAP1 DUP2 DUP2 MSTORE PUSH1 0x20 ADD DUP3 DUP1 SLOAD DUP1 ISZERO PUSH2 0x12CE JUMPI PUSH1 0x20 MUL DUP3 ADD SWAP2 SWAP1 PUSH0 MSTORE PUSH1 0x20 PUSH0 KECCAK256 SWAP1 JUMPDEST DUP2 SLOAD DUP2 MSTORE PUSH1 0x20 ADD SWAP1 PUSH1 0x1 ADD SWAP1 DUP1 DUP4 GT PUSH2 0x12BA JUMPI JUMPDEST POP POP POP POP POP SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 PUSH2 0x120 ADD PUSH1 0x40 MSTORE DUP1 PUSH1 0x60 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x60 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 ISZERO ISZERO DUP2 MSTORE PUSH1 0x20 ADD PUSH0 ISZERO ISZERO DUP2 MSTORE POP SWAP1 JUMP JUMPDEST PUSH0 DUP2 MLOAD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 DUP3 DUP3 MSTORE PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST DUP3 DUP2 DUP4 MCOPY PUSH0 DUP4 DUP4 ADD MSTORE POP POP POP JUMP JUMPDEST PUSH0 PUSH1 0x1F NOT PUSH1 0x1F DUP4 ADD AND SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH2 0x1365 DUP3 PUSH2 0x1323 JUMP JUMPDEST PUSH2 0x136F DUP2 DUP6 PUSH2 0x132D JUMP JUMPDEST SWAP4 POP PUSH2 0x137F DUP2 DUP6 PUSH1 0x20 DUP7 ADD PUSH2 0x133D JUMP JUMPDEST PUSH2 0x1388 DUP2 PUSH2 0x134B JUMP JUMPDEST DUP5 ADD SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH0 DUP4 ADD MSTORE PUSH2 0x13AB DUP2 DUP5 PUSH2 0x135B JUMP JUMPDEST SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 DUP1 REVERT JUMPDEST PUSH0 DUP1 REVERT JUMPDEST PUSH0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP3 AND SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH2 0x13E4 DUP3 PUSH2 0x13BB JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x13F4 DUP2 PUSH2 0x13DA JUMP JUMPDEST DUP2 EQ PUSH2 0x13FE JUMPI PUSH0 DUP1 REVERT JUMPDEST POP JUMP JUMPDEST PUSH0 DUP2 CALLDATALOAD SWAP1 POP PUSH2 0x140F DUP2 PUSH2 0x13EB JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 DUP2 SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x1427 DUP2 PUSH2 0x1415 JUMP JUMPDEST DUP2 EQ PUSH2 0x1431 JUMPI PUSH0 DUP1 REVERT JUMPDEST POP JUMP JUMPDEST PUSH0 DUP2 CALLDATALOAD SWAP1 POP PUSH2 0x1442 DUP2 PUSH2 0x141E JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 DUP1 PUSH1 0x40 DUP4 DUP6 SUB SLT ISZERO PUSH2 0x145E JUMPI PUSH2 0x145D PUSH2 0x13B3 JUMP JUMPDEST JUMPDEST PUSH0 PUSH2 0x146B DUP6 DUP3 DUP7 ADD PUSH2 0x1401 JUMP JUMPDEST SWAP3 POP POP PUSH1 0x20 PUSH2 0x147C DUP6 DUP3 DUP7 ADD PUSH2 0x1434 JUMP JUMPDEST SWAP2 POP POP SWAP3 POP SWAP3 SWAP1 POP JUMP JUMPDEST PUSH0 DUP2 ISZERO ISZERO SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x149A DUP2 PUSH2 0x1486 JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH2 0x14B3 PUSH0 DUP4 ADD DUP5 PUSH2 0x1491 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH2 0x14C2 DUP2 PUSH2 0x1415 JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH2 0x14DB PUSH0 DUP4 ADD DUP5 PUSH2 0x14B9 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 DUP1 PUSH0 PUSH1 0x60 DUP5 DUP7 SUB SLT ISZERO PUSH2 0x14F8 JUMPI PUSH2 0x14F7 PUSH2 0x13B3 JUMP JUMPDEST JUMPDEST PUSH0 PUSH2 0x1505 DUP7 DUP3 DUP8 ADD PUSH2 0x1401 JUMP JUMPDEST SWAP4 POP POP PUSH1 0x20 PUSH2 0x1516 DUP7 DUP3 DUP8 ADD PUSH2 0x1401 JUMP JUMPDEST SWAP3 POP POP PUSH1 0x40 PUSH2 0x1527 DUP7 DUP3 DUP8 ADD PUSH2 0x1434 JUMP JUMPDEST SWAP2 POP POP SWAP3 POP SWAP3 POP SWAP3 JUMP JUMPDEST PUSH0 PUSH1 0xFF DUP3 AND SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x1546 DUP2 PUSH2 0x1531 JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH2 0x155F PUSH0 DUP4 ADD DUP5 PUSH2 0x153D JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x157A JUMPI PUSH2 0x1579 PUSH2 0x13B3 JUMP JUMPDEST JUMPDEST PUSH0 PUSH2 0x1587 DUP5 DUP3 DUP6 ADD PUSH2 0x1401 JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 DUP1 REVERT JUMPDEST PUSH0 DUP1 REVERT JUMPDEST PUSH0 DUP1 REVERT JUMPDEST PUSH0 DUP1 DUP4 PUSH1 0x1F DUP5 ADD SLT PUSH2 0x15B1 JUMPI PUSH2 0x15B0 PUSH2 0x1590 JUMP JUMPDEST JUMPDEST DUP3 CALLDATALOAD SWAP1 POP PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT ISZERO PUSH2 0x15CE JUMPI PUSH2 0x15CD PUSH2 0x1594 JUMP JUMPDEST JUMPDEST PUSH1 0x20 DUP4 ADD SWAP2 POP DUP4 PUSH1 0x1 DUP3 MUL DUP4 ADD GT ISZERO PUSH2 0x15EA JUMPI PUSH2 0x15E9 PUSH2 0x1598 JUMP JUMPDEST JUMPDEST SWAP3 POP SWAP3 SWAP1 POP JUMP JUMPDEST PUSH0 DUP1 PUSH0 PUSH1 0x40 DUP5 DUP7 SUB SLT ISZERO PUSH2 0x1608 JUMPI PUSH2 0x1607 PUSH2 0x13B3 JUMP JUMPDEST JUMPDEST PUSH0 DUP5 ADD CALLDATALOAD PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT ISZERO PUSH2 0x1625 JUMPI PUSH2 0x1624 PUSH2 0x13B7 JUMP JUMPDEST JUMPDEST PUSH2 0x1631 DUP7 DUP3 DUP8 ADD PUSH2 0x159C JUMP JUMPDEST SWAP4 POP SWAP4 POP POP PUSH1 0x20 PUSH2 0x1644 DUP7 DUP3 DUP8 ADD PUSH2 0x1434 JUMP JUMPDEST SWAP2 POP POP SWAP3 POP SWAP3 POP SWAP3 JUMP JUMPDEST PUSH1 0x3 DUP2 LT PUSH2 0x165A JUMPI PUSH0 DUP1 REVERT JUMPDEST POP JUMP JUMPDEST PUSH0 DUP2 CALLDATALOAD SWAP1 POP PUSH2 0x166B DUP2 PUSH2 0x164E JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 DUP1 PUSH1 0x40 DUP4 DUP6 SUB SLT ISZERO PUSH2 0x1687 JUMPI PUSH2 0x1686 PUSH2 0x13B3 JUMP JUMPDEST JUMPDEST PUSH0 PUSH2 0x1694 DUP6 DUP3 DUP7 ADD PUSH2 0x1434 JUMP JUMPDEST SWAP3 POP POP PUSH1 0x20 PUSH2 0x16A5 DUP6 DUP3 DUP7 ADD PUSH2 0x165D JUMP JUMPDEST SWAP2 POP POP SWAP3 POP SWAP3 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x16C4 JUMPI PUSH2 0x16C3 PUSH2 0x13B3 JUMP JUMPDEST JUMPDEST PUSH0 PUSH2 0x16D1 DUP5 DUP3 DUP6 ADD PUSH2 0x1434 JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 DUP2 MLOAD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 DUP3 DUP3 MSTORE PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 DUP2 SWAP1 POP PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x170C DUP2 PUSH2 0x13DA JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH0 PUSH2 0x171D DUP4 DUP4 PUSH2 0x1703 JUMP JUMPDEST PUSH1 0x20 DUP4 ADD SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH2 0x173F DUP3 PUSH2 0x16DA JUMP JUMPDEST PUSH2 0x1749 DUP2 DUP6 PUSH2 0x16E4 JUMP JUMPDEST SWAP4 POP PUSH2 0x1754 DUP4 PUSH2 0x16F4 JUMP JUMPDEST DUP1 PUSH0 JUMPDEST DUP4 DUP2 LT ISZERO PUSH2 0x1784 JUMPI DUP2 MLOAD PUSH2 0x176B DUP9 DUP3 PUSH2 0x1712 JUMP JUMPDEST SWAP8 POP PUSH2 0x1776 DUP4 PUSH2 0x1729 JUMP JUMPDEST SWAP3 POP POP PUSH1 0x1 DUP2 ADD SWAP1 POP PUSH2 0x1757 JUMP JUMPDEST POP DUP6 SWAP4 POP POP POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 DUP3 DUP3 MSTORE PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH2 0x17AB DUP3 PUSH2 0x1323 JUMP JUMPDEST PUSH2 0x17B5 DUP2 DUP6 PUSH2 0x1791 JUMP JUMPDEST SWAP4 POP PUSH2 0x17C5 DUP2 DUP6 PUSH1 0x20 DUP7 ADD PUSH2 0x133D JUMP JUMPDEST PUSH2 0x17CE DUP2 PUSH2 0x134B JUMP JUMPDEST DUP5 ADD SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH2 0x17E2 DUP2 PUSH2 0x1415 JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH2 0x17F1 DUP2 PUSH2 0x1486 JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH0 PUSH2 0x120 DUP4 ADD PUSH0 DUP4 ADD MLOAD DUP5 DUP3 SUB PUSH0 DUP7 ADD MSTORE PUSH2 0x1812 DUP3 DUP3 PUSH2 0x1735 JUMP JUMPDEST SWAP2 POP POP PUSH1 0x20 DUP4 ADD MLOAD DUP5 DUP3 SUB PUSH1 0x20 DUP7 ADD MSTORE PUSH2 0x182C DUP3 DUP3 PUSH2 0x17A1 JUMP JUMPDEST SWAP2 POP POP PUSH1 0x40 DUP4 ADD MLOAD PUSH2 0x1841 PUSH1 0x40 DUP7 ADD DUP3 PUSH2 0x17D9 JUMP JUMPDEST POP PUSH1 0x60 DUP4 ADD MLOAD PUSH2 0x1854 PUSH1 0x60 DUP7 ADD DUP3 PUSH2 0x17D9 JUMP JUMPDEST POP PUSH1 0x80 DUP4 ADD MLOAD PUSH2 0x1867 PUSH1 0x80 DUP7 ADD DUP3 PUSH2 0x17D9 JUMP JUMPDEST POP PUSH1 0xA0 DUP4 ADD MLOAD PUSH2 0x187A PUSH1 0xA0 DUP7 ADD DUP3 PUSH2 0x17D9 JUMP JUMPDEST POP PUSH1 0xC0 DUP4 ADD MLOAD PUSH2 0x188D PUSH1 0xC0 DUP7 ADD DUP3 PUSH2 0x17D9 JUMP JUMPDEST POP PUSH1 0xE0 DUP4 ADD MLOAD PUSH2 0x18A0 PUSH1 0xE0 DUP7 ADD DUP3 PUSH2 0x17E8 JUMP JUMPDEST POP PUSH2 0x100 DUP4 ADD MLOAD PUSH2 0x18B5 PUSH2 0x100 DUP7 ADD DUP3 PUSH2 0x17E8 JUMP JUMPDEST POP DUP1 SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH0 DUP4 ADD MSTORE PUSH2 0x18D8 DUP2 DUP5 PUSH2 0x17F7 JUMP JUMPDEST SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 DUP1 PUSH1 0x40 DUP4 DUP6 SUB SLT ISZERO PUSH2 0x18F6 JUMPI PUSH2 0x18F5 PUSH2 0x13B3 JUMP JUMPDEST JUMPDEST PUSH0 PUSH2 0x1903 DUP6 DUP3 DUP7 ADD PUSH2 0x1401 JUMP JUMPDEST SWAP3 POP POP PUSH1 0x20 PUSH2 0x1914 DUP6 DUP3 DUP7 ADD PUSH2 0x1401 JUMP JUMPDEST SWAP2 POP POP SWAP3 POP SWAP3 SWAP1 POP JUMP JUMPDEST PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH0 MSTORE PUSH1 0x22 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH0 REVERT JUMPDEST PUSH0 PUSH1 0x2 DUP3 DIV SWAP1 POP PUSH1 0x1 DUP3 AND DUP1 PUSH2 0x1962 JUMPI PUSH1 0x7F DUP3 AND SWAP2 POP JUMPDEST PUSH1 0x20 DUP3 LT DUP2 SUB PUSH2 0x1975 JUMPI PUSH2 0x1974 PUSH2 0x191E JUMP JUMPDEST JUMPDEST POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH0 MSTORE PUSH1 0x11 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH0 REVERT JUMPDEST PUSH0 PUSH2 0x19B2 DUP3 PUSH2 0x1415 JUMP JUMPDEST SWAP2 POP PUSH2 0x19BD DUP4 PUSH2 0x1415 JUMP JUMPDEST SWAP3 POP DUP3 DUP3 ADD SWAP1 POP DUP1 DUP3 GT ISZERO PUSH2 0x19D5 JUMPI PUSH2 0x19D4 PUSH2 0x197B JUMP JUMPDEST JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 DUP3 SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH0 MSTORE PUSH1 0x41 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH0 REVERT JUMPDEST PUSH0 DUP2 SWAP1 POP DUP2 PUSH0 MSTORE PUSH1 0x20 PUSH0 KECCAK256 SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH1 0x20 PUSH1 0x1F DUP4 ADD DIV SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 DUP3 DUP3 SHL SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH1 0x8 DUP4 MUL PUSH2 0x1A6E PUSH32 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP3 PUSH2 0x1A33 JUMP JUMPDEST PUSH2 0x1A78 DUP7 DUP4 PUSH2 0x1A33 JUMP JUMPDEST SWAP6 POP DUP1 NOT DUP5 AND SWAP4 POP DUP1 DUP7 AND DUP5 OR SWAP3 POP POP POP SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH0 DUP2 SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH2 0x1AB3 PUSH2 0x1AAE PUSH2 0x1AA9 DUP5 PUSH2 0x1415 JUMP JUMPDEST PUSH2 0x1A90 JUMP JUMPDEST PUSH2 0x1415 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 DUP2 SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x1ACC DUP4 PUSH2 0x1A99 JUMP JUMPDEST PUSH2 0x1AE0 PUSH2 0x1AD8 DUP3 PUSH2 0x1ABA JUMP JUMPDEST DUP5 DUP5 SLOAD PUSH2 0x1A3F JUMP JUMPDEST DUP3 SSTORE POP POP POP POP JUMP JUMPDEST PUSH0 SWAP1 JUMP JUMPDEST PUSH2 0x1AF4 PUSH2 0x1AE8 JUMP JUMPDEST PUSH2 0x1AFF DUP2 DUP5 DUP5 PUSH2 0x1AC3 JUMP JUMPDEST POP POP POP JUMP JUMPDEST JUMPDEST DUP2 DUP2 LT ISZERO PUSH2 0x1B22 JUMPI PUSH2 0x1B17 PUSH0 DUP3 PUSH2 0x1AEC JUMP JUMPDEST PUSH1 0x1 DUP2 ADD SWAP1 POP PUSH2 0x1B05 JUMP JUMPDEST POP POP JUMP JUMPDEST PUSH1 0x1F DUP3 GT ISZERO PUSH2 0x1B67 JUMPI PUSH2 0x1B38 DUP2 PUSH2 0x1A12 JUMP JUMPDEST PUSH2 0x1B41 DUP5 PUSH2 0x1A24 JUMP JUMPDEST DUP2 ADD PUSH1 0x20 DUP6 LT ISZERO PUSH2 0x1B50 JUMPI DUP2 SWAP1 POP JUMPDEST PUSH2 0x1B64 PUSH2 0x1B5C DUP6 PUSH2 0x1A24 JUMP JUMPDEST DUP4 ADD DUP3 PUSH2 0x1B04 JUMP JUMPDEST POP POP JUMPDEST POP POP POP JUMP JUMPDEST PUSH0 DUP3 DUP3 SHR SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH2 0x1B87 PUSH0 NOT DUP5 PUSH1 0x8 MUL PUSH2 0x1B6C JUMP JUMPDEST NOT DUP1 DUP4 AND SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH2 0x1B9F DUP4 DUP4 PUSH2 0x1B78 JUMP JUMPDEST SWAP2 POP DUP3 PUSH1 0x2 MUL DUP3 OR SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH2 0x1BB9 DUP4 DUP4 PUSH2 0x19DB JUMP JUMPDEST PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT ISZERO PUSH2 0x1BD2 JUMPI PUSH2 0x1BD1 PUSH2 0x19E5 JUMP JUMPDEST JUMPDEST PUSH2 0x1BDC DUP3 SLOAD PUSH2 0x194B JUMP JUMPDEST PUSH2 0x1BE7 DUP3 DUP3 DUP6 PUSH2 0x1B26 JUMP JUMPDEST PUSH0 PUSH1 0x1F DUP4 GT PUSH1 0x1 DUP2 EQ PUSH2 0x1C14 JUMPI PUSH0 DUP5 ISZERO PUSH2 0x1C02 JUMPI DUP3 DUP8 ADD CALLDATALOAD SWAP1 POP JUMPDEST PUSH2 0x1C0C DUP6 DUP3 PUSH2 0x1B94 JUMP JUMPDEST DUP7 SSTORE POP PUSH2 0x1C73 JUMP JUMPDEST PUSH1 0x1F NOT DUP5 AND PUSH2 0x1C22 DUP7 PUSH2 0x1A12 JUMP JUMPDEST PUSH0 JUMPDEST DUP3 DUP2 LT ISZERO PUSH2 0x1C49 JUMPI DUP5 DUP10 ADD CALLDATALOAD DUP3 SSTORE PUSH1 0x1 DUP3 ADD SWAP2 POP PUSH1 0x20 DUP6 ADD SWAP5 POP PUSH1 0x20 DUP2 ADD SWAP1 POP PUSH2 0x1C24 JUMP JUMPDEST DUP7 DUP4 LT ISZERO PUSH2 0x1C66 JUMPI DUP5 DUP10 ADD CALLDATALOAD PUSH2 0x1C62 PUSH1 0x1F DUP10 AND DUP3 PUSH2 0x1B78 JUMP JUMPDEST DUP4 SSTORE POP JUMPDEST PUSH1 0x1 PUSH1 0x2 DUP9 MUL ADD DUP9 SSTORE POP POP POP JUMPDEST POP POP POP POP POP POP POP JUMP JUMPDEST PUSH0 PUSH2 0x1C86 DUP3 PUSH2 0x1415 JUMP JUMPDEST SWAP2 POP PUSH2 0x1C91 DUP4 PUSH2 0x1415 JUMP JUMPDEST SWAP3 POP DUP3 DUP3 SUB SWAP1 POP DUP2 DUP2 GT ISZERO PUSH2 0x1CA9 JUMPI PUSH2 0x1CA8 PUSH2 0x197B JUMP JUMPDEST JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH0 MSTORE PUSH1 0x32 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH0 REVERT JUMPDEST PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH0 MSTORE PUSH1 0x21 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH0 REVERT JUMPDEST PUSH2 0x1D12 DUP2 PUSH2 0x13DA JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH0 PUSH1 0x60 DUP3 ADD SWAP1 POP PUSH2 0x1D2B PUSH0 DUP4 ADD DUP7 PUSH2 0x1D09 JUMP JUMPDEST PUSH2 0x1D38 PUSH1 0x20 DUP4 ADD DUP6 PUSH2 0x14B9 JUMP JUMPDEST PUSH2 0x1D45 PUSH1 0x40 DUP4 ADD DUP5 PUSH2 0x14B9 JUMP JUMPDEST SWAP5 SWAP4 POP POP POP POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH2 0x1D60 PUSH0 DUP4 ADD DUP5 PUSH2 0x1D09 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 EXTCODEHASH CALLER 0xC0 0xD7 0x4D PUSH11 0xAD406CF6F588BB40936AF0 MSTORE8 JUMPDEST SHR 0xE BYTE 0xBE 0xC0 CODECOPY PUSH6 0x1DE87EA33C24 PUSH5 0x736F6C6343 STOP ADDMOD BYTE STOP CALLER ",
							"sourceMap": "318:5866:6:-:0;;;357:29;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;2605:7;2578:34;;2675:3;2646:32;;2719:20;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;2841:168;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;2911:5;2918:7;1675:5:1;1667;:13;;;;;;:::i;:::-;;1700:7;1690;:17;;;;;;:::i;:::-;;1601:113;;2941:6:6::1;:13;;;;;;;;;;;;;;;;;;;;;::::0;;2841:168;;318:5866;;7:99:7;59:6;93:5;87:12;77:22;;7:99;;;:::o;112:180::-;160:77;157:1;150:88;257:4;254:1;247:15;281:4;278:1;271:15;298:180;346:77;343:1;336:88;443:4;440:1;433:15;467:4;464:1;457:15;484:320;528:6;565:1;559:4;555:12;545:22;;612:1;606:4;602:12;633:18;623:81;;689:4;681:6;677:17;667:27;;623:81;751:2;743:6;740:14;720:18;717:38;714:84;;770:18;;:::i;:::-;714:84;535:269;484:320;;;:::o;810:141::-;859:4;882:3;874:11;;905:3;902:1;895:14;939:4;936:1;926:18;918:26;;810:141;;;:::o;957:93::-;994:6;1041:2;1036;1029:5;1025:14;1021:23;1011:33;;957:93;;;:::o;1056:107::-;1100:8;1150:5;1144:4;1140:16;1119:37;;1056:107;;;;:::o;1169:393::-;1238:6;1288:1;1276:10;1272:18;1311:97;1341:66;1330:9;1311:97;:::i;:::-;1429:39;1459:8;1448:9;1429:39;:::i;:::-;1417:51;;1501:4;1497:9;1490:5;1486:21;1477:30;;1550:4;1540:8;1536:19;1529:5;1526:30;1516:40;;1245:317;;1169:393;;;;;:::o;1568:77::-;1605:7;1634:5;1623:16;;1568:77;;;:::o;1651:60::-;1679:3;1700:5;1693:12;;1651:60;;;:::o;1717:142::-;1767:9;1800:53;1818:34;1827:24;1845:5;1827:24;:::i;:::-;1818:34;:::i;:::-;1800:53;:::i;:::-;1787:66;;1717:142;;;:::o;1865:75::-;1908:3;1929:5;1922:12;;1865:75;;;:::o;1946:269::-;2056:39;2087:7;2056:39;:::i;:::-;2117:91;2166:41;2190:16;2166:41;:::i;:::-;2158:6;2151:4;2145:11;2117:91;:::i;:::-;2111:4;2104:105;2022:193;1946:269;;;:::o;2221:73::-;2266:3;2221:73;:::o;2300:189::-;2377:32;;:::i;:::-;2418:65;2476:6;2468;2462:4;2418:65;:::i;:::-;2353:136;2300:189;;:::o;2495:186::-;2555:120;2572:3;2565:5;2562:14;2555:120;;;2626:39;2663:1;2656:5;2626:39;:::i;:::-;2599:1;2592:5;2588:13;2579:22;;2555:120;;;2495:186;;:::o;2687:543::-;2788:2;2783:3;2780:11;2777:446;;;2822:38;2854:5;2822:38;:::i;:::-;2906:29;2924:10;2906:29;:::i;:::-;2896:8;2892:44;3089:2;3077:10;3074:18;3071:49;;;3110:8;3095:23;;3071:49;3133:80;3189:22;3207:3;3189:22;:::i;:::-;3179:8;3175:37;3162:11;3133:80;:::i;:::-;2792:431;;2777:446;2687:543;;;:::o;3236:117::-;3290:8;3340:5;3334:4;3330:16;3309:37;;3236:117;;;;:::o;3359:169::-;3403:6;3436:51;3484:1;3480:6;3472:5;3469:1;3465:13;3436:51;:::i;:::-;3432:56;3517:4;3511;3507:15;3497:25;;3410:118;3359:169;;;;:::o;3533:295::-;3609:4;3755:29;3780:3;3774:4;3755:29;:::i;:::-;3747:37;;3817:3;3814:1;3810:11;3804:4;3801:21;3793:29;;3533:295;;;;:::o;3833:1395::-;3950:37;3983:3;3950:37;:::i;:::-;4052:18;4044:6;4041:30;4038:56;;;4074:18;;:::i;:::-;4038:56;4118:38;4150:4;4144:11;4118:38;:::i;:::-;4203:67;4263:6;4255;4249:4;4203:67;:::i;:::-;4297:1;4321:4;4308:17;;4353:2;4345:6;4342:14;4370:1;4365:618;;;;5027:1;5044:6;5041:77;;;5093:9;5088:3;5084:19;5078:26;5069:35;;5041:77;5144:67;5204:6;5197:5;5144:67;:::i;:::-;5138:4;5131:81;5000:222;4335:887;;4365:618;4417:4;4413:9;4405:6;4401:22;4451:37;4483:4;4451:37;:::i;:::-;4510:1;4524:208;4538:7;4535:1;4532:14;4524:208;;;4617:9;4612:3;4608:19;4602:26;4594:6;4587:42;4668:1;4660:6;4656:14;4646:24;;4715:2;4704:9;4700:18;4687:31;;4561:4;4558:1;4554:12;4549:17;;4524:208;;;4760:6;4751:7;4748:19;4745:179;;;4818:9;4813:3;4809:19;4803:26;4861:48;4903:4;4895:6;4891:17;4880:9;4861:48;:::i;:::-;4853:6;4846:64;4768:156;4745:179;4970:1;4966;4958:6;4954:14;4950:22;4944:4;4937:36;4372:611;;;4335:887;;3925:1303;;;3833:1395;;:::o;5234:75::-;5267:6;5300:2;5294:9;5284:19;;5234:75;:::o;5315:117::-;5424:1;5421;5414:12;5438:117;5547:1;5544;5537:12;5561:117;5670:1;5667;5660:12;5684:117;5793:1;5790;5783:12;5807:102;5848:6;5899:2;5895:7;5890:2;5883:5;5879:14;5875:28;5865:38;;5807:102;;;:::o;5915:281::-;5998:27;6020:4;5998:27;:::i;:::-;5990:6;5986:40;6128:6;6116:10;6113:22;6092:18;6080:10;6077:34;6074:62;6071:88;;;6139:18;;:::i;:::-;6071:88;6179:10;6175:2;6168:22;5958:238;5915:281;;:::o;6202:129::-;6236:6;6263:20;;:::i;:::-;6253:30;;6292:33;6320:4;6312:6;6292:33;:::i;:::-;6202:129;;;:::o;6337:308::-;6399:4;6489:18;6481:6;6478:30;6475:56;;;6511:18;;:::i;:::-;6475:56;6549:29;6571:6;6549:29;:::i;:::-;6541:37;;6633:4;6627;6623:15;6615:23;;6337:308;;;:::o;6651:139::-;6740:6;6735:3;6730;6724:23;6781:1;6772:6;6767:3;6763:16;6756:27;6651:139;;;:::o;6796:434::-;6885:5;6910:66;6926:49;6968:6;6926:49;:::i;:::-;6910:66;:::i;:::-;6901:75;;6999:6;6992:5;6985:21;7037:4;7030:5;7026:16;7075:3;7066:6;7061:3;7057:16;7054:25;7051:112;;;7082:79;;:::i;:::-;7051:112;7172:52;7217:6;7212:3;7207;7172:52;:::i;:::-;6891:339;6796:434;;;;;:::o;7250:355::-;7317:5;7366:3;7359:4;7351:6;7347:17;7343:27;7333:122;;7374:79;;:::i;:::-;7333:122;7484:6;7478:13;7509:90;7595:3;7587:6;7580:4;7572:6;7568:17;7509:90;:::i;:::-;7500:99;;7323:282;7250:355;;;;:::o;7611:853::-;7710:6;7718;7767:2;7755:9;7746:7;7742:23;7738:32;7735:119;;;7773:79;;:::i;:::-;7735:119;7914:1;7903:9;7899:17;7893:24;7944:18;7936:6;7933:30;7930:117;;;7966:79;;:::i;:::-;7930:117;8071:74;8137:7;8128:6;8117:9;8113:22;8071:74;:::i;:::-;8061:84;;7864:291;8215:2;8204:9;8200:18;8194:25;8246:18;8238:6;8235:30;8232:117;;;8268:79;;:::i;:::-;8232:117;8373:74;8439:7;8430:6;8419:9;8415:22;8373:74;:::i;:::-;8363:84;;8165:292;7611:853;;;;;:::o;318:5866:6:-;;;;;;;"
						},
						"deployedBytecode": {
							"functionDebugData": {
								"@_add_838": {
									"entryPoint": 4634,
									"id": 838,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"@_approve_542": {
									"entryPoint": 2949,
									"id": 542,
									"parameterSlots": 3,
									"returnSlots": 0
								},
								"@_approve_602": {
									"entryPoint": 3602,
									"id": 602,
									"parameterSlots": 4,
									"returnSlots": 0
								},
								"@_contains_941": {
									"entryPoint": 4602,
									"id": 941,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"@_mint_491": {
									"entryPoint": 3354,
									"id": 491,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"@_msgSender_767": {
									"entryPoint": 2942,
									"id": 767,
									"parameterSlots": 0,
									"returnSlots": 1
								},
								"@_spendAllowance_650": {
									"entryPoint": 2967,
									"id": 650,
									"parameterSlots": 3,
									"returnSlots": 0
								},
								"@_transfer_381": {
									"entryPoint": 3114,
									"id": 381,
									"parameterSlots": 3,
									"returnSlots": 0
								},
								"@_update_458": {
									"entryPoint": 4065,
									"id": 458,
									"parameterSlots": 3,
									"returnSlots": 0
								},
								"@_values_986": {
									"entryPoint": 4737,
									"id": 986,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"@add_1138": {
									"entryPoint": 3526,
									"id": 1138,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"@allowance_278": {
									"entryPoint": 2812,
									"id": 278,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"@approve_302": {
									"entryPoint": 1004,
									"id": 302,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"@balanceOf_237": {
									"entryPoint": 1438,
									"id": 237,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"@claimAmount_1481": {
									"entryPoint": 1507,
									"id": 1481,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"@claim_1538": {
									"entryPoint": 1101,
									"id": 1538,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"@contains_1192": {
									"entryPoint": 3481,
									"id": 1192,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"@createIssue_1592": {
									"entryPoint": 1513,
									"id": 1592,
									"parameterSlots": 3,
									"returnSlots": 1
								},
								"@decimals_215": {
									"entryPoint": 1093,
									"id": 215,
									"parameterSlots": 0,
									"returnSlots": 1
								},
								"@getIssue_1631": {
									"entryPoint": 2452,
									"id": 1631,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"@maxSupply_1478": {
									"entryPoint": 2806,
									"id": 1478,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"@name_197": {
									"entryPoint": 860,
									"id": 197,
									"parameterSlots": 0,
									"returnSlots": 1
								},
								"@symbol_206": {
									"entryPoint": 2308,
									"id": 206,
									"parameterSlots": 0,
									"returnSlots": 1
								},
								"@tokensClaimed_1475": {
									"entryPoint": 1409,
									"id": 1475,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"@totalSupply_224": {
									"entryPoint": 1038,
									"id": 224,
									"parameterSlots": 0,
									"returnSlots": 1
								},
								"@transferFrom_334": {
									"entryPoint": 1047,
									"id": 334,
									"parameterSlots": 3,
									"returnSlots": 1
								},
								"@transfer_261": {
									"entryPoint": 2772,
									"id": 261,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"@values_1264": {
									"entryPoint": 3571,
									"id": 1264,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"@vote_1752": {
									"entryPoint": 1734,
									"id": 1752,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"abi_decode_t_address": {
									"entryPoint": 5121,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_decode_t_enum$_Vote_$1467": {
									"entryPoint": 5725,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_decode_t_string_calldata_ptr": {
									"entryPoint": 5532,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 2
								},
								"abi_decode_t_uint256": {
									"entryPoint": 5172,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_decode_tuple_t_address": {
									"entryPoint": 5477,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_decode_tuple_t_addresst_address": {
									"entryPoint": 6368,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 2
								},
								"abi_decode_tuple_t_addresst_addresst_uint256": {
									"entryPoint": 5345,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 3
								},
								"abi_decode_tuple_t_addresst_uint256": {
									"entryPoint": 5192,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 2
								},
								"abi_decode_tuple_t_string_calldata_ptrt_uint256": {
									"entryPoint": 5617,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 3
								},
								"abi_decode_tuple_t_uint256": {
									"entryPoint": 5807,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_decode_tuple_t_uint256t_enum$_Vote_$1467": {
									"entryPoint": 5745,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 2
								},
								"abi_encodeUpdatedPos_t_address_to_t_address": {
									"entryPoint": 5906,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_encode_t_address_to_t_address": {
									"entryPoint": 5891,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"abi_encode_t_address_to_t_address_fromStack": {
									"entryPoint": 7433,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"abi_encode_t_array$_t_address_$dyn_memory_ptr_to_t_array$_t_address_$dyn_memory_ptr": {
									"entryPoint": 5941,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_encode_t_bool_to_t_bool": {
									"entryPoint": 6120,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"abi_encode_t_bool_to_t_bool_fromStack": {
									"entryPoint": 5265,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"abi_encode_t_string_memory_ptr_to_t_string_memory_ptr": {
									"entryPoint": 6049,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_encode_t_string_memory_ptr_to_t_string_memory_ptr_fromStack": {
									"entryPoint": 4955,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_encode_t_struct$_SerializedIssue_$1463_memory_ptr_to_t_struct$_SerializedIssue_$1463_memory_ptr_fromStack": {
									"entryPoint": 6135,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_encode_t_uint256_to_t_uint256": {
									"entryPoint": 6105,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"abi_encode_t_uint256_to_t_uint256_fromStack": {
									"entryPoint": 5305,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"abi_encode_t_uint8_to_t_uint8_fromStack": {
									"entryPoint": 5437,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"abi_encode_tuple_t_address__to_t_address__fromStack_reversed": {
									"entryPoint": 7501,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_address_t_uint256_t_uint256__to_t_address_t_uint256_t_uint256__fromStack_reversed": {
									"entryPoint": 7448,
									"id": null,
									"parameterSlots": 4,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_bool__to_t_bool__fromStack_reversed": {
									"entryPoint": 5280,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_string_memory_ptr__to_t_string_memory_ptr__fromStack_reversed": {
									"entryPoint": 5011,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_struct$_SerializedIssue_$1463_memory_ptr__to_t_struct$_SerializedIssue_$1463_memory_ptr__fromStack_reversed": {
									"entryPoint": 6336,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_uint256__to_t_uint256__fromStack_reversed": {
									"entryPoint": 5320,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_uint8__to_t_uint8__fromStack_reversed": {
									"entryPoint": 5452,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"allocate_unbounded": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 1
								},
								"array_dataslot_t_array$_t_address_$dyn_memory_ptr": {
									"entryPoint": 5876,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"array_dataslot_t_string_storage": {
									"entryPoint": 6674,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"array_length_t_array$_t_address_$dyn_memory_ptr": {
									"entryPoint": 5850,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"array_length_t_string_calldata_ptr": {
									"entryPoint": 6619,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"array_length_t_string_memory_ptr": {
									"entryPoint": 4899,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"array_nextElement_t_array$_t_address_$dyn_memory_ptr": {
									"entryPoint": 5929,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"array_storeLengthForEncoding_t_array$_t_address_$dyn_memory_ptr": {
									"entryPoint": 5860,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"array_storeLengthForEncoding_t_string_memory_ptr": {
									"entryPoint": 6033,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"array_storeLengthForEncoding_t_string_memory_ptr_fromStack": {
									"entryPoint": 4909,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"checked_add_t_uint256": {
									"entryPoint": 6568,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"checked_sub_t_uint256": {
									"entryPoint": 7292,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"clean_up_bytearray_end_slots_t_string_storage": {
									"entryPoint": 6950,
									"id": null,
									"parameterSlots": 3,
									"returnSlots": 0
								},
								"cleanup_t_address": {
									"entryPoint": 5082,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"cleanup_t_bool": {
									"entryPoint": 5254,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"cleanup_t_uint160": {
									"entryPoint": 5051,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"cleanup_t_uint256": {
									"entryPoint": 5141,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"cleanup_t_uint8": {
									"entryPoint": 5425,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"clear_storage_range_t_bytes1": {
									"entryPoint": 6916,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"convert_t_uint256_to_t_uint256": {
									"entryPoint": 6809,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"copy_byte_array_to_storage_from_t_string_calldata_ptr_to_t_string_storage": {
									"entryPoint": 7087,
									"id": null,
									"parameterSlots": 3,
									"returnSlots": 0
								},
								"copy_memory_to_memory_with_cleanup": {
									"entryPoint": 4925,
									"id": null,
									"parameterSlots": 3,
									"returnSlots": 0
								},
								"divide_by_32_ceil": {
									"entryPoint": 6692,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"extract_byte_array_length": {
									"entryPoint": 6475,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"extract_used_part_and_set_length_of_short_byte_array": {
									"entryPoint": 7060,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"identity": {
									"entryPoint": 6800,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"mask_bytes_dynamic": {
									"entryPoint": 7032,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"panic_error_0x11": {
									"entryPoint": 6523,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"panic_error_0x21": {
									"entryPoint": 7388,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"panic_error_0x22": {
									"entryPoint": 6430,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"panic_error_0x32": {
									"entryPoint": 7343,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"panic_error_0x41": {
									"entryPoint": 6629,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"prepare_store_t_uint256": {
									"entryPoint": 6842,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"revert_error_15abf5612cd996bc235ba1e55a4a30ac60e6bb601ff7ba4ad3f179b6be8d0490": {
									"entryPoint": 5524,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"revert_error_1b9f4a0a5773e33b91aa01db23bf8c55fce1411167c872835e7fa00a4f17d46d": {
									"entryPoint": 5520,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"revert_error_81385d8c0b31fffe14be1da910c8bd3a80be4cfa248e04f42ec0faea3132a8ef": {
									"entryPoint": 5528,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db": {
									"entryPoint": 5047,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b": {
									"entryPoint": 5043,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"round_up_to_mul_of_32": {
									"entryPoint": 4939,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"shift_left_dynamic": {
									"entryPoint": 6707,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"shift_right_unsigned_dynamic": {
									"entryPoint": 7020,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"storage_set_to_zero_t_uint256": {
									"entryPoint": 6892,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"update_byte_slice_dynamic32": {
									"entryPoint": 6719,
									"id": null,
									"parameterSlots": 3,
									"returnSlots": 1
								},
								"update_storage_value_t_uint256_to_t_uint256": {
									"entryPoint": 6851,
									"id": null,
									"parameterSlots": 3,
									"returnSlots": 0
								},
								"validator_revert_t_address": {
									"entryPoint": 5099,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"validator_revert_t_enum$_Vote_$1467": {
									"entryPoint": 5710,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"validator_revert_t_uint256": {
									"entryPoint": 5150,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"zero_value_for_split_t_uint256": {
									"entryPoint": 6888,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 1
								}
							},
							"generatedSources": [
								{
									"ast": {
										"nativeSrc": "0:20023:7",
										"nodeType": "YulBlock",
										"src": "0:20023:7",
										"statements": [
											{
												"body": {
													"nativeSrc": "66:40:7",
													"nodeType": "YulBlock",
													"src": "66:40:7",
													"statements": [
														{
															"nativeSrc": "77:22:7",
															"nodeType": "YulAssignment",
															"src": "77:22:7",
															"value": {
																"arguments": [
																	{
																		"name": "value",
																		"nativeSrc": "93:5:7",
																		"nodeType": "YulIdentifier",
																		"src": "93:5:7"
																	}
																],
																"functionName": {
																	"name": "mload",
																	"nativeSrc": "87:5:7",
																	"nodeType": "YulIdentifier",
																	"src": "87:5:7"
																},
																"nativeSrc": "87:12:7",
																"nodeType": "YulFunctionCall",
																"src": "87:12:7"
															},
															"variableNames": [
																{
																	"name": "length",
																	"nativeSrc": "77:6:7",
																	"nodeType": "YulIdentifier",
																	"src": "77:6:7"
																}
															]
														}
													]
												},
												"name": "array_length_t_string_memory_ptr",
												"nativeSrc": "7:99:7",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "49:5:7",
														"nodeType": "YulTypedName",
														"src": "49:5:7",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "length",
														"nativeSrc": "59:6:7",
														"nodeType": "YulTypedName",
														"src": "59:6:7",
														"type": ""
													}
												],
												"src": "7:99:7"
											},
											{
												"body": {
													"nativeSrc": "208:73:7",
													"nodeType": "YulBlock",
													"src": "208:73:7",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "225:3:7",
																		"nodeType": "YulIdentifier",
																		"src": "225:3:7"
																	},
																	{
																		"name": "length",
																		"nativeSrc": "230:6:7",
																		"nodeType": "YulIdentifier",
																		"src": "230:6:7"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "218:6:7",
																	"nodeType": "YulIdentifier",
																	"src": "218:6:7"
																},
																"nativeSrc": "218:19:7",
																"nodeType": "YulFunctionCall",
																"src": "218:19:7"
															},
															"nativeSrc": "218:19:7",
															"nodeType": "YulExpressionStatement",
															"src": "218:19:7"
														},
														{
															"nativeSrc": "246:29:7",
															"nodeType": "YulAssignment",
															"src": "246:29:7",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "265:3:7",
																		"nodeType": "YulIdentifier",
																		"src": "265:3:7"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "270:4:7",
																		"nodeType": "YulLiteral",
																		"src": "270:4:7",
																		"type": "",
																		"value": "0x20"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "261:3:7",
																	"nodeType": "YulIdentifier",
																	"src": "261:3:7"
																},
																"nativeSrc": "261:14:7",
																"nodeType": "YulFunctionCall",
																"src": "261:14:7"
															},
															"variableNames": [
																{
																	"name": "updated_pos",
																	"nativeSrc": "246:11:7",
																	"nodeType": "YulIdentifier",
																	"src": "246:11:7"
																}
															]
														}
													]
												},
												"name": "array_storeLengthForEncoding_t_string_memory_ptr_fromStack",
												"nativeSrc": "112:169:7",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "pos",
														"nativeSrc": "180:3:7",
														"nodeType": "YulTypedName",
														"src": "180:3:7",
														"type": ""
													},
													{
														"name": "length",
														"nativeSrc": "185:6:7",
														"nodeType": "YulTypedName",
														"src": "185:6:7",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "updated_pos",
														"nativeSrc": "196:11:7",
														"nodeType": "YulTypedName",
														"src": "196:11:7",
														"type": ""
													}
												],
												"src": "112:169:7"
											},
											{
												"body": {
													"nativeSrc": "349:77:7",
													"nodeType": "YulBlock",
													"src": "349:77:7",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "dst",
																		"nativeSrc": "366:3:7",
																		"nodeType": "YulIdentifier",
																		"src": "366:3:7"
																	},
																	{
																		"name": "src",
																		"nativeSrc": "371:3:7",
																		"nodeType": "YulIdentifier",
																		"src": "371:3:7"
																	},
																	{
																		"name": "length",
																		"nativeSrc": "376:6:7",
																		"nodeType": "YulIdentifier",
																		"src": "376:6:7"
																	}
																],
																"functionName": {
																	"name": "mcopy",
																	"nativeSrc": "360:5:7",
																	"nodeType": "YulIdentifier",
																	"src": "360:5:7"
																},
																"nativeSrc": "360:23:7",
																"nodeType": "YulFunctionCall",
																"src": "360:23:7"
															},
															"nativeSrc": "360:23:7",
															"nodeType": "YulExpressionStatement",
															"src": "360:23:7"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dst",
																				"nativeSrc": "403:3:7",
																				"nodeType": "YulIdentifier",
																				"src": "403:3:7"
																			},
																			{
																				"name": "length",
																				"nativeSrc": "408:6:7",
																				"nodeType": "YulIdentifier",
																				"src": "408:6:7"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "399:3:7",
																			"nodeType": "YulIdentifier",
																			"src": "399:3:7"
																		},
																		"nativeSrc": "399:16:7",
																		"nodeType": "YulFunctionCall",
																		"src": "399:16:7"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "417:1:7",
																		"nodeType": "YulLiteral",
																		"src": "417:1:7",
																		"type": "",
																		"value": "0"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "392:6:7",
																	"nodeType": "YulIdentifier",
																	"src": "392:6:7"
																},
																"nativeSrc": "392:27:7",
																"nodeType": "YulFunctionCall",
																"src": "392:27:7"
															},
															"nativeSrc": "392:27:7",
															"nodeType": "YulExpressionStatement",
															"src": "392:27:7"
														}
													]
												},
												"name": "copy_memory_to_memory_with_cleanup",
												"nativeSrc": "287:139:7",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "src",
														"nativeSrc": "331:3:7",
														"nodeType": "YulTypedName",
														"src": "331:3:7",
														"type": ""
													},
													{
														"name": "dst",
														"nativeSrc": "336:3:7",
														"nodeType": "YulTypedName",
														"src": "336:3:7",
														"type": ""
													},
													{
														"name": "length",
														"nativeSrc": "341:6:7",
														"nodeType": "YulTypedName",
														"src": "341:6:7",
														"type": ""
													}
												],
												"src": "287:139:7"
											},
											{
												"body": {
													"nativeSrc": "480:54:7",
													"nodeType": "YulBlock",
													"src": "480:54:7",
													"statements": [
														{
															"nativeSrc": "490:38:7",
															"nodeType": "YulAssignment",
															"src": "490:38:7",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nativeSrc": "508:5:7",
																				"nodeType": "YulIdentifier",
																				"src": "508:5:7"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "515:2:7",
																				"nodeType": "YulLiteral",
																				"src": "515:2:7",
																				"type": "",
																				"value": "31"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "504:3:7",
																			"nodeType": "YulIdentifier",
																			"src": "504:3:7"
																		},
																		"nativeSrc": "504:14:7",
																		"nodeType": "YulFunctionCall",
																		"src": "504:14:7"
																	},
																	{
																		"arguments": [
																			{
																				"kind": "number",
																				"nativeSrc": "524:2:7",
																				"nodeType": "YulLiteral",
																				"src": "524:2:7",
																				"type": "",
																				"value": "31"
																			}
																		],
																		"functionName": {
																			"name": "not",
																			"nativeSrc": "520:3:7",
																			"nodeType": "YulIdentifier",
																			"src": "520:3:7"
																		},
																		"nativeSrc": "520:7:7",
																		"nodeType": "YulFunctionCall",
																		"src": "520:7:7"
																	}
																],
																"functionName": {
																	"name": "and",
																	"nativeSrc": "500:3:7",
																	"nodeType": "YulIdentifier",
																	"src": "500:3:7"
																},
																"nativeSrc": "500:28:7",
																"nodeType": "YulFunctionCall",
																"src": "500:28:7"
															},
															"variableNames": [
																{
																	"name": "result",
																	"nativeSrc": "490:6:7",
																	"nodeType": "YulIdentifier",
																	"src": "490:6:7"
																}
															]
														}
													]
												},
												"name": "round_up_to_mul_of_32",
												"nativeSrc": "432:102:7",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "463:5:7",
														"nodeType": "YulTypedName",
														"src": "463:5:7",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "result",
														"nativeSrc": "473:6:7",
														"nodeType": "YulTypedName",
														"src": "473:6:7",
														"type": ""
													}
												],
												"src": "432:102:7"
											},
											{
												"body": {
													"nativeSrc": "632:285:7",
													"nodeType": "YulBlock",
													"src": "632:285:7",
													"statements": [
														{
															"nativeSrc": "642:53:7",
															"nodeType": "YulVariableDeclaration",
															"src": "642:53:7",
															"value": {
																"arguments": [
																	{
																		"name": "value",
																		"nativeSrc": "689:5:7",
																		"nodeType": "YulIdentifier",
																		"src": "689:5:7"
																	}
																],
																"functionName": {
																	"name": "array_length_t_string_memory_ptr",
																	"nativeSrc": "656:32:7",
																	"nodeType": "YulIdentifier",
																	"src": "656:32:7"
																},
																"nativeSrc": "656:39:7",
																"nodeType": "YulFunctionCall",
																"src": "656:39:7"
															},
															"variables": [
																{
																	"name": "length",
																	"nativeSrc": "646:6:7",
																	"nodeType": "YulTypedName",
																	"src": "646:6:7",
																	"type": ""
																}
															]
														},
														{
															"nativeSrc": "704:78:7",
															"nodeType": "YulAssignment",
															"src": "704:78:7",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "770:3:7",
																		"nodeType": "YulIdentifier",
																		"src": "770:3:7"
																	},
																	{
																		"name": "length",
																		"nativeSrc": "775:6:7",
																		"nodeType": "YulIdentifier",
																		"src": "775:6:7"
																	}
																],
																"functionName": {
																	"name": "array_storeLengthForEncoding_t_string_memory_ptr_fromStack",
																	"nativeSrc": "711:58:7",
																	"nodeType": "YulIdentifier",
																	"src": "711:58:7"
																},
																"nativeSrc": "711:71:7",
																"nodeType": "YulFunctionCall",
																"src": "711:71:7"
															},
															"variableNames": [
																{
																	"name": "pos",
																	"nativeSrc": "704:3:7",
																	"nodeType": "YulIdentifier",
																	"src": "704:3:7"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nativeSrc": "830:5:7",
																				"nodeType": "YulIdentifier",
																				"src": "830:5:7"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "837:4:7",
																				"nodeType": "YulLiteral",
																				"src": "837:4:7",
																				"type": "",
																				"value": "0x20"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "826:3:7",
																			"nodeType": "YulIdentifier",
																			"src": "826:3:7"
																		},
																		"nativeSrc": "826:16:7",
																		"nodeType": "YulFunctionCall",
																		"src": "826:16:7"
																	},
																	{
																		"name": "pos",
																		"nativeSrc": "844:3:7",
																		"nodeType": "YulIdentifier",
																		"src": "844:3:7"
																	},
																	{
																		"name": "length",
																		"nativeSrc": "849:6:7",
																		"nodeType": "YulIdentifier",
																		"src": "849:6:7"
																	}
																],
																"functionName": {
																	"name": "copy_memory_to_memory_with_cleanup",
																	"nativeSrc": "791:34:7",
																	"nodeType": "YulIdentifier",
																	"src": "791:34:7"
																},
																"nativeSrc": "791:65:7",
																"nodeType": "YulFunctionCall",
																"src": "791:65:7"
															},
															"nativeSrc": "791:65:7",
															"nodeType": "YulExpressionStatement",
															"src": "791:65:7"
														},
														{
															"nativeSrc": "865:46:7",
															"nodeType": "YulAssignment",
															"src": "865:46:7",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "876:3:7",
																		"nodeType": "YulIdentifier",
																		"src": "876:3:7"
																	},
																	{
																		"arguments": [
																			{
																				"name": "length",
																				"nativeSrc": "903:6:7",
																				"nodeType": "YulIdentifier",
																				"src": "903:6:7"
																			}
																		],
																		"functionName": {
																			"name": "round_up_to_mul_of_32",
																			"nativeSrc": "881:21:7",
																			"nodeType": "YulIdentifier",
																			"src": "881:21:7"
																		},
																		"nativeSrc": "881:29:7",
																		"nodeType": "YulFunctionCall",
																		"src": "881:29:7"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "872:3:7",
																	"nodeType": "YulIdentifier",
																	"src": "872:3:7"
																},
																"nativeSrc": "872:39:7",
																"nodeType": "YulFunctionCall",
																"src": "872:39:7"
															},
															"variableNames": [
																{
																	"name": "end",
																	"nativeSrc": "865:3:7",
																	"nodeType": "YulIdentifier",
																	"src": "865:3:7"
																}
															]
														}
													]
												},
												"name": "abi_encode_t_string_memory_ptr_to_t_string_memory_ptr_fromStack",
												"nativeSrc": "540:377:7",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "613:5:7",
														"nodeType": "YulTypedName",
														"src": "613:5:7",
														"type": ""
													},
													{
														"name": "pos",
														"nativeSrc": "620:3:7",
														"nodeType": "YulTypedName",
														"src": "620:3:7",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "end",
														"nativeSrc": "628:3:7",
														"nodeType": "YulTypedName",
														"src": "628:3:7",
														"type": ""
													}
												],
												"src": "540:377:7"
											},
											{
												"body": {
													"nativeSrc": "1041:195:7",
													"nodeType": "YulBlock",
													"src": "1041:195:7",
													"statements": [
														{
															"nativeSrc": "1051:26:7",
															"nodeType": "YulAssignment",
															"src": "1051:26:7",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "1063:9:7",
																		"nodeType": "YulIdentifier",
																		"src": "1063:9:7"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "1074:2:7",
																		"nodeType": "YulLiteral",
																		"src": "1074:2:7",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "1059:3:7",
																	"nodeType": "YulIdentifier",
																	"src": "1059:3:7"
																},
																"nativeSrc": "1059:18:7",
																"nodeType": "YulFunctionCall",
																"src": "1059:18:7"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "1051:4:7",
																	"nodeType": "YulIdentifier",
																	"src": "1051:4:7"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "1098:9:7",
																				"nodeType": "YulIdentifier",
																				"src": "1098:9:7"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "1109:1:7",
																				"nodeType": "YulLiteral",
																				"src": "1109:1:7",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "1094:3:7",
																			"nodeType": "YulIdentifier",
																			"src": "1094:3:7"
																		},
																		"nativeSrc": "1094:17:7",
																		"nodeType": "YulFunctionCall",
																		"src": "1094:17:7"
																	},
																	{
																		"arguments": [
																			{
																				"name": "tail",
																				"nativeSrc": "1117:4:7",
																				"nodeType": "YulIdentifier",
																				"src": "1117:4:7"
																			},
																			{
																				"name": "headStart",
																				"nativeSrc": "1123:9:7",
																				"nodeType": "YulIdentifier",
																				"src": "1123:9:7"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nativeSrc": "1113:3:7",
																			"nodeType": "YulIdentifier",
																			"src": "1113:3:7"
																		},
																		"nativeSrc": "1113:20:7",
																		"nodeType": "YulFunctionCall",
																		"src": "1113:20:7"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "1087:6:7",
																	"nodeType": "YulIdentifier",
																	"src": "1087:6:7"
																},
																"nativeSrc": "1087:47:7",
																"nodeType": "YulFunctionCall",
																"src": "1087:47:7"
															},
															"nativeSrc": "1087:47:7",
															"nodeType": "YulExpressionStatement",
															"src": "1087:47:7"
														},
														{
															"nativeSrc": "1143:86:7",
															"nodeType": "YulAssignment",
															"src": "1143:86:7",
															"value": {
																"arguments": [
																	{
																		"name": "value0",
																		"nativeSrc": "1215:6:7",
																		"nodeType": "YulIdentifier",
																		"src": "1215:6:7"
																	},
																	{
																		"name": "tail",
																		"nativeSrc": "1224:4:7",
																		"nodeType": "YulIdentifier",
																		"src": "1224:4:7"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_string_memory_ptr_to_t_string_memory_ptr_fromStack",
																	"nativeSrc": "1151:63:7",
																	"nodeType": "YulIdentifier",
																	"src": "1151:63:7"
																},
																"nativeSrc": "1151:78:7",
																"nodeType": "YulFunctionCall",
																"src": "1151:78:7"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "1143:4:7",
																	"nodeType": "YulIdentifier",
																	"src": "1143:4:7"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_string_memory_ptr__to_t_string_memory_ptr__fromStack_reversed",
												"nativeSrc": "923:313:7",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "1013:9:7",
														"nodeType": "YulTypedName",
														"src": "1013:9:7",
														"type": ""
													},
													{
														"name": "value0",
														"nativeSrc": "1025:6:7",
														"nodeType": "YulTypedName",
														"src": "1025:6:7",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nativeSrc": "1036:4:7",
														"nodeType": "YulTypedName",
														"src": "1036:4:7",
														"type": ""
													}
												],
												"src": "923:313:7"
											},
											{
												"body": {
													"nativeSrc": "1282:35:7",
													"nodeType": "YulBlock",
													"src": "1282:35:7",
													"statements": [
														{
															"nativeSrc": "1292:19:7",
															"nodeType": "YulAssignment",
															"src": "1292:19:7",
															"value": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "1308:2:7",
																		"nodeType": "YulLiteral",
																		"src": "1308:2:7",
																		"type": "",
																		"value": "64"
																	}
																],
																"functionName": {
																	"name": "mload",
																	"nativeSrc": "1302:5:7",
																	"nodeType": "YulIdentifier",
																	"src": "1302:5:7"
																},
																"nativeSrc": "1302:9:7",
																"nodeType": "YulFunctionCall",
																"src": "1302:9:7"
															},
															"variableNames": [
																{
																	"name": "memPtr",
																	"nativeSrc": "1292:6:7",
																	"nodeType": "YulIdentifier",
																	"src": "1292:6:7"
																}
															]
														}
													]
												},
												"name": "allocate_unbounded",
												"nativeSrc": "1242:75:7",
												"nodeType": "YulFunctionDefinition",
												"returnVariables": [
													{
														"name": "memPtr",
														"nativeSrc": "1275:6:7",
														"nodeType": "YulTypedName",
														"src": "1275:6:7",
														"type": ""
													}
												],
												"src": "1242:75:7"
											},
											{
												"body": {
													"nativeSrc": "1412:28:7",
													"nodeType": "YulBlock",
													"src": "1412:28:7",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "1429:1:7",
																		"nodeType": "YulLiteral",
																		"src": "1429:1:7",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "1432:1:7",
																		"nodeType": "YulLiteral",
																		"src": "1432:1:7",
																		"type": "",
																		"value": "0"
																	}
																],
																"functionName": {
																	"name": "revert",
																	"nativeSrc": "1422:6:7",
																	"nodeType": "YulIdentifier",
																	"src": "1422:6:7"
																},
																"nativeSrc": "1422:12:7",
																"nodeType": "YulFunctionCall",
																"src": "1422:12:7"
															},
															"nativeSrc": "1422:12:7",
															"nodeType": "YulExpressionStatement",
															"src": "1422:12:7"
														}
													]
												},
												"name": "revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b",
												"nativeSrc": "1323:117:7",
												"nodeType": "YulFunctionDefinition",
												"src": "1323:117:7"
											},
											{
												"body": {
													"nativeSrc": "1535:28:7",
													"nodeType": "YulBlock",
													"src": "1535:28:7",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "1552:1:7",
																		"nodeType": "YulLiteral",
																		"src": "1552:1:7",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "1555:1:7",
																		"nodeType": "YulLiteral",
																		"src": "1555:1:7",
																		"type": "",
																		"value": "0"
																	}
																],
																"functionName": {
																	"name": "revert",
																	"nativeSrc": "1545:6:7",
																	"nodeType": "YulIdentifier",
																	"src": "1545:6:7"
																},
																"nativeSrc": "1545:12:7",
																"nodeType": "YulFunctionCall",
																"src": "1545:12:7"
															},
															"nativeSrc": "1545:12:7",
															"nodeType": "YulExpressionStatement",
															"src": "1545:12:7"
														}
													]
												},
												"name": "revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db",
												"nativeSrc": "1446:117:7",
												"nodeType": "YulFunctionDefinition",
												"src": "1446:117:7"
											},
											{
												"body": {
													"nativeSrc": "1614:81:7",
													"nodeType": "YulBlock",
													"src": "1614:81:7",
													"statements": [
														{
															"nativeSrc": "1624:65:7",
															"nodeType": "YulAssignment",
															"src": "1624:65:7",
															"value": {
																"arguments": [
																	{
																		"name": "value",
																		"nativeSrc": "1639:5:7",
																		"nodeType": "YulIdentifier",
																		"src": "1639:5:7"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "1646:42:7",
																		"nodeType": "YulLiteral",
																		"src": "1646:42:7",
																		"type": "",
																		"value": "0xffffffffffffffffffffffffffffffffffffffff"
																	}
																],
																"functionName": {
																	"name": "and",
																	"nativeSrc": "1635:3:7",
																	"nodeType": "YulIdentifier",
																	"src": "1635:3:7"
																},
																"nativeSrc": "1635:54:7",
																"nodeType": "YulFunctionCall",
																"src": "1635:54:7"
															},
															"variableNames": [
																{
																	"name": "cleaned",
																	"nativeSrc": "1624:7:7",
																	"nodeType": "YulIdentifier",
																	"src": "1624:7:7"
																}
															]
														}
													]
												},
												"name": "cleanup_t_uint160",
												"nativeSrc": "1569:126:7",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "1596:5:7",
														"nodeType": "YulTypedName",
														"src": "1596:5:7",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "cleaned",
														"nativeSrc": "1606:7:7",
														"nodeType": "YulTypedName",
														"src": "1606:7:7",
														"type": ""
													}
												],
												"src": "1569:126:7"
											},
											{
												"body": {
													"nativeSrc": "1746:51:7",
													"nodeType": "YulBlock",
													"src": "1746:51:7",
													"statements": [
														{
															"nativeSrc": "1756:35:7",
															"nodeType": "YulAssignment",
															"src": "1756:35:7",
															"value": {
																"arguments": [
																	{
																		"name": "value",
																		"nativeSrc": "1785:5:7",
																		"nodeType": "YulIdentifier",
																		"src": "1785:5:7"
																	}
																],
																"functionName": {
																	"name": "cleanup_t_uint160",
																	"nativeSrc": "1767:17:7",
																	"nodeType": "YulIdentifier",
																	"src": "1767:17:7"
																},
																"nativeSrc": "1767:24:7",
																"nodeType": "YulFunctionCall",
																"src": "1767:24:7"
															},
															"variableNames": [
																{
																	"name": "cleaned",
																	"nativeSrc": "1756:7:7",
																	"nodeType": "YulIdentifier",
																	"src": "1756:7:7"
																}
															]
														}
													]
												},
												"name": "cleanup_t_address",
												"nativeSrc": "1701:96:7",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "1728:5:7",
														"nodeType": "YulTypedName",
														"src": "1728:5:7",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "cleaned",
														"nativeSrc": "1738:7:7",
														"nodeType": "YulTypedName",
														"src": "1738:7:7",
														"type": ""
													}
												],
												"src": "1701:96:7"
											},
											{
												"body": {
													"nativeSrc": "1846:79:7",
													"nodeType": "YulBlock",
													"src": "1846:79:7",
													"statements": [
														{
															"body": {
																"nativeSrc": "1903:16:7",
																"nodeType": "YulBlock",
																"src": "1903:16:7",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nativeSrc": "1912:1:7",
																					"nodeType": "YulLiteral",
																					"src": "1912:1:7",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nativeSrc": "1915:1:7",
																					"nodeType": "YulLiteral",
																					"src": "1915:1:7",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nativeSrc": "1905:6:7",
																				"nodeType": "YulIdentifier",
																				"src": "1905:6:7"
																			},
																			"nativeSrc": "1905:12:7",
																			"nodeType": "YulFunctionCall",
																			"src": "1905:12:7"
																		},
																		"nativeSrc": "1905:12:7",
																		"nodeType": "YulExpressionStatement",
																		"src": "1905:12:7"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nativeSrc": "1869:5:7",
																				"nodeType": "YulIdentifier",
																				"src": "1869:5:7"
																			},
																			{
																				"arguments": [
																					{
																						"name": "value",
																						"nativeSrc": "1894:5:7",
																						"nodeType": "YulIdentifier",
																						"src": "1894:5:7"
																					}
																				],
																				"functionName": {
																					"name": "cleanup_t_address",
																					"nativeSrc": "1876:17:7",
																					"nodeType": "YulIdentifier",
																					"src": "1876:17:7"
																				},
																				"nativeSrc": "1876:24:7",
																				"nodeType": "YulFunctionCall",
																				"src": "1876:24:7"
																			}
																		],
																		"functionName": {
																			"name": "eq",
																			"nativeSrc": "1866:2:7",
																			"nodeType": "YulIdentifier",
																			"src": "1866:2:7"
																		},
																		"nativeSrc": "1866:35:7",
																		"nodeType": "YulFunctionCall",
																		"src": "1866:35:7"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nativeSrc": "1859:6:7",
																	"nodeType": "YulIdentifier",
																	"src": "1859:6:7"
																},
																"nativeSrc": "1859:43:7",
																"nodeType": "YulFunctionCall",
																"src": "1859:43:7"
															},
															"nativeSrc": "1856:63:7",
															"nodeType": "YulIf",
															"src": "1856:63:7"
														}
													]
												},
												"name": "validator_revert_t_address",
												"nativeSrc": "1803:122:7",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "1839:5:7",
														"nodeType": "YulTypedName",
														"src": "1839:5:7",
														"type": ""
													}
												],
												"src": "1803:122:7"
											},
											{
												"body": {
													"nativeSrc": "1983:87:7",
													"nodeType": "YulBlock",
													"src": "1983:87:7",
													"statements": [
														{
															"nativeSrc": "1993:29:7",
															"nodeType": "YulAssignment",
															"src": "1993:29:7",
															"value": {
																"arguments": [
																	{
																		"name": "offset",
																		"nativeSrc": "2015:6:7",
																		"nodeType": "YulIdentifier",
																		"src": "2015:6:7"
																	}
																],
																"functionName": {
																	"name": "calldataload",
																	"nativeSrc": "2002:12:7",
																	"nodeType": "YulIdentifier",
																	"src": "2002:12:7"
																},
																"nativeSrc": "2002:20:7",
																"nodeType": "YulFunctionCall",
																"src": "2002:20:7"
															},
															"variableNames": [
																{
																	"name": "value",
																	"nativeSrc": "1993:5:7",
																	"nodeType": "YulIdentifier",
																	"src": "1993:5:7"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value",
																		"nativeSrc": "2058:5:7",
																		"nodeType": "YulIdentifier",
																		"src": "2058:5:7"
																	}
																],
																"functionName": {
																	"name": "validator_revert_t_address",
																	"nativeSrc": "2031:26:7",
																	"nodeType": "YulIdentifier",
																	"src": "2031:26:7"
																},
																"nativeSrc": "2031:33:7",
																"nodeType": "YulFunctionCall",
																"src": "2031:33:7"
															},
															"nativeSrc": "2031:33:7",
															"nodeType": "YulExpressionStatement",
															"src": "2031:33:7"
														}
													]
												},
												"name": "abi_decode_t_address",
												"nativeSrc": "1931:139:7",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "offset",
														"nativeSrc": "1961:6:7",
														"nodeType": "YulTypedName",
														"src": "1961:6:7",
														"type": ""
													},
													{
														"name": "end",
														"nativeSrc": "1969:3:7",
														"nodeType": "YulTypedName",
														"src": "1969:3:7",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value",
														"nativeSrc": "1977:5:7",
														"nodeType": "YulTypedName",
														"src": "1977:5:7",
														"type": ""
													}
												],
												"src": "1931:139:7"
											},
											{
												"body": {
													"nativeSrc": "2121:32:7",
													"nodeType": "YulBlock",
													"src": "2121:32:7",
													"statements": [
														{
															"nativeSrc": "2131:16:7",
															"nodeType": "YulAssignment",
															"src": "2131:16:7",
															"value": {
																"name": "value",
																"nativeSrc": "2142:5:7",
																"nodeType": "YulIdentifier",
																"src": "2142:5:7"
															},
															"variableNames": [
																{
																	"name": "cleaned",
																	"nativeSrc": "2131:7:7",
																	"nodeType": "YulIdentifier",
																	"src": "2131:7:7"
																}
															]
														}
													]
												},
												"name": "cleanup_t_uint256",
												"nativeSrc": "2076:77:7",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "2103:5:7",
														"nodeType": "YulTypedName",
														"src": "2103:5:7",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "cleaned",
														"nativeSrc": "2113:7:7",
														"nodeType": "YulTypedName",
														"src": "2113:7:7",
														"type": ""
													}
												],
												"src": "2076:77:7"
											},
											{
												"body": {
													"nativeSrc": "2202:79:7",
													"nodeType": "YulBlock",
													"src": "2202:79:7",
													"statements": [
														{
															"body": {
																"nativeSrc": "2259:16:7",
																"nodeType": "YulBlock",
																"src": "2259:16:7",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nativeSrc": "2268:1:7",
																					"nodeType": "YulLiteral",
																					"src": "2268:1:7",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nativeSrc": "2271:1:7",
																					"nodeType": "YulLiteral",
																					"src": "2271:1:7",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nativeSrc": "2261:6:7",
																				"nodeType": "YulIdentifier",
																				"src": "2261:6:7"
																			},
																			"nativeSrc": "2261:12:7",
																			"nodeType": "YulFunctionCall",
																			"src": "2261:12:7"
																		},
																		"nativeSrc": "2261:12:7",
																		"nodeType": "YulExpressionStatement",
																		"src": "2261:12:7"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nativeSrc": "2225:5:7",
																				"nodeType": "YulIdentifier",
																				"src": "2225:5:7"
																			},
																			{
																				"arguments": [
																					{
																						"name": "value",
																						"nativeSrc": "2250:5:7",
																						"nodeType": "YulIdentifier",
																						"src": "2250:5:7"
																					}
																				],
																				"functionName": {
																					"name": "cleanup_t_uint256",
																					"nativeSrc": "2232:17:7",
																					"nodeType": "YulIdentifier",
																					"src": "2232:17:7"
																				},
																				"nativeSrc": "2232:24:7",
																				"nodeType": "YulFunctionCall",
																				"src": "2232:24:7"
																			}
																		],
																		"functionName": {
																			"name": "eq",
																			"nativeSrc": "2222:2:7",
																			"nodeType": "YulIdentifier",
																			"src": "2222:2:7"
																		},
																		"nativeSrc": "2222:35:7",
																		"nodeType": "YulFunctionCall",
																		"src": "2222:35:7"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nativeSrc": "2215:6:7",
																	"nodeType": "YulIdentifier",
																	"src": "2215:6:7"
																},
																"nativeSrc": "2215:43:7",
																"nodeType": "YulFunctionCall",
																"src": "2215:43:7"
															},
															"nativeSrc": "2212:63:7",
															"nodeType": "YulIf",
															"src": "2212:63:7"
														}
													]
												},
												"name": "validator_revert_t_uint256",
												"nativeSrc": "2159:122:7",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "2195:5:7",
														"nodeType": "YulTypedName",
														"src": "2195:5:7",
														"type": ""
													}
												],
												"src": "2159:122:7"
											},
											{
												"body": {
													"nativeSrc": "2339:87:7",
													"nodeType": "YulBlock",
													"src": "2339:87:7",
													"statements": [
														{
															"nativeSrc": "2349:29:7",
															"nodeType": "YulAssignment",
															"src": "2349:29:7",
															"value": {
																"arguments": [
																	{
																		"name": "offset",
																		"nativeSrc": "2371:6:7",
																		"nodeType": "YulIdentifier",
																		"src": "2371:6:7"
																	}
																],
																"functionName": {
																	"name": "calldataload",
																	"nativeSrc": "2358:12:7",
																	"nodeType": "YulIdentifier",
																	"src": "2358:12:7"
																},
																"nativeSrc": "2358:20:7",
																"nodeType": "YulFunctionCall",
																"src": "2358:20:7"
															},
															"variableNames": [
																{
																	"name": "value",
																	"nativeSrc": "2349:5:7",
																	"nodeType": "YulIdentifier",
																	"src": "2349:5:7"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value",
																		"nativeSrc": "2414:5:7",
																		"nodeType": "YulIdentifier",
																		"src": "2414:5:7"
																	}
																],
																"functionName": {
																	"name": "validator_revert_t_uint256",
																	"nativeSrc": "2387:26:7",
																	"nodeType": "YulIdentifier",
																	"src": "2387:26:7"
																},
																"nativeSrc": "2387:33:7",
																"nodeType": "YulFunctionCall",
																"src": "2387:33:7"
															},
															"nativeSrc": "2387:33:7",
															"nodeType": "YulExpressionStatement",
															"src": "2387:33:7"
														}
													]
												},
												"name": "abi_decode_t_uint256",
												"nativeSrc": "2287:139:7",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "offset",
														"nativeSrc": "2317:6:7",
														"nodeType": "YulTypedName",
														"src": "2317:6:7",
														"type": ""
													},
													{
														"name": "end",
														"nativeSrc": "2325:3:7",
														"nodeType": "YulTypedName",
														"src": "2325:3:7",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value",
														"nativeSrc": "2333:5:7",
														"nodeType": "YulTypedName",
														"src": "2333:5:7",
														"type": ""
													}
												],
												"src": "2287:139:7"
											},
											{
												"body": {
													"nativeSrc": "2515:391:7",
													"nodeType": "YulBlock",
													"src": "2515:391:7",
													"statements": [
														{
															"body": {
																"nativeSrc": "2561:83:7",
																"nodeType": "YulBlock",
																"src": "2561:83:7",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b",
																				"nativeSrc": "2563:77:7",
																				"nodeType": "YulIdentifier",
																				"src": "2563:77:7"
																			},
																			"nativeSrc": "2563:79:7",
																			"nodeType": "YulFunctionCall",
																			"src": "2563:79:7"
																		},
																		"nativeSrc": "2563:79:7",
																		"nodeType": "YulExpressionStatement",
																		"src": "2563:79:7"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dataEnd",
																				"nativeSrc": "2536:7:7",
																				"nodeType": "YulIdentifier",
																				"src": "2536:7:7"
																			},
																			{
																				"name": "headStart",
																				"nativeSrc": "2545:9:7",
																				"nodeType": "YulIdentifier",
																				"src": "2545:9:7"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nativeSrc": "2532:3:7",
																			"nodeType": "YulIdentifier",
																			"src": "2532:3:7"
																		},
																		"nativeSrc": "2532:23:7",
																		"nodeType": "YulFunctionCall",
																		"src": "2532:23:7"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "2557:2:7",
																		"nodeType": "YulLiteral",
																		"src": "2557:2:7",
																		"type": "",
																		"value": "64"
																	}
																],
																"functionName": {
																	"name": "slt",
																	"nativeSrc": "2528:3:7",
																	"nodeType": "YulIdentifier",
																	"src": "2528:3:7"
																},
																"nativeSrc": "2528:32:7",
																"nodeType": "YulFunctionCall",
																"src": "2528:32:7"
															},
															"nativeSrc": "2525:119:7",
															"nodeType": "YulIf",
															"src": "2525:119:7"
														},
														{
															"nativeSrc": "2654:117:7",
															"nodeType": "YulBlock",
															"src": "2654:117:7",
															"statements": [
																{
																	"nativeSrc": "2669:15:7",
																	"nodeType": "YulVariableDeclaration",
																	"src": "2669:15:7",
																	"value": {
																		"kind": "number",
																		"nativeSrc": "2683:1:7",
																		"nodeType": "YulLiteral",
																		"src": "2683:1:7",
																		"type": "",
																		"value": "0"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nativeSrc": "2673:6:7",
																			"nodeType": "YulTypedName",
																			"src": "2673:6:7",
																			"type": ""
																		}
																	]
																},
																{
																	"nativeSrc": "2698:63:7",
																	"nodeType": "YulAssignment",
																	"src": "2698:63:7",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nativeSrc": "2733:9:7",
																						"nodeType": "YulIdentifier",
																						"src": "2733:9:7"
																					},
																					{
																						"name": "offset",
																						"nativeSrc": "2744:6:7",
																						"nodeType": "YulIdentifier",
																						"src": "2744:6:7"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nativeSrc": "2729:3:7",
																					"nodeType": "YulIdentifier",
																					"src": "2729:3:7"
																				},
																				"nativeSrc": "2729:22:7",
																				"nodeType": "YulFunctionCall",
																				"src": "2729:22:7"
																			},
																			{
																				"name": "dataEnd",
																				"nativeSrc": "2753:7:7",
																				"nodeType": "YulIdentifier",
																				"src": "2753:7:7"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_address",
																			"nativeSrc": "2708:20:7",
																			"nodeType": "YulIdentifier",
																			"src": "2708:20:7"
																		},
																		"nativeSrc": "2708:53:7",
																		"nodeType": "YulFunctionCall",
																		"src": "2708:53:7"
																	},
																	"variableNames": [
																		{
																			"name": "value0",
																			"nativeSrc": "2698:6:7",
																			"nodeType": "YulIdentifier",
																			"src": "2698:6:7"
																		}
																	]
																}
															]
														},
														{
															"nativeSrc": "2781:118:7",
															"nodeType": "YulBlock",
															"src": "2781:118:7",
															"statements": [
																{
																	"nativeSrc": "2796:16:7",
																	"nodeType": "YulVariableDeclaration",
																	"src": "2796:16:7",
																	"value": {
																		"kind": "number",
																		"nativeSrc": "2810:2:7",
																		"nodeType": "YulLiteral",
																		"src": "2810:2:7",
																		"type": "",
																		"value": "32"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nativeSrc": "2800:6:7",
																			"nodeType": "YulTypedName",
																			"src": "2800:6:7",
																			"type": ""
																		}
																	]
																},
																{
																	"nativeSrc": "2826:63:7",
																	"nodeType": "YulAssignment",
																	"src": "2826:63:7",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nativeSrc": "2861:9:7",
																						"nodeType": "YulIdentifier",
																						"src": "2861:9:7"
																					},
																					{
																						"name": "offset",
																						"nativeSrc": "2872:6:7",
																						"nodeType": "YulIdentifier",
																						"src": "2872:6:7"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nativeSrc": "2857:3:7",
																					"nodeType": "YulIdentifier",
																					"src": "2857:3:7"
																				},
																				"nativeSrc": "2857:22:7",
																				"nodeType": "YulFunctionCall",
																				"src": "2857:22:7"
																			},
																			{
																				"name": "dataEnd",
																				"nativeSrc": "2881:7:7",
																				"nodeType": "YulIdentifier",
																				"src": "2881:7:7"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_uint256",
																			"nativeSrc": "2836:20:7",
																			"nodeType": "YulIdentifier",
																			"src": "2836:20:7"
																		},
																		"nativeSrc": "2836:53:7",
																		"nodeType": "YulFunctionCall",
																		"src": "2836:53:7"
																	},
																	"variableNames": [
																		{
																			"name": "value1",
																			"nativeSrc": "2826:6:7",
																			"nodeType": "YulIdentifier",
																			"src": "2826:6:7"
																		}
																	]
																}
															]
														}
													]
												},
												"name": "abi_decode_tuple_t_addresst_uint256",
												"nativeSrc": "2432:474:7",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "2477:9:7",
														"nodeType": "YulTypedName",
														"src": "2477:9:7",
														"type": ""
													},
													{
														"name": "dataEnd",
														"nativeSrc": "2488:7:7",
														"nodeType": "YulTypedName",
														"src": "2488:7:7",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value0",
														"nativeSrc": "2500:6:7",
														"nodeType": "YulTypedName",
														"src": "2500:6:7",
														"type": ""
													},
													{
														"name": "value1",
														"nativeSrc": "2508:6:7",
														"nodeType": "YulTypedName",
														"src": "2508:6:7",
														"type": ""
													}
												],
												"src": "2432:474:7"
											},
											{
												"body": {
													"nativeSrc": "2954:48:7",
													"nodeType": "YulBlock",
													"src": "2954:48:7",
													"statements": [
														{
															"nativeSrc": "2964:32:7",
															"nodeType": "YulAssignment",
															"src": "2964:32:7",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nativeSrc": "2989:5:7",
																				"nodeType": "YulIdentifier",
																				"src": "2989:5:7"
																			}
																		],
																		"functionName": {
																			"name": "iszero",
																			"nativeSrc": "2982:6:7",
																			"nodeType": "YulIdentifier",
																			"src": "2982:6:7"
																		},
																		"nativeSrc": "2982:13:7",
																		"nodeType": "YulFunctionCall",
																		"src": "2982:13:7"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nativeSrc": "2975:6:7",
																	"nodeType": "YulIdentifier",
																	"src": "2975:6:7"
																},
																"nativeSrc": "2975:21:7",
																"nodeType": "YulFunctionCall",
																"src": "2975:21:7"
															},
															"variableNames": [
																{
																	"name": "cleaned",
																	"nativeSrc": "2964:7:7",
																	"nodeType": "YulIdentifier",
																	"src": "2964:7:7"
																}
															]
														}
													]
												},
												"name": "cleanup_t_bool",
												"nativeSrc": "2912:90:7",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "2936:5:7",
														"nodeType": "YulTypedName",
														"src": "2936:5:7",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "cleaned",
														"nativeSrc": "2946:7:7",
														"nodeType": "YulTypedName",
														"src": "2946:7:7",
														"type": ""
													}
												],
												"src": "2912:90:7"
											},
											{
												"body": {
													"nativeSrc": "3067:50:7",
													"nodeType": "YulBlock",
													"src": "3067:50:7",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "3084:3:7",
																		"nodeType": "YulIdentifier",
																		"src": "3084:3:7"
																	},
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nativeSrc": "3104:5:7",
																				"nodeType": "YulIdentifier",
																				"src": "3104:5:7"
																			}
																		],
																		"functionName": {
																			"name": "cleanup_t_bool",
																			"nativeSrc": "3089:14:7",
																			"nodeType": "YulIdentifier",
																			"src": "3089:14:7"
																		},
																		"nativeSrc": "3089:21:7",
																		"nodeType": "YulFunctionCall",
																		"src": "3089:21:7"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "3077:6:7",
																	"nodeType": "YulIdentifier",
																	"src": "3077:6:7"
																},
																"nativeSrc": "3077:34:7",
																"nodeType": "YulFunctionCall",
																"src": "3077:34:7"
															},
															"nativeSrc": "3077:34:7",
															"nodeType": "YulExpressionStatement",
															"src": "3077:34:7"
														}
													]
												},
												"name": "abi_encode_t_bool_to_t_bool_fromStack",
												"nativeSrc": "3008:109:7",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "3055:5:7",
														"nodeType": "YulTypedName",
														"src": "3055:5:7",
														"type": ""
													},
													{
														"name": "pos",
														"nativeSrc": "3062:3:7",
														"nodeType": "YulTypedName",
														"src": "3062:3:7",
														"type": ""
													}
												],
												"src": "3008:109:7"
											},
											{
												"body": {
													"nativeSrc": "3215:118:7",
													"nodeType": "YulBlock",
													"src": "3215:118:7",
													"statements": [
														{
															"nativeSrc": "3225:26:7",
															"nodeType": "YulAssignment",
															"src": "3225:26:7",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "3237:9:7",
																		"nodeType": "YulIdentifier",
																		"src": "3237:9:7"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "3248:2:7",
																		"nodeType": "YulLiteral",
																		"src": "3248:2:7",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "3233:3:7",
																	"nodeType": "YulIdentifier",
																	"src": "3233:3:7"
																},
																"nativeSrc": "3233:18:7",
																"nodeType": "YulFunctionCall",
																"src": "3233:18:7"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "3225:4:7",
																	"nodeType": "YulIdentifier",
																	"src": "3225:4:7"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value0",
																		"nativeSrc": "3299:6:7",
																		"nodeType": "YulIdentifier",
																		"src": "3299:6:7"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "3312:9:7",
																				"nodeType": "YulIdentifier",
																				"src": "3312:9:7"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "3323:1:7",
																				"nodeType": "YulLiteral",
																				"src": "3323:1:7",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "3308:3:7",
																			"nodeType": "YulIdentifier",
																			"src": "3308:3:7"
																		},
																		"nativeSrc": "3308:17:7",
																		"nodeType": "YulFunctionCall",
																		"src": "3308:17:7"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_bool_to_t_bool_fromStack",
																	"nativeSrc": "3261:37:7",
																	"nodeType": "YulIdentifier",
																	"src": "3261:37:7"
																},
																"nativeSrc": "3261:65:7",
																"nodeType": "YulFunctionCall",
																"src": "3261:65:7"
															},
															"nativeSrc": "3261:65:7",
															"nodeType": "YulExpressionStatement",
															"src": "3261:65:7"
														}
													]
												},
												"name": "abi_encode_tuple_t_bool__to_t_bool__fromStack_reversed",
												"nativeSrc": "3123:210:7",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "3187:9:7",
														"nodeType": "YulTypedName",
														"src": "3187:9:7",
														"type": ""
													},
													{
														"name": "value0",
														"nativeSrc": "3199:6:7",
														"nodeType": "YulTypedName",
														"src": "3199:6:7",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nativeSrc": "3210:4:7",
														"nodeType": "YulTypedName",
														"src": "3210:4:7",
														"type": ""
													}
												],
												"src": "3123:210:7"
											},
											{
												"body": {
													"nativeSrc": "3404:53:7",
													"nodeType": "YulBlock",
													"src": "3404:53:7",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "3421:3:7",
																		"nodeType": "YulIdentifier",
																		"src": "3421:3:7"
																	},
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nativeSrc": "3444:5:7",
																				"nodeType": "YulIdentifier",
																				"src": "3444:5:7"
																			}
																		],
																		"functionName": {
																			"name": "cleanup_t_uint256",
																			"nativeSrc": "3426:17:7",
																			"nodeType": "YulIdentifier",
																			"src": "3426:17:7"
																		},
																		"nativeSrc": "3426:24:7",
																		"nodeType": "YulFunctionCall",
																		"src": "3426:24:7"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "3414:6:7",
																	"nodeType": "YulIdentifier",
																	"src": "3414:6:7"
																},
																"nativeSrc": "3414:37:7",
																"nodeType": "YulFunctionCall",
																"src": "3414:37:7"
															},
															"nativeSrc": "3414:37:7",
															"nodeType": "YulExpressionStatement",
															"src": "3414:37:7"
														}
													]
												},
												"name": "abi_encode_t_uint256_to_t_uint256_fromStack",
												"nativeSrc": "3339:118:7",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "3392:5:7",
														"nodeType": "YulTypedName",
														"src": "3392:5:7",
														"type": ""
													},
													{
														"name": "pos",
														"nativeSrc": "3399:3:7",
														"nodeType": "YulTypedName",
														"src": "3399:3:7",
														"type": ""
													}
												],
												"src": "3339:118:7"
											},
											{
												"body": {
													"nativeSrc": "3561:124:7",
													"nodeType": "YulBlock",
													"src": "3561:124:7",
													"statements": [
														{
															"nativeSrc": "3571:26:7",
															"nodeType": "YulAssignment",
															"src": "3571:26:7",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "3583:9:7",
																		"nodeType": "YulIdentifier",
																		"src": "3583:9:7"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "3594:2:7",
																		"nodeType": "YulLiteral",
																		"src": "3594:2:7",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "3579:3:7",
																	"nodeType": "YulIdentifier",
																	"src": "3579:3:7"
																},
																"nativeSrc": "3579:18:7",
																"nodeType": "YulFunctionCall",
																"src": "3579:18:7"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "3571:4:7",
																	"nodeType": "YulIdentifier",
																	"src": "3571:4:7"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value0",
																		"nativeSrc": "3651:6:7",
																		"nodeType": "YulIdentifier",
																		"src": "3651:6:7"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "3664:9:7",
																				"nodeType": "YulIdentifier",
																				"src": "3664:9:7"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "3675:1:7",
																				"nodeType": "YulLiteral",
																				"src": "3675:1:7",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "3660:3:7",
																			"nodeType": "YulIdentifier",
																			"src": "3660:3:7"
																		},
																		"nativeSrc": "3660:17:7",
																		"nodeType": "YulFunctionCall",
																		"src": "3660:17:7"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_uint256_to_t_uint256_fromStack",
																	"nativeSrc": "3607:43:7",
																	"nodeType": "YulIdentifier",
																	"src": "3607:43:7"
																},
																"nativeSrc": "3607:71:7",
																"nodeType": "YulFunctionCall",
																"src": "3607:71:7"
															},
															"nativeSrc": "3607:71:7",
															"nodeType": "YulExpressionStatement",
															"src": "3607:71:7"
														}
													]
												},
												"name": "abi_encode_tuple_t_uint256__to_t_uint256__fromStack_reversed",
												"nativeSrc": "3463:222:7",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "3533:9:7",
														"nodeType": "YulTypedName",
														"src": "3533:9:7",
														"type": ""
													},
													{
														"name": "value0",
														"nativeSrc": "3545:6:7",
														"nodeType": "YulTypedName",
														"src": "3545:6:7",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nativeSrc": "3556:4:7",
														"nodeType": "YulTypedName",
														"src": "3556:4:7",
														"type": ""
													}
												],
												"src": "3463:222:7"
											},
											{
												"body": {
													"nativeSrc": "3791:519:7",
													"nodeType": "YulBlock",
													"src": "3791:519:7",
													"statements": [
														{
															"body": {
																"nativeSrc": "3837:83:7",
																"nodeType": "YulBlock",
																"src": "3837:83:7",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b",
																				"nativeSrc": "3839:77:7",
																				"nodeType": "YulIdentifier",
																				"src": "3839:77:7"
																			},
																			"nativeSrc": "3839:79:7",
																			"nodeType": "YulFunctionCall",
																			"src": "3839:79:7"
																		},
																		"nativeSrc": "3839:79:7",
																		"nodeType": "YulExpressionStatement",
																		"src": "3839:79:7"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dataEnd",
																				"nativeSrc": "3812:7:7",
																				"nodeType": "YulIdentifier",
																				"src": "3812:7:7"
																			},
																			{
																				"name": "headStart",
																				"nativeSrc": "3821:9:7",
																				"nodeType": "YulIdentifier",
																				"src": "3821:9:7"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nativeSrc": "3808:3:7",
																			"nodeType": "YulIdentifier",
																			"src": "3808:3:7"
																		},
																		"nativeSrc": "3808:23:7",
																		"nodeType": "YulFunctionCall",
																		"src": "3808:23:7"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "3833:2:7",
																		"nodeType": "YulLiteral",
																		"src": "3833:2:7",
																		"type": "",
																		"value": "96"
																	}
																],
																"functionName": {
																	"name": "slt",
																	"nativeSrc": "3804:3:7",
																	"nodeType": "YulIdentifier",
																	"src": "3804:3:7"
																},
																"nativeSrc": "3804:32:7",
																"nodeType": "YulFunctionCall",
																"src": "3804:32:7"
															},
															"nativeSrc": "3801:119:7",
															"nodeType": "YulIf",
															"src": "3801:119:7"
														},
														{
															"nativeSrc": "3930:117:7",
															"nodeType": "YulBlock",
															"src": "3930:117:7",
															"statements": [
																{
																	"nativeSrc": "3945:15:7",
																	"nodeType": "YulVariableDeclaration",
																	"src": "3945:15:7",
																	"value": {
																		"kind": "number",
																		"nativeSrc": "3959:1:7",
																		"nodeType": "YulLiteral",
																		"src": "3959:1:7",
																		"type": "",
																		"value": "0"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nativeSrc": "3949:6:7",
																			"nodeType": "YulTypedName",
																			"src": "3949:6:7",
																			"type": ""
																		}
																	]
																},
																{
																	"nativeSrc": "3974:63:7",
																	"nodeType": "YulAssignment",
																	"src": "3974:63:7",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nativeSrc": "4009:9:7",
																						"nodeType": "YulIdentifier",
																						"src": "4009:9:7"
																					},
																					{
																						"name": "offset",
																						"nativeSrc": "4020:6:7",
																						"nodeType": "YulIdentifier",
																						"src": "4020:6:7"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nativeSrc": "4005:3:7",
																					"nodeType": "YulIdentifier",
																					"src": "4005:3:7"
																				},
																				"nativeSrc": "4005:22:7",
																				"nodeType": "YulFunctionCall",
																				"src": "4005:22:7"
																			},
																			{
																				"name": "dataEnd",
																				"nativeSrc": "4029:7:7",
																				"nodeType": "YulIdentifier",
																				"src": "4029:7:7"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_address",
																			"nativeSrc": "3984:20:7",
																			"nodeType": "YulIdentifier",
																			"src": "3984:20:7"
																		},
																		"nativeSrc": "3984:53:7",
																		"nodeType": "YulFunctionCall",
																		"src": "3984:53:7"
																	},
																	"variableNames": [
																		{
																			"name": "value0",
																			"nativeSrc": "3974:6:7",
																			"nodeType": "YulIdentifier",
																			"src": "3974:6:7"
																		}
																	]
																}
															]
														},
														{
															"nativeSrc": "4057:118:7",
															"nodeType": "YulBlock",
															"src": "4057:118:7",
															"statements": [
																{
																	"nativeSrc": "4072:16:7",
																	"nodeType": "YulVariableDeclaration",
																	"src": "4072:16:7",
																	"value": {
																		"kind": "number",
																		"nativeSrc": "4086:2:7",
																		"nodeType": "YulLiteral",
																		"src": "4086:2:7",
																		"type": "",
																		"value": "32"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nativeSrc": "4076:6:7",
																			"nodeType": "YulTypedName",
																			"src": "4076:6:7",
																			"type": ""
																		}
																	]
																},
																{
																	"nativeSrc": "4102:63:7",
																	"nodeType": "YulAssignment",
																	"src": "4102:63:7",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nativeSrc": "4137:9:7",
																						"nodeType": "YulIdentifier",
																						"src": "4137:9:7"
																					},
																					{
																						"name": "offset",
																						"nativeSrc": "4148:6:7",
																						"nodeType": "YulIdentifier",
																						"src": "4148:6:7"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nativeSrc": "4133:3:7",
																					"nodeType": "YulIdentifier",
																					"src": "4133:3:7"
																				},
																				"nativeSrc": "4133:22:7",
																				"nodeType": "YulFunctionCall",
																				"src": "4133:22:7"
																			},
																			{
																				"name": "dataEnd",
																				"nativeSrc": "4157:7:7",
																				"nodeType": "YulIdentifier",
																				"src": "4157:7:7"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_address",
																			"nativeSrc": "4112:20:7",
																			"nodeType": "YulIdentifier",
																			"src": "4112:20:7"
																		},
																		"nativeSrc": "4112:53:7",
																		"nodeType": "YulFunctionCall",
																		"src": "4112:53:7"
																	},
																	"variableNames": [
																		{
																			"name": "value1",
																			"nativeSrc": "4102:6:7",
																			"nodeType": "YulIdentifier",
																			"src": "4102:6:7"
																		}
																	]
																}
															]
														},
														{
															"nativeSrc": "4185:118:7",
															"nodeType": "YulBlock",
															"src": "4185:118:7",
															"statements": [
																{
																	"nativeSrc": "4200:16:7",
																	"nodeType": "YulVariableDeclaration",
																	"src": "4200:16:7",
																	"value": {
																		"kind": "number",
																		"nativeSrc": "4214:2:7",
																		"nodeType": "YulLiteral",
																		"src": "4214:2:7",
																		"type": "",
																		"value": "64"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nativeSrc": "4204:6:7",
																			"nodeType": "YulTypedName",
																			"src": "4204:6:7",
																			"type": ""
																		}
																	]
																},
																{
																	"nativeSrc": "4230:63:7",
																	"nodeType": "YulAssignment",
																	"src": "4230:63:7",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nativeSrc": "4265:9:7",
																						"nodeType": "YulIdentifier",
																						"src": "4265:9:7"
																					},
																					{
																						"name": "offset",
																						"nativeSrc": "4276:6:7",
																						"nodeType": "YulIdentifier",
																						"src": "4276:6:7"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nativeSrc": "4261:3:7",
																					"nodeType": "YulIdentifier",
																					"src": "4261:3:7"
																				},
																				"nativeSrc": "4261:22:7",
																				"nodeType": "YulFunctionCall",
																				"src": "4261:22:7"
																			},
																			{
																				"name": "dataEnd",
																				"nativeSrc": "4285:7:7",
																				"nodeType": "YulIdentifier",
																				"src": "4285:7:7"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_uint256",
																			"nativeSrc": "4240:20:7",
																			"nodeType": "YulIdentifier",
																			"src": "4240:20:7"
																		},
																		"nativeSrc": "4240:53:7",
																		"nodeType": "YulFunctionCall",
																		"src": "4240:53:7"
																	},
																	"variableNames": [
																		{
																			"name": "value2",
																			"nativeSrc": "4230:6:7",
																			"nodeType": "YulIdentifier",
																			"src": "4230:6:7"
																		}
																	]
																}
															]
														}
													]
												},
												"name": "abi_decode_tuple_t_addresst_addresst_uint256",
												"nativeSrc": "3691:619:7",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "3745:9:7",
														"nodeType": "YulTypedName",
														"src": "3745:9:7",
														"type": ""
													},
													{
														"name": "dataEnd",
														"nativeSrc": "3756:7:7",
														"nodeType": "YulTypedName",
														"src": "3756:7:7",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value0",
														"nativeSrc": "3768:6:7",
														"nodeType": "YulTypedName",
														"src": "3768:6:7",
														"type": ""
													},
													{
														"name": "value1",
														"nativeSrc": "3776:6:7",
														"nodeType": "YulTypedName",
														"src": "3776:6:7",
														"type": ""
													},
													{
														"name": "value2",
														"nativeSrc": "3784:6:7",
														"nodeType": "YulTypedName",
														"src": "3784:6:7",
														"type": ""
													}
												],
												"src": "3691:619:7"
											},
											{
												"body": {
													"nativeSrc": "4359:43:7",
													"nodeType": "YulBlock",
													"src": "4359:43:7",
													"statements": [
														{
															"nativeSrc": "4369:27:7",
															"nodeType": "YulAssignment",
															"src": "4369:27:7",
															"value": {
																"arguments": [
																	{
																		"name": "value",
																		"nativeSrc": "4384:5:7",
																		"nodeType": "YulIdentifier",
																		"src": "4384:5:7"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "4391:4:7",
																		"nodeType": "YulLiteral",
																		"src": "4391:4:7",
																		"type": "",
																		"value": "0xff"
																	}
																],
																"functionName": {
																	"name": "and",
																	"nativeSrc": "4380:3:7",
																	"nodeType": "YulIdentifier",
																	"src": "4380:3:7"
																},
																"nativeSrc": "4380:16:7",
																"nodeType": "YulFunctionCall",
																"src": "4380:16:7"
															},
															"variableNames": [
																{
																	"name": "cleaned",
																	"nativeSrc": "4369:7:7",
																	"nodeType": "YulIdentifier",
																	"src": "4369:7:7"
																}
															]
														}
													]
												},
												"name": "cleanup_t_uint8",
												"nativeSrc": "4316:86:7",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "4341:5:7",
														"nodeType": "YulTypedName",
														"src": "4341:5:7",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "cleaned",
														"nativeSrc": "4351:7:7",
														"nodeType": "YulTypedName",
														"src": "4351:7:7",
														"type": ""
													}
												],
												"src": "4316:86:7"
											},
											{
												"body": {
													"nativeSrc": "4469:51:7",
													"nodeType": "YulBlock",
													"src": "4469:51:7",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "4486:3:7",
																		"nodeType": "YulIdentifier",
																		"src": "4486:3:7"
																	},
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nativeSrc": "4507:5:7",
																				"nodeType": "YulIdentifier",
																				"src": "4507:5:7"
																			}
																		],
																		"functionName": {
																			"name": "cleanup_t_uint8",
																			"nativeSrc": "4491:15:7",
																			"nodeType": "YulIdentifier",
																			"src": "4491:15:7"
																		},
																		"nativeSrc": "4491:22:7",
																		"nodeType": "YulFunctionCall",
																		"src": "4491:22:7"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "4479:6:7",
																	"nodeType": "YulIdentifier",
																	"src": "4479:6:7"
																},
																"nativeSrc": "4479:35:7",
																"nodeType": "YulFunctionCall",
																"src": "4479:35:7"
															},
															"nativeSrc": "4479:35:7",
															"nodeType": "YulExpressionStatement",
															"src": "4479:35:7"
														}
													]
												},
												"name": "abi_encode_t_uint8_to_t_uint8_fromStack",
												"nativeSrc": "4408:112:7",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "4457:5:7",
														"nodeType": "YulTypedName",
														"src": "4457:5:7",
														"type": ""
													},
													{
														"name": "pos",
														"nativeSrc": "4464:3:7",
														"nodeType": "YulTypedName",
														"src": "4464:3:7",
														"type": ""
													}
												],
												"src": "4408:112:7"
											},
											{
												"body": {
													"nativeSrc": "4620:120:7",
													"nodeType": "YulBlock",
													"src": "4620:120:7",
													"statements": [
														{
															"nativeSrc": "4630:26:7",
															"nodeType": "YulAssignment",
															"src": "4630:26:7",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "4642:9:7",
																		"nodeType": "YulIdentifier",
																		"src": "4642:9:7"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "4653:2:7",
																		"nodeType": "YulLiteral",
																		"src": "4653:2:7",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "4638:3:7",
																	"nodeType": "YulIdentifier",
																	"src": "4638:3:7"
																},
																"nativeSrc": "4638:18:7",
																"nodeType": "YulFunctionCall",
																"src": "4638:18:7"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "4630:4:7",
																	"nodeType": "YulIdentifier",
																	"src": "4630:4:7"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value0",
																		"nativeSrc": "4706:6:7",
																		"nodeType": "YulIdentifier",
																		"src": "4706:6:7"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "4719:9:7",
																				"nodeType": "YulIdentifier",
																				"src": "4719:9:7"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "4730:1:7",
																				"nodeType": "YulLiteral",
																				"src": "4730:1:7",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "4715:3:7",
																			"nodeType": "YulIdentifier",
																			"src": "4715:3:7"
																		},
																		"nativeSrc": "4715:17:7",
																		"nodeType": "YulFunctionCall",
																		"src": "4715:17:7"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_uint8_to_t_uint8_fromStack",
																	"nativeSrc": "4666:39:7",
																	"nodeType": "YulIdentifier",
																	"src": "4666:39:7"
																},
																"nativeSrc": "4666:67:7",
																"nodeType": "YulFunctionCall",
																"src": "4666:67:7"
															},
															"nativeSrc": "4666:67:7",
															"nodeType": "YulExpressionStatement",
															"src": "4666:67:7"
														}
													]
												},
												"name": "abi_encode_tuple_t_uint8__to_t_uint8__fromStack_reversed",
												"nativeSrc": "4526:214:7",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "4592:9:7",
														"nodeType": "YulTypedName",
														"src": "4592:9:7",
														"type": ""
													},
													{
														"name": "value0",
														"nativeSrc": "4604:6:7",
														"nodeType": "YulTypedName",
														"src": "4604:6:7",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nativeSrc": "4615:4:7",
														"nodeType": "YulTypedName",
														"src": "4615:4:7",
														"type": ""
													}
												],
												"src": "4526:214:7"
											},
											{
												"body": {
													"nativeSrc": "4812:263:7",
													"nodeType": "YulBlock",
													"src": "4812:263:7",
													"statements": [
														{
															"body": {
																"nativeSrc": "4858:83:7",
																"nodeType": "YulBlock",
																"src": "4858:83:7",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b",
																				"nativeSrc": "4860:77:7",
																				"nodeType": "YulIdentifier",
																				"src": "4860:77:7"
																			},
																			"nativeSrc": "4860:79:7",
																			"nodeType": "YulFunctionCall",
																			"src": "4860:79:7"
																		},
																		"nativeSrc": "4860:79:7",
																		"nodeType": "YulExpressionStatement",
																		"src": "4860:79:7"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dataEnd",
																				"nativeSrc": "4833:7:7",
																				"nodeType": "YulIdentifier",
																				"src": "4833:7:7"
																			},
																			{
																				"name": "headStart",
																				"nativeSrc": "4842:9:7",
																				"nodeType": "YulIdentifier",
																				"src": "4842:9:7"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nativeSrc": "4829:3:7",
																			"nodeType": "YulIdentifier",
																			"src": "4829:3:7"
																		},
																		"nativeSrc": "4829:23:7",
																		"nodeType": "YulFunctionCall",
																		"src": "4829:23:7"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "4854:2:7",
																		"nodeType": "YulLiteral",
																		"src": "4854:2:7",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "slt",
																	"nativeSrc": "4825:3:7",
																	"nodeType": "YulIdentifier",
																	"src": "4825:3:7"
																},
																"nativeSrc": "4825:32:7",
																"nodeType": "YulFunctionCall",
																"src": "4825:32:7"
															},
															"nativeSrc": "4822:119:7",
															"nodeType": "YulIf",
															"src": "4822:119:7"
														},
														{
															"nativeSrc": "4951:117:7",
															"nodeType": "YulBlock",
															"src": "4951:117:7",
															"statements": [
																{
																	"nativeSrc": "4966:15:7",
																	"nodeType": "YulVariableDeclaration",
																	"src": "4966:15:7",
																	"value": {
																		"kind": "number",
																		"nativeSrc": "4980:1:7",
																		"nodeType": "YulLiteral",
																		"src": "4980:1:7",
																		"type": "",
																		"value": "0"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nativeSrc": "4970:6:7",
																			"nodeType": "YulTypedName",
																			"src": "4970:6:7",
																			"type": ""
																		}
																	]
																},
																{
																	"nativeSrc": "4995:63:7",
																	"nodeType": "YulAssignment",
																	"src": "4995:63:7",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nativeSrc": "5030:9:7",
																						"nodeType": "YulIdentifier",
																						"src": "5030:9:7"
																					},
																					{
																						"name": "offset",
																						"nativeSrc": "5041:6:7",
																						"nodeType": "YulIdentifier",
																						"src": "5041:6:7"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nativeSrc": "5026:3:7",
																					"nodeType": "YulIdentifier",
																					"src": "5026:3:7"
																				},
																				"nativeSrc": "5026:22:7",
																				"nodeType": "YulFunctionCall",
																				"src": "5026:22:7"
																			},
																			{
																				"name": "dataEnd",
																				"nativeSrc": "5050:7:7",
																				"nodeType": "YulIdentifier",
																				"src": "5050:7:7"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_address",
																			"nativeSrc": "5005:20:7",
																			"nodeType": "YulIdentifier",
																			"src": "5005:20:7"
																		},
																		"nativeSrc": "5005:53:7",
																		"nodeType": "YulFunctionCall",
																		"src": "5005:53:7"
																	},
																	"variableNames": [
																		{
																			"name": "value0",
																			"nativeSrc": "4995:6:7",
																			"nodeType": "YulIdentifier",
																			"src": "4995:6:7"
																		}
																	]
																}
															]
														}
													]
												},
												"name": "abi_decode_tuple_t_address",
												"nativeSrc": "4746:329:7",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "4782:9:7",
														"nodeType": "YulTypedName",
														"src": "4782:9:7",
														"type": ""
													},
													{
														"name": "dataEnd",
														"nativeSrc": "4793:7:7",
														"nodeType": "YulTypedName",
														"src": "4793:7:7",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value0",
														"nativeSrc": "4805:6:7",
														"nodeType": "YulTypedName",
														"src": "4805:6:7",
														"type": ""
													}
												],
												"src": "4746:329:7"
											},
											{
												"body": {
													"nativeSrc": "5170:28:7",
													"nodeType": "YulBlock",
													"src": "5170:28:7",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "5187:1:7",
																		"nodeType": "YulLiteral",
																		"src": "5187:1:7",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "5190:1:7",
																		"nodeType": "YulLiteral",
																		"src": "5190:1:7",
																		"type": "",
																		"value": "0"
																	}
																],
																"functionName": {
																	"name": "revert",
																	"nativeSrc": "5180:6:7",
																	"nodeType": "YulIdentifier",
																	"src": "5180:6:7"
																},
																"nativeSrc": "5180:12:7",
																"nodeType": "YulFunctionCall",
																"src": "5180:12:7"
															},
															"nativeSrc": "5180:12:7",
															"nodeType": "YulExpressionStatement",
															"src": "5180:12:7"
														}
													]
												},
												"name": "revert_error_1b9f4a0a5773e33b91aa01db23bf8c55fce1411167c872835e7fa00a4f17d46d",
												"nativeSrc": "5081:117:7",
												"nodeType": "YulFunctionDefinition",
												"src": "5081:117:7"
											},
											{
												"body": {
													"nativeSrc": "5293:28:7",
													"nodeType": "YulBlock",
													"src": "5293:28:7",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "5310:1:7",
																		"nodeType": "YulLiteral",
																		"src": "5310:1:7",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "5313:1:7",
																		"nodeType": "YulLiteral",
																		"src": "5313:1:7",
																		"type": "",
																		"value": "0"
																	}
																],
																"functionName": {
																	"name": "revert",
																	"nativeSrc": "5303:6:7",
																	"nodeType": "YulIdentifier",
																	"src": "5303:6:7"
																},
																"nativeSrc": "5303:12:7",
																"nodeType": "YulFunctionCall",
																"src": "5303:12:7"
															},
															"nativeSrc": "5303:12:7",
															"nodeType": "YulExpressionStatement",
															"src": "5303:12:7"
														}
													]
												},
												"name": "revert_error_15abf5612cd996bc235ba1e55a4a30ac60e6bb601ff7ba4ad3f179b6be8d0490",
												"nativeSrc": "5204:117:7",
												"nodeType": "YulFunctionDefinition",
												"src": "5204:117:7"
											},
											{
												"body": {
													"nativeSrc": "5416:28:7",
													"nodeType": "YulBlock",
													"src": "5416:28:7",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "5433:1:7",
																		"nodeType": "YulLiteral",
																		"src": "5433:1:7",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "5436:1:7",
																		"nodeType": "YulLiteral",
																		"src": "5436:1:7",
																		"type": "",
																		"value": "0"
																	}
																],
																"functionName": {
																	"name": "revert",
																	"nativeSrc": "5426:6:7",
																	"nodeType": "YulIdentifier",
																	"src": "5426:6:7"
																},
																"nativeSrc": "5426:12:7",
																"nodeType": "YulFunctionCall",
																"src": "5426:12:7"
															},
															"nativeSrc": "5426:12:7",
															"nodeType": "YulExpressionStatement",
															"src": "5426:12:7"
														}
													]
												},
												"name": "revert_error_81385d8c0b31fffe14be1da910c8bd3a80be4cfa248e04f42ec0faea3132a8ef",
												"nativeSrc": "5327:117:7",
												"nodeType": "YulFunctionDefinition",
												"src": "5327:117:7"
											},
											{
												"body": {
													"nativeSrc": "5539:478:7",
													"nodeType": "YulBlock",
													"src": "5539:478:7",
													"statements": [
														{
															"body": {
																"nativeSrc": "5588:83:7",
																"nodeType": "YulBlock",
																"src": "5588:83:7",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "revert_error_1b9f4a0a5773e33b91aa01db23bf8c55fce1411167c872835e7fa00a4f17d46d",
																				"nativeSrc": "5590:77:7",
																				"nodeType": "YulIdentifier",
																				"src": "5590:77:7"
																			},
																			"nativeSrc": "5590:79:7",
																			"nodeType": "YulFunctionCall",
																			"src": "5590:79:7"
																		},
																		"nativeSrc": "5590:79:7",
																		"nodeType": "YulExpressionStatement",
																		"src": "5590:79:7"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "offset",
																						"nativeSrc": "5567:6:7",
																						"nodeType": "YulIdentifier",
																						"src": "5567:6:7"
																					},
																					{
																						"kind": "number",
																						"nativeSrc": "5575:4:7",
																						"nodeType": "YulLiteral",
																						"src": "5575:4:7",
																						"type": "",
																						"value": "0x1f"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nativeSrc": "5563:3:7",
																					"nodeType": "YulIdentifier",
																					"src": "5563:3:7"
																				},
																				"nativeSrc": "5563:17:7",
																				"nodeType": "YulFunctionCall",
																				"src": "5563:17:7"
																			},
																			{
																				"name": "end",
																				"nativeSrc": "5582:3:7",
																				"nodeType": "YulIdentifier",
																				"src": "5582:3:7"
																			}
																		],
																		"functionName": {
																			"name": "slt",
																			"nativeSrc": "5559:3:7",
																			"nodeType": "YulIdentifier",
																			"src": "5559:3:7"
																		},
																		"nativeSrc": "5559:27:7",
																		"nodeType": "YulFunctionCall",
																		"src": "5559:27:7"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nativeSrc": "5552:6:7",
																	"nodeType": "YulIdentifier",
																	"src": "5552:6:7"
																},
																"nativeSrc": "5552:35:7",
																"nodeType": "YulFunctionCall",
																"src": "5552:35:7"
															},
															"nativeSrc": "5549:122:7",
															"nodeType": "YulIf",
															"src": "5549:122:7"
														},
														{
															"nativeSrc": "5680:30:7",
															"nodeType": "YulAssignment",
															"src": "5680:30:7",
															"value": {
																"arguments": [
																	{
																		"name": "offset",
																		"nativeSrc": "5703:6:7",
																		"nodeType": "YulIdentifier",
																		"src": "5703:6:7"
																	}
																],
																"functionName": {
																	"name": "calldataload",
																	"nativeSrc": "5690:12:7",
																	"nodeType": "YulIdentifier",
																	"src": "5690:12:7"
																},
																"nativeSrc": "5690:20:7",
																"nodeType": "YulFunctionCall",
																"src": "5690:20:7"
															},
															"variableNames": [
																{
																	"name": "length",
																	"nativeSrc": "5680:6:7",
																	"nodeType": "YulIdentifier",
																	"src": "5680:6:7"
																}
															]
														},
														{
															"body": {
																"nativeSrc": "5753:83:7",
																"nodeType": "YulBlock",
																"src": "5753:83:7",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "revert_error_15abf5612cd996bc235ba1e55a4a30ac60e6bb601ff7ba4ad3f179b6be8d0490",
																				"nativeSrc": "5755:77:7",
																				"nodeType": "YulIdentifier",
																				"src": "5755:77:7"
																			},
																			"nativeSrc": "5755:79:7",
																			"nodeType": "YulFunctionCall",
																			"src": "5755:79:7"
																		},
																		"nativeSrc": "5755:79:7",
																		"nodeType": "YulExpressionStatement",
																		"src": "5755:79:7"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "length",
																		"nativeSrc": "5725:6:7",
																		"nodeType": "YulIdentifier",
																		"src": "5725:6:7"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "5733:18:7",
																		"nodeType": "YulLiteral",
																		"src": "5733:18:7",
																		"type": "",
																		"value": "0xffffffffffffffff"
																	}
																],
																"functionName": {
																	"name": "gt",
																	"nativeSrc": "5722:2:7",
																	"nodeType": "YulIdentifier",
																	"src": "5722:2:7"
																},
																"nativeSrc": "5722:30:7",
																"nodeType": "YulFunctionCall",
																"src": "5722:30:7"
															},
															"nativeSrc": "5719:117:7",
															"nodeType": "YulIf",
															"src": "5719:117:7"
														},
														{
															"nativeSrc": "5845:29:7",
															"nodeType": "YulAssignment",
															"src": "5845:29:7",
															"value": {
																"arguments": [
																	{
																		"name": "offset",
																		"nativeSrc": "5861:6:7",
																		"nodeType": "YulIdentifier",
																		"src": "5861:6:7"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "5869:4:7",
																		"nodeType": "YulLiteral",
																		"src": "5869:4:7",
																		"type": "",
																		"value": "0x20"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "5857:3:7",
																	"nodeType": "YulIdentifier",
																	"src": "5857:3:7"
																},
																"nativeSrc": "5857:17:7",
																"nodeType": "YulFunctionCall",
																"src": "5857:17:7"
															},
															"variableNames": [
																{
																	"name": "arrayPos",
																	"nativeSrc": "5845:8:7",
																	"nodeType": "YulIdentifier",
																	"src": "5845:8:7"
																}
															]
														},
														{
															"body": {
																"nativeSrc": "5928:83:7",
																"nodeType": "YulBlock",
																"src": "5928:83:7",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "revert_error_81385d8c0b31fffe14be1da910c8bd3a80be4cfa248e04f42ec0faea3132a8ef",
																				"nativeSrc": "5930:77:7",
																				"nodeType": "YulIdentifier",
																				"src": "5930:77:7"
																			},
																			"nativeSrc": "5930:79:7",
																			"nodeType": "YulFunctionCall",
																			"src": "5930:79:7"
																		},
																		"nativeSrc": "5930:79:7",
																		"nodeType": "YulExpressionStatement",
																		"src": "5930:79:7"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "arrayPos",
																				"nativeSrc": "5893:8:7",
																				"nodeType": "YulIdentifier",
																				"src": "5893:8:7"
																			},
																			{
																				"arguments": [
																					{
																						"name": "length",
																						"nativeSrc": "5907:6:7",
																						"nodeType": "YulIdentifier",
																						"src": "5907:6:7"
																					},
																					{
																						"kind": "number",
																						"nativeSrc": "5915:4:7",
																						"nodeType": "YulLiteral",
																						"src": "5915:4:7",
																						"type": "",
																						"value": "0x01"
																					}
																				],
																				"functionName": {
																					"name": "mul",
																					"nativeSrc": "5903:3:7",
																					"nodeType": "YulIdentifier",
																					"src": "5903:3:7"
																				},
																				"nativeSrc": "5903:17:7",
																				"nodeType": "YulFunctionCall",
																				"src": "5903:17:7"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "5889:3:7",
																			"nodeType": "YulIdentifier",
																			"src": "5889:3:7"
																		},
																		"nativeSrc": "5889:32:7",
																		"nodeType": "YulFunctionCall",
																		"src": "5889:32:7"
																	},
																	{
																		"name": "end",
																		"nativeSrc": "5923:3:7",
																		"nodeType": "YulIdentifier",
																		"src": "5923:3:7"
																	}
																],
																"functionName": {
																	"name": "gt",
																	"nativeSrc": "5886:2:7",
																	"nodeType": "YulIdentifier",
																	"src": "5886:2:7"
																},
																"nativeSrc": "5886:41:7",
																"nodeType": "YulFunctionCall",
																"src": "5886:41:7"
															},
															"nativeSrc": "5883:128:7",
															"nodeType": "YulIf",
															"src": "5883:128:7"
														}
													]
												},
												"name": "abi_decode_t_string_calldata_ptr",
												"nativeSrc": "5464:553:7",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "offset",
														"nativeSrc": "5506:6:7",
														"nodeType": "YulTypedName",
														"src": "5506:6:7",
														"type": ""
													},
													{
														"name": "end",
														"nativeSrc": "5514:3:7",
														"nodeType": "YulTypedName",
														"src": "5514:3:7",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "arrayPos",
														"nativeSrc": "5522:8:7",
														"nodeType": "YulTypedName",
														"src": "5522:8:7",
														"type": ""
													},
													{
														"name": "length",
														"nativeSrc": "5532:6:7",
														"nodeType": "YulTypedName",
														"src": "5532:6:7",
														"type": ""
													}
												],
												"src": "5464:553:7"
											},
											{
												"body": {
													"nativeSrc": "6126:571:7",
													"nodeType": "YulBlock",
													"src": "6126:571:7",
													"statements": [
														{
															"body": {
																"nativeSrc": "6172:83:7",
																"nodeType": "YulBlock",
																"src": "6172:83:7",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b",
																				"nativeSrc": "6174:77:7",
																				"nodeType": "YulIdentifier",
																				"src": "6174:77:7"
																			},
																			"nativeSrc": "6174:79:7",
																			"nodeType": "YulFunctionCall",
																			"src": "6174:79:7"
																		},
																		"nativeSrc": "6174:79:7",
																		"nodeType": "YulExpressionStatement",
																		"src": "6174:79:7"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dataEnd",
																				"nativeSrc": "6147:7:7",
																				"nodeType": "YulIdentifier",
																				"src": "6147:7:7"
																			},
																			{
																				"name": "headStart",
																				"nativeSrc": "6156:9:7",
																				"nodeType": "YulIdentifier",
																				"src": "6156:9:7"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nativeSrc": "6143:3:7",
																			"nodeType": "YulIdentifier",
																			"src": "6143:3:7"
																		},
																		"nativeSrc": "6143:23:7",
																		"nodeType": "YulFunctionCall",
																		"src": "6143:23:7"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "6168:2:7",
																		"nodeType": "YulLiteral",
																		"src": "6168:2:7",
																		"type": "",
																		"value": "64"
																	}
																],
																"functionName": {
																	"name": "slt",
																	"nativeSrc": "6139:3:7",
																	"nodeType": "YulIdentifier",
																	"src": "6139:3:7"
																},
																"nativeSrc": "6139:32:7",
																"nodeType": "YulFunctionCall",
																"src": "6139:32:7"
															},
															"nativeSrc": "6136:119:7",
															"nodeType": "YulIf",
															"src": "6136:119:7"
														},
														{
															"nativeSrc": "6265:297:7",
															"nodeType": "YulBlock",
															"src": "6265:297:7",
															"statements": [
																{
																	"nativeSrc": "6280:45:7",
																	"nodeType": "YulVariableDeclaration",
																	"src": "6280:45:7",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nativeSrc": "6311:9:7",
																						"nodeType": "YulIdentifier",
																						"src": "6311:9:7"
																					},
																					{
																						"kind": "number",
																						"nativeSrc": "6322:1:7",
																						"nodeType": "YulLiteral",
																						"src": "6322:1:7",
																						"type": "",
																						"value": "0"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nativeSrc": "6307:3:7",
																					"nodeType": "YulIdentifier",
																					"src": "6307:3:7"
																				},
																				"nativeSrc": "6307:17:7",
																				"nodeType": "YulFunctionCall",
																				"src": "6307:17:7"
																			}
																		],
																		"functionName": {
																			"name": "calldataload",
																			"nativeSrc": "6294:12:7",
																			"nodeType": "YulIdentifier",
																			"src": "6294:12:7"
																		},
																		"nativeSrc": "6294:31:7",
																		"nodeType": "YulFunctionCall",
																		"src": "6294:31:7"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nativeSrc": "6284:6:7",
																			"nodeType": "YulTypedName",
																			"src": "6284:6:7",
																			"type": ""
																		}
																	]
																},
																{
																	"body": {
																		"nativeSrc": "6372:83:7",
																		"nodeType": "YulBlock",
																		"src": "6372:83:7",
																		"statements": [
																			{
																				"expression": {
																					"arguments": [],
																					"functionName": {
																						"name": "revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db",
																						"nativeSrc": "6374:77:7",
																						"nodeType": "YulIdentifier",
																						"src": "6374:77:7"
																					},
																					"nativeSrc": "6374:79:7",
																					"nodeType": "YulFunctionCall",
																					"src": "6374:79:7"
																				},
																				"nativeSrc": "6374:79:7",
																				"nodeType": "YulExpressionStatement",
																				"src": "6374:79:7"
																			}
																		]
																	},
																	"condition": {
																		"arguments": [
																			{
																				"name": "offset",
																				"nativeSrc": "6344:6:7",
																				"nodeType": "YulIdentifier",
																				"src": "6344:6:7"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "6352:18:7",
																				"nodeType": "YulLiteral",
																				"src": "6352:18:7",
																				"type": "",
																				"value": "0xffffffffffffffff"
																			}
																		],
																		"functionName": {
																			"name": "gt",
																			"nativeSrc": "6341:2:7",
																			"nodeType": "YulIdentifier",
																			"src": "6341:2:7"
																		},
																		"nativeSrc": "6341:30:7",
																		"nodeType": "YulFunctionCall",
																		"src": "6341:30:7"
																	},
																	"nativeSrc": "6338:117:7",
																	"nodeType": "YulIf",
																	"src": "6338:117:7"
																},
																{
																	"nativeSrc": "6469:83:7",
																	"nodeType": "YulAssignment",
																	"src": "6469:83:7",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nativeSrc": "6524:9:7",
																						"nodeType": "YulIdentifier",
																						"src": "6524:9:7"
																					},
																					{
																						"name": "offset",
																						"nativeSrc": "6535:6:7",
																						"nodeType": "YulIdentifier",
																						"src": "6535:6:7"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nativeSrc": "6520:3:7",
																					"nodeType": "YulIdentifier",
																					"src": "6520:3:7"
																				},
																				"nativeSrc": "6520:22:7",
																				"nodeType": "YulFunctionCall",
																				"src": "6520:22:7"
																			},
																			{
																				"name": "dataEnd",
																				"nativeSrc": "6544:7:7",
																				"nodeType": "YulIdentifier",
																				"src": "6544:7:7"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_string_calldata_ptr",
																			"nativeSrc": "6487:32:7",
																			"nodeType": "YulIdentifier",
																			"src": "6487:32:7"
																		},
																		"nativeSrc": "6487:65:7",
																		"nodeType": "YulFunctionCall",
																		"src": "6487:65:7"
																	},
																	"variableNames": [
																		{
																			"name": "value0",
																			"nativeSrc": "6469:6:7",
																			"nodeType": "YulIdentifier",
																			"src": "6469:6:7"
																		},
																		{
																			"name": "value1",
																			"nativeSrc": "6477:6:7",
																			"nodeType": "YulIdentifier",
																			"src": "6477:6:7"
																		}
																	]
																}
															]
														},
														{
															"nativeSrc": "6572:118:7",
															"nodeType": "YulBlock",
															"src": "6572:118:7",
															"statements": [
																{
																	"nativeSrc": "6587:16:7",
																	"nodeType": "YulVariableDeclaration",
																	"src": "6587:16:7",
																	"value": {
																		"kind": "number",
																		"nativeSrc": "6601:2:7",
																		"nodeType": "YulLiteral",
																		"src": "6601:2:7",
																		"type": "",
																		"value": "32"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nativeSrc": "6591:6:7",
																			"nodeType": "YulTypedName",
																			"src": "6591:6:7",
																			"type": ""
																		}
																	]
																},
																{
																	"nativeSrc": "6617:63:7",
																	"nodeType": "YulAssignment",
																	"src": "6617:63:7",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nativeSrc": "6652:9:7",
																						"nodeType": "YulIdentifier",
																						"src": "6652:9:7"
																					},
																					{
																						"name": "offset",
																						"nativeSrc": "6663:6:7",
																						"nodeType": "YulIdentifier",
																						"src": "6663:6:7"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nativeSrc": "6648:3:7",
																					"nodeType": "YulIdentifier",
																					"src": "6648:3:7"
																				},
																				"nativeSrc": "6648:22:7",
																				"nodeType": "YulFunctionCall",
																				"src": "6648:22:7"
																			},
																			{
																				"name": "dataEnd",
																				"nativeSrc": "6672:7:7",
																				"nodeType": "YulIdentifier",
																				"src": "6672:7:7"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_uint256",
																			"nativeSrc": "6627:20:7",
																			"nodeType": "YulIdentifier",
																			"src": "6627:20:7"
																		},
																		"nativeSrc": "6627:53:7",
																		"nodeType": "YulFunctionCall",
																		"src": "6627:53:7"
																	},
																	"variableNames": [
																		{
																			"name": "value2",
																			"nativeSrc": "6617:6:7",
																			"nodeType": "YulIdentifier",
																			"src": "6617:6:7"
																		}
																	]
																}
															]
														}
													]
												},
												"name": "abi_decode_tuple_t_string_calldata_ptrt_uint256",
												"nativeSrc": "6023:674:7",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "6080:9:7",
														"nodeType": "YulTypedName",
														"src": "6080:9:7",
														"type": ""
													},
													{
														"name": "dataEnd",
														"nativeSrc": "6091:7:7",
														"nodeType": "YulTypedName",
														"src": "6091:7:7",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value0",
														"nativeSrc": "6103:6:7",
														"nodeType": "YulTypedName",
														"src": "6103:6:7",
														"type": ""
													},
													{
														"name": "value1",
														"nativeSrc": "6111:6:7",
														"nodeType": "YulTypedName",
														"src": "6111:6:7",
														"type": ""
													},
													{
														"name": "value2",
														"nativeSrc": "6119:6:7",
														"nodeType": "YulTypedName",
														"src": "6119:6:7",
														"type": ""
													}
												],
												"src": "6023:674:7"
											},
											{
												"body": {
													"nativeSrc": "6755:56:7",
													"nodeType": "YulBlock",
													"src": "6755:56:7",
													"statements": [
														{
															"body": {
																"nativeSrc": "6789:16:7",
																"nodeType": "YulBlock",
																"src": "6789:16:7",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nativeSrc": "6798:1:7",
																					"nodeType": "YulLiteral",
																					"src": "6798:1:7",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nativeSrc": "6801:1:7",
																					"nodeType": "YulLiteral",
																					"src": "6801:1:7",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nativeSrc": "6791:6:7",
																				"nodeType": "YulIdentifier",
																				"src": "6791:6:7"
																			},
																			"nativeSrc": "6791:12:7",
																			"nodeType": "YulFunctionCall",
																			"src": "6791:12:7"
																		},
																		"nativeSrc": "6791:12:7",
																		"nodeType": "YulExpressionStatement",
																		"src": "6791:12:7"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nativeSrc": "6778:5:7",
																				"nodeType": "YulIdentifier",
																				"src": "6778:5:7"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "6785:1:7",
																				"nodeType": "YulLiteral",
																				"src": "6785:1:7",
																				"type": "",
																				"value": "3"
																			}
																		],
																		"functionName": {
																			"name": "lt",
																			"nativeSrc": "6775:2:7",
																			"nodeType": "YulIdentifier",
																			"src": "6775:2:7"
																		},
																		"nativeSrc": "6775:12:7",
																		"nodeType": "YulFunctionCall",
																		"src": "6775:12:7"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nativeSrc": "6768:6:7",
																	"nodeType": "YulIdentifier",
																	"src": "6768:6:7"
																},
																"nativeSrc": "6768:20:7",
																"nodeType": "YulFunctionCall",
																"src": "6768:20:7"
															},
															"nativeSrc": "6765:40:7",
															"nodeType": "YulIf",
															"src": "6765:40:7"
														}
													]
												},
												"name": "validator_revert_t_enum$_Vote_$1467",
												"nativeSrc": "6703:108:7",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "6748:5:7",
														"nodeType": "YulTypedName",
														"src": "6748:5:7",
														"type": ""
													}
												],
												"src": "6703:108:7"
											},
											{
												"body": {
													"nativeSrc": "6878:96:7",
													"nodeType": "YulBlock",
													"src": "6878:96:7",
													"statements": [
														{
															"nativeSrc": "6888:29:7",
															"nodeType": "YulAssignment",
															"src": "6888:29:7",
															"value": {
																"arguments": [
																	{
																		"name": "offset",
																		"nativeSrc": "6910:6:7",
																		"nodeType": "YulIdentifier",
																		"src": "6910:6:7"
																	}
																],
																"functionName": {
																	"name": "calldataload",
																	"nativeSrc": "6897:12:7",
																	"nodeType": "YulIdentifier",
																	"src": "6897:12:7"
																},
																"nativeSrc": "6897:20:7",
																"nodeType": "YulFunctionCall",
																"src": "6897:20:7"
															},
															"variableNames": [
																{
																	"name": "value",
																	"nativeSrc": "6888:5:7",
																	"nodeType": "YulIdentifier",
																	"src": "6888:5:7"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value",
																		"nativeSrc": "6962:5:7",
																		"nodeType": "YulIdentifier",
																		"src": "6962:5:7"
																	}
																],
																"functionName": {
																	"name": "validator_revert_t_enum$_Vote_$1467",
																	"nativeSrc": "6926:35:7",
																	"nodeType": "YulIdentifier",
																	"src": "6926:35:7"
																},
																"nativeSrc": "6926:42:7",
																"nodeType": "YulFunctionCall",
																"src": "6926:42:7"
															},
															"nativeSrc": "6926:42:7",
															"nodeType": "YulExpressionStatement",
															"src": "6926:42:7"
														}
													]
												},
												"name": "abi_decode_t_enum$_Vote_$1467",
												"nativeSrc": "6817:157:7",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "offset",
														"nativeSrc": "6856:6:7",
														"nodeType": "YulTypedName",
														"src": "6856:6:7",
														"type": ""
													},
													{
														"name": "end",
														"nativeSrc": "6864:3:7",
														"nodeType": "YulTypedName",
														"src": "6864:3:7",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value",
														"nativeSrc": "6872:5:7",
														"nodeType": "YulTypedName",
														"src": "6872:5:7",
														"type": ""
													}
												],
												"src": "6817:157:7"
											},
											{
												"body": {
													"nativeSrc": "7072:400:7",
													"nodeType": "YulBlock",
													"src": "7072:400:7",
													"statements": [
														{
															"body": {
																"nativeSrc": "7118:83:7",
																"nodeType": "YulBlock",
																"src": "7118:83:7",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b",
																				"nativeSrc": "7120:77:7",
																				"nodeType": "YulIdentifier",
																				"src": "7120:77:7"
																			},
																			"nativeSrc": "7120:79:7",
																			"nodeType": "YulFunctionCall",
																			"src": "7120:79:7"
																		},
																		"nativeSrc": "7120:79:7",
																		"nodeType": "YulExpressionStatement",
																		"src": "7120:79:7"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dataEnd",
																				"nativeSrc": "7093:7:7",
																				"nodeType": "YulIdentifier",
																				"src": "7093:7:7"
																			},
																			{
																				"name": "headStart",
																				"nativeSrc": "7102:9:7",
																				"nodeType": "YulIdentifier",
																				"src": "7102:9:7"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nativeSrc": "7089:3:7",
																			"nodeType": "YulIdentifier",
																			"src": "7089:3:7"
																		},
																		"nativeSrc": "7089:23:7",
																		"nodeType": "YulFunctionCall",
																		"src": "7089:23:7"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "7114:2:7",
																		"nodeType": "YulLiteral",
																		"src": "7114:2:7",
																		"type": "",
																		"value": "64"
																	}
																],
																"functionName": {
																	"name": "slt",
																	"nativeSrc": "7085:3:7",
																	"nodeType": "YulIdentifier",
																	"src": "7085:3:7"
																},
																"nativeSrc": "7085:32:7",
																"nodeType": "YulFunctionCall",
																"src": "7085:32:7"
															},
															"nativeSrc": "7082:119:7",
															"nodeType": "YulIf",
															"src": "7082:119:7"
														},
														{
															"nativeSrc": "7211:117:7",
															"nodeType": "YulBlock",
															"src": "7211:117:7",
															"statements": [
																{
																	"nativeSrc": "7226:15:7",
																	"nodeType": "YulVariableDeclaration",
																	"src": "7226:15:7",
																	"value": {
																		"kind": "number",
																		"nativeSrc": "7240:1:7",
																		"nodeType": "YulLiteral",
																		"src": "7240:1:7",
																		"type": "",
																		"value": "0"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nativeSrc": "7230:6:7",
																			"nodeType": "YulTypedName",
																			"src": "7230:6:7",
																			"type": ""
																		}
																	]
																},
																{
																	"nativeSrc": "7255:63:7",
																	"nodeType": "YulAssignment",
																	"src": "7255:63:7",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nativeSrc": "7290:9:7",
																						"nodeType": "YulIdentifier",
																						"src": "7290:9:7"
																					},
																					{
																						"name": "offset",
																						"nativeSrc": "7301:6:7",
																						"nodeType": "YulIdentifier",
																						"src": "7301:6:7"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nativeSrc": "7286:3:7",
																					"nodeType": "YulIdentifier",
																					"src": "7286:3:7"
																				},
																				"nativeSrc": "7286:22:7",
																				"nodeType": "YulFunctionCall",
																				"src": "7286:22:7"
																			},
																			{
																				"name": "dataEnd",
																				"nativeSrc": "7310:7:7",
																				"nodeType": "YulIdentifier",
																				"src": "7310:7:7"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_uint256",
																			"nativeSrc": "7265:20:7",
																			"nodeType": "YulIdentifier",
																			"src": "7265:20:7"
																		},
																		"nativeSrc": "7265:53:7",
																		"nodeType": "YulFunctionCall",
																		"src": "7265:53:7"
																	},
																	"variableNames": [
																		{
																			"name": "value0",
																			"nativeSrc": "7255:6:7",
																			"nodeType": "YulIdentifier",
																			"src": "7255:6:7"
																		}
																	]
																}
															]
														},
														{
															"nativeSrc": "7338:127:7",
															"nodeType": "YulBlock",
															"src": "7338:127:7",
															"statements": [
																{
																	"nativeSrc": "7353:16:7",
																	"nodeType": "YulVariableDeclaration",
																	"src": "7353:16:7",
																	"value": {
																		"kind": "number",
																		"nativeSrc": "7367:2:7",
																		"nodeType": "YulLiteral",
																		"src": "7367:2:7",
																		"type": "",
																		"value": "32"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nativeSrc": "7357:6:7",
																			"nodeType": "YulTypedName",
																			"src": "7357:6:7",
																			"type": ""
																		}
																	]
																},
																{
																	"nativeSrc": "7383:72:7",
																	"nodeType": "YulAssignment",
																	"src": "7383:72:7",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nativeSrc": "7427:9:7",
																						"nodeType": "YulIdentifier",
																						"src": "7427:9:7"
																					},
																					{
																						"name": "offset",
																						"nativeSrc": "7438:6:7",
																						"nodeType": "YulIdentifier",
																						"src": "7438:6:7"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nativeSrc": "7423:3:7",
																					"nodeType": "YulIdentifier",
																					"src": "7423:3:7"
																				},
																				"nativeSrc": "7423:22:7",
																				"nodeType": "YulFunctionCall",
																				"src": "7423:22:7"
																			},
																			{
																				"name": "dataEnd",
																				"nativeSrc": "7447:7:7",
																				"nodeType": "YulIdentifier",
																				"src": "7447:7:7"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_enum$_Vote_$1467",
																			"nativeSrc": "7393:29:7",
																			"nodeType": "YulIdentifier",
																			"src": "7393:29:7"
																		},
																		"nativeSrc": "7393:62:7",
																		"nodeType": "YulFunctionCall",
																		"src": "7393:62:7"
																	},
																	"variableNames": [
																		{
																			"name": "value1",
																			"nativeSrc": "7383:6:7",
																			"nodeType": "YulIdentifier",
																			"src": "7383:6:7"
																		}
																	]
																}
															]
														}
													]
												},
												"name": "abi_decode_tuple_t_uint256t_enum$_Vote_$1467",
												"nativeSrc": "6980:492:7",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "7034:9:7",
														"nodeType": "YulTypedName",
														"src": "7034:9:7",
														"type": ""
													},
													{
														"name": "dataEnd",
														"nativeSrc": "7045:7:7",
														"nodeType": "YulTypedName",
														"src": "7045:7:7",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value0",
														"nativeSrc": "7057:6:7",
														"nodeType": "YulTypedName",
														"src": "7057:6:7",
														"type": ""
													},
													{
														"name": "value1",
														"nativeSrc": "7065:6:7",
														"nodeType": "YulTypedName",
														"src": "7065:6:7",
														"type": ""
													}
												],
												"src": "6980:492:7"
											},
											{
												"body": {
													"nativeSrc": "7544:263:7",
													"nodeType": "YulBlock",
													"src": "7544:263:7",
													"statements": [
														{
															"body": {
																"nativeSrc": "7590:83:7",
																"nodeType": "YulBlock",
																"src": "7590:83:7",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b",
																				"nativeSrc": "7592:77:7",
																				"nodeType": "YulIdentifier",
																				"src": "7592:77:7"
																			},
																			"nativeSrc": "7592:79:7",
																			"nodeType": "YulFunctionCall",
																			"src": "7592:79:7"
																		},
																		"nativeSrc": "7592:79:7",
																		"nodeType": "YulExpressionStatement",
																		"src": "7592:79:7"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dataEnd",
																				"nativeSrc": "7565:7:7",
																				"nodeType": "YulIdentifier",
																				"src": "7565:7:7"
																			},
																			{
																				"name": "headStart",
																				"nativeSrc": "7574:9:7",
																				"nodeType": "YulIdentifier",
																				"src": "7574:9:7"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nativeSrc": "7561:3:7",
																			"nodeType": "YulIdentifier",
																			"src": "7561:3:7"
																		},
																		"nativeSrc": "7561:23:7",
																		"nodeType": "YulFunctionCall",
																		"src": "7561:23:7"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "7586:2:7",
																		"nodeType": "YulLiteral",
																		"src": "7586:2:7",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "slt",
																	"nativeSrc": "7557:3:7",
																	"nodeType": "YulIdentifier",
																	"src": "7557:3:7"
																},
																"nativeSrc": "7557:32:7",
																"nodeType": "YulFunctionCall",
																"src": "7557:32:7"
															},
															"nativeSrc": "7554:119:7",
															"nodeType": "YulIf",
															"src": "7554:119:7"
														},
														{
															"nativeSrc": "7683:117:7",
															"nodeType": "YulBlock",
															"src": "7683:117:7",
															"statements": [
																{
																	"nativeSrc": "7698:15:7",
																	"nodeType": "YulVariableDeclaration",
																	"src": "7698:15:7",
																	"value": {
																		"kind": "number",
																		"nativeSrc": "7712:1:7",
																		"nodeType": "YulLiteral",
																		"src": "7712:1:7",
																		"type": "",
																		"value": "0"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nativeSrc": "7702:6:7",
																			"nodeType": "YulTypedName",
																			"src": "7702:6:7",
																			"type": ""
																		}
																	]
																},
																{
																	"nativeSrc": "7727:63:7",
																	"nodeType": "YulAssignment",
																	"src": "7727:63:7",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nativeSrc": "7762:9:7",
																						"nodeType": "YulIdentifier",
																						"src": "7762:9:7"
																					},
																					{
																						"name": "offset",
																						"nativeSrc": "7773:6:7",
																						"nodeType": "YulIdentifier",
																						"src": "7773:6:7"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nativeSrc": "7758:3:7",
																					"nodeType": "YulIdentifier",
																					"src": "7758:3:7"
																				},
																				"nativeSrc": "7758:22:7",
																				"nodeType": "YulFunctionCall",
																				"src": "7758:22:7"
																			},
																			{
																				"name": "dataEnd",
																				"nativeSrc": "7782:7:7",
																				"nodeType": "YulIdentifier",
																				"src": "7782:7:7"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_uint256",
																			"nativeSrc": "7737:20:7",
																			"nodeType": "YulIdentifier",
																			"src": "7737:20:7"
																		},
																		"nativeSrc": "7737:53:7",
																		"nodeType": "YulFunctionCall",
																		"src": "7737:53:7"
																	},
																	"variableNames": [
																		{
																			"name": "value0",
																			"nativeSrc": "7727:6:7",
																			"nodeType": "YulIdentifier",
																			"src": "7727:6:7"
																		}
																	]
																}
															]
														}
													]
												},
												"name": "abi_decode_tuple_t_uint256",
												"nativeSrc": "7478:329:7",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "7514:9:7",
														"nodeType": "YulTypedName",
														"src": "7514:9:7",
														"type": ""
													},
													{
														"name": "dataEnd",
														"nativeSrc": "7525:7:7",
														"nodeType": "YulTypedName",
														"src": "7525:7:7",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value0",
														"nativeSrc": "7537:6:7",
														"nodeType": "YulTypedName",
														"src": "7537:6:7",
														"type": ""
													}
												],
												"src": "7478:329:7"
											},
											{
												"body": {
													"nativeSrc": "7887:40:7",
													"nodeType": "YulBlock",
													"src": "7887:40:7",
													"statements": [
														{
															"nativeSrc": "7898:22:7",
															"nodeType": "YulAssignment",
															"src": "7898:22:7",
															"value": {
																"arguments": [
																	{
																		"name": "value",
																		"nativeSrc": "7914:5:7",
																		"nodeType": "YulIdentifier",
																		"src": "7914:5:7"
																	}
																],
																"functionName": {
																	"name": "mload",
																	"nativeSrc": "7908:5:7",
																	"nodeType": "YulIdentifier",
																	"src": "7908:5:7"
																},
																"nativeSrc": "7908:12:7",
																"nodeType": "YulFunctionCall",
																"src": "7908:12:7"
															},
															"variableNames": [
																{
																	"name": "length",
																	"nativeSrc": "7898:6:7",
																	"nodeType": "YulIdentifier",
																	"src": "7898:6:7"
																}
															]
														}
													]
												},
												"name": "array_length_t_array$_t_address_$dyn_memory_ptr",
												"nativeSrc": "7813:114:7",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "7870:5:7",
														"nodeType": "YulTypedName",
														"src": "7870:5:7",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "length",
														"nativeSrc": "7880:6:7",
														"nodeType": "YulTypedName",
														"src": "7880:6:7",
														"type": ""
													}
												],
												"src": "7813:114:7"
											},
											{
												"body": {
													"nativeSrc": "8034:73:7",
													"nodeType": "YulBlock",
													"src": "8034:73:7",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "8051:3:7",
																		"nodeType": "YulIdentifier",
																		"src": "8051:3:7"
																	},
																	{
																		"name": "length",
																		"nativeSrc": "8056:6:7",
																		"nodeType": "YulIdentifier",
																		"src": "8056:6:7"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "8044:6:7",
																	"nodeType": "YulIdentifier",
																	"src": "8044:6:7"
																},
																"nativeSrc": "8044:19:7",
																"nodeType": "YulFunctionCall",
																"src": "8044:19:7"
															},
															"nativeSrc": "8044:19:7",
															"nodeType": "YulExpressionStatement",
															"src": "8044:19:7"
														},
														{
															"nativeSrc": "8072:29:7",
															"nodeType": "YulAssignment",
															"src": "8072:29:7",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "8091:3:7",
																		"nodeType": "YulIdentifier",
																		"src": "8091:3:7"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "8096:4:7",
																		"nodeType": "YulLiteral",
																		"src": "8096:4:7",
																		"type": "",
																		"value": "0x20"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "8087:3:7",
																	"nodeType": "YulIdentifier",
																	"src": "8087:3:7"
																},
																"nativeSrc": "8087:14:7",
																"nodeType": "YulFunctionCall",
																"src": "8087:14:7"
															},
															"variableNames": [
																{
																	"name": "updated_pos",
																	"nativeSrc": "8072:11:7",
																	"nodeType": "YulIdentifier",
																	"src": "8072:11:7"
																}
															]
														}
													]
												},
												"name": "array_storeLengthForEncoding_t_array$_t_address_$dyn_memory_ptr",
												"nativeSrc": "7933:174:7",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "pos",
														"nativeSrc": "8006:3:7",
														"nodeType": "YulTypedName",
														"src": "8006:3:7",
														"type": ""
													},
													{
														"name": "length",
														"nativeSrc": "8011:6:7",
														"nodeType": "YulTypedName",
														"src": "8011:6:7",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "updated_pos",
														"nativeSrc": "8022:11:7",
														"nodeType": "YulTypedName",
														"src": "8022:11:7",
														"type": ""
													}
												],
												"src": "7933:174:7"
											},
											{
												"body": {
													"nativeSrc": "8185:60:7",
													"nodeType": "YulBlock",
													"src": "8185:60:7",
													"statements": [
														{
															"nativeSrc": "8195:11:7",
															"nodeType": "YulAssignment",
															"src": "8195:11:7",
															"value": {
																"name": "ptr",
																"nativeSrc": "8203:3:7",
																"nodeType": "YulIdentifier",
																"src": "8203:3:7"
															},
															"variableNames": [
																{
																	"name": "data",
																	"nativeSrc": "8195:4:7",
																	"nodeType": "YulIdentifier",
																	"src": "8195:4:7"
																}
															]
														},
														{
															"nativeSrc": "8216:22:7",
															"nodeType": "YulAssignment",
															"src": "8216:22:7",
															"value": {
																"arguments": [
																	{
																		"name": "ptr",
																		"nativeSrc": "8228:3:7",
																		"nodeType": "YulIdentifier",
																		"src": "8228:3:7"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "8233:4:7",
																		"nodeType": "YulLiteral",
																		"src": "8233:4:7",
																		"type": "",
																		"value": "0x20"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "8224:3:7",
																	"nodeType": "YulIdentifier",
																	"src": "8224:3:7"
																},
																"nativeSrc": "8224:14:7",
																"nodeType": "YulFunctionCall",
																"src": "8224:14:7"
															},
															"variableNames": [
																{
																	"name": "data",
																	"nativeSrc": "8216:4:7",
																	"nodeType": "YulIdentifier",
																	"src": "8216:4:7"
																}
															]
														}
													]
												},
												"name": "array_dataslot_t_array$_t_address_$dyn_memory_ptr",
												"nativeSrc": "8113:132:7",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "ptr",
														"nativeSrc": "8172:3:7",
														"nodeType": "YulTypedName",
														"src": "8172:3:7",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "data",
														"nativeSrc": "8180:4:7",
														"nodeType": "YulTypedName",
														"src": "8180:4:7",
														"type": ""
													}
												],
												"src": "8113:132:7"
											},
											{
												"body": {
													"nativeSrc": "8306:53:7",
													"nodeType": "YulBlock",
													"src": "8306:53:7",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "8323:3:7",
																		"nodeType": "YulIdentifier",
																		"src": "8323:3:7"
																	},
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nativeSrc": "8346:5:7",
																				"nodeType": "YulIdentifier",
																				"src": "8346:5:7"
																			}
																		],
																		"functionName": {
																			"name": "cleanup_t_address",
																			"nativeSrc": "8328:17:7",
																			"nodeType": "YulIdentifier",
																			"src": "8328:17:7"
																		},
																		"nativeSrc": "8328:24:7",
																		"nodeType": "YulFunctionCall",
																		"src": "8328:24:7"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "8316:6:7",
																	"nodeType": "YulIdentifier",
																	"src": "8316:6:7"
																},
																"nativeSrc": "8316:37:7",
																"nodeType": "YulFunctionCall",
																"src": "8316:37:7"
															},
															"nativeSrc": "8316:37:7",
															"nodeType": "YulExpressionStatement",
															"src": "8316:37:7"
														}
													]
												},
												"name": "abi_encode_t_address_to_t_address",
												"nativeSrc": "8251:108:7",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "8294:5:7",
														"nodeType": "YulTypedName",
														"src": "8294:5:7",
														"type": ""
													},
													{
														"name": "pos",
														"nativeSrc": "8301:3:7",
														"nodeType": "YulTypedName",
														"src": "8301:3:7",
														"type": ""
													}
												],
												"src": "8251:108:7"
											},
											{
												"body": {
													"nativeSrc": "8445:99:7",
													"nodeType": "YulBlock",
													"src": "8445:99:7",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value0",
																		"nativeSrc": "8489:6:7",
																		"nodeType": "YulIdentifier",
																		"src": "8489:6:7"
																	},
																	{
																		"name": "pos",
																		"nativeSrc": "8497:3:7",
																		"nodeType": "YulIdentifier",
																		"src": "8497:3:7"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_address_to_t_address",
																	"nativeSrc": "8455:33:7",
																	"nodeType": "YulIdentifier",
																	"src": "8455:33:7"
																},
																"nativeSrc": "8455:46:7",
																"nodeType": "YulFunctionCall",
																"src": "8455:46:7"
															},
															"nativeSrc": "8455:46:7",
															"nodeType": "YulExpressionStatement",
															"src": "8455:46:7"
														},
														{
															"nativeSrc": "8510:28:7",
															"nodeType": "YulAssignment",
															"src": "8510:28:7",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "8528:3:7",
																		"nodeType": "YulIdentifier",
																		"src": "8528:3:7"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "8533:4:7",
																		"nodeType": "YulLiteral",
																		"src": "8533:4:7",
																		"type": "",
																		"value": "0x20"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "8524:3:7",
																	"nodeType": "YulIdentifier",
																	"src": "8524:3:7"
																},
																"nativeSrc": "8524:14:7",
																"nodeType": "YulFunctionCall",
																"src": "8524:14:7"
															},
															"variableNames": [
																{
																	"name": "updatedPos",
																	"nativeSrc": "8510:10:7",
																	"nodeType": "YulIdentifier",
																	"src": "8510:10:7"
																}
															]
														}
													]
												},
												"name": "abi_encodeUpdatedPos_t_address_to_t_address",
												"nativeSrc": "8365:179:7",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value0",
														"nativeSrc": "8418:6:7",
														"nodeType": "YulTypedName",
														"src": "8418:6:7",
														"type": ""
													},
													{
														"name": "pos",
														"nativeSrc": "8426:3:7",
														"nodeType": "YulTypedName",
														"src": "8426:3:7",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "updatedPos",
														"nativeSrc": "8434:10:7",
														"nodeType": "YulTypedName",
														"src": "8434:10:7",
														"type": ""
													}
												],
												"src": "8365:179:7"
											},
											{
												"body": {
													"nativeSrc": "8625:38:7",
													"nodeType": "YulBlock",
													"src": "8625:38:7",
													"statements": [
														{
															"nativeSrc": "8635:22:7",
															"nodeType": "YulAssignment",
															"src": "8635:22:7",
															"value": {
																"arguments": [
																	{
																		"name": "ptr",
																		"nativeSrc": "8647:3:7",
																		"nodeType": "YulIdentifier",
																		"src": "8647:3:7"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "8652:4:7",
																		"nodeType": "YulLiteral",
																		"src": "8652:4:7",
																		"type": "",
																		"value": "0x20"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "8643:3:7",
																	"nodeType": "YulIdentifier",
																	"src": "8643:3:7"
																},
																"nativeSrc": "8643:14:7",
																"nodeType": "YulFunctionCall",
																"src": "8643:14:7"
															},
															"variableNames": [
																{
																	"name": "next",
																	"nativeSrc": "8635:4:7",
																	"nodeType": "YulIdentifier",
																	"src": "8635:4:7"
																}
															]
														}
													]
												},
												"name": "array_nextElement_t_array$_t_address_$dyn_memory_ptr",
												"nativeSrc": "8550:113:7",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "ptr",
														"nativeSrc": "8612:3:7",
														"nodeType": "YulTypedName",
														"src": "8612:3:7",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "next",
														"nativeSrc": "8620:4:7",
														"nodeType": "YulTypedName",
														"src": "8620:4:7",
														"type": ""
													}
												],
												"src": "8550:113:7"
											},
											{
												"body": {
													"nativeSrc": "8813:598:7",
													"nodeType": "YulBlock",
													"src": "8813:598:7",
													"statements": [
														{
															"nativeSrc": "8823:68:7",
															"nodeType": "YulVariableDeclaration",
															"src": "8823:68:7",
															"value": {
																"arguments": [
																	{
																		"name": "value",
																		"nativeSrc": "8885:5:7",
																		"nodeType": "YulIdentifier",
																		"src": "8885:5:7"
																	}
																],
																"functionName": {
																	"name": "array_length_t_array$_t_address_$dyn_memory_ptr",
																	"nativeSrc": "8837:47:7",
																	"nodeType": "YulIdentifier",
																	"src": "8837:47:7"
																},
																"nativeSrc": "8837:54:7",
																"nodeType": "YulFunctionCall",
																"src": "8837:54:7"
															},
															"variables": [
																{
																	"name": "length",
																	"nativeSrc": "8827:6:7",
																	"nodeType": "YulTypedName",
																	"src": "8827:6:7",
																	"type": ""
																}
															]
														},
														{
															"nativeSrc": "8900:83:7",
															"nodeType": "YulAssignment",
															"src": "8900:83:7",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "8971:3:7",
																		"nodeType": "YulIdentifier",
																		"src": "8971:3:7"
																	},
																	{
																		"name": "length",
																		"nativeSrc": "8976:6:7",
																		"nodeType": "YulIdentifier",
																		"src": "8976:6:7"
																	}
																],
																"functionName": {
																	"name": "array_storeLengthForEncoding_t_array$_t_address_$dyn_memory_ptr",
																	"nativeSrc": "8907:63:7",
																	"nodeType": "YulIdentifier",
																	"src": "8907:63:7"
																},
																"nativeSrc": "8907:76:7",
																"nodeType": "YulFunctionCall",
																"src": "8907:76:7"
															},
															"variableNames": [
																{
																	"name": "pos",
																	"nativeSrc": "8900:3:7",
																	"nodeType": "YulIdentifier",
																	"src": "8900:3:7"
																}
															]
														},
														{
															"nativeSrc": "8992:71:7",
															"nodeType": "YulVariableDeclaration",
															"src": "8992:71:7",
															"value": {
																"arguments": [
																	{
																		"name": "value",
																		"nativeSrc": "9057:5:7",
																		"nodeType": "YulIdentifier",
																		"src": "9057:5:7"
																	}
																],
																"functionName": {
																	"name": "array_dataslot_t_array$_t_address_$dyn_memory_ptr",
																	"nativeSrc": "9007:49:7",
																	"nodeType": "YulIdentifier",
																	"src": "9007:49:7"
																},
																"nativeSrc": "9007:56:7",
																"nodeType": "YulFunctionCall",
																"src": "9007:56:7"
															},
															"variables": [
																{
																	"name": "baseRef",
																	"nativeSrc": "8996:7:7",
																	"nodeType": "YulTypedName",
																	"src": "8996:7:7",
																	"type": ""
																}
															]
														},
														{
															"nativeSrc": "9072:21:7",
															"nodeType": "YulVariableDeclaration",
															"src": "9072:21:7",
															"value": {
																"name": "baseRef",
																"nativeSrc": "9086:7:7",
																"nodeType": "YulIdentifier",
																"src": "9086:7:7"
															},
															"variables": [
																{
																	"name": "srcPtr",
																	"nativeSrc": "9076:6:7",
																	"nodeType": "YulTypedName",
																	"src": "9076:6:7",
																	"type": ""
																}
															]
														},
														{
															"body": {
																"nativeSrc": "9162:224:7",
																"nodeType": "YulBlock",
																"src": "9162:224:7",
																"statements": [
																	{
																		"nativeSrc": "9176:34:7",
																		"nodeType": "YulVariableDeclaration",
																		"src": "9176:34:7",
																		"value": {
																			"arguments": [
																				{
																					"name": "srcPtr",
																					"nativeSrc": "9203:6:7",
																					"nodeType": "YulIdentifier",
																					"src": "9203:6:7"
																				}
																			],
																			"functionName": {
																				"name": "mload",
																				"nativeSrc": "9197:5:7",
																				"nodeType": "YulIdentifier",
																				"src": "9197:5:7"
																			},
																			"nativeSrc": "9197:13:7",
																			"nodeType": "YulFunctionCall",
																			"src": "9197:13:7"
																		},
																		"variables": [
																			{
																				"name": "elementValue0",
																				"nativeSrc": "9180:13:7",
																				"nodeType": "YulTypedName",
																				"src": "9180:13:7",
																				"type": ""
																			}
																		]
																	},
																	{
																		"nativeSrc": "9223:70:7",
																		"nodeType": "YulAssignment",
																		"src": "9223:70:7",
																		"value": {
																			"arguments": [
																				{
																					"name": "elementValue0",
																					"nativeSrc": "9274:13:7",
																					"nodeType": "YulIdentifier",
																					"src": "9274:13:7"
																				},
																				{
																					"name": "pos",
																					"nativeSrc": "9289:3:7",
																					"nodeType": "YulIdentifier",
																					"src": "9289:3:7"
																				}
																			],
																			"functionName": {
																				"name": "abi_encodeUpdatedPos_t_address_to_t_address",
																				"nativeSrc": "9230:43:7",
																				"nodeType": "YulIdentifier",
																				"src": "9230:43:7"
																			},
																			"nativeSrc": "9230:63:7",
																			"nodeType": "YulFunctionCall",
																			"src": "9230:63:7"
																		},
																		"variableNames": [
																			{
																				"name": "pos",
																				"nativeSrc": "9223:3:7",
																				"nodeType": "YulIdentifier",
																				"src": "9223:3:7"
																			}
																		]
																	},
																	{
																		"nativeSrc": "9306:70:7",
																		"nodeType": "YulAssignment",
																		"src": "9306:70:7",
																		"value": {
																			"arguments": [
																				{
																					"name": "srcPtr",
																					"nativeSrc": "9369:6:7",
																					"nodeType": "YulIdentifier",
																					"src": "9369:6:7"
																				}
																			],
																			"functionName": {
																				"name": "array_nextElement_t_array$_t_address_$dyn_memory_ptr",
																				"nativeSrc": "9316:52:7",
																				"nodeType": "YulIdentifier",
																				"src": "9316:52:7"
																			},
																			"nativeSrc": "9316:60:7",
																			"nodeType": "YulFunctionCall",
																			"src": "9316:60:7"
																		},
																		"variableNames": [
																			{
																				"name": "srcPtr",
																				"nativeSrc": "9306:6:7",
																				"nodeType": "YulIdentifier",
																				"src": "9306:6:7"
																			}
																		]
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "i",
																		"nativeSrc": "9124:1:7",
																		"nodeType": "YulIdentifier",
																		"src": "9124:1:7"
																	},
																	{
																		"name": "length",
																		"nativeSrc": "9127:6:7",
																		"nodeType": "YulIdentifier",
																		"src": "9127:6:7"
																	}
																],
																"functionName": {
																	"name": "lt",
																	"nativeSrc": "9121:2:7",
																	"nodeType": "YulIdentifier",
																	"src": "9121:2:7"
																},
																"nativeSrc": "9121:13:7",
																"nodeType": "YulFunctionCall",
																"src": "9121:13:7"
															},
															"nativeSrc": "9102:284:7",
															"nodeType": "YulForLoop",
															"post": {
																"nativeSrc": "9135:18:7",
																"nodeType": "YulBlock",
																"src": "9135:18:7",
																"statements": [
																	{
																		"nativeSrc": "9137:14:7",
																		"nodeType": "YulAssignment",
																		"src": "9137:14:7",
																		"value": {
																			"arguments": [
																				{
																					"name": "i",
																					"nativeSrc": "9146:1:7",
																					"nodeType": "YulIdentifier",
																					"src": "9146:1:7"
																				},
																				{
																					"kind": "number",
																					"nativeSrc": "9149:1:7",
																					"nodeType": "YulLiteral",
																					"src": "9149:1:7",
																					"type": "",
																					"value": "1"
																				}
																			],
																			"functionName": {
																				"name": "add",
																				"nativeSrc": "9142:3:7",
																				"nodeType": "YulIdentifier",
																				"src": "9142:3:7"
																			},
																			"nativeSrc": "9142:9:7",
																			"nodeType": "YulFunctionCall",
																			"src": "9142:9:7"
																		},
																		"variableNames": [
																			{
																				"name": "i",
																				"nativeSrc": "9137:1:7",
																				"nodeType": "YulIdentifier",
																				"src": "9137:1:7"
																			}
																		]
																	}
																]
															},
															"pre": {
																"nativeSrc": "9106:14:7",
																"nodeType": "YulBlock",
																"src": "9106:14:7",
																"statements": [
																	{
																		"nativeSrc": "9108:10:7",
																		"nodeType": "YulVariableDeclaration",
																		"src": "9108:10:7",
																		"value": {
																			"kind": "number",
																			"nativeSrc": "9117:1:7",
																			"nodeType": "YulLiteral",
																			"src": "9117:1:7",
																			"type": "",
																			"value": "0"
																		},
																		"variables": [
																			{
																				"name": "i",
																				"nativeSrc": "9112:1:7",
																				"nodeType": "YulTypedName",
																				"src": "9112:1:7",
																				"type": ""
																			}
																		]
																	}
																]
															},
															"src": "9102:284:7"
														},
														{
															"nativeSrc": "9395:10:7",
															"nodeType": "YulAssignment",
															"src": "9395:10:7",
															"value": {
																"name": "pos",
																"nativeSrc": "9402:3:7",
																"nodeType": "YulIdentifier",
																"src": "9402:3:7"
															},
															"variableNames": [
																{
																	"name": "end",
																	"nativeSrc": "9395:3:7",
																	"nodeType": "YulIdentifier",
																	"src": "9395:3:7"
																}
															]
														}
													]
												},
												"name": "abi_encode_t_array$_t_address_$dyn_memory_ptr_to_t_array$_t_address_$dyn_memory_ptr",
												"nativeSrc": "8699:712:7",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "8792:5:7",
														"nodeType": "YulTypedName",
														"src": "8792:5:7",
														"type": ""
													},
													{
														"name": "pos",
														"nativeSrc": "8799:3:7",
														"nodeType": "YulTypedName",
														"src": "8799:3:7",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "end",
														"nativeSrc": "8808:3:7",
														"nodeType": "YulTypedName",
														"src": "8808:3:7",
														"type": ""
													}
												],
												"src": "8699:712:7"
											},
											{
												"body": {
													"nativeSrc": "9503:73:7",
													"nodeType": "YulBlock",
													"src": "9503:73:7",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "9520:3:7",
																		"nodeType": "YulIdentifier",
																		"src": "9520:3:7"
																	},
																	{
																		"name": "length",
																		"nativeSrc": "9525:6:7",
																		"nodeType": "YulIdentifier",
																		"src": "9525:6:7"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "9513:6:7",
																	"nodeType": "YulIdentifier",
																	"src": "9513:6:7"
																},
																"nativeSrc": "9513:19:7",
																"nodeType": "YulFunctionCall",
																"src": "9513:19:7"
															},
															"nativeSrc": "9513:19:7",
															"nodeType": "YulExpressionStatement",
															"src": "9513:19:7"
														},
														{
															"nativeSrc": "9541:29:7",
															"nodeType": "YulAssignment",
															"src": "9541:29:7",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "9560:3:7",
																		"nodeType": "YulIdentifier",
																		"src": "9560:3:7"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "9565:4:7",
																		"nodeType": "YulLiteral",
																		"src": "9565:4:7",
																		"type": "",
																		"value": "0x20"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "9556:3:7",
																	"nodeType": "YulIdentifier",
																	"src": "9556:3:7"
																},
																"nativeSrc": "9556:14:7",
																"nodeType": "YulFunctionCall",
																"src": "9556:14:7"
															},
															"variableNames": [
																{
																	"name": "updated_pos",
																	"nativeSrc": "9541:11:7",
																	"nodeType": "YulIdentifier",
																	"src": "9541:11:7"
																}
															]
														}
													]
												},
												"name": "array_storeLengthForEncoding_t_string_memory_ptr",
												"nativeSrc": "9417:159:7",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "pos",
														"nativeSrc": "9475:3:7",
														"nodeType": "YulTypedName",
														"src": "9475:3:7",
														"type": ""
													},
													{
														"name": "length",
														"nativeSrc": "9480:6:7",
														"nodeType": "YulTypedName",
														"src": "9480:6:7",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "updated_pos",
														"nativeSrc": "9491:11:7",
														"nodeType": "YulTypedName",
														"src": "9491:11:7",
														"type": ""
													}
												],
												"src": "9417:159:7"
											},
											{
												"body": {
													"nativeSrc": "9664:275:7",
													"nodeType": "YulBlock",
													"src": "9664:275:7",
													"statements": [
														{
															"nativeSrc": "9674:53:7",
															"nodeType": "YulVariableDeclaration",
															"src": "9674:53:7",
															"value": {
																"arguments": [
																	{
																		"name": "value",
																		"nativeSrc": "9721:5:7",
																		"nodeType": "YulIdentifier",
																		"src": "9721:5:7"
																	}
																],
																"functionName": {
																	"name": "array_length_t_string_memory_ptr",
																	"nativeSrc": "9688:32:7",
																	"nodeType": "YulIdentifier",
																	"src": "9688:32:7"
																},
																"nativeSrc": "9688:39:7",
																"nodeType": "YulFunctionCall",
																"src": "9688:39:7"
															},
															"variables": [
																{
																	"name": "length",
																	"nativeSrc": "9678:6:7",
																	"nodeType": "YulTypedName",
																	"src": "9678:6:7",
																	"type": ""
																}
															]
														},
														{
															"nativeSrc": "9736:68:7",
															"nodeType": "YulAssignment",
															"src": "9736:68:7",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "9792:3:7",
																		"nodeType": "YulIdentifier",
																		"src": "9792:3:7"
																	},
																	{
																		"name": "length",
																		"nativeSrc": "9797:6:7",
																		"nodeType": "YulIdentifier",
																		"src": "9797:6:7"
																	}
																],
																"functionName": {
																	"name": "array_storeLengthForEncoding_t_string_memory_ptr",
																	"nativeSrc": "9743:48:7",
																	"nodeType": "YulIdentifier",
																	"src": "9743:48:7"
																},
																"nativeSrc": "9743:61:7",
																"nodeType": "YulFunctionCall",
																"src": "9743:61:7"
															},
															"variableNames": [
																{
																	"name": "pos",
																	"nativeSrc": "9736:3:7",
																	"nodeType": "YulIdentifier",
																	"src": "9736:3:7"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nativeSrc": "9852:5:7",
																				"nodeType": "YulIdentifier",
																				"src": "9852:5:7"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "9859:4:7",
																				"nodeType": "YulLiteral",
																				"src": "9859:4:7",
																				"type": "",
																				"value": "0x20"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "9848:3:7",
																			"nodeType": "YulIdentifier",
																			"src": "9848:3:7"
																		},
																		"nativeSrc": "9848:16:7",
																		"nodeType": "YulFunctionCall",
																		"src": "9848:16:7"
																	},
																	{
																		"name": "pos",
																		"nativeSrc": "9866:3:7",
																		"nodeType": "YulIdentifier",
																		"src": "9866:3:7"
																	},
																	{
																		"name": "length",
																		"nativeSrc": "9871:6:7",
																		"nodeType": "YulIdentifier",
																		"src": "9871:6:7"
																	}
																],
																"functionName": {
																	"name": "copy_memory_to_memory_with_cleanup",
																	"nativeSrc": "9813:34:7",
																	"nodeType": "YulIdentifier",
																	"src": "9813:34:7"
																},
																"nativeSrc": "9813:65:7",
																"nodeType": "YulFunctionCall",
																"src": "9813:65:7"
															},
															"nativeSrc": "9813:65:7",
															"nodeType": "YulExpressionStatement",
															"src": "9813:65:7"
														},
														{
															"nativeSrc": "9887:46:7",
															"nodeType": "YulAssignment",
															"src": "9887:46:7",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "9898:3:7",
																		"nodeType": "YulIdentifier",
																		"src": "9898:3:7"
																	},
																	{
																		"arguments": [
																			{
																				"name": "length",
																				"nativeSrc": "9925:6:7",
																				"nodeType": "YulIdentifier",
																				"src": "9925:6:7"
																			}
																		],
																		"functionName": {
																			"name": "round_up_to_mul_of_32",
																			"nativeSrc": "9903:21:7",
																			"nodeType": "YulIdentifier",
																			"src": "9903:21:7"
																		},
																		"nativeSrc": "9903:29:7",
																		"nodeType": "YulFunctionCall",
																		"src": "9903:29:7"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "9894:3:7",
																	"nodeType": "YulIdentifier",
																	"src": "9894:3:7"
																},
																"nativeSrc": "9894:39:7",
																"nodeType": "YulFunctionCall",
																"src": "9894:39:7"
															},
															"variableNames": [
																{
																	"name": "end",
																	"nativeSrc": "9887:3:7",
																	"nodeType": "YulIdentifier",
																	"src": "9887:3:7"
																}
															]
														}
													]
												},
												"name": "abi_encode_t_string_memory_ptr_to_t_string_memory_ptr",
												"nativeSrc": "9582:357:7",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "9645:5:7",
														"nodeType": "YulTypedName",
														"src": "9645:5:7",
														"type": ""
													},
													{
														"name": "pos",
														"nativeSrc": "9652:3:7",
														"nodeType": "YulTypedName",
														"src": "9652:3:7",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "end",
														"nativeSrc": "9660:3:7",
														"nodeType": "YulTypedName",
														"src": "9660:3:7",
														"type": ""
													}
												],
												"src": "9582:357:7"
											},
											{
												"body": {
													"nativeSrc": "10000:53:7",
													"nodeType": "YulBlock",
													"src": "10000:53:7",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "10017:3:7",
																		"nodeType": "YulIdentifier",
																		"src": "10017:3:7"
																	},
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nativeSrc": "10040:5:7",
																				"nodeType": "YulIdentifier",
																				"src": "10040:5:7"
																			}
																		],
																		"functionName": {
																			"name": "cleanup_t_uint256",
																			"nativeSrc": "10022:17:7",
																			"nodeType": "YulIdentifier",
																			"src": "10022:17:7"
																		},
																		"nativeSrc": "10022:24:7",
																		"nodeType": "YulFunctionCall",
																		"src": "10022:24:7"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "10010:6:7",
																	"nodeType": "YulIdentifier",
																	"src": "10010:6:7"
																},
																"nativeSrc": "10010:37:7",
																"nodeType": "YulFunctionCall",
																"src": "10010:37:7"
															},
															"nativeSrc": "10010:37:7",
															"nodeType": "YulExpressionStatement",
															"src": "10010:37:7"
														}
													]
												},
												"name": "abi_encode_t_uint256_to_t_uint256",
												"nativeSrc": "9945:108:7",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "9988:5:7",
														"nodeType": "YulTypedName",
														"src": "9988:5:7",
														"type": ""
													},
													{
														"name": "pos",
														"nativeSrc": "9995:3:7",
														"nodeType": "YulTypedName",
														"src": "9995:3:7",
														"type": ""
													}
												],
												"src": "9945:108:7"
											},
											{
												"body": {
													"nativeSrc": "10108:50:7",
													"nodeType": "YulBlock",
													"src": "10108:50:7",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "10125:3:7",
																		"nodeType": "YulIdentifier",
																		"src": "10125:3:7"
																	},
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nativeSrc": "10145:5:7",
																				"nodeType": "YulIdentifier",
																				"src": "10145:5:7"
																			}
																		],
																		"functionName": {
																			"name": "cleanup_t_bool",
																			"nativeSrc": "10130:14:7",
																			"nodeType": "YulIdentifier",
																			"src": "10130:14:7"
																		},
																		"nativeSrc": "10130:21:7",
																		"nodeType": "YulFunctionCall",
																		"src": "10130:21:7"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "10118:6:7",
																	"nodeType": "YulIdentifier",
																	"src": "10118:6:7"
																},
																"nativeSrc": "10118:34:7",
																"nodeType": "YulFunctionCall",
																"src": "10118:34:7"
															},
															"nativeSrc": "10118:34:7",
															"nodeType": "YulExpressionStatement",
															"src": "10118:34:7"
														}
													]
												},
												"name": "abi_encode_t_bool_to_t_bool",
												"nativeSrc": "10059:99:7",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "10096:5:7",
														"nodeType": "YulTypedName",
														"src": "10096:5:7",
														"type": ""
													},
													{
														"name": "pos",
														"nativeSrc": "10103:3:7",
														"nodeType": "YulTypedName",
														"src": "10103:3:7",
														"type": ""
													}
												],
												"src": "10059:99:7"
											},
											{
												"body": {
													"nativeSrc": "10390:1834:7",
													"nodeType": "YulBlock",
													"src": "10390:1834:7",
													"statements": [
														{
															"nativeSrc": "10400:28:7",
															"nodeType": "YulVariableDeclaration",
															"src": "10400:28:7",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "10416:3:7",
																		"nodeType": "YulIdentifier",
																		"src": "10416:3:7"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "10421:6:7",
																		"nodeType": "YulLiteral",
																		"src": "10421:6:7",
																		"type": "",
																		"value": "0x0120"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "10412:3:7",
																	"nodeType": "YulIdentifier",
																	"src": "10412:3:7"
																},
																"nativeSrc": "10412:16:7",
																"nodeType": "YulFunctionCall",
																"src": "10412:16:7"
															},
															"variables": [
																{
																	"name": "tail",
																	"nativeSrc": "10404:4:7",
																	"nodeType": "YulTypedName",
																	"src": "10404:4:7",
																	"type": ""
																}
															]
														},
														{
															"nativeSrc": "10438:267:7",
															"nodeType": "YulBlock",
															"src": "10438:267:7",
															"statements": [
																{
																	"nativeSrc": "10475:43:7",
																	"nodeType": "YulVariableDeclaration",
																	"src": "10475:43:7",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "value",
																						"nativeSrc": "10505:5:7",
																						"nodeType": "YulIdentifier",
																						"src": "10505:5:7"
																					},
																					{
																						"kind": "number",
																						"nativeSrc": "10512:4:7",
																						"nodeType": "YulLiteral",
																						"src": "10512:4:7",
																						"type": "",
																						"value": "0x00"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nativeSrc": "10501:3:7",
																					"nodeType": "YulIdentifier",
																					"src": "10501:3:7"
																				},
																				"nativeSrc": "10501:16:7",
																				"nodeType": "YulFunctionCall",
																				"src": "10501:16:7"
																			}
																		],
																		"functionName": {
																			"name": "mload",
																			"nativeSrc": "10495:5:7",
																			"nodeType": "YulIdentifier",
																			"src": "10495:5:7"
																		},
																		"nativeSrc": "10495:23:7",
																		"nodeType": "YulFunctionCall",
																		"src": "10495:23:7"
																	},
																	"variables": [
																		{
																			"name": "memberValue0",
																			"nativeSrc": "10479:12:7",
																			"nodeType": "YulTypedName",
																			"src": "10479:12:7",
																			"type": ""
																		}
																	]
																},
																{
																	"expression": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "pos",
																						"nativeSrc": "10543:3:7",
																						"nodeType": "YulIdentifier",
																						"src": "10543:3:7"
																					},
																					{
																						"kind": "number",
																						"nativeSrc": "10548:4:7",
																						"nodeType": "YulLiteral",
																						"src": "10548:4:7",
																						"type": "",
																						"value": "0x00"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nativeSrc": "10539:3:7",
																					"nodeType": "YulIdentifier",
																					"src": "10539:3:7"
																				},
																				"nativeSrc": "10539:14:7",
																				"nodeType": "YulFunctionCall",
																				"src": "10539:14:7"
																			},
																			{
																				"arguments": [
																					{
																						"name": "tail",
																						"nativeSrc": "10559:4:7",
																						"nodeType": "YulIdentifier",
																						"src": "10559:4:7"
																					},
																					{
																						"name": "pos",
																						"nativeSrc": "10565:3:7",
																						"nodeType": "YulIdentifier",
																						"src": "10565:3:7"
																					}
																				],
																				"functionName": {
																					"name": "sub",
																					"nativeSrc": "10555:3:7",
																					"nodeType": "YulIdentifier",
																					"src": "10555:3:7"
																				},
																				"nativeSrc": "10555:14:7",
																				"nodeType": "YulFunctionCall",
																				"src": "10555:14:7"
																			}
																		],
																		"functionName": {
																			"name": "mstore",
																			"nativeSrc": "10532:6:7",
																			"nodeType": "YulIdentifier",
																			"src": "10532:6:7"
																		},
																		"nativeSrc": "10532:38:7",
																		"nodeType": "YulFunctionCall",
																		"src": "10532:38:7"
																	},
																	"nativeSrc": "10532:38:7",
																	"nodeType": "YulExpressionStatement",
																	"src": "10532:38:7"
																},
																{
																	"nativeSrc": "10583:111:7",
																	"nodeType": "YulAssignment",
																	"src": "10583:111:7",
																	"value": {
																		"arguments": [
																			{
																				"name": "memberValue0",
																				"nativeSrc": "10675:12:7",
																				"nodeType": "YulIdentifier",
																				"src": "10675:12:7"
																			},
																			{
																				"name": "tail",
																				"nativeSrc": "10689:4:7",
																				"nodeType": "YulIdentifier",
																				"src": "10689:4:7"
																			}
																		],
																		"functionName": {
																			"name": "abi_encode_t_array$_t_address_$dyn_memory_ptr_to_t_array$_t_address_$dyn_memory_ptr",
																			"nativeSrc": "10591:83:7",
																			"nodeType": "YulIdentifier",
																			"src": "10591:83:7"
																		},
																		"nativeSrc": "10591:103:7",
																		"nodeType": "YulFunctionCall",
																		"src": "10591:103:7"
																	},
																	"variableNames": [
																		{
																			"name": "tail",
																			"nativeSrc": "10583:4:7",
																			"nodeType": "YulIdentifier",
																			"src": "10583:4:7"
																		}
																	]
																}
															]
														},
														{
															"nativeSrc": "10715:240:7",
															"nodeType": "YulBlock",
															"src": "10715:240:7",
															"statements": [
																{
																	"nativeSrc": "10755:43:7",
																	"nodeType": "YulVariableDeclaration",
																	"src": "10755:43:7",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "value",
																						"nativeSrc": "10785:5:7",
																						"nodeType": "YulIdentifier",
																						"src": "10785:5:7"
																					},
																					{
																						"kind": "number",
																						"nativeSrc": "10792:4:7",
																						"nodeType": "YulLiteral",
																						"src": "10792:4:7",
																						"type": "",
																						"value": "0x20"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nativeSrc": "10781:3:7",
																					"nodeType": "YulIdentifier",
																					"src": "10781:3:7"
																				},
																				"nativeSrc": "10781:16:7",
																				"nodeType": "YulFunctionCall",
																				"src": "10781:16:7"
																			}
																		],
																		"functionName": {
																			"name": "mload",
																			"nativeSrc": "10775:5:7",
																			"nodeType": "YulIdentifier",
																			"src": "10775:5:7"
																		},
																		"nativeSrc": "10775:23:7",
																		"nodeType": "YulFunctionCall",
																		"src": "10775:23:7"
																	},
																	"variables": [
																		{
																			"name": "memberValue0",
																			"nativeSrc": "10759:12:7",
																			"nodeType": "YulTypedName",
																			"src": "10759:12:7",
																			"type": ""
																		}
																	]
																},
																{
																	"expression": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "pos",
																						"nativeSrc": "10823:3:7",
																						"nodeType": "YulIdentifier",
																						"src": "10823:3:7"
																					},
																					{
																						"kind": "number",
																						"nativeSrc": "10828:4:7",
																						"nodeType": "YulLiteral",
																						"src": "10828:4:7",
																						"type": "",
																						"value": "0x20"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nativeSrc": "10819:3:7",
																					"nodeType": "YulIdentifier",
																					"src": "10819:3:7"
																				},
																				"nativeSrc": "10819:14:7",
																				"nodeType": "YulFunctionCall",
																				"src": "10819:14:7"
																			},
																			{
																				"arguments": [
																					{
																						"name": "tail",
																						"nativeSrc": "10839:4:7",
																						"nodeType": "YulIdentifier",
																						"src": "10839:4:7"
																					},
																					{
																						"name": "pos",
																						"nativeSrc": "10845:3:7",
																						"nodeType": "YulIdentifier",
																						"src": "10845:3:7"
																					}
																				],
																				"functionName": {
																					"name": "sub",
																					"nativeSrc": "10835:3:7",
																					"nodeType": "YulIdentifier",
																					"src": "10835:3:7"
																				},
																				"nativeSrc": "10835:14:7",
																				"nodeType": "YulFunctionCall",
																				"src": "10835:14:7"
																			}
																		],
																		"functionName": {
																			"name": "mstore",
																			"nativeSrc": "10812:6:7",
																			"nodeType": "YulIdentifier",
																			"src": "10812:6:7"
																		},
																		"nativeSrc": "10812:38:7",
																		"nodeType": "YulFunctionCall",
																		"src": "10812:38:7"
																	},
																	"nativeSrc": "10812:38:7",
																	"nodeType": "YulExpressionStatement",
																	"src": "10812:38:7"
																},
																{
																	"nativeSrc": "10863:81:7",
																	"nodeType": "YulAssignment",
																	"src": "10863:81:7",
																	"value": {
																		"arguments": [
																			{
																				"name": "memberValue0",
																				"nativeSrc": "10925:12:7",
																				"nodeType": "YulIdentifier",
																				"src": "10925:12:7"
																			},
																			{
																				"name": "tail",
																				"nativeSrc": "10939:4:7",
																				"nodeType": "YulIdentifier",
																				"src": "10939:4:7"
																			}
																		],
																		"functionName": {
																			"name": "abi_encode_t_string_memory_ptr_to_t_string_memory_ptr",
																			"nativeSrc": "10871:53:7",
																			"nodeType": "YulIdentifier",
																			"src": "10871:53:7"
																		},
																		"nativeSrc": "10871:73:7",
																		"nodeType": "YulFunctionCall",
																		"src": "10871:73:7"
																	},
																	"variableNames": [
																		{
																			"name": "tail",
																			"nativeSrc": "10863:4:7",
																			"nodeType": "YulIdentifier",
																			"src": "10863:4:7"
																		}
																	]
																}
															]
														},
														{
															"nativeSrc": "10965:166:7",
															"nodeType": "YulBlock",
															"src": "10965:166:7",
															"statements": [
																{
																	"nativeSrc": "11002:43:7",
																	"nodeType": "YulVariableDeclaration",
																	"src": "11002:43:7",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "value",
																						"nativeSrc": "11032:5:7",
																						"nodeType": "YulIdentifier",
																						"src": "11032:5:7"
																					},
																					{
																						"kind": "number",
																						"nativeSrc": "11039:4:7",
																						"nodeType": "YulLiteral",
																						"src": "11039:4:7",
																						"type": "",
																						"value": "0x40"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nativeSrc": "11028:3:7",
																					"nodeType": "YulIdentifier",
																					"src": "11028:3:7"
																				},
																				"nativeSrc": "11028:16:7",
																				"nodeType": "YulFunctionCall",
																				"src": "11028:16:7"
																			}
																		],
																		"functionName": {
																			"name": "mload",
																			"nativeSrc": "11022:5:7",
																			"nodeType": "YulIdentifier",
																			"src": "11022:5:7"
																		},
																		"nativeSrc": "11022:23:7",
																		"nodeType": "YulFunctionCall",
																		"src": "11022:23:7"
																	},
																	"variables": [
																		{
																			"name": "memberValue0",
																			"nativeSrc": "11006:12:7",
																			"nodeType": "YulTypedName",
																			"src": "11006:12:7",
																			"type": ""
																		}
																	]
																},
																{
																	"expression": {
																		"arguments": [
																			{
																				"name": "memberValue0",
																				"nativeSrc": "11092:12:7",
																				"nodeType": "YulIdentifier",
																				"src": "11092:12:7"
																			},
																			{
																				"arguments": [
																					{
																						"name": "pos",
																						"nativeSrc": "11110:3:7",
																						"nodeType": "YulIdentifier",
																						"src": "11110:3:7"
																					},
																					{
																						"kind": "number",
																						"nativeSrc": "11115:4:7",
																						"nodeType": "YulLiteral",
																						"src": "11115:4:7",
																						"type": "",
																						"value": "0x40"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nativeSrc": "11106:3:7",
																					"nodeType": "YulIdentifier",
																					"src": "11106:3:7"
																				},
																				"nativeSrc": "11106:14:7",
																				"nodeType": "YulFunctionCall",
																				"src": "11106:14:7"
																			}
																		],
																		"functionName": {
																			"name": "abi_encode_t_uint256_to_t_uint256",
																			"nativeSrc": "11058:33:7",
																			"nodeType": "YulIdentifier",
																			"src": "11058:33:7"
																		},
																		"nativeSrc": "11058:63:7",
																		"nodeType": "YulFunctionCall",
																		"src": "11058:63:7"
																	},
																	"nativeSrc": "11058:63:7",
																	"nodeType": "YulExpressionStatement",
																	"src": "11058:63:7"
																}
															]
														},
														{
															"nativeSrc": "11141:170:7",
															"nodeType": "YulBlock",
															"src": "11141:170:7",
															"statements": [
																{
																	"nativeSrc": "11182:43:7",
																	"nodeType": "YulVariableDeclaration",
																	"src": "11182:43:7",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "value",
																						"nativeSrc": "11212:5:7",
																						"nodeType": "YulIdentifier",
																						"src": "11212:5:7"
																					},
																					{
																						"kind": "number",
																						"nativeSrc": "11219:4:7",
																						"nodeType": "YulLiteral",
																						"src": "11219:4:7",
																						"type": "",
																						"value": "0x60"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nativeSrc": "11208:3:7",
																					"nodeType": "YulIdentifier",
																					"src": "11208:3:7"
																				},
																				"nativeSrc": "11208:16:7",
																				"nodeType": "YulFunctionCall",
																				"src": "11208:16:7"
																			}
																		],
																		"functionName": {
																			"name": "mload",
																			"nativeSrc": "11202:5:7",
																			"nodeType": "YulIdentifier",
																			"src": "11202:5:7"
																		},
																		"nativeSrc": "11202:23:7",
																		"nodeType": "YulFunctionCall",
																		"src": "11202:23:7"
																	},
																	"variables": [
																		{
																			"name": "memberValue0",
																			"nativeSrc": "11186:12:7",
																			"nodeType": "YulTypedName",
																			"src": "11186:12:7",
																			"type": ""
																		}
																	]
																},
																{
																	"expression": {
																		"arguments": [
																			{
																				"name": "memberValue0",
																				"nativeSrc": "11272:12:7",
																				"nodeType": "YulIdentifier",
																				"src": "11272:12:7"
																			},
																			{
																				"arguments": [
																					{
																						"name": "pos",
																						"nativeSrc": "11290:3:7",
																						"nodeType": "YulIdentifier",
																						"src": "11290:3:7"
																					},
																					{
																						"kind": "number",
																						"nativeSrc": "11295:4:7",
																						"nodeType": "YulLiteral",
																						"src": "11295:4:7",
																						"type": "",
																						"value": "0x60"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nativeSrc": "11286:3:7",
																					"nodeType": "YulIdentifier",
																					"src": "11286:3:7"
																				},
																				"nativeSrc": "11286:14:7",
																				"nodeType": "YulFunctionCall",
																				"src": "11286:14:7"
																			}
																		],
																		"functionName": {
																			"name": "abi_encode_t_uint256_to_t_uint256",
																			"nativeSrc": "11238:33:7",
																			"nodeType": "YulIdentifier",
																			"src": "11238:33:7"
																		},
																		"nativeSrc": "11238:63:7",
																		"nodeType": "YulFunctionCall",
																		"src": "11238:63:7"
																	},
																	"nativeSrc": "11238:63:7",
																	"nodeType": "YulExpressionStatement",
																	"src": "11238:63:7"
																}
															]
														},
														{
															"nativeSrc": "11321:168:7",
															"nodeType": "YulBlock",
															"src": "11321:168:7",
															"statements": [
																{
																	"nativeSrc": "11360:43:7",
																	"nodeType": "YulVariableDeclaration",
																	"src": "11360:43:7",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "value",
																						"nativeSrc": "11390:5:7",
																						"nodeType": "YulIdentifier",
																						"src": "11390:5:7"
																					},
																					{
																						"kind": "number",
																						"nativeSrc": "11397:4:7",
																						"nodeType": "YulLiteral",
																						"src": "11397:4:7",
																						"type": "",
																						"value": "0x80"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nativeSrc": "11386:3:7",
																					"nodeType": "YulIdentifier",
																					"src": "11386:3:7"
																				},
																				"nativeSrc": "11386:16:7",
																				"nodeType": "YulFunctionCall",
																				"src": "11386:16:7"
																			}
																		],
																		"functionName": {
																			"name": "mload",
																			"nativeSrc": "11380:5:7",
																			"nodeType": "YulIdentifier",
																			"src": "11380:5:7"
																		},
																		"nativeSrc": "11380:23:7",
																		"nodeType": "YulFunctionCall",
																		"src": "11380:23:7"
																	},
																	"variables": [
																		{
																			"name": "memberValue0",
																			"nativeSrc": "11364:12:7",
																			"nodeType": "YulTypedName",
																			"src": "11364:12:7",
																			"type": ""
																		}
																	]
																},
																{
																	"expression": {
																		"arguments": [
																			{
																				"name": "memberValue0",
																				"nativeSrc": "11450:12:7",
																				"nodeType": "YulIdentifier",
																				"src": "11450:12:7"
																			},
																			{
																				"arguments": [
																					{
																						"name": "pos",
																						"nativeSrc": "11468:3:7",
																						"nodeType": "YulIdentifier",
																						"src": "11468:3:7"
																					},
																					{
																						"kind": "number",
																						"nativeSrc": "11473:4:7",
																						"nodeType": "YulLiteral",
																						"src": "11473:4:7",
																						"type": "",
																						"value": "0x80"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nativeSrc": "11464:3:7",
																					"nodeType": "YulIdentifier",
																					"src": "11464:3:7"
																				},
																				"nativeSrc": "11464:14:7",
																				"nodeType": "YulFunctionCall",
																				"src": "11464:14:7"
																			}
																		],
																		"functionName": {
																			"name": "abi_encode_t_uint256_to_t_uint256",
																			"nativeSrc": "11416:33:7",
																			"nodeType": "YulIdentifier",
																			"src": "11416:33:7"
																		},
																		"nativeSrc": "11416:63:7",
																		"nodeType": "YulFunctionCall",
																		"src": "11416:63:7"
																	},
																	"nativeSrc": "11416:63:7",
																	"nodeType": "YulExpressionStatement",
																	"src": "11416:63:7"
																}
															]
														},
														{
															"nativeSrc": "11499:172:7",
															"nodeType": "YulBlock",
															"src": "11499:172:7",
															"statements": [
																{
																	"nativeSrc": "11542:43:7",
																	"nodeType": "YulVariableDeclaration",
																	"src": "11542:43:7",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "value",
																						"nativeSrc": "11572:5:7",
																						"nodeType": "YulIdentifier",
																						"src": "11572:5:7"
																					},
																					{
																						"kind": "number",
																						"nativeSrc": "11579:4:7",
																						"nodeType": "YulLiteral",
																						"src": "11579:4:7",
																						"type": "",
																						"value": "0xa0"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nativeSrc": "11568:3:7",
																					"nodeType": "YulIdentifier",
																					"src": "11568:3:7"
																				},
																				"nativeSrc": "11568:16:7",
																				"nodeType": "YulFunctionCall",
																				"src": "11568:16:7"
																			}
																		],
																		"functionName": {
																			"name": "mload",
																			"nativeSrc": "11562:5:7",
																			"nodeType": "YulIdentifier",
																			"src": "11562:5:7"
																		},
																		"nativeSrc": "11562:23:7",
																		"nodeType": "YulFunctionCall",
																		"src": "11562:23:7"
																	},
																	"variables": [
																		{
																			"name": "memberValue0",
																			"nativeSrc": "11546:12:7",
																			"nodeType": "YulTypedName",
																			"src": "11546:12:7",
																			"type": ""
																		}
																	]
																},
																{
																	"expression": {
																		"arguments": [
																			{
																				"name": "memberValue0",
																				"nativeSrc": "11632:12:7",
																				"nodeType": "YulIdentifier",
																				"src": "11632:12:7"
																			},
																			{
																				"arguments": [
																					{
																						"name": "pos",
																						"nativeSrc": "11650:3:7",
																						"nodeType": "YulIdentifier",
																						"src": "11650:3:7"
																					},
																					{
																						"kind": "number",
																						"nativeSrc": "11655:4:7",
																						"nodeType": "YulLiteral",
																						"src": "11655:4:7",
																						"type": "",
																						"value": "0xa0"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nativeSrc": "11646:3:7",
																					"nodeType": "YulIdentifier",
																					"src": "11646:3:7"
																				},
																				"nativeSrc": "11646:14:7",
																				"nodeType": "YulFunctionCall",
																				"src": "11646:14:7"
																			}
																		],
																		"functionName": {
																			"name": "abi_encode_t_uint256_to_t_uint256",
																			"nativeSrc": "11598:33:7",
																			"nodeType": "YulIdentifier",
																			"src": "11598:33:7"
																		},
																		"nativeSrc": "11598:63:7",
																		"nodeType": "YulFunctionCall",
																		"src": "11598:63:7"
																	},
																	"nativeSrc": "11598:63:7",
																	"nodeType": "YulExpressionStatement",
																	"src": "11598:63:7"
																}
															]
														},
														{
															"nativeSrc": "11681:172:7",
															"nodeType": "YulBlock",
															"src": "11681:172:7",
															"statements": [
																{
																	"nativeSrc": "11724:43:7",
																	"nodeType": "YulVariableDeclaration",
																	"src": "11724:43:7",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "value",
																						"nativeSrc": "11754:5:7",
																						"nodeType": "YulIdentifier",
																						"src": "11754:5:7"
																					},
																					{
																						"kind": "number",
																						"nativeSrc": "11761:4:7",
																						"nodeType": "YulLiteral",
																						"src": "11761:4:7",
																						"type": "",
																						"value": "0xc0"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nativeSrc": "11750:3:7",
																					"nodeType": "YulIdentifier",
																					"src": "11750:3:7"
																				},
																				"nativeSrc": "11750:16:7",
																				"nodeType": "YulFunctionCall",
																				"src": "11750:16:7"
																			}
																		],
																		"functionName": {
																			"name": "mload",
																			"nativeSrc": "11744:5:7",
																			"nodeType": "YulIdentifier",
																			"src": "11744:5:7"
																		},
																		"nativeSrc": "11744:23:7",
																		"nodeType": "YulFunctionCall",
																		"src": "11744:23:7"
																	},
																	"variables": [
																		{
																			"name": "memberValue0",
																			"nativeSrc": "11728:12:7",
																			"nodeType": "YulTypedName",
																			"src": "11728:12:7",
																			"type": ""
																		}
																	]
																},
																{
																	"expression": {
																		"arguments": [
																			{
																				"name": "memberValue0",
																				"nativeSrc": "11814:12:7",
																				"nodeType": "YulIdentifier",
																				"src": "11814:12:7"
																			},
																			{
																				"arguments": [
																					{
																						"name": "pos",
																						"nativeSrc": "11832:3:7",
																						"nodeType": "YulIdentifier",
																						"src": "11832:3:7"
																					},
																					{
																						"kind": "number",
																						"nativeSrc": "11837:4:7",
																						"nodeType": "YulLiteral",
																						"src": "11837:4:7",
																						"type": "",
																						"value": "0xc0"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nativeSrc": "11828:3:7",
																					"nodeType": "YulIdentifier",
																					"src": "11828:3:7"
																				},
																				"nativeSrc": "11828:14:7",
																				"nodeType": "YulFunctionCall",
																				"src": "11828:14:7"
																			}
																		],
																		"functionName": {
																			"name": "abi_encode_t_uint256_to_t_uint256",
																			"nativeSrc": "11780:33:7",
																			"nodeType": "YulIdentifier",
																			"src": "11780:33:7"
																		},
																		"nativeSrc": "11780:63:7",
																		"nodeType": "YulFunctionCall",
																		"src": "11780:63:7"
																	},
																	"nativeSrc": "11780:63:7",
																	"nodeType": "YulExpressionStatement",
																	"src": "11780:63:7"
																}
															]
														},
														{
															"nativeSrc": "11863:160:7",
															"nodeType": "YulBlock",
															"src": "11863:160:7",
															"statements": [
																{
																	"nativeSrc": "11900:43:7",
																	"nodeType": "YulVariableDeclaration",
																	"src": "11900:43:7",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "value",
																						"nativeSrc": "11930:5:7",
																						"nodeType": "YulIdentifier",
																						"src": "11930:5:7"
																					},
																					{
																						"kind": "number",
																						"nativeSrc": "11937:4:7",
																						"nodeType": "YulLiteral",
																						"src": "11937:4:7",
																						"type": "",
																						"value": "0xe0"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nativeSrc": "11926:3:7",
																					"nodeType": "YulIdentifier",
																					"src": "11926:3:7"
																				},
																				"nativeSrc": "11926:16:7",
																				"nodeType": "YulFunctionCall",
																				"src": "11926:16:7"
																			}
																		],
																		"functionName": {
																			"name": "mload",
																			"nativeSrc": "11920:5:7",
																			"nodeType": "YulIdentifier",
																			"src": "11920:5:7"
																		},
																		"nativeSrc": "11920:23:7",
																		"nodeType": "YulFunctionCall",
																		"src": "11920:23:7"
																	},
																	"variables": [
																		{
																			"name": "memberValue0",
																			"nativeSrc": "11904:12:7",
																			"nodeType": "YulTypedName",
																			"src": "11904:12:7",
																			"type": ""
																		}
																	]
																},
																{
																	"expression": {
																		"arguments": [
																			{
																				"name": "memberValue0",
																				"nativeSrc": "11984:12:7",
																				"nodeType": "YulIdentifier",
																				"src": "11984:12:7"
																			},
																			{
																				"arguments": [
																					{
																						"name": "pos",
																						"nativeSrc": "12002:3:7",
																						"nodeType": "YulIdentifier",
																						"src": "12002:3:7"
																					},
																					{
																						"kind": "number",
																						"nativeSrc": "12007:4:7",
																						"nodeType": "YulLiteral",
																						"src": "12007:4:7",
																						"type": "",
																						"value": "0xe0"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nativeSrc": "11998:3:7",
																					"nodeType": "YulIdentifier",
																					"src": "11998:3:7"
																				},
																				"nativeSrc": "11998:14:7",
																				"nodeType": "YulFunctionCall",
																				"src": "11998:14:7"
																			}
																		],
																		"functionName": {
																			"name": "abi_encode_t_bool_to_t_bool",
																			"nativeSrc": "11956:27:7",
																			"nodeType": "YulIdentifier",
																			"src": "11956:27:7"
																		},
																		"nativeSrc": "11956:57:7",
																		"nodeType": "YulFunctionCall",
																		"src": "11956:57:7"
																	},
																	"nativeSrc": "11956:57:7",
																	"nodeType": "YulExpressionStatement",
																	"src": "11956:57:7"
																}
															]
														},
														{
															"nativeSrc": "12033:164:7",
															"nodeType": "YulBlock",
															"src": "12033:164:7",
															"statements": [
																{
																	"nativeSrc": "12070:45:7",
																	"nodeType": "YulVariableDeclaration",
																	"src": "12070:45:7",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "value",
																						"nativeSrc": "12100:5:7",
																						"nodeType": "YulIdentifier",
																						"src": "12100:5:7"
																					},
																					{
																						"kind": "number",
																						"nativeSrc": "12107:6:7",
																						"nodeType": "YulLiteral",
																						"src": "12107:6:7",
																						"type": "",
																						"value": "0x0100"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nativeSrc": "12096:3:7",
																					"nodeType": "YulIdentifier",
																					"src": "12096:3:7"
																				},
																				"nativeSrc": "12096:18:7",
																				"nodeType": "YulFunctionCall",
																				"src": "12096:18:7"
																			}
																		],
																		"functionName": {
																			"name": "mload",
																			"nativeSrc": "12090:5:7",
																			"nodeType": "YulIdentifier",
																			"src": "12090:5:7"
																		},
																		"nativeSrc": "12090:25:7",
																		"nodeType": "YulFunctionCall",
																		"src": "12090:25:7"
																	},
																	"variables": [
																		{
																			"name": "memberValue0",
																			"nativeSrc": "12074:12:7",
																			"nodeType": "YulTypedName",
																			"src": "12074:12:7",
																			"type": ""
																		}
																	]
																},
																{
																	"expression": {
																		"arguments": [
																			{
																				"name": "memberValue0",
																				"nativeSrc": "12156:12:7",
																				"nodeType": "YulIdentifier",
																				"src": "12156:12:7"
																			},
																			{
																				"arguments": [
																					{
																						"name": "pos",
																						"nativeSrc": "12174:3:7",
																						"nodeType": "YulIdentifier",
																						"src": "12174:3:7"
																					},
																					{
																						"kind": "number",
																						"nativeSrc": "12179:6:7",
																						"nodeType": "YulLiteral",
																						"src": "12179:6:7",
																						"type": "",
																						"value": "0x0100"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nativeSrc": "12170:3:7",
																					"nodeType": "YulIdentifier",
																					"src": "12170:3:7"
																				},
																				"nativeSrc": "12170:16:7",
																				"nodeType": "YulFunctionCall",
																				"src": "12170:16:7"
																			}
																		],
																		"functionName": {
																			"name": "abi_encode_t_bool_to_t_bool",
																			"nativeSrc": "12128:27:7",
																			"nodeType": "YulIdentifier",
																			"src": "12128:27:7"
																		},
																		"nativeSrc": "12128:59:7",
																		"nodeType": "YulFunctionCall",
																		"src": "12128:59:7"
																	},
																	"nativeSrc": "12128:59:7",
																	"nodeType": "YulExpressionStatement",
																	"src": "12128:59:7"
																}
															]
														},
														{
															"nativeSrc": "12207:11:7",
															"nodeType": "YulAssignment",
															"src": "12207:11:7",
															"value": {
																"name": "tail",
																"nativeSrc": "12214:4:7",
																"nodeType": "YulIdentifier",
																"src": "12214:4:7"
															},
															"variableNames": [
																{
																	"name": "end",
																	"nativeSrc": "12207:3:7",
																	"nodeType": "YulIdentifier",
																	"src": "12207:3:7"
																}
															]
														}
													]
												},
												"name": "abi_encode_t_struct$_SerializedIssue_$1463_memory_ptr_to_t_struct$_SerializedIssue_$1463_memory_ptr_fromStack",
												"nativeSrc": "10250:1974:7",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "10369:5:7",
														"nodeType": "YulTypedName",
														"src": "10369:5:7",
														"type": ""
													},
													{
														"name": "pos",
														"nativeSrc": "10376:3:7",
														"nodeType": "YulTypedName",
														"src": "10376:3:7",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "end",
														"nativeSrc": "10385:3:7",
														"nodeType": "YulTypedName",
														"src": "10385:3:7",
														"type": ""
													}
												],
												"src": "10250:1974:7"
											},
											{
												"body": {
													"nativeSrc": "12394:241:7",
													"nodeType": "YulBlock",
													"src": "12394:241:7",
													"statements": [
														{
															"nativeSrc": "12404:26:7",
															"nodeType": "YulAssignment",
															"src": "12404:26:7",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "12416:9:7",
																		"nodeType": "YulIdentifier",
																		"src": "12416:9:7"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "12427:2:7",
																		"nodeType": "YulLiteral",
																		"src": "12427:2:7",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "12412:3:7",
																	"nodeType": "YulIdentifier",
																	"src": "12412:3:7"
																},
																"nativeSrc": "12412:18:7",
																"nodeType": "YulFunctionCall",
																"src": "12412:18:7"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "12404:4:7",
																	"nodeType": "YulIdentifier",
																	"src": "12404:4:7"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "12451:9:7",
																				"nodeType": "YulIdentifier",
																				"src": "12451:9:7"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "12462:1:7",
																				"nodeType": "YulLiteral",
																				"src": "12462:1:7",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "12447:3:7",
																			"nodeType": "YulIdentifier",
																			"src": "12447:3:7"
																		},
																		"nativeSrc": "12447:17:7",
																		"nodeType": "YulFunctionCall",
																		"src": "12447:17:7"
																	},
																	{
																		"arguments": [
																			{
																				"name": "tail",
																				"nativeSrc": "12470:4:7",
																				"nodeType": "YulIdentifier",
																				"src": "12470:4:7"
																			},
																			{
																				"name": "headStart",
																				"nativeSrc": "12476:9:7",
																				"nodeType": "YulIdentifier",
																				"src": "12476:9:7"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nativeSrc": "12466:3:7",
																			"nodeType": "YulIdentifier",
																			"src": "12466:3:7"
																		},
																		"nativeSrc": "12466:20:7",
																		"nodeType": "YulFunctionCall",
																		"src": "12466:20:7"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "12440:6:7",
																	"nodeType": "YulIdentifier",
																	"src": "12440:6:7"
																},
																"nativeSrc": "12440:47:7",
																"nodeType": "YulFunctionCall",
																"src": "12440:47:7"
															},
															"nativeSrc": "12440:47:7",
															"nodeType": "YulExpressionStatement",
															"src": "12440:47:7"
														},
														{
															"nativeSrc": "12496:132:7",
															"nodeType": "YulAssignment",
															"src": "12496:132:7",
															"value": {
																"arguments": [
																	{
																		"name": "value0",
																		"nativeSrc": "12614:6:7",
																		"nodeType": "YulIdentifier",
																		"src": "12614:6:7"
																	},
																	{
																		"name": "tail",
																		"nativeSrc": "12623:4:7",
																		"nodeType": "YulIdentifier",
																		"src": "12623:4:7"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_struct$_SerializedIssue_$1463_memory_ptr_to_t_struct$_SerializedIssue_$1463_memory_ptr_fromStack",
																	"nativeSrc": "12504:109:7",
																	"nodeType": "YulIdentifier",
																	"src": "12504:109:7"
																},
																"nativeSrc": "12504:124:7",
																"nodeType": "YulFunctionCall",
																"src": "12504:124:7"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "12496:4:7",
																	"nodeType": "YulIdentifier",
																	"src": "12496:4:7"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_struct$_SerializedIssue_$1463_memory_ptr__to_t_struct$_SerializedIssue_$1463_memory_ptr__fromStack_reversed",
												"nativeSrc": "12230:405:7",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "12366:9:7",
														"nodeType": "YulTypedName",
														"src": "12366:9:7",
														"type": ""
													},
													{
														"name": "value0",
														"nativeSrc": "12378:6:7",
														"nodeType": "YulTypedName",
														"src": "12378:6:7",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nativeSrc": "12389:4:7",
														"nodeType": "YulTypedName",
														"src": "12389:4:7",
														"type": ""
													}
												],
												"src": "12230:405:7"
											},
											{
												"body": {
													"nativeSrc": "12724:391:7",
													"nodeType": "YulBlock",
													"src": "12724:391:7",
													"statements": [
														{
															"body": {
																"nativeSrc": "12770:83:7",
																"nodeType": "YulBlock",
																"src": "12770:83:7",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b",
																				"nativeSrc": "12772:77:7",
																				"nodeType": "YulIdentifier",
																				"src": "12772:77:7"
																			},
																			"nativeSrc": "12772:79:7",
																			"nodeType": "YulFunctionCall",
																			"src": "12772:79:7"
																		},
																		"nativeSrc": "12772:79:7",
																		"nodeType": "YulExpressionStatement",
																		"src": "12772:79:7"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dataEnd",
																				"nativeSrc": "12745:7:7",
																				"nodeType": "YulIdentifier",
																				"src": "12745:7:7"
																			},
																			{
																				"name": "headStart",
																				"nativeSrc": "12754:9:7",
																				"nodeType": "YulIdentifier",
																				"src": "12754:9:7"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nativeSrc": "12741:3:7",
																			"nodeType": "YulIdentifier",
																			"src": "12741:3:7"
																		},
																		"nativeSrc": "12741:23:7",
																		"nodeType": "YulFunctionCall",
																		"src": "12741:23:7"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "12766:2:7",
																		"nodeType": "YulLiteral",
																		"src": "12766:2:7",
																		"type": "",
																		"value": "64"
																	}
																],
																"functionName": {
																	"name": "slt",
																	"nativeSrc": "12737:3:7",
																	"nodeType": "YulIdentifier",
																	"src": "12737:3:7"
																},
																"nativeSrc": "12737:32:7",
																"nodeType": "YulFunctionCall",
																"src": "12737:32:7"
															},
															"nativeSrc": "12734:119:7",
															"nodeType": "YulIf",
															"src": "12734:119:7"
														},
														{
															"nativeSrc": "12863:117:7",
															"nodeType": "YulBlock",
															"src": "12863:117:7",
															"statements": [
																{
																	"nativeSrc": "12878:15:7",
																	"nodeType": "YulVariableDeclaration",
																	"src": "12878:15:7",
																	"value": {
																		"kind": "number",
																		"nativeSrc": "12892:1:7",
																		"nodeType": "YulLiteral",
																		"src": "12892:1:7",
																		"type": "",
																		"value": "0"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nativeSrc": "12882:6:7",
																			"nodeType": "YulTypedName",
																			"src": "12882:6:7",
																			"type": ""
																		}
																	]
																},
																{
																	"nativeSrc": "12907:63:7",
																	"nodeType": "YulAssignment",
																	"src": "12907:63:7",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nativeSrc": "12942:9:7",
																						"nodeType": "YulIdentifier",
																						"src": "12942:9:7"
																					},
																					{
																						"name": "offset",
																						"nativeSrc": "12953:6:7",
																						"nodeType": "YulIdentifier",
																						"src": "12953:6:7"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nativeSrc": "12938:3:7",
																					"nodeType": "YulIdentifier",
																					"src": "12938:3:7"
																				},
																				"nativeSrc": "12938:22:7",
																				"nodeType": "YulFunctionCall",
																				"src": "12938:22:7"
																			},
																			{
																				"name": "dataEnd",
																				"nativeSrc": "12962:7:7",
																				"nodeType": "YulIdentifier",
																				"src": "12962:7:7"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_address",
																			"nativeSrc": "12917:20:7",
																			"nodeType": "YulIdentifier",
																			"src": "12917:20:7"
																		},
																		"nativeSrc": "12917:53:7",
																		"nodeType": "YulFunctionCall",
																		"src": "12917:53:7"
																	},
																	"variableNames": [
																		{
																			"name": "value0",
																			"nativeSrc": "12907:6:7",
																			"nodeType": "YulIdentifier",
																			"src": "12907:6:7"
																		}
																	]
																}
															]
														},
														{
															"nativeSrc": "12990:118:7",
															"nodeType": "YulBlock",
															"src": "12990:118:7",
															"statements": [
																{
																	"nativeSrc": "13005:16:7",
																	"nodeType": "YulVariableDeclaration",
																	"src": "13005:16:7",
																	"value": {
																		"kind": "number",
																		"nativeSrc": "13019:2:7",
																		"nodeType": "YulLiteral",
																		"src": "13019:2:7",
																		"type": "",
																		"value": "32"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nativeSrc": "13009:6:7",
																			"nodeType": "YulTypedName",
																			"src": "13009:6:7",
																			"type": ""
																		}
																	]
																},
																{
																	"nativeSrc": "13035:63:7",
																	"nodeType": "YulAssignment",
																	"src": "13035:63:7",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nativeSrc": "13070:9:7",
																						"nodeType": "YulIdentifier",
																						"src": "13070:9:7"
																					},
																					{
																						"name": "offset",
																						"nativeSrc": "13081:6:7",
																						"nodeType": "YulIdentifier",
																						"src": "13081:6:7"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nativeSrc": "13066:3:7",
																					"nodeType": "YulIdentifier",
																					"src": "13066:3:7"
																				},
																				"nativeSrc": "13066:22:7",
																				"nodeType": "YulFunctionCall",
																				"src": "13066:22:7"
																			},
																			{
																				"name": "dataEnd",
																				"nativeSrc": "13090:7:7",
																				"nodeType": "YulIdentifier",
																				"src": "13090:7:7"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_address",
																			"nativeSrc": "13045:20:7",
																			"nodeType": "YulIdentifier",
																			"src": "13045:20:7"
																		},
																		"nativeSrc": "13045:53:7",
																		"nodeType": "YulFunctionCall",
																		"src": "13045:53:7"
																	},
																	"variableNames": [
																		{
																			"name": "value1",
																			"nativeSrc": "13035:6:7",
																			"nodeType": "YulIdentifier",
																			"src": "13035:6:7"
																		}
																	]
																}
															]
														}
													]
												},
												"name": "abi_decode_tuple_t_addresst_address",
												"nativeSrc": "12641:474:7",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "12686:9:7",
														"nodeType": "YulTypedName",
														"src": "12686:9:7",
														"type": ""
													},
													{
														"name": "dataEnd",
														"nativeSrc": "12697:7:7",
														"nodeType": "YulTypedName",
														"src": "12697:7:7",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value0",
														"nativeSrc": "12709:6:7",
														"nodeType": "YulTypedName",
														"src": "12709:6:7",
														"type": ""
													},
													{
														"name": "value1",
														"nativeSrc": "12717:6:7",
														"nodeType": "YulTypedName",
														"src": "12717:6:7",
														"type": ""
													}
												],
												"src": "12641:474:7"
											},
											{
												"body": {
													"nativeSrc": "13149:152:7",
													"nodeType": "YulBlock",
													"src": "13149:152:7",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "13166:1:7",
																		"nodeType": "YulLiteral",
																		"src": "13166:1:7",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "13169:77:7",
																		"nodeType": "YulLiteral",
																		"src": "13169:77:7",
																		"type": "",
																		"value": "35408467139433450592217433187231851964531694900788300625387963629091585785856"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "13159:6:7",
																	"nodeType": "YulIdentifier",
																	"src": "13159:6:7"
																},
																"nativeSrc": "13159:88:7",
																"nodeType": "YulFunctionCall",
																"src": "13159:88:7"
															},
															"nativeSrc": "13159:88:7",
															"nodeType": "YulExpressionStatement",
															"src": "13159:88:7"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "13263:1:7",
																		"nodeType": "YulLiteral",
																		"src": "13263:1:7",
																		"type": "",
																		"value": "4"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "13266:4:7",
																		"nodeType": "YulLiteral",
																		"src": "13266:4:7",
																		"type": "",
																		"value": "0x22"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "13256:6:7",
																	"nodeType": "YulIdentifier",
																	"src": "13256:6:7"
																},
																"nativeSrc": "13256:15:7",
																"nodeType": "YulFunctionCall",
																"src": "13256:15:7"
															},
															"nativeSrc": "13256:15:7",
															"nodeType": "YulExpressionStatement",
															"src": "13256:15:7"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "13287:1:7",
																		"nodeType": "YulLiteral",
																		"src": "13287:1:7",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "13290:4:7",
																		"nodeType": "YulLiteral",
																		"src": "13290:4:7",
																		"type": "",
																		"value": "0x24"
																	}
																],
																"functionName": {
																	"name": "revert",
																	"nativeSrc": "13280:6:7",
																	"nodeType": "YulIdentifier",
																	"src": "13280:6:7"
																},
																"nativeSrc": "13280:15:7",
																"nodeType": "YulFunctionCall",
																"src": "13280:15:7"
															},
															"nativeSrc": "13280:15:7",
															"nodeType": "YulExpressionStatement",
															"src": "13280:15:7"
														}
													]
												},
												"name": "panic_error_0x22",
												"nativeSrc": "13121:180:7",
												"nodeType": "YulFunctionDefinition",
												"src": "13121:180:7"
											},
											{
												"body": {
													"nativeSrc": "13358:269:7",
													"nodeType": "YulBlock",
													"src": "13358:269:7",
													"statements": [
														{
															"nativeSrc": "13368:22:7",
															"nodeType": "YulAssignment",
															"src": "13368:22:7",
															"value": {
																"arguments": [
																	{
																		"name": "data",
																		"nativeSrc": "13382:4:7",
																		"nodeType": "YulIdentifier",
																		"src": "13382:4:7"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "13388:1:7",
																		"nodeType": "YulLiteral",
																		"src": "13388:1:7",
																		"type": "",
																		"value": "2"
																	}
																],
																"functionName": {
																	"name": "div",
																	"nativeSrc": "13378:3:7",
																	"nodeType": "YulIdentifier",
																	"src": "13378:3:7"
																},
																"nativeSrc": "13378:12:7",
																"nodeType": "YulFunctionCall",
																"src": "13378:12:7"
															},
															"variableNames": [
																{
																	"name": "length",
																	"nativeSrc": "13368:6:7",
																	"nodeType": "YulIdentifier",
																	"src": "13368:6:7"
																}
															]
														},
														{
															"nativeSrc": "13399:38:7",
															"nodeType": "YulVariableDeclaration",
															"src": "13399:38:7",
															"value": {
																"arguments": [
																	{
																		"name": "data",
																		"nativeSrc": "13429:4:7",
																		"nodeType": "YulIdentifier",
																		"src": "13429:4:7"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "13435:1:7",
																		"nodeType": "YulLiteral",
																		"src": "13435:1:7",
																		"type": "",
																		"value": "1"
																	}
																],
																"functionName": {
																	"name": "and",
																	"nativeSrc": "13425:3:7",
																	"nodeType": "YulIdentifier",
																	"src": "13425:3:7"
																},
																"nativeSrc": "13425:12:7",
																"nodeType": "YulFunctionCall",
																"src": "13425:12:7"
															},
															"variables": [
																{
																	"name": "outOfPlaceEncoding",
																	"nativeSrc": "13403:18:7",
																	"nodeType": "YulTypedName",
																	"src": "13403:18:7",
																	"type": ""
																}
															]
														},
														{
															"body": {
																"nativeSrc": "13476:51:7",
																"nodeType": "YulBlock",
																"src": "13476:51:7",
																"statements": [
																	{
																		"nativeSrc": "13490:27:7",
																		"nodeType": "YulAssignment",
																		"src": "13490:27:7",
																		"value": {
																			"arguments": [
																				{
																					"name": "length",
																					"nativeSrc": "13504:6:7",
																					"nodeType": "YulIdentifier",
																					"src": "13504:6:7"
																				},
																				{
																					"kind": "number",
																					"nativeSrc": "13512:4:7",
																					"nodeType": "YulLiteral",
																					"src": "13512:4:7",
																					"type": "",
																					"value": "0x7f"
																				}
																			],
																			"functionName": {
																				"name": "and",
																				"nativeSrc": "13500:3:7",
																				"nodeType": "YulIdentifier",
																				"src": "13500:3:7"
																			},
																			"nativeSrc": "13500:17:7",
																			"nodeType": "YulFunctionCall",
																			"src": "13500:17:7"
																		},
																		"variableNames": [
																			{
																				"name": "length",
																				"nativeSrc": "13490:6:7",
																				"nodeType": "YulIdentifier",
																				"src": "13490:6:7"
																			}
																		]
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "outOfPlaceEncoding",
																		"nativeSrc": "13456:18:7",
																		"nodeType": "YulIdentifier",
																		"src": "13456:18:7"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nativeSrc": "13449:6:7",
																	"nodeType": "YulIdentifier",
																	"src": "13449:6:7"
																},
																"nativeSrc": "13449:26:7",
																"nodeType": "YulFunctionCall",
																"src": "13449:26:7"
															},
															"nativeSrc": "13446:81:7",
															"nodeType": "YulIf",
															"src": "13446:81:7"
														},
														{
															"body": {
																"nativeSrc": "13579:42:7",
																"nodeType": "YulBlock",
																"src": "13579:42:7",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "panic_error_0x22",
																				"nativeSrc": "13593:16:7",
																				"nodeType": "YulIdentifier",
																				"src": "13593:16:7"
																			},
																			"nativeSrc": "13593:18:7",
																			"nodeType": "YulFunctionCall",
																			"src": "13593:18:7"
																		},
																		"nativeSrc": "13593:18:7",
																		"nodeType": "YulExpressionStatement",
																		"src": "13593:18:7"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "outOfPlaceEncoding",
																		"nativeSrc": "13543:18:7",
																		"nodeType": "YulIdentifier",
																		"src": "13543:18:7"
																	},
																	{
																		"arguments": [
																			{
																				"name": "length",
																				"nativeSrc": "13566:6:7",
																				"nodeType": "YulIdentifier",
																				"src": "13566:6:7"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "13574:2:7",
																				"nodeType": "YulLiteral",
																				"src": "13574:2:7",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "lt",
																			"nativeSrc": "13563:2:7",
																			"nodeType": "YulIdentifier",
																			"src": "13563:2:7"
																		},
																		"nativeSrc": "13563:14:7",
																		"nodeType": "YulFunctionCall",
																		"src": "13563:14:7"
																	}
																],
																"functionName": {
																	"name": "eq",
																	"nativeSrc": "13540:2:7",
																	"nodeType": "YulIdentifier",
																	"src": "13540:2:7"
																},
																"nativeSrc": "13540:38:7",
																"nodeType": "YulFunctionCall",
																"src": "13540:38:7"
															},
															"nativeSrc": "13537:84:7",
															"nodeType": "YulIf",
															"src": "13537:84:7"
														}
													]
												},
												"name": "extract_byte_array_length",
												"nativeSrc": "13307:320:7",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "data",
														"nativeSrc": "13342:4:7",
														"nodeType": "YulTypedName",
														"src": "13342:4:7",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "length",
														"nativeSrc": "13351:6:7",
														"nodeType": "YulTypedName",
														"src": "13351:6:7",
														"type": ""
													}
												],
												"src": "13307:320:7"
											},
											{
												"body": {
													"nativeSrc": "13661:152:7",
													"nodeType": "YulBlock",
													"src": "13661:152:7",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "13678:1:7",
																		"nodeType": "YulLiteral",
																		"src": "13678:1:7",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "13681:77:7",
																		"nodeType": "YulLiteral",
																		"src": "13681:77:7",
																		"type": "",
																		"value": "35408467139433450592217433187231851964531694900788300625387963629091585785856"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "13671:6:7",
																	"nodeType": "YulIdentifier",
																	"src": "13671:6:7"
																},
																"nativeSrc": "13671:88:7",
																"nodeType": "YulFunctionCall",
																"src": "13671:88:7"
															},
															"nativeSrc": "13671:88:7",
															"nodeType": "YulExpressionStatement",
															"src": "13671:88:7"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "13775:1:7",
																		"nodeType": "YulLiteral",
																		"src": "13775:1:7",
																		"type": "",
																		"value": "4"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "13778:4:7",
																		"nodeType": "YulLiteral",
																		"src": "13778:4:7",
																		"type": "",
																		"value": "0x11"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "13768:6:7",
																	"nodeType": "YulIdentifier",
																	"src": "13768:6:7"
																},
																"nativeSrc": "13768:15:7",
																"nodeType": "YulFunctionCall",
																"src": "13768:15:7"
															},
															"nativeSrc": "13768:15:7",
															"nodeType": "YulExpressionStatement",
															"src": "13768:15:7"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "13799:1:7",
																		"nodeType": "YulLiteral",
																		"src": "13799:1:7",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "13802:4:7",
																		"nodeType": "YulLiteral",
																		"src": "13802:4:7",
																		"type": "",
																		"value": "0x24"
																	}
																],
																"functionName": {
																	"name": "revert",
																	"nativeSrc": "13792:6:7",
																	"nodeType": "YulIdentifier",
																	"src": "13792:6:7"
																},
																"nativeSrc": "13792:15:7",
																"nodeType": "YulFunctionCall",
																"src": "13792:15:7"
															},
															"nativeSrc": "13792:15:7",
															"nodeType": "YulExpressionStatement",
															"src": "13792:15:7"
														}
													]
												},
												"name": "panic_error_0x11",
												"nativeSrc": "13633:180:7",
												"nodeType": "YulFunctionDefinition",
												"src": "13633:180:7"
											},
											{
												"body": {
													"nativeSrc": "13863:147:7",
													"nodeType": "YulBlock",
													"src": "13863:147:7",
													"statements": [
														{
															"nativeSrc": "13873:25:7",
															"nodeType": "YulAssignment",
															"src": "13873:25:7",
															"value": {
																"arguments": [
																	{
																		"name": "x",
																		"nativeSrc": "13896:1:7",
																		"nodeType": "YulIdentifier",
																		"src": "13896:1:7"
																	}
																],
																"functionName": {
																	"name": "cleanup_t_uint256",
																	"nativeSrc": "13878:17:7",
																	"nodeType": "YulIdentifier",
																	"src": "13878:17:7"
																},
																"nativeSrc": "13878:20:7",
																"nodeType": "YulFunctionCall",
																"src": "13878:20:7"
															},
															"variableNames": [
																{
																	"name": "x",
																	"nativeSrc": "13873:1:7",
																	"nodeType": "YulIdentifier",
																	"src": "13873:1:7"
																}
															]
														},
														{
															"nativeSrc": "13907:25:7",
															"nodeType": "YulAssignment",
															"src": "13907:25:7",
															"value": {
																"arguments": [
																	{
																		"name": "y",
																		"nativeSrc": "13930:1:7",
																		"nodeType": "YulIdentifier",
																		"src": "13930:1:7"
																	}
																],
																"functionName": {
																	"name": "cleanup_t_uint256",
																	"nativeSrc": "13912:17:7",
																	"nodeType": "YulIdentifier",
																	"src": "13912:17:7"
																},
																"nativeSrc": "13912:20:7",
																"nodeType": "YulFunctionCall",
																"src": "13912:20:7"
															},
															"variableNames": [
																{
																	"name": "y",
																	"nativeSrc": "13907:1:7",
																	"nodeType": "YulIdentifier",
																	"src": "13907:1:7"
																}
															]
														},
														{
															"nativeSrc": "13941:16:7",
															"nodeType": "YulAssignment",
															"src": "13941:16:7",
															"value": {
																"arguments": [
																	{
																		"name": "x",
																		"nativeSrc": "13952:1:7",
																		"nodeType": "YulIdentifier",
																		"src": "13952:1:7"
																	},
																	{
																		"name": "y",
																		"nativeSrc": "13955:1:7",
																		"nodeType": "YulIdentifier",
																		"src": "13955:1:7"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "13948:3:7",
																	"nodeType": "YulIdentifier",
																	"src": "13948:3:7"
																},
																"nativeSrc": "13948:9:7",
																"nodeType": "YulFunctionCall",
																"src": "13948:9:7"
															},
															"variableNames": [
																{
																	"name": "sum",
																	"nativeSrc": "13941:3:7",
																	"nodeType": "YulIdentifier",
																	"src": "13941:3:7"
																}
															]
														},
														{
															"body": {
																"nativeSrc": "13981:22:7",
																"nodeType": "YulBlock",
																"src": "13981:22:7",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "panic_error_0x11",
																				"nativeSrc": "13983:16:7",
																				"nodeType": "YulIdentifier",
																				"src": "13983:16:7"
																			},
																			"nativeSrc": "13983:18:7",
																			"nodeType": "YulFunctionCall",
																			"src": "13983:18:7"
																		},
																		"nativeSrc": "13983:18:7",
																		"nodeType": "YulExpressionStatement",
																		"src": "13983:18:7"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "x",
																		"nativeSrc": "13973:1:7",
																		"nodeType": "YulIdentifier",
																		"src": "13973:1:7"
																	},
																	{
																		"name": "sum",
																		"nativeSrc": "13976:3:7",
																		"nodeType": "YulIdentifier",
																		"src": "13976:3:7"
																	}
																],
																"functionName": {
																	"name": "gt",
																	"nativeSrc": "13970:2:7",
																	"nodeType": "YulIdentifier",
																	"src": "13970:2:7"
																},
																"nativeSrc": "13970:10:7",
																"nodeType": "YulFunctionCall",
																"src": "13970:10:7"
															},
															"nativeSrc": "13967:36:7",
															"nodeType": "YulIf",
															"src": "13967:36:7"
														}
													]
												},
												"name": "checked_add_t_uint256",
												"nativeSrc": "13819:191:7",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "x",
														"nativeSrc": "13850:1:7",
														"nodeType": "YulTypedName",
														"src": "13850:1:7",
														"type": ""
													},
													{
														"name": "y",
														"nativeSrc": "13853:1:7",
														"nodeType": "YulTypedName",
														"src": "13853:1:7",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "sum",
														"nativeSrc": "13859:3:7",
														"nodeType": "YulTypedName",
														"src": "13859:3:7",
														"type": ""
													}
												],
												"src": "13819:191:7"
											},
											{
												"body": {
													"nativeSrc": "14082:31:7",
													"nodeType": "YulBlock",
													"src": "14082:31:7",
													"statements": [
														{
															"nativeSrc": "14093:13:7",
															"nodeType": "YulAssignment",
															"src": "14093:13:7",
															"value": {
																"name": "len",
																"nativeSrc": "14103:3:7",
																"nodeType": "YulIdentifier",
																"src": "14103:3:7"
															},
															"variableNames": [
																{
																	"name": "length",
																	"nativeSrc": "14093:6:7",
																	"nodeType": "YulIdentifier",
																	"src": "14093:6:7"
																}
															]
														}
													]
												},
												"name": "array_length_t_string_calldata_ptr",
												"nativeSrc": "14016:97:7",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "14060:5:7",
														"nodeType": "YulTypedName",
														"src": "14060:5:7",
														"type": ""
													},
													{
														"name": "len",
														"nativeSrc": "14067:3:7",
														"nodeType": "YulTypedName",
														"src": "14067:3:7",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "length",
														"nativeSrc": "14075:6:7",
														"nodeType": "YulTypedName",
														"src": "14075:6:7",
														"type": ""
													}
												],
												"src": "14016:97:7"
											},
											{
												"body": {
													"nativeSrc": "14147:152:7",
													"nodeType": "YulBlock",
													"src": "14147:152:7",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "14164:1:7",
																		"nodeType": "YulLiteral",
																		"src": "14164:1:7",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "14167:77:7",
																		"nodeType": "YulLiteral",
																		"src": "14167:77:7",
																		"type": "",
																		"value": "35408467139433450592217433187231851964531694900788300625387963629091585785856"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "14157:6:7",
																	"nodeType": "YulIdentifier",
																	"src": "14157:6:7"
																},
																"nativeSrc": "14157:88:7",
																"nodeType": "YulFunctionCall",
																"src": "14157:88:7"
															},
															"nativeSrc": "14157:88:7",
															"nodeType": "YulExpressionStatement",
															"src": "14157:88:7"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "14261:1:7",
																		"nodeType": "YulLiteral",
																		"src": "14261:1:7",
																		"type": "",
																		"value": "4"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "14264:4:7",
																		"nodeType": "YulLiteral",
																		"src": "14264:4:7",
																		"type": "",
																		"value": "0x41"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "14254:6:7",
																	"nodeType": "YulIdentifier",
																	"src": "14254:6:7"
																},
																"nativeSrc": "14254:15:7",
																"nodeType": "YulFunctionCall",
																"src": "14254:15:7"
															},
															"nativeSrc": "14254:15:7",
															"nodeType": "YulExpressionStatement",
															"src": "14254:15:7"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "14285:1:7",
																		"nodeType": "YulLiteral",
																		"src": "14285:1:7",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "14288:4:7",
																		"nodeType": "YulLiteral",
																		"src": "14288:4:7",
																		"type": "",
																		"value": "0x24"
																	}
																],
																"functionName": {
																	"name": "revert",
																	"nativeSrc": "14278:6:7",
																	"nodeType": "YulIdentifier",
																	"src": "14278:6:7"
																},
																"nativeSrc": "14278:15:7",
																"nodeType": "YulFunctionCall",
																"src": "14278:15:7"
															},
															"nativeSrc": "14278:15:7",
															"nodeType": "YulExpressionStatement",
															"src": "14278:15:7"
														}
													]
												},
												"name": "panic_error_0x41",
												"nativeSrc": "14119:180:7",
												"nodeType": "YulFunctionDefinition",
												"src": "14119:180:7"
											},
											{
												"body": {
													"nativeSrc": "14359:87:7",
													"nodeType": "YulBlock",
													"src": "14359:87:7",
													"statements": [
														{
															"nativeSrc": "14369:11:7",
															"nodeType": "YulAssignment",
															"src": "14369:11:7",
															"value": {
																"name": "ptr",
																"nativeSrc": "14377:3:7",
																"nodeType": "YulIdentifier",
																"src": "14377:3:7"
															},
															"variableNames": [
																{
																	"name": "data",
																	"nativeSrc": "14369:4:7",
																	"nodeType": "YulIdentifier",
																	"src": "14369:4:7"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "14397:1:7",
																		"nodeType": "YulLiteral",
																		"src": "14397:1:7",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"name": "ptr",
																		"nativeSrc": "14400:3:7",
																		"nodeType": "YulIdentifier",
																		"src": "14400:3:7"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "14390:6:7",
																	"nodeType": "YulIdentifier",
																	"src": "14390:6:7"
																},
																"nativeSrc": "14390:14:7",
																"nodeType": "YulFunctionCall",
																"src": "14390:14:7"
															},
															"nativeSrc": "14390:14:7",
															"nodeType": "YulExpressionStatement",
															"src": "14390:14:7"
														},
														{
															"nativeSrc": "14413:26:7",
															"nodeType": "YulAssignment",
															"src": "14413:26:7",
															"value": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "14431:1:7",
																		"nodeType": "YulLiteral",
																		"src": "14431:1:7",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "14434:4:7",
																		"nodeType": "YulLiteral",
																		"src": "14434:4:7",
																		"type": "",
																		"value": "0x20"
																	}
																],
																"functionName": {
																	"name": "keccak256",
																	"nativeSrc": "14421:9:7",
																	"nodeType": "YulIdentifier",
																	"src": "14421:9:7"
																},
																"nativeSrc": "14421:18:7",
																"nodeType": "YulFunctionCall",
																"src": "14421:18:7"
															},
															"variableNames": [
																{
																	"name": "data",
																	"nativeSrc": "14413:4:7",
																	"nodeType": "YulIdentifier",
																	"src": "14413:4:7"
																}
															]
														}
													]
												},
												"name": "array_dataslot_t_string_storage",
												"nativeSrc": "14305:141:7",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "ptr",
														"nativeSrc": "14346:3:7",
														"nodeType": "YulTypedName",
														"src": "14346:3:7",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "data",
														"nativeSrc": "14354:4:7",
														"nodeType": "YulTypedName",
														"src": "14354:4:7",
														"type": ""
													}
												],
												"src": "14305:141:7"
											},
											{
												"body": {
													"nativeSrc": "14496:49:7",
													"nodeType": "YulBlock",
													"src": "14496:49:7",
													"statements": [
														{
															"nativeSrc": "14506:33:7",
															"nodeType": "YulAssignment",
															"src": "14506:33:7",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nativeSrc": "14524:5:7",
																				"nodeType": "YulIdentifier",
																				"src": "14524:5:7"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "14531:2:7",
																				"nodeType": "YulLiteral",
																				"src": "14531:2:7",
																				"type": "",
																				"value": "31"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "14520:3:7",
																			"nodeType": "YulIdentifier",
																			"src": "14520:3:7"
																		},
																		"nativeSrc": "14520:14:7",
																		"nodeType": "YulFunctionCall",
																		"src": "14520:14:7"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "14536:2:7",
																		"nodeType": "YulLiteral",
																		"src": "14536:2:7",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "div",
																	"nativeSrc": "14516:3:7",
																	"nodeType": "YulIdentifier",
																	"src": "14516:3:7"
																},
																"nativeSrc": "14516:23:7",
																"nodeType": "YulFunctionCall",
																"src": "14516:23:7"
															},
															"variableNames": [
																{
																	"name": "result",
																	"nativeSrc": "14506:6:7",
																	"nodeType": "YulIdentifier",
																	"src": "14506:6:7"
																}
															]
														}
													]
												},
												"name": "divide_by_32_ceil",
												"nativeSrc": "14452:93:7",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "14479:5:7",
														"nodeType": "YulTypedName",
														"src": "14479:5:7",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "result",
														"nativeSrc": "14489:6:7",
														"nodeType": "YulTypedName",
														"src": "14489:6:7",
														"type": ""
													}
												],
												"src": "14452:93:7"
											},
											{
												"body": {
													"nativeSrc": "14604:54:7",
													"nodeType": "YulBlock",
													"src": "14604:54:7",
													"statements": [
														{
															"nativeSrc": "14614:37:7",
															"nodeType": "YulAssignment",
															"src": "14614:37:7",
															"value": {
																"arguments": [
																	{
																		"name": "bits",
																		"nativeSrc": "14639:4:7",
																		"nodeType": "YulIdentifier",
																		"src": "14639:4:7"
																	},
																	{
																		"name": "value",
																		"nativeSrc": "14645:5:7",
																		"nodeType": "YulIdentifier",
																		"src": "14645:5:7"
																	}
																],
																"functionName": {
																	"name": "shl",
																	"nativeSrc": "14635:3:7",
																	"nodeType": "YulIdentifier",
																	"src": "14635:3:7"
																},
																"nativeSrc": "14635:16:7",
																"nodeType": "YulFunctionCall",
																"src": "14635:16:7"
															},
															"variableNames": [
																{
																	"name": "newValue",
																	"nativeSrc": "14614:8:7",
																	"nodeType": "YulIdentifier",
																	"src": "14614:8:7"
																}
															]
														}
													]
												},
												"name": "shift_left_dynamic",
												"nativeSrc": "14551:107:7",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "bits",
														"nativeSrc": "14579:4:7",
														"nodeType": "YulTypedName",
														"src": "14579:4:7",
														"type": ""
													},
													{
														"name": "value",
														"nativeSrc": "14585:5:7",
														"nodeType": "YulTypedName",
														"src": "14585:5:7",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "newValue",
														"nativeSrc": "14595:8:7",
														"nodeType": "YulTypedName",
														"src": "14595:8:7",
														"type": ""
													}
												],
												"src": "14551:107:7"
											},
											{
												"body": {
													"nativeSrc": "14740:317:7",
													"nodeType": "YulBlock",
													"src": "14740:317:7",
													"statements": [
														{
															"nativeSrc": "14750:35:7",
															"nodeType": "YulVariableDeclaration",
															"src": "14750:35:7",
															"value": {
																"arguments": [
																	{
																		"name": "shiftBytes",
																		"nativeSrc": "14771:10:7",
																		"nodeType": "YulIdentifier",
																		"src": "14771:10:7"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "14783:1:7",
																		"nodeType": "YulLiteral",
																		"src": "14783:1:7",
																		"type": "",
																		"value": "8"
																	}
																],
																"functionName": {
																	"name": "mul",
																	"nativeSrc": "14767:3:7",
																	"nodeType": "YulIdentifier",
																	"src": "14767:3:7"
																},
																"nativeSrc": "14767:18:7",
																"nodeType": "YulFunctionCall",
																"src": "14767:18:7"
															},
															"variables": [
																{
																	"name": "shiftBits",
																	"nativeSrc": "14754:9:7",
																	"nodeType": "YulTypedName",
																	"src": "14754:9:7",
																	"type": ""
																}
															]
														},
														{
															"nativeSrc": "14794:109:7",
															"nodeType": "YulVariableDeclaration",
															"src": "14794:109:7",
															"value": {
																"arguments": [
																	{
																		"name": "shiftBits",
																		"nativeSrc": "14825:9:7",
																		"nodeType": "YulIdentifier",
																		"src": "14825:9:7"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "14836:66:7",
																		"nodeType": "YulLiteral",
																		"src": "14836:66:7",
																		"type": "",
																		"value": "0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff"
																	}
																],
																"functionName": {
																	"name": "shift_left_dynamic",
																	"nativeSrc": "14806:18:7",
																	"nodeType": "YulIdentifier",
																	"src": "14806:18:7"
																},
																"nativeSrc": "14806:97:7",
																"nodeType": "YulFunctionCall",
																"src": "14806:97:7"
															},
															"variables": [
																{
																	"name": "mask",
																	"nativeSrc": "14798:4:7",
																	"nodeType": "YulTypedName",
																	"src": "14798:4:7",
																	"type": ""
																}
															]
														},
														{
															"nativeSrc": "14912:51:7",
															"nodeType": "YulAssignment",
															"src": "14912:51:7",
															"value": {
																"arguments": [
																	{
																		"name": "shiftBits",
																		"nativeSrc": "14943:9:7",
																		"nodeType": "YulIdentifier",
																		"src": "14943:9:7"
																	},
																	{
																		"name": "toInsert",
																		"nativeSrc": "14954:8:7",
																		"nodeType": "YulIdentifier",
																		"src": "14954:8:7"
																	}
																],
																"functionName": {
																	"name": "shift_left_dynamic",
																	"nativeSrc": "14924:18:7",
																	"nodeType": "YulIdentifier",
																	"src": "14924:18:7"
																},
																"nativeSrc": "14924:39:7",
																"nodeType": "YulFunctionCall",
																"src": "14924:39:7"
															},
															"variableNames": [
																{
																	"name": "toInsert",
																	"nativeSrc": "14912:8:7",
																	"nodeType": "YulIdentifier",
																	"src": "14912:8:7"
																}
															]
														},
														{
															"nativeSrc": "14972:30:7",
															"nodeType": "YulAssignment",
															"src": "14972:30:7",
															"value": {
																"arguments": [
																	{
																		"name": "value",
																		"nativeSrc": "14985:5:7",
																		"nodeType": "YulIdentifier",
																		"src": "14985:5:7"
																	},
																	{
																		"arguments": [
																			{
																				"name": "mask",
																				"nativeSrc": "14996:4:7",
																				"nodeType": "YulIdentifier",
																				"src": "14996:4:7"
																			}
																		],
																		"functionName": {
																			"name": "not",
																			"nativeSrc": "14992:3:7",
																			"nodeType": "YulIdentifier",
																			"src": "14992:3:7"
																		},
																		"nativeSrc": "14992:9:7",
																		"nodeType": "YulFunctionCall",
																		"src": "14992:9:7"
																	}
																],
																"functionName": {
																	"name": "and",
																	"nativeSrc": "14981:3:7",
																	"nodeType": "YulIdentifier",
																	"src": "14981:3:7"
																},
																"nativeSrc": "14981:21:7",
																"nodeType": "YulFunctionCall",
																"src": "14981:21:7"
															},
															"variableNames": [
																{
																	"name": "value",
																	"nativeSrc": "14972:5:7",
																	"nodeType": "YulIdentifier",
																	"src": "14972:5:7"
																}
															]
														},
														{
															"nativeSrc": "15011:40:7",
															"nodeType": "YulAssignment",
															"src": "15011:40:7",
															"value": {
																"arguments": [
																	{
																		"name": "value",
																		"nativeSrc": "15024:5:7",
																		"nodeType": "YulIdentifier",
																		"src": "15024:5:7"
																	},
																	{
																		"arguments": [
																			{
																				"name": "toInsert",
																				"nativeSrc": "15035:8:7",
																				"nodeType": "YulIdentifier",
																				"src": "15035:8:7"
																			},
																			{
																				"name": "mask",
																				"nativeSrc": "15045:4:7",
																				"nodeType": "YulIdentifier",
																				"src": "15045:4:7"
																			}
																		],
																		"functionName": {
																			"name": "and",
																			"nativeSrc": "15031:3:7",
																			"nodeType": "YulIdentifier",
																			"src": "15031:3:7"
																		},
																		"nativeSrc": "15031:19:7",
																		"nodeType": "YulFunctionCall",
																		"src": "15031:19:7"
																	}
																],
																"functionName": {
																	"name": "or",
																	"nativeSrc": "15021:2:7",
																	"nodeType": "YulIdentifier",
																	"src": "15021:2:7"
																},
																"nativeSrc": "15021:30:7",
																"nodeType": "YulFunctionCall",
																"src": "15021:30:7"
															},
															"variableNames": [
																{
																	"name": "result",
																	"nativeSrc": "15011:6:7",
																	"nodeType": "YulIdentifier",
																	"src": "15011:6:7"
																}
															]
														}
													]
												},
												"name": "update_byte_slice_dynamic32",
												"nativeSrc": "14664:393:7",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "14701:5:7",
														"nodeType": "YulTypedName",
														"src": "14701:5:7",
														"type": ""
													},
													{
														"name": "shiftBytes",
														"nativeSrc": "14708:10:7",
														"nodeType": "YulTypedName",
														"src": "14708:10:7",
														"type": ""
													},
													{
														"name": "toInsert",
														"nativeSrc": "14720:8:7",
														"nodeType": "YulTypedName",
														"src": "14720:8:7",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "result",
														"nativeSrc": "14733:6:7",
														"nodeType": "YulTypedName",
														"src": "14733:6:7",
														"type": ""
													}
												],
												"src": "14664:393:7"
											},
											{
												"body": {
													"nativeSrc": "15095:28:7",
													"nodeType": "YulBlock",
													"src": "15095:28:7",
													"statements": [
														{
															"nativeSrc": "15105:12:7",
															"nodeType": "YulAssignment",
															"src": "15105:12:7",
															"value": {
																"name": "value",
																"nativeSrc": "15112:5:7",
																"nodeType": "YulIdentifier",
																"src": "15112:5:7"
															},
															"variableNames": [
																{
																	"name": "ret",
																	"nativeSrc": "15105:3:7",
																	"nodeType": "YulIdentifier",
																	"src": "15105:3:7"
																}
															]
														}
													]
												},
												"name": "identity",
												"nativeSrc": "15063:60:7",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "15081:5:7",
														"nodeType": "YulTypedName",
														"src": "15081:5:7",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "ret",
														"nativeSrc": "15091:3:7",
														"nodeType": "YulTypedName",
														"src": "15091:3:7",
														"type": ""
													}
												],
												"src": "15063:60:7"
											},
											{
												"body": {
													"nativeSrc": "15189:82:7",
													"nodeType": "YulBlock",
													"src": "15189:82:7",
													"statements": [
														{
															"nativeSrc": "15199:66:7",
															"nodeType": "YulAssignment",
															"src": "15199:66:7",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "value",
																						"nativeSrc": "15257:5:7",
																						"nodeType": "YulIdentifier",
																						"src": "15257:5:7"
																					}
																				],
																				"functionName": {
																					"name": "cleanup_t_uint256",
																					"nativeSrc": "15239:17:7",
																					"nodeType": "YulIdentifier",
																					"src": "15239:17:7"
																				},
																				"nativeSrc": "15239:24:7",
																				"nodeType": "YulFunctionCall",
																				"src": "15239:24:7"
																			}
																		],
																		"functionName": {
																			"name": "identity",
																			"nativeSrc": "15230:8:7",
																			"nodeType": "YulIdentifier",
																			"src": "15230:8:7"
																		},
																		"nativeSrc": "15230:34:7",
																		"nodeType": "YulFunctionCall",
																		"src": "15230:34:7"
																	}
																],
																"functionName": {
																	"name": "cleanup_t_uint256",
																	"nativeSrc": "15212:17:7",
																	"nodeType": "YulIdentifier",
																	"src": "15212:17:7"
																},
																"nativeSrc": "15212:53:7",
																"nodeType": "YulFunctionCall",
																"src": "15212:53:7"
															},
															"variableNames": [
																{
																	"name": "converted",
																	"nativeSrc": "15199:9:7",
																	"nodeType": "YulIdentifier",
																	"src": "15199:9:7"
																}
															]
														}
													]
												},
												"name": "convert_t_uint256_to_t_uint256",
												"nativeSrc": "15129:142:7",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "15169:5:7",
														"nodeType": "YulTypedName",
														"src": "15169:5:7",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "converted",
														"nativeSrc": "15179:9:7",
														"nodeType": "YulTypedName",
														"src": "15179:9:7",
														"type": ""
													}
												],
												"src": "15129:142:7"
											},
											{
												"body": {
													"nativeSrc": "15324:28:7",
													"nodeType": "YulBlock",
													"src": "15324:28:7",
													"statements": [
														{
															"nativeSrc": "15334:12:7",
															"nodeType": "YulAssignment",
															"src": "15334:12:7",
															"value": {
																"name": "value",
																"nativeSrc": "15341:5:7",
																"nodeType": "YulIdentifier",
																"src": "15341:5:7"
															},
															"variableNames": [
																{
																	"name": "ret",
																	"nativeSrc": "15334:3:7",
																	"nodeType": "YulIdentifier",
																	"src": "15334:3:7"
																}
															]
														}
													]
												},
												"name": "prepare_store_t_uint256",
												"nativeSrc": "15277:75:7",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "15310:5:7",
														"nodeType": "YulTypedName",
														"src": "15310:5:7",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "ret",
														"nativeSrc": "15320:3:7",
														"nodeType": "YulTypedName",
														"src": "15320:3:7",
														"type": ""
													}
												],
												"src": "15277:75:7"
											},
											{
												"body": {
													"nativeSrc": "15434:193:7",
													"nodeType": "YulBlock",
													"src": "15434:193:7",
													"statements": [
														{
															"nativeSrc": "15444:63:7",
															"nodeType": "YulVariableDeclaration",
															"src": "15444:63:7",
															"value": {
																"arguments": [
																	{
																		"name": "value_0",
																		"nativeSrc": "15499:7:7",
																		"nodeType": "YulIdentifier",
																		"src": "15499:7:7"
																	}
																],
																"functionName": {
																	"name": "convert_t_uint256_to_t_uint256",
																	"nativeSrc": "15468:30:7",
																	"nodeType": "YulIdentifier",
																	"src": "15468:30:7"
																},
																"nativeSrc": "15468:39:7",
																"nodeType": "YulFunctionCall",
																"src": "15468:39:7"
															},
															"variables": [
																{
																	"name": "convertedValue_0",
																	"nativeSrc": "15448:16:7",
																	"nodeType": "YulTypedName",
																	"src": "15448:16:7",
																	"type": ""
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "slot",
																		"nativeSrc": "15523:4:7",
																		"nodeType": "YulIdentifier",
																		"src": "15523:4:7"
																	},
																	{
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "slot",
																						"nativeSrc": "15563:4:7",
																						"nodeType": "YulIdentifier",
																						"src": "15563:4:7"
																					}
																				],
																				"functionName": {
																					"name": "sload",
																					"nativeSrc": "15557:5:7",
																					"nodeType": "YulIdentifier",
																					"src": "15557:5:7"
																				},
																				"nativeSrc": "15557:11:7",
																				"nodeType": "YulFunctionCall",
																				"src": "15557:11:7"
																			},
																			{
																				"name": "offset",
																				"nativeSrc": "15570:6:7",
																				"nodeType": "YulIdentifier",
																				"src": "15570:6:7"
																			},
																			{
																				"arguments": [
																					{
																						"name": "convertedValue_0",
																						"nativeSrc": "15602:16:7",
																						"nodeType": "YulIdentifier",
																						"src": "15602:16:7"
																					}
																				],
																				"functionName": {
																					"name": "prepare_store_t_uint256",
																					"nativeSrc": "15578:23:7",
																					"nodeType": "YulIdentifier",
																					"src": "15578:23:7"
																				},
																				"nativeSrc": "15578:41:7",
																				"nodeType": "YulFunctionCall",
																				"src": "15578:41:7"
																			}
																		],
																		"functionName": {
																			"name": "update_byte_slice_dynamic32",
																			"nativeSrc": "15529:27:7",
																			"nodeType": "YulIdentifier",
																			"src": "15529:27:7"
																		},
																		"nativeSrc": "15529:91:7",
																		"nodeType": "YulFunctionCall",
																		"src": "15529:91:7"
																	}
																],
																"functionName": {
																	"name": "sstore",
																	"nativeSrc": "15516:6:7",
																	"nodeType": "YulIdentifier",
																	"src": "15516:6:7"
																},
																"nativeSrc": "15516:105:7",
																"nodeType": "YulFunctionCall",
																"src": "15516:105:7"
															},
															"nativeSrc": "15516:105:7",
															"nodeType": "YulExpressionStatement",
															"src": "15516:105:7"
														}
													]
												},
												"name": "update_storage_value_t_uint256_to_t_uint256",
												"nativeSrc": "15358:269:7",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "slot",
														"nativeSrc": "15411:4:7",
														"nodeType": "YulTypedName",
														"src": "15411:4:7",
														"type": ""
													},
													{
														"name": "offset",
														"nativeSrc": "15417:6:7",
														"nodeType": "YulTypedName",
														"src": "15417:6:7",
														"type": ""
													},
													{
														"name": "value_0",
														"nativeSrc": "15425:7:7",
														"nodeType": "YulTypedName",
														"src": "15425:7:7",
														"type": ""
													}
												],
												"src": "15358:269:7"
											},
											{
												"body": {
													"nativeSrc": "15682:24:7",
													"nodeType": "YulBlock",
													"src": "15682:24:7",
													"statements": [
														{
															"nativeSrc": "15692:8:7",
															"nodeType": "YulAssignment",
															"src": "15692:8:7",
															"value": {
																"kind": "number",
																"nativeSrc": "15699:1:7",
																"nodeType": "YulLiteral",
																"src": "15699:1:7",
																"type": "",
																"value": "0"
															},
															"variableNames": [
																{
																	"name": "ret",
																	"nativeSrc": "15692:3:7",
																	"nodeType": "YulIdentifier",
																	"src": "15692:3:7"
																}
															]
														}
													]
												},
												"name": "zero_value_for_split_t_uint256",
												"nativeSrc": "15633:73:7",
												"nodeType": "YulFunctionDefinition",
												"returnVariables": [
													{
														"name": "ret",
														"nativeSrc": "15678:3:7",
														"nodeType": "YulTypedName",
														"src": "15678:3:7",
														"type": ""
													}
												],
												"src": "15633:73:7"
											},
											{
												"body": {
													"nativeSrc": "15765:136:7",
													"nodeType": "YulBlock",
													"src": "15765:136:7",
													"statements": [
														{
															"nativeSrc": "15775:46:7",
															"nodeType": "YulVariableDeclaration",
															"src": "15775:46:7",
															"value": {
																"arguments": [],
																"functionName": {
																	"name": "zero_value_for_split_t_uint256",
																	"nativeSrc": "15789:30:7",
																	"nodeType": "YulIdentifier",
																	"src": "15789:30:7"
																},
																"nativeSrc": "15789:32:7",
																"nodeType": "YulFunctionCall",
																"src": "15789:32:7"
															},
															"variables": [
																{
																	"name": "zero_0",
																	"nativeSrc": "15779:6:7",
																	"nodeType": "YulTypedName",
																	"src": "15779:6:7",
																	"type": ""
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "slot",
																		"nativeSrc": "15874:4:7",
																		"nodeType": "YulIdentifier",
																		"src": "15874:4:7"
																	},
																	{
																		"name": "offset",
																		"nativeSrc": "15880:6:7",
																		"nodeType": "YulIdentifier",
																		"src": "15880:6:7"
																	},
																	{
																		"name": "zero_0",
																		"nativeSrc": "15888:6:7",
																		"nodeType": "YulIdentifier",
																		"src": "15888:6:7"
																	}
																],
																"functionName": {
																	"name": "update_storage_value_t_uint256_to_t_uint256",
																	"nativeSrc": "15830:43:7",
																	"nodeType": "YulIdentifier",
																	"src": "15830:43:7"
																},
																"nativeSrc": "15830:65:7",
																"nodeType": "YulFunctionCall",
																"src": "15830:65:7"
															},
															"nativeSrc": "15830:65:7",
															"nodeType": "YulExpressionStatement",
															"src": "15830:65:7"
														}
													]
												},
												"name": "storage_set_to_zero_t_uint256",
												"nativeSrc": "15712:189:7",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "slot",
														"nativeSrc": "15751:4:7",
														"nodeType": "YulTypedName",
														"src": "15751:4:7",
														"type": ""
													},
													{
														"name": "offset",
														"nativeSrc": "15757:6:7",
														"nodeType": "YulTypedName",
														"src": "15757:6:7",
														"type": ""
													}
												],
												"src": "15712:189:7"
											},
											{
												"body": {
													"nativeSrc": "15957:136:7",
													"nodeType": "YulBlock",
													"src": "15957:136:7",
													"statements": [
														{
															"body": {
																"nativeSrc": "16024:63:7",
																"nodeType": "YulBlock",
																"src": "16024:63:7",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"name": "start",
																					"nativeSrc": "16068:5:7",
																					"nodeType": "YulIdentifier",
																					"src": "16068:5:7"
																				},
																				{
																					"kind": "number",
																					"nativeSrc": "16075:1:7",
																					"nodeType": "YulLiteral",
																					"src": "16075:1:7",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "storage_set_to_zero_t_uint256",
																				"nativeSrc": "16038:29:7",
																				"nodeType": "YulIdentifier",
																				"src": "16038:29:7"
																			},
																			"nativeSrc": "16038:39:7",
																			"nodeType": "YulFunctionCall",
																			"src": "16038:39:7"
																		},
																		"nativeSrc": "16038:39:7",
																		"nodeType": "YulExpressionStatement",
																		"src": "16038:39:7"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "start",
																		"nativeSrc": "15977:5:7",
																		"nodeType": "YulIdentifier",
																		"src": "15977:5:7"
																	},
																	{
																		"name": "end",
																		"nativeSrc": "15984:3:7",
																		"nodeType": "YulIdentifier",
																		"src": "15984:3:7"
																	}
																],
																"functionName": {
																	"name": "lt",
																	"nativeSrc": "15974:2:7",
																	"nodeType": "YulIdentifier",
																	"src": "15974:2:7"
																},
																"nativeSrc": "15974:14:7",
																"nodeType": "YulFunctionCall",
																"src": "15974:14:7"
															},
															"nativeSrc": "15967:120:7",
															"nodeType": "YulForLoop",
															"post": {
																"nativeSrc": "15989:26:7",
																"nodeType": "YulBlock",
																"src": "15989:26:7",
																"statements": [
																	{
																		"nativeSrc": "15991:22:7",
																		"nodeType": "YulAssignment",
																		"src": "15991:22:7",
																		"value": {
																			"arguments": [
																				{
																					"name": "start",
																					"nativeSrc": "16004:5:7",
																					"nodeType": "YulIdentifier",
																					"src": "16004:5:7"
																				},
																				{
																					"kind": "number",
																					"nativeSrc": "16011:1:7",
																					"nodeType": "YulLiteral",
																					"src": "16011:1:7",
																					"type": "",
																					"value": "1"
																				}
																			],
																			"functionName": {
																				"name": "add",
																				"nativeSrc": "16000:3:7",
																				"nodeType": "YulIdentifier",
																				"src": "16000:3:7"
																			},
																			"nativeSrc": "16000:13:7",
																			"nodeType": "YulFunctionCall",
																			"src": "16000:13:7"
																		},
																		"variableNames": [
																			{
																				"name": "start",
																				"nativeSrc": "15991:5:7",
																				"nodeType": "YulIdentifier",
																				"src": "15991:5:7"
																			}
																		]
																	}
																]
															},
															"pre": {
																"nativeSrc": "15971:2:7",
																"nodeType": "YulBlock",
																"src": "15971:2:7",
																"statements": []
															},
															"src": "15967:120:7"
														}
													]
												},
												"name": "clear_storage_range_t_bytes1",
												"nativeSrc": "15907:186:7",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "start",
														"nativeSrc": "15945:5:7",
														"nodeType": "YulTypedName",
														"src": "15945:5:7",
														"type": ""
													},
													{
														"name": "end",
														"nativeSrc": "15952:3:7",
														"nodeType": "YulTypedName",
														"src": "15952:3:7",
														"type": ""
													}
												],
												"src": "15907:186:7"
											},
											{
												"body": {
													"nativeSrc": "16178:464:7",
													"nodeType": "YulBlock",
													"src": "16178:464:7",
													"statements": [
														{
															"body": {
																"nativeSrc": "16204:431:7",
																"nodeType": "YulBlock",
																"src": "16204:431:7",
																"statements": [
																	{
																		"nativeSrc": "16218:54:7",
																		"nodeType": "YulVariableDeclaration",
																		"src": "16218:54:7",
																		"value": {
																			"arguments": [
																				{
																					"name": "array",
																					"nativeSrc": "16266:5:7",
																					"nodeType": "YulIdentifier",
																					"src": "16266:5:7"
																				}
																			],
																			"functionName": {
																				"name": "array_dataslot_t_string_storage",
																				"nativeSrc": "16234:31:7",
																				"nodeType": "YulIdentifier",
																				"src": "16234:31:7"
																			},
																			"nativeSrc": "16234:38:7",
																			"nodeType": "YulFunctionCall",
																			"src": "16234:38:7"
																		},
																		"variables": [
																			{
																				"name": "dataArea",
																				"nativeSrc": "16222:8:7",
																				"nodeType": "YulTypedName",
																				"src": "16222:8:7",
																				"type": ""
																			}
																		]
																	},
																	{
																		"nativeSrc": "16285:63:7",
																		"nodeType": "YulVariableDeclaration",
																		"src": "16285:63:7",
																		"value": {
																			"arguments": [
																				{
																					"name": "dataArea",
																					"nativeSrc": "16308:8:7",
																					"nodeType": "YulIdentifier",
																					"src": "16308:8:7"
																				},
																				{
																					"arguments": [
																						{
																							"name": "startIndex",
																							"nativeSrc": "16336:10:7",
																							"nodeType": "YulIdentifier",
																							"src": "16336:10:7"
																						}
																					],
																					"functionName": {
																						"name": "divide_by_32_ceil",
																						"nativeSrc": "16318:17:7",
																						"nodeType": "YulIdentifier",
																						"src": "16318:17:7"
																					},
																					"nativeSrc": "16318:29:7",
																					"nodeType": "YulFunctionCall",
																					"src": "16318:29:7"
																				}
																			],
																			"functionName": {
																				"name": "add",
																				"nativeSrc": "16304:3:7",
																				"nodeType": "YulIdentifier",
																				"src": "16304:3:7"
																			},
																			"nativeSrc": "16304:44:7",
																			"nodeType": "YulFunctionCall",
																			"src": "16304:44:7"
																		},
																		"variables": [
																			{
																				"name": "deleteStart",
																				"nativeSrc": "16289:11:7",
																				"nodeType": "YulTypedName",
																				"src": "16289:11:7",
																				"type": ""
																			}
																		]
																	},
																	{
																		"body": {
																			"nativeSrc": "16505:27:7",
																			"nodeType": "YulBlock",
																			"src": "16505:27:7",
																			"statements": [
																				{
																					"nativeSrc": "16507:23:7",
																					"nodeType": "YulAssignment",
																					"src": "16507:23:7",
																					"value": {
																						"name": "dataArea",
																						"nativeSrc": "16522:8:7",
																						"nodeType": "YulIdentifier",
																						"src": "16522:8:7"
																					},
																					"variableNames": [
																						{
																							"name": "deleteStart",
																							"nativeSrc": "16507:11:7",
																							"nodeType": "YulIdentifier",
																							"src": "16507:11:7"
																						}
																					]
																				}
																			]
																		},
																		"condition": {
																			"arguments": [
																				{
																					"name": "startIndex",
																					"nativeSrc": "16489:10:7",
																					"nodeType": "YulIdentifier",
																					"src": "16489:10:7"
																				},
																				{
																					"kind": "number",
																					"nativeSrc": "16501:2:7",
																					"nodeType": "YulLiteral",
																					"src": "16501:2:7",
																					"type": "",
																					"value": "32"
																				}
																			],
																			"functionName": {
																				"name": "lt",
																				"nativeSrc": "16486:2:7",
																				"nodeType": "YulIdentifier",
																				"src": "16486:2:7"
																			},
																			"nativeSrc": "16486:18:7",
																			"nodeType": "YulFunctionCall",
																			"src": "16486:18:7"
																		},
																		"nativeSrc": "16483:49:7",
																		"nodeType": "YulIf",
																		"src": "16483:49:7"
																	},
																	{
																		"expression": {
																			"arguments": [
																				{
																					"name": "deleteStart",
																					"nativeSrc": "16574:11:7",
																					"nodeType": "YulIdentifier",
																					"src": "16574:11:7"
																				},
																				{
																					"arguments": [
																						{
																							"name": "dataArea",
																							"nativeSrc": "16591:8:7",
																							"nodeType": "YulIdentifier",
																							"src": "16591:8:7"
																						},
																						{
																							"arguments": [
																								{
																									"name": "len",
																									"nativeSrc": "16619:3:7",
																									"nodeType": "YulIdentifier",
																									"src": "16619:3:7"
																								}
																							],
																							"functionName": {
																								"name": "divide_by_32_ceil",
																								"nativeSrc": "16601:17:7",
																								"nodeType": "YulIdentifier",
																								"src": "16601:17:7"
																							},
																							"nativeSrc": "16601:22:7",
																							"nodeType": "YulFunctionCall",
																							"src": "16601:22:7"
																						}
																					],
																					"functionName": {
																						"name": "add",
																						"nativeSrc": "16587:3:7",
																						"nodeType": "YulIdentifier",
																						"src": "16587:3:7"
																					},
																					"nativeSrc": "16587:37:7",
																					"nodeType": "YulFunctionCall",
																					"src": "16587:37:7"
																				}
																			],
																			"functionName": {
																				"name": "clear_storage_range_t_bytes1",
																				"nativeSrc": "16545:28:7",
																				"nodeType": "YulIdentifier",
																				"src": "16545:28:7"
																			},
																			"nativeSrc": "16545:80:7",
																			"nodeType": "YulFunctionCall",
																			"src": "16545:80:7"
																		},
																		"nativeSrc": "16545:80:7",
																		"nodeType": "YulExpressionStatement",
																		"src": "16545:80:7"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "len",
																		"nativeSrc": "16195:3:7",
																		"nodeType": "YulIdentifier",
																		"src": "16195:3:7"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "16200:2:7",
																		"nodeType": "YulLiteral",
																		"src": "16200:2:7",
																		"type": "",
																		"value": "31"
																	}
																],
																"functionName": {
																	"name": "gt",
																	"nativeSrc": "16192:2:7",
																	"nodeType": "YulIdentifier",
																	"src": "16192:2:7"
																},
																"nativeSrc": "16192:11:7",
																"nodeType": "YulFunctionCall",
																"src": "16192:11:7"
															},
															"nativeSrc": "16189:446:7",
															"nodeType": "YulIf",
															"src": "16189:446:7"
														}
													]
												},
												"name": "clean_up_bytearray_end_slots_t_string_storage",
												"nativeSrc": "16099:543:7",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "array",
														"nativeSrc": "16154:5:7",
														"nodeType": "YulTypedName",
														"src": "16154:5:7",
														"type": ""
													},
													{
														"name": "len",
														"nativeSrc": "16161:3:7",
														"nodeType": "YulTypedName",
														"src": "16161:3:7",
														"type": ""
													},
													{
														"name": "startIndex",
														"nativeSrc": "16166:10:7",
														"nodeType": "YulTypedName",
														"src": "16166:10:7",
														"type": ""
													}
												],
												"src": "16099:543:7"
											},
											{
												"body": {
													"nativeSrc": "16711:54:7",
													"nodeType": "YulBlock",
													"src": "16711:54:7",
													"statements": [
														{
															"nativeSrc": "16721:37:7",
															"nodeType": "YulAssignment",
															"src": "16721:37:7",
															"value": {
																"arguments": [
																	{
																		"name": "bits",
																		"nativeSrc": "16746:4:7",
																		"nodeType": "YulIdentifier",
																		"src": "16746:4:7"
																	},
																	{
																		"name": "value",
																		"nativeSrc": "16752:5:7",
																		"nodeType": "YulIdentifier",
																		"src": "16752:5:7"
																	}
																],
																"functionName": {
																	"name": "shr",
																	"nativeSrc": "16742:3:7",
																	"nodeType": "YulIdentifier",
																	"src": "16742:3:7"
																},
																"nativeSrc": "16742:16:7",
																"nodeType": "YulFunctionCall",
																"src": "16742:16:7"
															},
															"variableNames": [
																{
																	"name": "newValue",
																	"nativeSrc": "16721:8:7",
																	"nodeType": "YulIdentifier",
																	"src": "16721:8:7"
																}
															]
														}
													]
												},
												"name": "shift_right_unsigned_dynamic",
												"nativeSrc": "16648:117:7",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "bits",
														"nativeSrc": "16686:4:7",
														"nodeType": "YulTypedName",
														"src": "16686:4:7",
														"type": ""
													},
													{
														"name": "value",
														"nativeSrc": "16692:5:7",
														"nodeType": "YulTypedName",
														"src": "16692:5:7",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "newValue",
														"nativeSrc": "16702:8:7",
														"nodeType": "YulTypedName",
														"src": "16702:8:7",
														"type": ""
													}
												],
												"src": "16648:117:7"
											},
											{
												"body": {
													"nativeSrc": "16822:118:7",
													"nodeType": "YulBlock",
													"src": "16822:118:7",
													"statements": [
														{
															"nativeSrc": "16832:68:7",
															"nodeType": "YulVariableDeclaration",
															"src": "16832:68:7",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"kind": "number",
																						"nativeSrc": "16881:1:7",
																						"nodeType": "YulLiteral",
																						"src": "16881:1:7",
																						"type": "",
																						"value": "8"
																					},
																					{
																						"name": "bytes",
																						"nativeSrc": "16884:5:7",
																						"nodeType": "YulIdentifier",
																						"src": "16884:5:7"
																					}
																				],
																				"functionName": {
																					"name": "mul",
																					"nativeSrc": "16877:3:7",
																					"nodeType": "YulIdentifier",
																					"src": "16877:3:7"
																				},
																				"nativeSrc": "16877:13:7",
																				"nodeType": "YulFunctionCall",
																				"src": "16877:13:7"
																			},
																			{
																				"arguments": [
																					{
																						"kind": "number",
																						"nativeSrc": "16896:1:7",
																						"nodeType": "YulLiteral",
																						"src": "16896:1:7",
																						"type": "",
																						"value": "0"
																					}
																				],
																				"functionName": {
																					"name": "not",
																					"nativeSrc": "16892:3:7",
																					"nodeType": "YulIdentifier",
																					"src": "16892:3:7"
																				},
																				"nativeSrc": "16892:6:7",
																				"nodeType": "YulFunctionCall",
																				"src": "16892:6:7"
																			}
																		],
																		"functionName": {
																			"name": "shift_right_unsigned_dynamic",
																			"nativeSrc": "16848:28:7",
																			"nodeType": "YulIdentifier",
																			"src": "16848:28:7"
																		},
																		"nativeSrc": "16848:51:7",
																		"nodeType": "YulFunctionCall",
																		"src": "16848:51:7"
																	}
																],
																"functionName": {
																	"name": "not",
																	"nativeSrc": "16844:3:7",
																	"nodeType": "YulIdentifier",
																	"src": "16844:3:7"
																},
																"nativeSrc": "16844:56:7",
																"nodeType": "YulFunctionCall",
																"src": "16844:56:7"
															},
															"variables": [
																{
																	"name": "mask",
																	"nativeSrc": "16836:4:7",
																	"nodeType": "YulTypedName",
																	"src": "16836:4:7",
																	"type": ""
																}
															]
														},
														{
															"nativeSrc": "16909:25:7",
															"nodeType": "YulAssignment",
															"src": "16909:25:7",
															"value": {
																"arguments": [
																	{
																		"name": "data",
																		"nativeSrc": "16923:4:7",
																		"nodeType": "YulIdentifier",
																		"src": "16923:4:7"
																	},
																	{
																		"name": "mask",
																		"nativeSrc": "16929:4:7",
																		"nodeType": "YulIdentifier",
																		"src": "16929:4:7"
																	}
																],
																"functionName": {
																	"name": "and",
																	"nativeSrc": "16919:3:7",
																	"nodeType": "YulIdentifier",
																	"src": "16919:3:7"
																},
																"nativeSrc": "16919:15:7",
																"nodeType": "YulFunctionCall",
																"src": "16919:15:7"
															},
															"variableNames": [
																{
																	"name": "result",
																	"nativeSrc": "16909:6:7",
																	"nodeType": "YulIdentifier",
																	"src": "16909:6:7"
																}
															]
														}
													]
												},
												"name": "mask_bytes_dynamic",
												"nativeSrc": "16771:169:7",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "data",
														"nativeSrc": "16799:4:7",
														"nodeType": "YulTypedName",
														"src": "16799:4:7",
														"type": ""
													},
													{
														"name": "bytes",
														"nativeSrc": "16805:5:7",
														"nodeType": "YulTypedName",
														"src": "16805:5:7",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "result",
														"nativeSrc": "16815:6:7",
														"nodeType": "YulTypedName",
														"src": "16815:6:7",
														"type": ""
													}
												],
												"src": "16771:169:7"
											},
											{
												"body": {
													"nativeSrc": "17026:214:7",
													"nodeType": "YulBlock",
													"src": "17026:214:7",
													"statements": [
														{
															"nativeSrc": "17159:37:7",
															"nodeType": "YulAssignment",
															"src": "17159:37:7",
															"value": {
																"arguments": [
																	{
																		"name": "data",
																		"nativeSrc": "17186:4:7",
																		"nodeType": "YulIdentifier",
																		"src": "17186:4:7"
																	},
																	{
																		"name": "len",
																		"nativeSrc": "17192:3:7",
																		"nodeType": "YulIdentifier",
																		"src": "17192:3:7"
																	}
																],
																"functionName": {
																	"name": "mask_bytes_dynamic",
																	"nativeSrc": "17167:18:7",
																	"nodeType": "YulIdentifier",
																	"src": "17167:18:7"
																},
																"nativeSrc": "17167:29:7",
																"nodeType": "YulFunctionCall",
																"src": "17167:29:7"
															},
															"variableNames": [
																{
																	"name": "data",
																	"nativeSrc": "17159:4:7",
																	"nodeType": "YulIdentifier",
																	"src": "17159:4:7"
																}
															]
														},
														{
															"nativeSrc": "17205:29:7",
															"nodeType": "YulAssignment",
															"src": "17205:29:7",
															"value": {
																"arguments": [
																	{
																		"name": "data",
																		"nativeSrc": "17216:4:7",
																		"nodeType": "YulIdentifier",
																		"src": "17216:4:7"
																	},
																	{
																		"arguments": [
																			{
																				"kind": "number",
																				"nativeSrc": "17226:1:7",
																				"nodeType": "YulLiteral",
																				"src": "17226:1:7",
																				"type": "",
																				"value": "2"
																			},
																			{
																				"name": "len",
																				"nativeSrc": "17229:3:7",
																				"nodeType": "YulIdentifier",
																				"src": "17229:3:7"
																			}
																		],
																		"functionName": {
																			"name": "mul",
																			"nativeSrc": "17222:3:7",
																			"nodeType": "YulIdentifier",
																			"src": "17222:3:7"
																		},
																		"nativeSrc": "17222:11:7",
																		"nodeType": "YulFunctionCall",
																		"src": "17222:11:7"
																	}
																],
																"functionName": {
																	"name": "or",
																	"nativeSrc": "17213:2:7",
																	"nodeType": "YulIdentifier",
																	"src": "17213:2:7"
																},
																"nativeSrc": "17213:21:7",
																"nodeType": "YulFunctionCall",
																"src": "17213:21:7"
															},
															"variableNames": [
																{
																	"name": "used",
																	"nativeSrc": "17205:4:7",
																	"nodeType": "YulIdentifier",
																	"src": "17205:4:7"
																}
															]
														}
													]
												},
												"name": "extract_used_part_and_set_length_of_short_byte_array",
												"nativeSrc": "16945:295:7",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "data",
														"nativeSrc": "17007:4:7",
														"nodeType": "YulTypedName",
														"src": "17007:4:7",
														"type": ""
													},
													{
														"name": "len",
														"nativeSrc": "17013:3:7",
														"nodeType": "YulTypedName",
														"src": "17013:3:7",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "used",
														"nativeSrc": "17021:4:7",
														"nodeType": "YulTypedName",
														"src": "17021:4:7",
														"type": ""
													}
												],
												"src": "16945:295:7"
											},
											{
												"body": {
													"nativeSrc": "17344:1304:7",
													"nodeType": "YulBlock",
													"src": "17344:1304:7",
													"statements": [
														{
															"nativeSrc": "17355:58:7",
															"nodeType": "YulVariableDeclaration",
															"src": "17355:58:7",
															"value": {
																"arguments": [
																	{
																		"name": "src",
																		"nativeSrc": "17404:3:7",
																		"nodeType": "YulIdentifier",
																		"src": "17404:3:7"
																	},
																	{
																		"name": "len",
																		"nativeSrc": "17409:3:7",
																		"nodeType": "YulIdentifier",
																		"src": "17409:3:7"
																	}
																],
																"functionName": {
																	"name": "array_length_t_string_calldata_ptr",
																	"nativeSrc": "17369:34:7",
																	"nodeType": "YulIdentifier",
																	"src": "17369:34:7"
																},
																"nativeSrc": "17369:44:7",
																"nodeType": "YulFunctionCall",
																"src": "17369:44:7"
															},
															"variables": [
																{
																	"name": "newLen",
																	"nativeSrc": "17359:6:7",
																	"nodeType": "YulTypedName",
																	"src": "17359:6:7",
																	"type": ""
																}
															]
														},
														{
															"body": {
																"nativeSrc": "17498:22:7",
																"nodeType": "YulBlock",
																"src": "17498:22:7",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "panic_error_0x41",
																				"nativeSrc": "17500:16:7",
																				"nodeType": "YulIdentifier",
																				"src": "17500:16:7"
																			},
																			"nativeSrc": "17500:18:7",
																			"nodeType": "YulFunctionCall",
																			"src": "17500:18:7"
																		},
																		"nativeSrc": "17500:18:7",
																		"nodeType": "YulExpressionStatement",
																		"src": "17500:18:7"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "newLen",
																		"nativeSrc": "17470:6:7",
																		"nodeType": "YulIdentifier",
																		"src": "17470:6:7"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "17478:18:7",
																		"nodeType": "YulLiteral",
																		"src": "17478:18:7",
																		"type": "",
																		"value": "0xffffffffffffffff"
																	}
																],
																"functionName": {
																	"name": "gt",
																	"nativeSrc": "17467:2:7",
																	"nodeType": "YulIdentifier",
																	"src": "17467:2:7"
																},
																"nativeSrc": "17467:30:7",
																"nodeType": "YulFunctionCall",
																"src": "17467:30:7"
															},
															"nativeSrc": "17464:56:7",
															"nodeType": "YulIf",
															"src": "17464:56:7"
														},
														{
															"nativeSrc": "17530:52:7",
															"nodeType": "YulVariableDeclaration",
															"src": "17530:52:7",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "slot",
																				"nativeSrc": "17576:4:7",
																				"nodeType": "YulIdentifier",
																				"src": "17576:4:7"
																			}
																		],
																		"functionName": {
																			"name": "sload",
																			"nativeSrc": "17570:5:7",
																			"nodeType": "YulIdentifier",
																			"src": "17570:5:7"
																		},
																		"nativeSrc": "17570:11:7",
																		"nodeType": "YulFunctionCall",
																		"src": "17570:11:7"
																	}
																],
																"functionName": {
																	"name": "extract_byte_array_length",
																	"nativeSrc": "17544:25:7",
																	"nodeType": "YulIdentifier",
																	"src": "17544:25:7"
																},
																"nativeSrc": "17544:38:7",
																"nodeType": "YulFunctionCall",
																"src": "17544:38:7"
															},
															"variables": [
																{
																	"name": "oldLen",
																	"nativeSrc": "17534:6:7",
																	"nodeType": "YulTypedName",
																	"src": "17534:6:7",
																	"type": ""
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "slot",
																		"nativeSrc": "17675:4:7",
																		"nodeType": "YulIdentifier",
																		"src": "17675:4:7"
																	},
																	{
																		"name": "oldLen",
																		"nativeSrc": "17681:6:7",
																		"nodeType": "YulIdentifier",
																		"src": "17681:6:7"
																	},
																	{
																		"name": "newLen",
																		"nativeSrc": "17689:6:7",
																		"nodeType": "YulIdentifier",
																		"src": "17689:6:7"
																	}
																],
																"functionName": {
																	"name": "clean_up_bytearray_end_slots_t_string_storage",
																	"nativeSrc": "17629:45:7",
																	"nodeType": "YulIdentifier",
																	"src": "17629:45:7"
																},
																"nativeSrc": "17629:67:7",
																"nodeType": "YulFunctionCall",
																"src": "17629:67:7"
															},
															"nativeSrc": "17629:67:7",
															"nodeType": "YulExpressionStatement",
															"src": "17629:67:7"
														},
														{
															"nativeSrc": "17706:18:7",
															"nodeType": "YulVariableDeclaration",
															"src": "17706:18:7",
															"value": {
																"kind": "number",
																"nativeSrc": "17723:1:7",
																"nodeType": "YulLiteral",
																"src": "17723:1:7",
																"type": "",
																"value": "0"
															},
															"variables": [
																{
																	"name": "srcOffset",
																	"nativeSrc": "17710:9:7",
																	"nodeType": "YulTypedName",
																	"src": "17710:9:7",
																	"type": ""
																}
															]
														},
														{
															"cases": [
																{
																	"body": {
																		"nativeSrc": "17771:625:7",
																		"nodeType": "YulBlock",
																		"src": "17771:625:7",
																		"statements": [
																			{
																				"nativeSrc": "17785:37:7",
																				"nodeType": "YulVariableDeclaration",
																				"src": "17785:37:7",
																				"value": {
																					"arguments": [
																						{
																							"name": "newLen",
																							"nativeSrc": "17804:6:7",
																							"nodeType": "YulIdentifier",
																							"src": "17804:6:7"
																						},
																						{
																							"arguments": [
																								{
																									"kind": "number",
																									"nativeSrc": "17816:4:7",
																									"nodeType": "YulLiteral",
																									"src": "17816:4:7",
																									"type": "",
																									"value": "0x1f"
																								}
																							],
																							"functionName": {
																								"name": "not",
																								"nativeSrc": "17812:3:7",
																								"nodeType": "YulIdentifier",
																								"src": "17812:3:7"
																							},
																							"nativeSrc": "17812:9:7",
																							"nodeType": "YulFunctionCall",
																							"src": "17812:9:7"
																						}
																					],
																					"functionName": {
																						"name": "and",
																						"nativeSrc": "17800:3:7",
																						"nodeType": "YulIdentifier",
																						"src": "17800:3:7"
																					},
																					"nativeSrc": "17800:22:7",
																					"nodeType": "YulFunctionCall",
																					"src": "17800:22:7"
																				},
																				"variables": [
																					{
																						"name": "loopEnd",
																						"nativeSrc": "17789:7:7",
																						"nodeType": "YulTypedName",
																						"src": "17789:7:7",
																						"type": ""
																					}
																				]
																			},
																			{
																				"nativeSrc": "17836:51:7",
																				"nodeType": "YulVariableDeclaration",
																				"src": "17836:51:7",
																				"value": {
																					"arguments": [
																						{
																							"name": "slot",
																							"nativeSrc": "17882:4:7",
																							"nodeType": "YulIdentifier",
																							"src": "17882:4:7"
																						}
																					],
																					"functionName": {
																						"name": "array_dataslot_t_string_storage",
																						"nativeSrc": "17850:31:7",
																						"nodeType": "YulIdentifier",
																						"src": "17850:31:7"
																					},
																					"nativeSrc": "17850:37:7",
																					"nodeType": "YulFunctionCall",
																					"src": "17850:37:7"
																				},
																				"variables": [
																					{
																						"name": "dstPtr",
																						"nativeSrc": "17840:6:7",
																						"nodeType": "YulTypedName",
																						"src": "17840:6:7",
																						"type": ""
																					}
																				]
																			},
																			{
																				"nativeSrc": "17900:10:7",
																				"nodeType": "YulVariableDeclaration",
																				"src": "17900:10:7",
																				"value": {
																					"kind": "number",
																					"nativeSrc": "17909:1:7",
																					"nodeType": "YulLiteral",
																					"src": "17909:1:7",
																					"type": "",
																					"value": "0"
																				},
																				"variables": [
																					{
																						"name": "i",
																						"nativeSrc": "17904:1:7",
																						"nodeType": "YulTypedName",
																						"src": "17904:1:7",
																						"type": ""
																					}
																				]
																			},
																			{
																				"body": {
																					"nativeSrc": "17968:170:7",
																					"nodeType": "YulBlock",
																					"src": "17968:170:7",
																					"statements": [
																						{
																							"expression": {
																								"arguments": [
																									{
																										"name": "dstPtr",
																										"nativeSrc": "17993:6:7",
																										"nodeType": "YulIdentifier",
																										"src": "17993:6:7"
																									},
																									{
																										"arguments": [
																											{
																												"arguments": [
																													{
																														"name": "src",
																														"nativeSrc": "18018:3:7",
																														"nodeType": "YulIdentifier",
																														"src": "18018:3:7"
																													},
																													{
																														"name": "srcOffset",
																														"nativeSrc": "18023:9:7",
																														"nodeType": "YulIdentifier",
																														"src": "18023:9:7"
																													}
																												],
																												"functionName": {
																													"name": "add",
																													"nativeSrc": "18014:3:7",
																													"nodeType": "YulIdentifier",
																													"src": "18014:3:7"
																												},
																												"nativeSrc": "18014:19:7",
																												"nodeType": "YulFunctionCall",
																												"src": "18014:19:7"
																											}
																										],
																										"functionName": {
																											"name": "calldataload",
																											"nativeSrc": "18001:12:7",
																											"nodeType": "YulIdentifier",
																											"src": "18001:12:7"
																										},
																										"nativeSrc": "18001:33:7",
																										"nodeType": "YulFunctionCall",
																										"src": "18001:33:7"
																									}
																								],
																								"functionName": {
																									"name": "sstore",
																									"nativeSrc": "17986:6:7",
																									"nodeType": "YulIdentifier",
																									"src": "17986:6:7"
																								},
																								"nativeSrc": "17986:49:7",
																								"nodeType": "YulFunctionCall",
																								"src": "17986:49:7"
																							},
																							"nativeSrc": "17986:49:7",
																							"nodeType": "YulExpressionStatement",
																							"src": "17986:49:7"
																						},
																						{
																							"nativeSrc": "18052:24:7",
																							"nodeType": "YulAssignment",
																							"src": "18052:24:7",
																							"value": {
																								"arguments": [
																									{
																										"name": "dstPtr",
																										"nativeSrc": "18066:6:7",
																										"nodeType": "YulIdentifier",
																										"src": "18066:6:7"
																									},
																									{
																										"kind": "number",
																										"nativeSrc": "18074:1:7",
																										"nodeType": "YulLiteral",
																										"src": "18074:1:7",
																										"type": "",
																										"value": "1"
																									}
																								],
																								"functionName": {
																									"name": "add",
																									"nativeSrc": "18062:3:7",
																									"nodeType": "YulIdentifier",
																									"src": "18062:3:7"
																								},
																								"nativeSrc": "18062:14:7",
																								"nodeType": "YulFunctionCall",
																								"src": "18062:14:7"
																							},
																							"variableNames": [
																								{
																									"name": "dstPtr",
																									"nativeSrc": "18052:6:7",
																									"nodeType": "YulIdentifier",
																									"src": "18052:6:7"
																								}
																							]
																						},
																						{
																							"nativeSrc": "18093:31:7",
																							"nodeType": "YulAssignment",
																							"src": "18093:31:7",
																							"value": {
																								"arguments": [
																									{
																										"name": "srcOffset",
																										"nativeSrc": "18110:9:7",
																										"nodeType": "YulIdentifier",
																										"src": "18110:9:7"
																									},
																									{
																										"kind": "number",
																										"nativeSrc": "18121:2:7",
																										"nodeType": "YulLiteral",
																										"src": "18121:2:7",
																										"type": "",
																										"value": "32"
																									}
																								],
																								"functionName": {
																									"name": "add",
																									"nativeSrc": "18106:3:7",
																									"nodeType": "YulIdentifier",
																									"src": "18106:3:7"
																								},
																								"nativeSrc": "18106:18:7",
																								"nodeType": "YulFunctionCall",
																								"src": "18106:18:7"
																							},
																							"variableNames": [
																								{
																									"name": "srcOffset",
																									"nativeSrc": "18093:9:7",
																									"nodeType": "YulIdentifier",
																									"src": "18093:9:7"
																								}
																							]
																						}
																					]
																				},
																				"condition": {
																					"arguments": [
																						{
																							"name": "i",
																							"nativeSrc": "17934:1:7",
																							"nodeType": "YulIdentifier",
																							"src": "17934:1:7"
																						},
																						{
																							"name": "loopEnd",
																							"nativeSrc": "17937:7:7",
																							"nodeType": "YulIdentifier",
																							"src": "17937:7:7"
																						}
																					],
																					"functionName": {
																						"name": "lt",
																						"nativeSrc": "17931:2:7",
																						"nodeType": "YulIdentifier",
																						"src": "17931:2:7"
																					},
																					"nativeSrc": "17931:14:7",
																					"nodeType": "YulFunctionCall",
																					"src": "17931:14:7"
																				},
																				"nativeSrc": "17923:215:7",
																				"nodeType": "YulForLoop",
																				"post": {
																					"nativeSrc": "17946:21:7",
																					"nodeType": "YulBlock",
																					"src": "17946:21:7",
																					"statements": [
																						{
																							"nativeSrc": "17948:17:7",
																							"nodeType": "YulAssignment",
																							"src": "17948:17:7",
																							"value": {
																								"arguments": [
																									{
																										"name": "i",
																										"nativeSrc": "17957:1:7",
																										"nodeType": "YulIdentifier",
																										"src": "17957:1:7"
																									},
																									{
																										"kind": "number",
																										"nativeSrc": "17960:4:7",
																										"nodeType": "YulLiteral",
																										"src": "17960:4:7",
																										"type": "",
																										"value": "0x20"
																									}
																								],
																								"functionName": {
																									"name": "add",
																									"nativeSrc": "17953:3:7",
																									"nodeType": "YulIdentifier",
																									"src": "17953:3:7"
																								},
																								"nativeSrc": "17953:12:7",
																								"nodeType": "YulFunctionCall",
																								"src": "17953:12:7"
																							},
																							"variableNames": [
																								{
																									"name": "i",
																									"nativeSrc": "17948:1:7",
																									"nodeType": "YulIdentifier",
																									"src": "17948:1:7"
																								}
																							]
																						}
																					]
																				},
																				"pre": {
																					"nativeSrc": "17927:3:7",
																					"nodeType": "YulBlock",
																					"src": "17927:3:7",
																					"statements": []
																				},
																				"src": "17923:215:7"
																			},
																			{
																				"body": {
																					"nativeSrc": "18174:163:7",
																					"nodeType": "YulBlock",
																					"src": "18174:163:7",
																					"statements": [
																						{
																							"nativeSrc": "18192:50:7",
																							"nodeType": "YulVariableDeclaration",
																							"src": "18192:50:7",
																							"value": {
																								"arguments": [
																									{
																										"arguments": [
																											{
																												"name": "src",
																												"nativeSrc": "18226:3:7",
																												"nodeType": "YulIdentifier",
																												"src": "18226:3:7"
																											},
																											{
																												"name": "srcOffset",
																												"nativeSrc": "18231:9:7",
																												"nodeType": "YulIdentifier",
																												"src": "18231:9:7"
																											}
																										],
																										"functionName": {
																											"name": "add",
																											"nativeSrc": "18222:3:7",
																											"nodeType": "YulIdentifier",
																											"src": "18222:3:7"
																										},
																										"nativeSrc": "18222:19:7",
																										"nodeType": "YulFunctionCall",
																										"src": "18222:19:7"
																									}
																								],
																								"functionName": {
																									"name": "calldataload",
																									"nativeSrc": "18209:12:7",
																									"nodeType": "YulIdentifier",
																									"src": "18209:12:7"
																								},
																								"nativeSrc": "18209:33:7",
																								"nodeType": "YulFunctionCall",
																								"src": "18209:33:7"
																							},
																							"variables": [
																								{
																									"name": "lastValue",
																									"nativeSrc": "18196:9:7",
																									"nodeType": "YulTypedName",
																									"src": "18196:9:7",
																									"type": ""
																								}
																							]
																						},
																						{
																							"expression": {
																								"arguments": [
																									{
																										"name": "dstPtr",
																										"nativeSrc": "18266:6:7",
																										"nodeType": "YulIdentifier",
																										"src": "18266:6:7"
																									},
																									{
																										"arguments": [
																											{
																												"name": "lastValue",
																												"nativeSrc": "18293:9:7",
																												"nodeType": "YulIdentifier",
																												"src": "18293:9:7"
																											},
																											{
																												"arguments": [
																													{
																														"name": "newLen",
																														"nativeSrc": "18308:6:7",
																														"nodeType": "YulIdentifier",
																														"src": "18308:6:7"
																													},
																													{
																														"kind": "number",
																														"nativeSrc": "18316:4:7",
																														"nodeType": "YulLiteral",
																														"src": "18316:4:7",
																														"type": "",
																														"value": "0x1f"
																													}
																												],
																												"functionName": {
																													"name": "and",
																													"nativeSrc": "18304:3:7",
																													"nodeType": "YulIdentifier",
																													"src": "18304:3:7"
																												},
																												"nativeSrc": "18304:17:7",
																												"nodeType": "YulFunctionCall",
																												"src": "18304:17:7"
																											}
																										],
																										"functionName": {
																											"name": "mask_bytes_dynamic",
																											"nativeSrc": "18274:18:7",
																											"nodeType": "YulIdentifier",
																											"src": "18274:18:7"
																										},
																										"nativeSrc": "18274:48:7",
																										"nodeType": "YulFunctionCall",
																										"src": "18274:48:7"
																									}
																								],
																								"functionName": {
																									"name": "sstore",
																									"nativeSrc": "18259:6:7",
																									"nodeType": "YulIdentifier",
																									"src": "18259:6:7"
																								},
																								"nativeSrc": "18259:64:7",
																								"nodeType": "YulFunctionCall",
																								"src": "18259:64:7"
																							},
																							"nativeSrc": "18259:64:7",
																							"nodeType": "YulExpressionStatement",
																							"src": "18259:64:7"
																						}
																					]
																				},
																				"condition": {
																					"arguments": [
																						{
																							"name": "loopEnd",
																							"nativeSrc": "18157:7:7",
																							"nodeType": "YulIdentifier",
																							"src": "18157:7:7"
																						},
																						{
																							"name": "newLen",
																							"nativeSrc": "18166:6:7",
																							"nodeType": "YulIdentifier",
																							"src": "18166:6:7"
																						}
																					],
																					"functionName": {
																						"name": "lt",
																						"nativeSrc": "18154:2:7",
																						"nodeType": "YulIdentifier",
																						"src": "18154:2:7"
																					},
																					"nativeSrc": "18154:19:7",
																					"nodeType": "YulFunctionCall",
																					"src": "18154:19:7"
																				},
																				"nativeSrc": "18151:186:7",
																				"nodeType": "YulIf",
																				"src": "18151:186:7"
																			},
																			{
																				"expression": {
																					"arguments": [
																						{
																							"name": "slot",
																							"nativeSrc": "18357:4:7",
																							"nodeType": "YulIdentifier",
																							"src": "18357:4:7"
																						},
																						{
																							"arguments": [
																								{
																									"arguments": [
																										{
																											"name": "newLen",
																											"nativeSrc": "18371:6:7",
																											"nodeType": "YulIdentifier",
																											"src": "18371:6:7"
																										},
																										{
																											"kind": "number",
																											"nativeSrc": "18379:1:7",
																											"nodeType": "YulLiteral",
																											"src": "18379:1:7",
																											"type": "",
																											"value": "2"
																										}
																									],
																									"functionName": {
																										"name": "mul",
																										"nativeSrc": "18367:3:7",
																										"nodeType": "YulIdentifier",
																										"src": "18367:3:7"
																									},
																									"nativeSrc": "18367:14:7",
																									"nodeType": "YulFunctionCall",
																									"src": "18367:14:7"
																								},
																								{
																									"kind": "number",
																									"nativeSrc": "18383:1:7",
																									"nodeType": "YulLiteral",
																									"src": "18383:1:7",
																									"type": "",
																									"value": "1"
																								}
																							],
																							"functionName": {
																								"name": "add",
																								"nativeSrc": "18363:3:7",
																								"nodeType": "YulIdentifier",
																								"src": "18363:3:7"
																							},
																							"nativeSrc": "18363:22:7",
																							"nodeType": "YulFunctionCall",
																							"src": "18363:22:7"
																						}
																					],
																					"functionName": {
																						"name": "sstore",
																						"nativeSrc": "18350:6:7",
																						"nodeType": "YulIdentifier",
																						"src": "18350:6:7"
																					},
																					"nativeSrc": "18350:36:7",
																					"nodeType": "YulFunctionCall",
																					"src": "18350:36:7"
																				},
																				"nativeSrc": "18350:36:7",
																				"nodeType": "YulExpressionStatement",
																				"src": "18350:36:7"
																			}
																		]
																	},
																	"nativeSrc": "17764:632:7",
																	"nodeType": "YulCase",
																	"src": "17764:632:7",
																	"value": {
																		"kind": "number",
																		"nativeSrc": "17769:1:7",
																		"nodeType": "YulLiteral",
																		"src": "17769:1:7",
																		"type": "",
																		"value": "1"
																	}
																},
																{
																	"body": {
																		"nativeSrc": "18413:229:7",
																		"nodeType": "YulBlock",
																		"src": "18413:229:7",
																		"statements": [
																			{
																				"nativeSrc": "18427:14:7",
																				"nodeType": "YulVariableDeclaration",
																				"src": "18427:14:7",
																				"value": {
																					"kind": "number",
																					"nativeSrc": "18440:1:7",
																					"nodeType": "YulLiteral",
																					"src": "18440:1:7",
																					"type": "",
																					"value": "0"
																				},
																				"variables": [
																					{
																						"name": "value",
																						"nativeSrc": "18431:5:7",
																						"nodeType": "YulTypedName",
																						"src": "18431:5:7",
																						"type": ""
																					}
																				]
																			},
																			{
																				"body": {
																					"nativeSrc": "18464:74:7",
																					"nodeType": "YulBlock",
																					"src": "18464:74:7",
																					"statements": [
																						{
																							"nativeSrc": "18482:42:7",
																							"nodeType": "YulAssignment",
																							"src": "18482:42:7",
																							"value": {
																								"arguments": [
																									{
																										"arguments": [
																											{
																												"name": "src",
																												"nativeSrc": "18508:3:7",
																												"nodeType": "YulIdentifier",
																												"src": "18508:3:7"
																											},
																											{
																												"name": "srcOffset",
																												"nativeSrc": "18513:9:7",
																												"nodeType": "YulIdentifier",
																												"src": "18513:9:7"
																											}
																										],
																										"functionName": {
																											"name": "add",
																											"nativeSrc": "18504:3:7",
																											"nodeType": "YulIdentifier",
																											"src": "18504:3:7"
																										},
																										"nativeSrc": "18504:19:7",
																										"nodeType": "YulFunctionCall",
																										"src": "18504:19:7"
																									}
																								],
																								"functionName": {
																									"name": "calldataload",
																									"nativeSrc": "18491:12:7",
																									"nodeType": "YulIdentifier",
																									"src": "18491:12:7"
																								},
																								"nativeSrc": "18491:33:7",
																								"nodeType": "YulFunctionCall",
																								"src": "18491:33:7"
																							},
																							"variableNames": [
																								{
																									"name": "value",
																									"nativeSrc": "18482:5:7",
																									"nodeType": "YulIdentifier",
																									"src": "18482:5:7"
																								}
																							]
																						}
																					]
																				},
																				"condition": {
																					"name": "newLen",
																					"nativeSrc": "18457:6:7",
																					"nodeType": "YulIdentifier",
																					"src": "18457:6:7"
																				},
																				"nativeSrc": "18454:84:7",
																				"nodeType": "YulIf",
																				"src": "18454:84:7"
																			},
																			{
																				"expression": {
																					"arguments": [
																						{
																							"name": "slot",
																							"nativeSrc": "18558:4:7",
																							"nodeType": "YulIdentifier",
																							"src": "18558:4:7"
																						},
																						{
																							"arguments": [
																								{
																									"name": "value",
																									"nativeSrc": "18617:5:7",
																									"nodeType": "YulIdentifier",
																									"src": "18617:5:7"
																								},
																								{
																									"name": "newLen",
																									"nativeSrc": "18624:6:7",
																									"nodeType": "YulIdentifier",
																									"src": "18624:6:7"
																								}
																							],
																							"functionName": {
																								"name": "extract_used_part_and_set_length_of_short_byte_array",
																								"nativeSrc": "18564:52:7",
																								"nodeType": "YulIdentifier",
																								"src": "18564:52:7"
																							},
																							"nativeSrc": "18564:67:7",
																							"nodeType": "YulFunctionCall",
																							"src": "18564:67:7"
																						}
																					],
																					"functionName": {
																						"name": "sstore",
																						"nativeSrc": "18551:6:7",
																						"nodeType": "YulIdentifier",
																						"src": "18551:6:7"
																					},
																					"nativeSrc": "18551:81:7",
																					"nodeType": "YulFunctionCall",
																					"src": "18551:81:7"
																				},
																				"nativeSrc": "18551:81:7",
																				"nodeType": "YulExpressionStatement",
																				"src": "18551:81:7"
																			}
																		]
																	},
																	"nativeSrc": "18405:237:7",
																	"nodeType": "YulCase",
																	"src": "18405:237:7",
																	"value": "default"
																}
															],
															"expression": {
																"arguments": [
																	{
																		"name": "newLen",
																		"nativeSrc": "17744:6:7",
																		"nodeType": "YulIdentifier",
																		"src": "17744:6:7"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "17752:2:7",
																		"nodeType": "YulLiteral",
																		"src": "17752:2:7",
																		"type": "",
																		"value": "31"
																	}
																],
																"functionName": {
																	"name": "gt",
																	"nativeSrc": "17741:2:7",
																	"nodeType": "YulIdentifier",
																	"src": "17741:2:7"
																},
																"nativeSrc": "17741:14:7",
																"nodeType": "YulFunctionCall",
																"src": "17741:14:7"
															},
															"nativeSrc": "17734:908:7",
															"nodeType": "YulSwitch",
															"src": "17734:908:7"
														}
													]
												},
												"name": "copy_byte_array_to_storage_from_t_string_calldata_ptr_to_t_string_storage",
												"nativeSrc": "17245:1403:7",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "slot",
														"nativeSrc": "17328:4:7",
														"nodeType": "YulTypedName",
														"src": "17328:4:7",
														"type": ""
													},
													{
														"name": "src",
														"nativeSrc": "17334:3:7",
														"nodeType": "YulTypedName",
														"src": "17334:3:7",
														"type": ""
													},
													{
														"name": "len",
														"nativeSrc": "17339:3:7",
														"nodeType": "YulTypedName",
														"src": "17339:3:7",
														"type": ""
													}
												],
												"src": "17245:1403:7"
											},
											{
												"body": {
													"nativeSrc": "18699:149:7",
													"nodeType": "YulBlock",
													"src": "18699:149:7",
													"statements": [
														{
															"nativeSrc": "18709:25:7",
															"nodeType": "YulAssignment",
															"src": "18709:25:7",
															"value": {
																"arguments": [
																	{
																		"name": "x",
																		"nativeSrc": "18732:1:7",
																		"nodeType": "YulIdentifier",
																		"src": "18732:1:7"
																	}
																],
																"functionName": {
																	"name": "cleanup_t_uint256",
																	"nativeSrc": "18714:17:7",
																	"nodeType": "YulIdentifier",
																	"src": "18714:17:7"
																},
																"nativeSrc": "18714:20:7",
																"nodeType": "YulFunctionCall",
																"src": "18714:20:7"
															},
															"variableNames": [
																{
																	"name": "x",
																	"nativeSrc": "18709:1:7",
																	"nodeType": "YulIdentifier",
																	"src": "18709:1:7"
																}
															]
														},
														{
															"nativeSrc": "18743:25:7",
															"nodeType": "YulAssignment",
															"src": "18743:25:7",
															"value": {
																"arguments": [
																	{
																		"name": "y",
																		"nativeSrc": "18766:1:7",
																		"nodeType": "YulIdentifier",
																		"src": "18766:1:7"
																	}
																],
																"functionName": {
																	"name": "cleanup_t_uint256",
																	"nativeSrc": "18748:17:7",
																	"nodeType": "YulIdentifier",
																	"src": "18748:17:7"
																},
																"nativeSrc": "18748:20:7",
																"nodeType": "YulFunctionCall",
																"src": "18748:20:7"
															},
															"variableNames": [
																{
																	"name": "y",
																	"nativeSrc": "18743:1:7",
																	"nodeType": "YulIdentifier",
																	"src": "18743:1:7"
																}
															]
														},
														{
															"nativeSrc": "18777:17:7",
															"nodeType": "YulAssignment",
															"src": "18777:17:7",
															"value": {
																"arguments": [
																	{
																		"name": "x",
																		"nativeSrc": "18789:1:7",
																		"nodeType": "YulIdentifier",
																		"src": "18789:1:7"
																	},
																	{
																		"name": "y",
																		"nativeSrc": "18792:1:7",
																		"nodeType": "YulIdentifier",
																		"src": "18792:1:7"
																	}
																],
																"functionName": {
																	"name": "sub",
																	"nativeSrc": "18785:3:7",
																	"nodeType": "YulIdentifier",
																	"src": "18785:3:7"
																},
																"nativeSrc": "18785:9:7",
																"nodeType": "YulFunctionCall",
																"src": "18785:9:7"
															},
															"variableNames": [
																{
																	"name": "diff",
																	"nativeSrc": "18777:4:7",
																	"nodeType": "YulIdentifier",
																	"src": "18777:4:7"
																}
															]
														},
														{
															"body": {
																"nativeSrc": "18819:22:7",
																"nodeType": "YulBlock",
																"src": "18819:22:7",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "panic_error_0x11",
																				"nativeSrc": "18821:16:7",
																				"nodeType": "YulIdentifier",
																				"src": "18821:16:7"
																			},
																			"nativeSrc": "18821:18:7",
																			"nodeType": "YulFunctionCall",
																			"src": "18821:18:7"
																		},
																		"nativeSrc": "18821:18:7",
																		"nodeType": "YulExpressionStatement",
																		"src": "18821:18:7"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "diff",
																		"nativeSrc": "18810:4:7",
																		"nodeType": "YulIdentifier",
																		"src": "18810:4:7"
																	},
																	{
																		"name": "x",
																		"nativeSrc": "18816:1:7",
																		"nodeType": "YulIdentifier",
																		"src": "18816:1:7"
																	}
																],
																"functionName": {
																	"name": "gt",
																	"nativeSrc": "18807:2:7",
																	"nodeType": "YulIdentifier",
																	"src": "18807:2:7"
																},
																"nativeSrc": "18807:11:7",
																"nodeType": "YulFunctionCall",
																"src": "18807:11:7"
															},
															"nativeSrc": "18804:37:7",
															"nodeType": "YulIf",
															"src": "18804:37:7"
														}
													]
												},
												"name": "checked_sub_t_uint256",
												"nativeSrc": "18654:194:7",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "x",
														"nativeSrc": "18685:1:7",
														"nodeType": "YulTypedName",
														"src": "18685:1:7",
														"type": ""
													},
													{
														"name": "y",
														"nativeSrc": "18688:1:7",
														"nodeType": "YulTypedName",
														"src": "18688:1:7",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "diff",
														"nativeSrc": "18694:4:7",
														"nodeType": "YulTypedName",
														"src": "18694:4:7",
														"type": ""
													}
												],
												"src": "18654:194:7"
											},
											{
												"body": {
													"nativeSrc": "18882:152:7",
													"nodeType": "YulBlock",
													"src": "18882:152:7",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "18899:1:7",
																		"nodeType": "YulLiteral",
																		"src": "18899:1:7",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "18902:77:7",
																		"nodeType": "YulLiteral",
																		"src": "18902:77:7",
																		"type": "",
																		"value": "35408467139433450592217433187231851964531694900788300625387963629091585785856"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "18892:6:7",
																	"nodeType": "YulIdentifier",
																	"src": "18892:6:7"
																},
																"nativeSrc": "18892:88:7",
																"nodeType": "YulFunctionCall",
																"src": "18892:88:7"
															},
															"nativeSrc": "18892:88:7",
															"nodeType": "YulExpressionStatement",
															"src": "18892:88:7"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "18996:1:7",
																		"nodeType": "YulLiteral",
																		"src": "18996:1:7",
																		"type": "",
																		"value": "4"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "18999:4:7",
																		"nodeType": "YulLiteral",
																		"src": "18999:4:7",
																		"type": "",
																		"value": "0x32"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "18989:6:7",
																	"nodeType": "YulIdentifier",
																	"src": "18989:6:7"
																},
																"nativeSrc": "18989:15:7",
																"nodeType": "YulFunctionCall",
																"src": "18989:15:7"
															},
															"nativeSrc": "18989:15:7",
															"nodeType": "YulExpressionStatement",
															"src": "18989:15:7"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "19020:1:7",
																		"nodeType": "YulLiteral",
																		"src": "19020:1:7",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "19023:4:7",
																		"nodeType": "YulLiteral",
																		"src": "19023:4:7",
																		"type": "",
																		"value": "0x24"
																	}
																],
																"functionName": {
																	"name": "revert",
																	"nativeSrc": "19013:6:7",
																	"nodeType": "YulIdentifier",
																	"src": "19013:6:7"
																},
																"nativeSrc": "19013:15:7",
																"nodeType": "YulFunctionCall",
																"src": "19013:15:7"
															},
															"nativeSrc": "19013:15:7",
															"nodeType": "YulExpressionStatement",
															"src": "19013:15:7"
														}
													]
												},
												"name": "panic_error_0x32",
												"nativeSrc": "18854:180:7",
												"nodeType": "YulFunctionDefinition",
												"src": "18854:180:7"
											},
											{
												"body": {
													"nativeSrc": "19068:152:7",
													"nodeType": "YulBlock",
													"src": "19068:152:7",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "19085:1:7",
																		"nodeType": "YulLiteral",
																		"src": "19085:1:7",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "19088:77:7",
																		"nodeType": "YulLiteral",
																		"src": "19088:77:7",
																		"type": "",
																		"value": "35408467139433450592217433187231851964531694900788300625387963629091585785856"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "19078:6:7",
																	"nodeType": "YulIdentifier",
																	"src": "19078:6:7"
																},
																"nativeSrc": "19078:88:7",
																"nodeType": "YulFunctionCall",
																"src": "19078:88:7"
															},
															"nativeSrc": "19078:88:7",
															"nodeType": "YulExpressionStatement",
															"src": "19078:88:7"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "19182:1:7",
																		"nodeType": "YulLiteral",
																		"src": "19182:1:7",
																		"type": "",
																		"value": "4"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "19185:4:7",
																		"nodeType": "YulLiteral",
																		"src": "19185:4:7",
																		"type": "",
																		"value": "0x21"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "19175:6:7",
																	"nodeType": "YulIdentifier",
																	"src": "19175:6:7"
																},
																"nativeSrc": "19175:15:7",
																"nodeType": "YulFunctionCall",
																"src": "19175:15:7"
															},
															"nativeSrc": "19175:15:7",
															"nodeType": "YulExpressionStatement",
															"src": "19175:15:7"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "19206:1:7",
																		"nodeType": "YulLiteral",
																		"src": "19206:1:7",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "19209:4:7",
																		"nodeType": "YulLiteral",
																		"src": "19209:4:7",
																		"type": "",
																		"value": "0x24"
																	}
																],
																"functionName": {
																	"name": "revert",
																	"nativeSrc": "19199:6:7",
																	"nodeType": "YulIdentifier",
																	"src": "19199:6:7"
																},
																"nativeSrc": "19199:15:7",
																"nodeType": "YulFunctionCall",
																"src": "19199:15:7"
															},
															"nativeSrc": "19199:15:7",
															"nodeType": "YulExpressionStatement",
															"src": "19199:15:7"
														}
													]
												},
												"name": "panic_error_0x21",
												"nativeSrc": "19040:180:7",
												"nodeType": "YulFunctionDefinition",
												"src": "19040:180:7"
											},
											{
												"body": {
													"nativeSrc": "19291:53:7",
													"nodeType": "YulBlock",
													"src": "19291:53:7",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "19308:3:7",
																		"nodeType": "YulIdentifier",
																		"src": "19308:3:7"
																	},
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nativeSrc": "19331:5:7",
																				"nodeType": "YulIdentifier",
																				"src": "19331:5:7"
																			}
																		],
																		"functionName": {
																			"name": "cleanup_t_address",
																			"nativeSrc": "19313:17:7",
																			"nodeType": "YulIdentifier",
																			"src": "19313:17:7"
																		},
																		"nativeSrc": "19313:24:7",
																		"nodeType": "YulFunctionCall",
																		"src": "19313:24:7"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "19301:6:7",
																	"nodeType": "YulIdentifier",
																	"src": "19301:6:7"
																},
																"nativeSrc": "19301:37:7",
																"nodeType": "YulFunctionCall",
																"src": "19301:37:7"
															},
															"nativeSrc": "19301:37:7",
															"nodeType": "YulExpressionStatement",
															"src": "19301:37:7"
														}
													]
												},
												"name": "abi_encode_t_address_to_t_address_fromStack",
												"nativeSrc": "19226:118:7",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "19279:5:7",
														"nodeType": "YulTypedName",
														"src": "19279:5:7",
														"type": ""
													},
													{
														"name": "pos",
														"nativeSrc": "19286:3:7",
														"nodeType": "YulTypedName",
														"src": "19286:3:7",
														"type": ""
													}
												],
												"src": "19226:118:7"
											},
											{
												"body": {
													"nativeSrc": "19504:288:7",
													"nodeType": "YulBlock",
													"src": "19504:288:7",
													"statements": [
														{
															"nativeSrc": "19514:26:7",
															"nodeType": "YulAssignment",
															"src": "19514:26:7",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "19526:9:7",
																		"nodeType": "YulIdentifier",
																		"src": "19526:9:7"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "19537:2:7",
																		"nodeType": "YulLiteral",
																		"src": "19537:2:7",
																		"type": "",
																		"value": "96"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "19522:3:7",
																	"nodeType": "YulIdentifier",
																	"src": "19522:3:7"
																},
																"nativeSrc": "19522:18:7",
																"nodeType": "YulFunctionCall",
																"src": "19522:18:7"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "19514:4:7",
																	"nodeType": "YulIdentifier",
																	"src": "19514:4:7"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value0",
																		"nativeSrc": "19594:6:7",
																		"nodeType": "YulIdentifier",
																		"src": "19594:6:7"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "19607:9:7",
																				"nodeType": "YulIdentifier",
																				"src": "19607:9:7"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "19618:1:7",
																				"nodeType": "YulLiteral",
																				"src": "19618:1:7",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "19603:3:7",
																			"nodeType": "YulIdentifier",
																			"src": "19603:3:7"
																		},
																		"nativeSrc": "19603:17:7",
																		"nodeType": "YulFunctionCall",
																		"src": "19603:17:7"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_address_to_t_address_fromStack",
																	"nativeSrc": "19550:43:7",
																	"nodeType": "YulIdentifier",
																	"src": "19550:43:7"
																},
																"nativeSrc": "19550:71:7",
																"nodeType": "YulFunctionCall",
																"src": "19550:71:7"
															},
															"nativeSrc": "19550:71:7",
															"nodeType": "YulExpressionStatement",
															"src": "19550:71:7"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value1",
																		"nativeSrc": "19675:6:7",
																		"nodeType": "YulIdentifier",
																		"src": "19675:6:7"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "19688:9:7",
																				"nodeType": "YulIdentifier",
																				"src": "19688:9:7"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "19699:2:7",
																				"nodeType": "YulLiteral",
																				"src": "19699:2:7",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "19684:3:7",
																			"nodeType": "YulIdentifier",
																			"src": "19684:3:7"
																		},
																		"nativeSrc": "19684:18:7",
																		"nodeType": "YulFunctionCall",
																		"src": "19684:18:7"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_uint256_to_t_uint256_fromStack",
																	"nativeSrc": "19631:43:7",
																	"nodeType": "YulIdentifier",
																	"src": "19631:43:7"
																},
																"nativeSrc": "19631:72:7",
																"nodeType": "YulFunctionCall",
																"src": "19631:72:7"
															},
															"nativeSrc": "19631:72:7",
															"nodeType": "YulExpressionStatement",
															"src": "19631:72:7"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value2",
																		"nativeSrc": "19757:6:7",
																		"nodeType": "YulIdentifier",
																		"src": "19757:6:7"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "19770:9:7",
																				"nodeType": "YulIdentifier",
																				"src": "19770:9:7"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "19781:2:7",
																				"nodeType": "YulLiteral",
																				"src": "19781:2:7",
																				"type": "",
																				"value": "64"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "19766:3:7",
																			"nodeType": "YulIdentifier",
																			"src": "19766:3:7"
																		},
																		"nativeSrc": "19766:18:7",
																		"nodeType": "YulFunctionCall",
																		"src": "19766:18:7"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_uint256_to_t_uint256_fromStack",
																	"nativeSrc": "19713:43:7",
																	"nodeType": "YulIdentifier",
																	"src": "19713:43:7"
																},
																"nativeSrc": "19713:72:7",
																"nodeType": "YulFunctionCall",
																"src": "19713:72:7"
															},
															"nativeSrc": "19713:72:7",
															"nodeType": "YulExpressionStatement",
															"src": "19713:72:7"
														}
													]
												},
												"name": "abi_encode_tuple_t_address_t_uint256_t_uint256__to_t_address_t_uint256_t_uint256__fromStack_reversed",
												"nativeSrc": "19350:442:7",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "19460:9:7",
														"nodeType": "YulTypedName",
														"src": "19460:9:7",
														"type": ""
													},
													{
														"name": "value2",
														"nativeSrc": "19472:6:7",
														"nodeType": "YulTypedName",
														"src": "19472:6:7",
														"type": ""
													},
													{
														"name": "value1",
														"nativeSrc": "19480:6:7",
														"nodeType": "YulTypedName",
														"src": "19480:6:7",
														"type": ""
													},
													{
														"name": "value0",
														"nativeSrc": "19488:6:7",
														"nodeType": "YulTypedName",
														"src": "19488:6:7",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nativeSrc": "19499:4:7",
														"nodeType": "YulTypedName",
														"src": "19499:4:7",
														"type": ""
													}
												],
												"src": "19350:442:7"
											},
											{
												"body": {
													"nativeSrc": "19896:124:7",
													"nodeType": "YulBlock",
													"src": "19896:124:7",
													"statements": [
														{
															"nativeSrc": "19906:26:7",
															"nodeType": "YulAssignment",
															"src": "19906:26:7",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "19918:9:7",
																		"nodeType": "YulIdentifier",
																		"src": "19918:9:7"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "19929:2:7",
																		"nodeType": "YulLiteral",
																		"src": "19929:2:7",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "19914:3:7",
																	"nodeType": "YulIdentifier",
																	"src": "19914:3:7"
																},
																"nativeSrc": "19914:18:7",
																"nodeType": "YulFunctionCall",
																"src": "19914:18:7"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "19906:4:7",
																	"nodeType": "YulIdentifier",
																	"src": "19906:4:7"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value0",
																		"nativeSrc": "19986:6:7",
																		"nodeType": "YulIdentifier",
																		"src": "19986:6:7"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "19999:9:7",
																				"nodeType": "YulIdentifier",
																				"src": "19999:9:7"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "20010:1:7",
																				"nodeType": "YulLiteral",
																				"src": "20010:1:7",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "19995:3:7",
																			"nodeType": "YulIdentifier",
																			"src": "19995:3:7"
																		},
																		"nativeSrc": "19995:17:7",
																		"nodeType": "YulFunctionCall",
																		"src": "19995:17:7"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_address_to_t_address_fromStack",
																	"nativeSrc": "19942:43:7",
																	"nodeType": "YulIdentifier",
																	"src": "19942:43:7"
																},
																"nativeSrc": "19942:71:7",
																"nodeType": "YulFunctionCall",
																"src": "19942:71:7"
															},
															"nativeSrc": "19942:71:7",
															"nodeType": "YulExpressionStatement",
															"src": "19942:71:7"
														}
													]
												},
												"name": "abi_encode_tuple_t_address__to_t_address__fromStack_reversed",
												"nativeSrc": "19798:222:7",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "19868:9:7",
														"nodeType": "YulTypedName",
														"src": "19868:9:7",
														"type": ""
													},
													{
														"name": "value0",
														"nativeSrc": "19880:6:7",
														"nodeType": "YulTypedName",
														"src": "19880:6:7",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nativeSrc": "19891:4:7",
														"nodeType": "YulTypedName",
														"src": "19891:4:7",
														"type": ""
													}
												],
												"src": "19798:222:7"
											}
										]
									},
									"contents": "{\n\n    function array_length_t_string_memory_ptr(value) -> length {\n\n        length := mload(value)\n\n    }\n\n    function array_storeLengthForEncoding_t_string_memory_ptr_fromStack(pos, length) -> updated_pos {\n        mstore(pos, length)\n        updated_pos := add(pos, 0x20)\n    }\n\n    function copy_memory_to_memory_with_cleanup(src, dst, length) {\n\n        mcopy(dst, src, length)\n        mstore(add(dst, length), 0)\n\n    }\n\n    function round_up_to_mul_of_32(value) -> result {\n        result := and(add(value, 31), not(31))\n    }\n\n    function abi_encode_t_string_memory_ptr_to_t_string_memory_ptr_fromStack(value, pos) -> end {\n        let length := array_length_t_string_memory_ptr(value)\n        pos := array_storeLengthForEncoding_t_string_memory_ptr_fromStack(pos, length)\n        copy_memory_to_memory_with_cleanup(add(value, 0x20), pos, length)\n        end := add(pos, round_up_to_mul_of_32(length))\n    }\n\n    function abi_encode_tuple_t_string_memory_ptr__to_t_string_memory_ptr__fromStack_reversed(headStart , value0) -> tail {\n        tail := add(headStart, 32)\n\n        mstore(add(headStart, 0), sub(tail, headStart))\n        tail := abi_encode_t_string_memory_ptr_to_t_string_memory_ptr_fromStack(value0,  tail)\n\n    }\n\n    function allocate_unbounded() -> memPtr {\n        memPtr := mload(64)\n    }\n\n    function revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() {\n        revert(0, 0)\n    }\n\n    function revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db() {\n        revert(0, 0)\n    }\n\n    function cleanup_t_uint160(value) -> cleaned {\n        cleaned := and(value, 0xffffffffffffffffffffffffffffffffffffffff)\n    }\n\n    function cleanup_t_address(value) -> cleaned {\n        cleaned := cleanup_t_uint160(value)\n    }\n\n    function validator_revert_t_address(value) {\n        if iszero(eq(value, cleanup_t_address(value))) { revert(0, 0) }\n    }\n\n    function abi_decode_t_address(offset, end) -> value {\n        value := calldataload(offset)\n        validator_revert_t_address(value)\n    }\n\n    function cleanup_t_uint256(value) -> cleaned {\n        cleaned := value\n    }\n\n    function validator_revert_t_uint256(value) {\n        if iszero(eq(value, cleanup_t_uint256(value))) { revert(0, 0) }\n    }\n\n    function abi_decode_t_uint256(offset, end) -> value {\n        value := calldataload(offset)\n        validator_revert_t_uint256(value)\n    }\n\n    function abi_decode_tuple_t_addresst_uint256(headStart, dataEnd) -> value0, value1 {\n        if slt(sub(dataEnd, headStart), 64) { revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() }\n\n        {\n\n            let offset := 0\n\n            value0 := abi_decode_t_address(add(headStart, offset), dataEnd)\n        }\n\n        {\n\n            let offset := 32\n\n            value1 := abi_decode_t_uint256(add(headStart, offset), dataEnd)\n        }\n\n    }\n\n    function cleanup_t_bool(value) -> cleaned {\n        cleaned := iszero(iszero(value))\n    }\n\n    function abi_encode_t_bool_to_t_bool_fromStack(value, pos) {\n        mstore(pos, cleanup_t_bool(value))\n    }\n\n    function abi_encode_tuple_t_bool__to_t_bool__fromStack_reversed(headStart , value0) -> tail {\n        tail := add(headStart, 32)\n\n        abi_encode_t_bool_to_t_bool_fromStack(value0,  add(headStart, 0))\n\n    }\n\n    function abi_encode_t_uint256_to_t_uint256_fromStack(value, pos) {\n        mstore(pos, cleanup_t_uint256(value))\n    }\n\n    function abi_encode_tuple_t_uint256__to_t_uint256__fromStack_reversed(headStart , value0) -> tail {\n        tail := add(headStart, 32)\n\n        abi_encode_t_uint256_to_t_uint256_fromStack(value0,  add(headStart, 0))\n\n    }\n\n    function abi_decode_tuple_t_addresst_addresst_uint256(headStart, dataEnd) -> value0, value1, value2 {\n        if slt(sub(dataEnd, headStart), 96) { revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() }\n\n        {\n\n            let offset := 0\n\n            value0 := abi_decode_t_address(add(headStart, offset), dataEnd)\n        }\n\n        {\n\n            let offset := 32\n\n            value1 := abi_decode_t_address(add(headStart, offset), dataEnd)\n        }\n\n        {\n\n            let offset := 64\n\n            value2 := abi_decode_t_uint256(add(headStart, offset), dataEnd)\n        }\n\n    }\n\n    function cleanup_t_uint8(value) -> cleaned {\n        cleaned := and(value, 0xff)\n    }\n\n    function abi_encode_t_uint8_to_t_uint8_fromStack(value, pos) {\n        mstore(pos, cleanup_t_uint8(value))\n    }\n\n    function abi_encode_tuple_t_uint8__to_t_uint8__fromStack_reversed(headStart , value0) -> tail {\n        tail := add(headStart, 32)\n\n        abi_encode_t_uint8_to_t_uint8_fromStack(value0,  add(headStart, 0))\n\n    }\n\n    function abi_decode_tuple_t_address(headStart, dataEnd) -> value0 {\n        if slt(sub(dataEnd, headStart), 32) { revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() }\n\n        {\n\n            let offset := 0\n\n            value0 := abi_decode_t_address(add(headStart, offset), dataEnd)\n        }\n\n    }\n\n    function revert_error_1b9f4a0a5773e33b91aa01db23bf8c55fce1411167c872835e7fa00a4f17d46d() {\n        revert(0, 0)\n    }\n\n    function revert_error_15abf5612cd996bc235ba1e55a4a30ac60e6bb601ff7ba4ad3f179b6be8d0490() {\n        revert(0, 0)\n    }\n\n    function revert_error_81385d8c0b31fffe14be1da910c8bd3a80be4cfa248e04f42ec0faea3132a8ef() {\n        revert(0, 0)\n    }\n\n    // string\n    function abi_decode_t_string_calldata_ptr(offset, end) -> arrayPos, length {\n        if iszero(slt(add(offset, 0x1f), end)) { revert_error_1b9f4a0a5773e33b91aa01db23bf8c55fce1411167c872835e7fa00a4f17d46d() }\n        length := calldataload(offset)\n        if gt(length, 0xffffffffffffffff) { revert_error_15abf5612cd996bc235ba1e55a4a30ac60e6bb601ff7ba4ad3f179b6be8d0490() }\n        arrayPos := add(offset, 0x20)\n        if gt(add(arrayPos, mul(length, 0x01)), end) { revert_error_81385d8c0b31fffe14be1da910c8bd3a80be4cfa248e04f42ec0faea3132a8ef() }\n    }\n\n    function abi_decode_tuple_t_string_calldata_ptrt_uint256(headStart, dataEnd) -> value0, value1, value2 {\n        if slt(sub(dataEnd, headStart), 64) { revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() }\n\n        {\n\n            let offset := calldataload(add(headStart, 0))\n            if gt(offset, 0xffffffffffffffff) { revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db() }\n\n            value0, value1 := abi_decode_t_string_calldata_ptr(add(headStart, offset), dataEnd)\n        }\n\n        {\n\n            let offset := 32\n\n            value2 := abi_decode_t_uint256(add(headStart, offset), dataEnd)\n        }\n\n    }\n\n    function validator_revert_t_enum$_Vote_$1467(value) {\n        if iszero(lt(value, 3)) { revert(0, 0) }\n    }\n\n    function abi_decode_t_enum$_Vote_$1467(offset, end) -> value {\n        value := calldataload(offset)\n        validator_revert_t_enum$_Vote_$1467(value)\n    }\n\n    function abi_decode_tuple_t_uint256t_enum$_Vote_$1467(headStart, dataEnd) -> value0, value1 {\n        if slt(sub(dataEnd, headStart), 64) { revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() }\n\n        {\n\n            let offset := 0\n\n            value0 := abi_decode_t_uint256(add(headStart, offset), dataEnd)\n        }\n\n        {\n\n            let offset := 32\n\n            value1 := abi_decode_t_enum$_Vote_$1467(add(headStart, offset), dataEnd)\n        }\n\n    }\n\n    function abi_decode_tuple_t_uint256(headStart, dataEnd) -> value0 {\n        if slt(sub(dataEnd, headStart), 32) { revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() }\n\n        {\n\n            let offset := 0\n\n            value0 := abi_decode_t_uint256(add(headStart, offset), dataEnd)\n        }\n\n    }\n\n    function array_length_t_array$_t_address_$dyn_memory_ptr(value) -> length {\n\n        length := mload(value)\n\n    }\n\n    function array_storeLengthForEncoding_t_array$_t_address_$dyn_memory_ptr(pos, length) -> updated_pos {\n        mstore(pos, length)\n        updated_pos := add(pos, 0x20)\n    }\n\n    function array_dataslot_t_array$_t_address_$dyn_memory_ptr(ptr) -> data {\n        data := ptr\n\n        data := add(ptr, 0x20)\n\n    }\n\n    function abi_encode_t_address_to_t_address(value, pos) {\n        mstore(pos, cleanup_t_address(value))\n    }\n\n    function abi_encodeUpdatedPos_t_address_to_t_address(value0, pos) -> updatedPos {\n        abi_encode_t_address_to_t_address(value0, pos)\n        updatedPos := add(pos, 0x20)\n    }\n\n    function array_nextElement_t_array$_t_address_$dyn_memory_ptr(ptr) -> next {\n        next := add(ptr, 0x20)\n    }\n\n    // address[] -> address[]\n    function abi_encode_t_array$_t_address_$dyn_memory_ptr_to_t_array$_t_address_$dyn_memory_ptr(value, pos)  -> end  {\n        let length := array_length_t_array$_t_address_$dyn_memory_ptr(value)\n        pos := array_storeLengthForEncoding_t_array$_t_address_$dyn_memory_ptr(pos, length)\n        let baseRef := array_dataslot_t_array$_t_address_$dyn_memory_ptr(value)\n        let srcPtr := baseRef\n        for { let i := 0 } lt(i, length) { i := add(i, 1) }\n        {\n            let elementValue0 := mload(srcPtr)\n            pos := abi_encodeUpdatedPos_t_address_to_t_address(elementValue0, pos)\n            srcPtr := array_nextElement_t_array$_t_address_$dyn_memory_ptr(srcPtr)\n        }\n        end := pos\n    }\n\n    function array_storeLengthForEncoding_t_string_memory_ptr(pos, length) -> updated_pos {\n        mstore(pos, length)\n        updated_pos := add(pos, 0x20)\n    }\n\n    function abi_encode_t_string_memory_ptr_to_t_string_memory_ptr(value, pos) -> end {\n        let length := array_length_t_string_memory_ptr(value)\n        pos := array_storeLengthForEncoding_t_string_memory_ptr(pos, length)\n        copy_memory_to_memory_with_cleanup(add(value, 0x20), pos, length)\n        end := add(pos, round_up_to_mul_of_32(length))\n    }\n\n    function abi_encode_t_uint256_to_t_uint256(value, pos) {\n        mstore(pos, cleanup_t_uint256(value))\n    }\n\n    function abi_encode_t_bool_to_t_bool(value, pos) {\n        mstore(pos, cleanup_t_bool(value))\n    }\n\n    // struct WeightedVoting.SerializedIssue -> struct WeightedVoting.SerializedIssue\n    function abi_encode_t_struct$_SerializedIssue_$1463_memory_ptr_to_t_struct$_SerializedIssue_$1463_memory_ptr_fromStack(value, pos)  -> end  {\n        let tail := add(pos, 0x0120)\n\n        {\n            // voters\n\n            let memberValue0 := mload(add(value, 0x00))\n\n            mstore(add(pos, 0x00), sub(tail, pos))\n            tail := abi_encode_t_array$_t_address_$dyn_memory_ptr_to_t_array$_t_address_$dyn_memory_ptr(memberValue0, tail)\n\n        }\n\n        {\n            // issueDesc\n\n            let memberValue0 := mload(add(value, 0x20))\n\n            mstore(add(pos, 0x20), sub(tail, pos))\n            tail := abi_encode_t_string_memory_ptr_to_t_string_memory_ptr(memberValue0, tail)\n\n        }\n\n        {\n            // quorum\n\n            let memberValue0 := mload(add(value, 0x40))\n            abi_encode_t_uint256_to_t_uint256(memberValue0, add(pos, 0x40))\n        }\n\n        {\n            // totalVotes\n\n            let memberValue0 := mload(add(value, 0x60))\n            abi_encode_t_uint256_to_t_uint256(memberValue0, add(pos, 0x60))\n        }\n\n        {\n            // votesFor\n\n            let memberValue0 := mload(add(value, 0x80))\n            abi_encode_t_uint256_to_t_uint256(memberValue0, add(pos, 0x80))\n        }\n\n        {\n            // votesAgainst\n\n            let memberValue0 := mload(add(value, 0xa0))\n            abi_encode_t_uint256_to_t_uint256(memberValue0, add(pos, 0xa0))\n        }\n\n        {\n            // votesAbstain\n\n            let memberValue0 := mload(add(value, 0xc0))\n            abi_encode_t_uint256_to_t_uint256(memberValue0, add(pos, 0xc0))\n        }\n\n        {\n            // passed\n\n            let memberValue0 := mload(add(value, 0xe0))\n            abi_encode_t_bool_to_t_bool(memberValue0, add(pos, 0xe0))\n        }\n\n        {\n            // closed\n\n            let memberValue0 := mload(add(value, 0x0100))\n            abi_encode_t_bool_to_t_bool(memberValue0, add(pos, 0x0100))\n        }\n\n        end := tail\n    }\n\n    function abi_encode_tuple_t_struct$_SerializedIssue_$1463_memory_ptr__to_t_struct$_SerializedIssue_$1463_memory_ptr__fromStack_reversed(headStart , value0) -> tail {\n        tail := add(headStart, 32)\n\n        mstore(add(headStart, 0), sub(tail, headStart))\n        tail := abi_encode_t_struct$_SerializedIssue_$1463_memory_ptr_to_t_struct$_SerializedIssue_$1463_memory_ptr_fromStack(value0,  tail)\n\n    }\n\n    function abi_decode_tuple_t_addresst_address(headStart, dataEnd) -> value0, value1 {\n        if slt(sub(dataEnd, headStart), 64) { revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() }\n\n        {\n\n            let offset := 0\n\n            value0 := abi_decode_t_address(add(headStart, offset), dataEnd)\n        }\n\n        {\n\n            let offset := 32\n\n            value1 := abi_decode_t_address(add(headStart, offset), dataEnd)\n        }\n\n    }\n\n    function panic_error_0x22() {\n        mstore(0, 35408467139433450592217433187231851964531694900788300625387963629091585785856)\n        mstore(4, 0x22)\n        revert(0, 0x24)\n    }\n\n    function extract_byte_array_length(data) -> length {\n        length := div(data, 2)\n        let outOfPlaceEncoding := and(data, 1)\n        if iszero(outOfPlaceEncoding) {\n            length := and(length, 0x7f)\n        }\n\n        if eq(outOfPlaceEncoding, lt(length, 32)) {\n            panic_error_0x22()\n        }\n    }\n\n    function panic_error_0x11() {\n        mstore(0, 35408467139433450592217433187231851964531694900788300625387963629091585785856)\n        mstore(4, 0x11)\n        revert(0, 0x24)\n    }\n\n    function checked_add_t_uint256(x, y) -> sum {\n        x := cleanup_t_uint256(x)\n        y := cleanup_t_uint256(y)\n        sum := add(x, y)\n\n        if gt(x, sum) { panic_error_0x11() }\n\n    }\n\n    function array_length_t_string_calldata_ptr(value, len) -> length {\n\n        length := len\n\n    }\n\n    function panic_error_0x41() {\n        mstore(0, 35408467139433450592217433187231851964531694900788300625387963629091585785856)\n        mstore(4, 0x41)\n        revert(0, 0x24)\n    }\n\n    function array_dataslot_t_string_storage(ptr) -> data {\n        data := ptr\n\n        mstore(0, ptr)\n        data := keccak256(0, 0x20)\n\n    }\n\n    function divide_by_32_ceil(value) -> result {\n        result := div(add(value, 31), 32)\n    }\n\n    function shift_left_dynamic(bits, value) -> newValue {\n        newValue :=\n\n        shl(bits, value)\n\n    }\n\n    function update_byte_slice_dynamic32(value, shiftBytes, toInsert) -> result {\n        let shiftBits := mul(shiftBytes, 8)\n        let mask := shift_left_dynamic(shiftBits, 0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff)\n        toInsert := shift_left_dynamic(shiftBits, toInsert)\n        value := and(value, not(mask))\n        result := or(value, and(toInsert, mask))\n    }\n\n    function identity(value) -> ret {\n        ret := value\n    }\n\n    function convert_t_uint256_to_t_uint256(value) -> converted {\n        converted := cleanup_t_uint256(identity(cleanup_t_uint256(value)))\n    }\n\n    function prepare_store_t_uint256(value) -> ret {\n        ret := value\n    }\n\n    function update_storage_value_t_uint256_to_t_uint256(slot, offset, value_0) {\n        let convertedValue_0 := convert_t_uint256_to_t_uint256(value_0)\n        sstore(slot, update_byte_slice_dynamic32(sload(slot), offset, prepare_store_t_uint256(convertedValue_0)))\n    }\n\n    function zero_value_for_split_t_uint256() -> ret {\n        ret := 0\n    }\n\n    function storage_set_to_zero_t_uint256(slot, offset) {\n        let zero_0 := zero_value_for_split_t_uint256()\n        update_storage_value_t_uint256_to_t_uint256(slot, offset, zero_0)\n    }\n\n    function clear_storage_range_t_bytes1(start, end) {\n        for {} lt(start, end) { start := add(start, 1) }\n        {\n            storage_set_to_zero_t_uint256(start, 0)\n        }\n    }\n\n    function clean_up_bytearray_end_slots_t_string_storage(array, len, startIndex) {\n\n        if gt(len, 31) {\n            let dataArea := array_dataslot_t_string_storage(array)\n            let deleteStart := add(dataArea, divide_by_32_ceil(startIndex))\n            // If we are clearing array to be short byte array, we want to clear only data starting from array data area.\n            if lt(startIndex, 32) { deleteStart := dataArea }\n            clear_storage_range_t_bytes1(deleteStart, add(dataArea, divide_by_32_ceil(len)))\n        }\n\n    }\n\n    function shift_right_unsigned_dynamic(bits, value) -> newValue {\n        newValue :=\n\n        shr(bits, value)\n\n    }\n\n    function mask_bytes_dynamic(data, bytes) -> result {\n        let mask := not(shift_right_unsigned_dynamic(mul(8, bytes), not(0)))\n        result := and(data, mask)\n    }\n    function extract_used_part_and_set_length_of_short_byte_array(data, len) -> used {\n        // we want to save only elements that are part of the array after resizing\n        // others should be set to zero\n        data := mask_bytes_dynamic(data, len)\n        used := or(data, mul(2, len))\n    }\n    function copy_byte_array_to_storage_from_t_string_calldata_ptr_to_t_string_storage(slot, src, len) {\n\n        let newLen := array_length_t_string_calldata_ptr(src, len)\n        // Make sure array length is sane\n        if gt(newLen, 0xffffffffffffffff) { panic_error_0x41() }\n\n        let oldLen := extract_byte_array_length(sload(slot))\n\n        // potentially truncate data\n        clean_up_bytearray_end_slots_t_string_storage(slot, oldLen, newLen)\n\n        let srcOffset := 0\n\n        switch gt(newLen, 31)\n        case 1 {\n            let loopEnd := and(newLen, not(0x1f))\n\n            let dstPtr := array_dataslot_t_string_storage(slot)\n            let i := 0\n            for { } lt(i, loopEnd) { i := add(i, 0x20) } {\n                sstore(dstPtr, calldataload(add(src, srcOffset)))\n                dstPtr := add(dstPtr, 1)\n                srcOffset := add(srcOffset, 32)\n            }\n            if lt(loopEnd, newLen) {\n                let lastValue := calldataload(add(src, srcOffset))\n                sstore(dstPtr, mask_bytes_dynamic(lastValue, and(newLen, 0x1f)))\n            }\n            sstore(slot, add(mul(newLen, 2), 1))\n        }\n        default {\n            let value := 0\n            if newLen {\n                value := calldataload(add(src, srcOffset))\n            }\n            sstore(slot, extract_used_part_and_set_length_of_short_byte_array(value, newLen))\n        }\n    }\n\n    function checked_sub_t_uint256(x, y) -> diff {\n        x := cleanup_t_uint256(x)\n        y := cleanup_t_uint256(y)\n        diff := sub(x, y)\n\n        if gt(diff, x) { panic_error_0x11() }\n\n    }\n\n    function panic_error_0x32() {\n        mstore(0, 35408467139433450592217433187231851964531694900788300625387963629091585785856)\n        mstore(4, 0x32)\n        revert(0, 0x24)\n    }\n\n    function panic_error_0x21() {\n        mstore(0, 35408467139433450592217433187231851964531694900788300625387963629091585785856)\n        mstore(4, 0x21)\n        revert(0, 0x24)\n    }\n\n    function abi_encode_t_address_to_t_address_fromStack(value, pos) {\n        mstore(pos, cleanup_t_address(value))\n    }\n\n    function abi_encode_tuple_t_address_t_uint256_t_uint256__to_t_address_t_uint256_t_uint256__fromStack_reversed(headStart , value2, value1, value0) -> tail {\n        tail := add(headStart, 96)\n\n        abi_encode_t_address_to_t_address_fromStack(value0,  add(headStart, 0))\n\n        abi_encode_t_uint256_to_t_uint256_fromStack(value1,  add(headStart, 32))\n\n        abi_encode_t_uint256_to_t_uint256_fromStack(value2,  add(headStart, 64))\n\n    }\n\n    function abi_encode_tuple_t_address__to_t_address__fromStack_reversed(headStart , value0) -> tail {\n        tail := add(headStart, 32)\n\n        abi_encode_t_address_to_t_address_fromStack(value0,  add(headStart, 0))\n\n    }\n\n}\n",
									"id": 7,
									"language": "Yul",
									"name": "#utility.yul"
								}
							],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "608060405234801561000f575f80fd5b50600436106100fe575f3560e01c8063830953ab11610095578063976b311311610064578063976b3113146102ae578063a9059cbb146102de578063d5abeb011461030e578063dd62ed3e1461032c576100fe565b8063830953ab146102265780638615d85514610244578063943e82161461027457806395d89b4114610290576100fe565b8063313ce567116100d1578063313ce5671461019e5780634e71d92d146101bc578063624601b6146101c657806370a08231146101f6576100fe565b806306fdde0314610102578063095ea7b31461012057806318160ddd1461015057806323b872dd1461016e575b5f80fd5b61010a61035c565b6040516101179190611393565b60405180910390f35b61013a60048036038101906101359190611448565b6103ec565b60405161014791906114a0565b60405180910390f35b61015861040e565b60405161016591906114c8565b60405180910390f35b610188600480360381019061018391906114e1565b610417565b60405161019591906114a0565b60405180910390f35b6101a6610445565b6040516101b3919061154c565b60405180910390f35b6101c461044d565b005b6101e060048036038101906101db9190611565565b610581565b6040516101ed91906114a0565b60405180910390f35b610210600480360381019061020b9190611565565b61059e565b60405161021d91906114c8565b60405180910390f35b61022e6105e3565b60405161023b91906114c8565b60405180910390f35b61025e600480360381019061025991906115f1565b6105e9565b60405161026b91906114c8565b60405180910390f35b61028e60048036038101906102899190611671565b6106c6565b005b610298610904565b6040516102a59190611393565b60405180910390f35b6102c860048036038101906102c391906116af565b610994565b6040516102d591906118c0565b60405180910390f35b6102f860048036038101906102f39190611448565b610ad4565b60405161030591906114a0565b60405180910390f35b610316610af6565b60405161032391906114c8565b60405180910390f35b610346600480360381019061034191906118e0565b610afc565b60405161035391906114c8565b60405180910390f35b60606003805461036b9061194b565b80601f01602080910402602001604051908101604052809291908181526020018280546103979061194b565b80156103e25780601f106103b9576101008083540402835291602001916103e2565b820191905f5260205f20905b8154815290600101906020018083116103c557829003601f168201915b5050505050905090565b5f806103f6610b7e565b9050610403818585610b85565b600191505092915050565b5f600254905090565b5f80610421610b7e565b905061042e858285610b97565b610439858585610c2a565b60019150509392505050565b5f6012905090565b60085460095461045b61040e565b61046591906119a8565b111561049d576040517fcbe2483100000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b60075f3373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020015f205f9054906101000a900460ff161561051e576040517f0b1327a600000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b61052a33600954610d1a565b600160075f3373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020015f205f6101000a81548160ff021916908315150217905550565b6007602052805f5260405f205f915054906101000a900460ff1681565b5f805f8373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020015f20549050919050565b60095481565b5f806105f43361059e565b0361062b576040517f8439960d00000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b61063361040e565b82111561066c576040517f0d92730000000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b5f600660018160018154018082558091505003905f5260205f209060090201905084848260020191826106a0929190611baf565b5082816003018190555060016006805490506106bc9190611c7c565b9150509392505050565b5f600683815481106106db576106da611caf565b5b905f5260205f20906009020190508060080160019054906101000a900460ff1615610732576040517f66b6cb4a00000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b61074733825f01610d9990919063ffffffff16565b1561077e576040517f7c9a1cf900000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b5f6107883361059e565b90505f81036107c3576040517f8439960d00000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b5f60028111156107d6576107d5611cdc565b5b8360028111156107e9576107e8611cdc565b5b0361080d5780826006015f82825461080191906119a8565b92505081905550610874565b6001600281111561082157610820611cdc565b5b83600281111561083457610833611cdc565b5b036108585780826005015f82825461084c91906119a8565b92505081905550610873565b80826007015f82825461086b91906119a8565b925050819055505b5b61088933835f01610dc690919063ffffffff16565b5080826004015f82825461089d91906119a8565b9250508190555081600301548260040154106108fe5760018260080160016101000a81548160ff0219169083151502179055508160060154826005015411156108fd576001826008015f6101000a81548160ff0219169083151502179055505b5b50505050565b6060600480546109139061194b565b80601f016020809104026020016040519081016040528092919081815260200182805461093f9061194b565b801561098a5780601f106109615761010080835404028352916020019161098a565b820191905f5260205f20905b81548152906001019060200180831161096d57829003601f168201915b5050505050905090565b61099c6112da565b5f600683815481106109b1576109b0611caf565b5b905f5260205f20906009020190506040518061012001604052806109d6835f01610df3565b81526020018260020180546109ea9061194b565b80601f0160208091040260200160405190810160405280929190818152602001828054610a169061194b565b8015610a615780601f10610a3857610100808354040283529160200191610a61565b820191905f5260205f20905b815481529060010190602001808311610a4457829003601f168201915b505050505081526020018260030154815260200182600401548152602001826005015481526020018260060154815260200182600701548152602001826008015f9054906101000a900460ff16151581526020018260080160019054906101000a900460ff161515815250915050919050565b5f80610ade610b7e565b9050610aeb818585610c2a565b600191505092915050565b60085481565b5f60015f8473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020015f205f8373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020015f2054905092915050565b5f33905090565b610b928383836001610e12565b505050565b5f610ba28484610afc565b90507fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff811015610c245781811015610c15578281836040517ffb8f41b2000000000000000000000000000000000000000000000000000000008152600401610c0c93929190611d18565b60405180910390fd5b610c2384848484035f610e12565b5b50505050565b5f73ffffffffffffffffffffffffffffffffffffffff168373ffffffffffffffffffffffffffffffffffffffff1603610c9a575f6040517f96c6fd1e000000000000000000000000000000000000000000000000000000008152600401610c919190611d4d565b60405180910390fd5b5f73ffffffffffffffffffffffffffffffffffffffff168273ffffffffffffffffffffffffffffffffffffffff1603610d0a575f6040517fec442f05000000000000000000000000000000000000000000000000000000008152600401610d019190611d4d565b60405180910390fd5b610d15838383610fe1565b505050565b5f73ffffffffffffffffffffffffffffffffffffffff168273ffffffffffffffffffffffffffffffffffffffff1603610d8a575f6040517fec442f05000000000000000000000000000000000000000000000000000000008152600401610d819190611d4d565b60405180910390fd5b610d955f8383610fe1565b5050565b5f610dbe835f018373ffffffffffffffffffffffffffffffffffffffff165f1b6111fa565b905092915050565b5f610deb835f018373ffffffffffffffffffffffffffffffffffffffff165f1b61121a565b905092915050565b60605f610e01835f01611281565b905060608190508092505050919050565b5f73ffffffffffffffffffffffffffffffffffffffff168473ffffffffffffffffffffffffffffffffffffffff1603610e82575f6040517fe602df05000000000000000000000000000000000000000000000000000000008152600401610e799190611d4d565b60405180910390fd5b5f73ffffffffffffffffffffffffffffffffffffffff168373ffffffffffffffffffffffffffffffffffffffff1603610ef2575f6040517f94280d62000000000000000000000000000000000000000000000000000000008152600401610ee99190611d4d565b60405180910390fd5b8160015f8673ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020015f205f8573ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020015f20819055508015610fdb578273ffffffffffffffffffffffffffffffffffffffff168473ffffffffffffffffffffffffffffffffffffffff167f8c5be1e5ebec7d5bd14f71427d1e84f3dd0314c0f7b2291e5b200ac8c7c3b92584604051610fd291906114c8565b60405180910390a35b50505050565b5f73ffffffffffffffffffffffffffffffffffffffff168373ffffffffffffffffffffffffffffffffffffffff1603611031578060025f82825461102591906119a8565b925050819055506110ff565b5f805f8573ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020015f20549050818110156110ba578381836040517fe450d38c0000000000000000000000000000000000000000000000000000000081526004016110b193929190611d18565b60405180910390fd5b8181035f808673ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020015f2081905550505b5f73ffffffffffffffffffffffffffffffffffffffff168273ffffffffffffffffffffffffffffffffffffffff1603611146578060025f8282540392505081905550611190565b805f808473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020015f205f82825401925050819055505b8173ffffffffffffffffffffffffffffffffffffffff168373ffffffffffffffffffffffffffffffffffffffff167fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef836040516111ed91906114c8565b60405180910390a3505050565b5f80836001015f8481526020019081526020015f20541415905092915050565b5f61122583836111fa565b61127757825f0182908060018154018082558091505060019003905f5260205f20015f9091909190915055825f0180549050836001015f8481526020019081526020015f20819055506001905061127b565b5f90505b92915050565b6060815f018054806020026020016040519081016040528092919081815260200182805480156112ce57602002820191905f5260205f20905b8154815260200190600101908083116112ba575b50505050509050919050565b60405180610120016040528060608152602001606081526020015f81526020015f81526020015f81526020015f81526020015f81526020015f151581526020015f151581525090565b5f81519050919050565b5f82825260208201905092915050565b8281835e5f83830152505050565b5f601f19601f8301169050919050565b5f61136582611323565b61136f818561132d565b935061137f81856020860161133d565b6113888161134b565b840191505092915050565b5f6020820190508181035f8301526113ab818461135b565b905092915050565b5f80fd5b5f80fd5b5f73ffffffffffffffffffffffffffffffffffffffff82169050919050565b5f6113e4826113bb565b9050919050565b6113f4816113da565b81146113fe575f80fd5b50565b5f8135905061140f816113eb565b92915050565b5f819050919050565b61142781611415565b8114611431575f80fd5b50565b5f813590506114428161141e565b92915050565b5f806040838503121561145e5761145d6113b3565b5b5f61146b85828601611401565b925050602061147c85828601611434565b9150509250929050565b5f8115159050919050565b61149a81611486565b82525050565b5f6020820190506114b35f830184611491565b92915050565b6114c281611415565b82525050565b5f6020820190506114db5f8301846114b9565b92915050565b5f805f606084860312156114f8576114f76113b3565b5b5f61150586828701611401565b935050602061151686828701611401565b925050604061152786828701611434565b9150509250925092565b5f60ff82169050919050565b61154681611531565b82525050565b5f60208201905061155f5f83018461153d565b92915050565b5f6020828403121561157a576115796113b3565b5b5f61158784828501611401565b91505092915050565b5f80fd5b5f80fd5b5f80fd5b5f8083601f8401126115b1576115b0611590565b5b8235905067ffffffffffffffff8111156115ce576115cd611594565b5b6020830191508360018202830111156115ea576115e9611598565b5b9250929050565b5f805f60408486031215611608576116076113b3565b5b5f84013567ffffffffffffffff811115611625576116246113b7565b5b6116318682870161159c565b9350935050602061164486828701611434565b9150509250925092565b6003811061165a575f80fd5b50565b5f8135905061166b8161164e565b92915050565b5f8060408385031215611687576116866113b3565b5b5f61169485828601611434565b92505060206116a58582860161165d565b9150509250929050565b5f602082840312156116c4576116c36113b3565b5b5f6116d184828501611434565b91505092915050565b5f81519050919050565b5f82825260208201905092915050565b5f819050602082019050919050565b61170c816113da565b82525050565b5f61171d8383611703565b60208301905092915050565b5f602082019050919050565b5f61173f826116da565b61174981856116e4565b9350611754836116f4565b805f5b8381101561178457815161176b8882611712565b975061177683611729565b925050600181019050611757565b5085935050505092915050565b5f82825260208201905092915050565b5f6117ab82611323565b6117b58185611791565b93506117c581856020860161133d565b6117ce8161134b565b840191505092915050565b6117e281611415565b82525050565b6117f181611486565b82525050565b5f61012083015f8301518482035f8601526118128282611735565b9150506020830151848203602086015261182c82826117a1565b915050604083015161184160408601826117d9565b50606083015161185460608601826117d9565b50608083015161186760808601826117d9565b5060a083015161187a60a08601826117d9565b5060c083015161188d60c08601826117d9565b5060e08301516118a060e08601826117e8565b506101008301516118b56101008601826117e8565b508091505092915050565b5f6020820190508181035f8301526118d881846117f7565b905092915050565b5f80604083850312156118f6576118f56113b3565b5b5f61190385828601611401565b925050602061191485828601611401565b9150509250929050565b7f4e487b71000000000000000000000000000000000000000000000000000000005f52602260045260245ffd5b5f600282049050600182168061196257607f821691505b6020821081036119755761197461191e565b5b50919050565b7f4e487b71000000000000000000000000000000000000000000000000000000005f52601160045260245ffd5b5f6119b282611415565b91506119bd83611415565b92508282019050808211156119d5576119d461197b565b5b92915050565b5f82905092915050565b7f4e487b71000000000000000000000000000000000000000000000000000000005f52604160045260245ffd5b5f819050815f5260205f209050919050565b5f6020601f8301049050919050565b5f82821b905092915050565b5f60088302611a6e7fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff82611a33565b611a788683611a33565b95508019841693508086168417925050509392505050565b5f819050919050565b5f611ab3611aae611aa984611415565b611a90565b611415565b9050919050565b5f819050919050565b611acc83611a99565b611ae0611ad882611aba565b848454611a3f565b825550505050565b5f90565b611af4611ae8565b611aff818484611ac3565b505050565b5b81811015611b2257611b175f82611aec565b600181019050611b05565b5050565b601f821115611b6757611b3881611a12565b611b4184611a24565b81016020851015611b50578190505b611b64611b5c85611a24565b830182611b04565b50505b505050565b5f82821c905092915050565b5f611b875f1984600802611b6c565b1980831691505092915050565b5f611b9f8383611b78565b9150826002028217905092915050565b611bb983836119db565b67ffffffffffffffff811115611bd257611bd16119e5565b5b611bdc825461194b565b611be7828285611b26565b5f601f831160018114611c14575f8415611c02578287013590505b611c0c8582611b94565b865550611c73565b601f198416611c2286611a12565b5f5b82811015611c4957848901358255600182019150602085019450602081019050611c24565b86831015611c665784890135611c62601f891682611b78565b8355505b6001600288020188555050505b50505050505050565b5f611c8682611415565b9150611c9183611415565b9250828203905081811115611ca957611ca861197b565b5b92915050565b7f4e487b71000000000000000000000000000000000000000000000000000000005f52603260045260245ffd5b7f4e487b71000000000000000000000000000000000000000000000000000000005f52602160045260245ffd5b611d12816113da565b82525050565b5f606082019050611d2b5f830186611d09565b611d3860208301856114b9565b611d4560408301846114b9565b949350505050565b5f602082019050611d605f830184611d09565b9291505056fea26469706673582212203f33c0d74d6aad406cf6f588bb40936af0535b1c0e1abec039651de87ea33c2464736f6c634300081a0033",
							"opcodes": "PUSH1 0x80 PUSH1 0x40 MSTORE CALLVALUE DUP1 ISZERO PUSH2 0xF JUMPI PUSH0 DUP1 REVERT JUMPDEST POP PUSH1 0x4 CALLDATASIZE LT PUSH2 0xFE JUMPI PUSH0 CALLDATALOAD PUSH1 0xE0 SHR DUP1 PUSH4 0x830953AB GT PUSH2 0x95 JUMPI DUP1 PUSH4 0x976B3113 GT PUSH2 0x64 JUMPI DUP1 PUSH4 0x976B3113 EQ PUSH2 0x2AE JUMPI DUP1 PUSH4 0xA9059CBB EQ PUSH2 0x2DE JUMPI DUP1 PUSH4 0xD5ABEB01 EQ PUSH2 0x30E JUMPI DUP1 PUSH4 0xDD62ED3E EQ PUSH2 0x32C JUMPI PUSH2 0xFE JUMP JUMPDEST DUP1 PUSH4 0x830953AB EQ PUSH2 0x226 JUMPI DUP1 PUSH4 0x8615D855 EQ PUSH2 0x244 JUMPI DUP1 PUSH4 0x943E8216 EQ PUSH2 0x274 JUMPI DUP1 PUSH4 0x95D89B41 EQ PUSH2 0x290 JUMPI PUSH2 0xFE JUMP JUMPDEST DUP1 PUSH4 0x313CE567 GT PUSH2 0xD1 JUMPI DUP1 PUSH4 0x313CE567 EQ PUSH2 0x19E JUMPI DUP1 PUSH4 0x4E71D92D EQ PUSH2 0x1BC JUMPI DUP1 PUSH4 0x624601B6 EQ PUSH2 0x1C6 JUMPI DUP1 PUSH4 0x70A08231 EQ PUSH2 0x1F6 JUMPI PUSH2 0xFE JUMP JUMPDEST DUP1 PUSH4 0x6FDDE03 EQ PUSH2 0x102 JUMPI DUP1 PUSH4 0x95EA7B3 EQ PUSH2 0x120 JUMPI DUP1 PUSH4 0x18160DDD EQ PUSH2 0x150 JUMPI DUP1 PUSH4 0x23B872DD EQ PUSH2 0x16E JUMPI JUMPDEST PUSH0 DUP1 REVERT JUMPDEST PUSH2 0x10A PUSH2 0x35C JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x117 SWAP2 SWAP1 PUSH2 0x1393 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x13A PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x135 SWAP2 SWAP1 PUSH2 0x1448 JUMP JUMPDEST PUSH2 0x3EC JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x147 SWAP2 SWAP1 PUSH2 0x14A0 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x158 PUSH2 0x40E JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x165 SWAP2 SWAP1 PUSH2 0x14C8 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x188 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x183 SWAP2 SWAP1 PUSH2 0x14E1 JUMP JUMPDEST PUSH2 0x417 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x195 SWAP2 SWAP1 PUSH2 0x14A0 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x1A6 PUSH2 0x445 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x1B3 SWAP2 SWAP1 PUSH2 0x154C JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x1C4 PUSH2 0x44D JUMP JUMPDEST STOP JUMPDEST PUSH2 0x1E0 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x1DB SWAP2 SWAP1 PUSH2 0x1565 JUMP JUMPDEST PUSH2 0x581 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x1ED SWAP2 SWAP1 PUSH2 0x14A0 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x210 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x20B SWAP2 SWAP1 PUSH2 0x1565 JUMP JUMPDEST PUSH2 0x59E JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x21D SWAP2 SWAP1 PUSH2 0x14C8 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x22E PUSH2 0x5E3 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x23B SWAP2 SWAP1 PUSH2 0x14C8 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x25E PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x259 SWAP2 SWAP1 PUSH2 0x15F1 JUMP JUMPDEST PUSH2 0x5E9 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x26B SWAP2 SWAP1 PUSH2 0x14C8 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x28E PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x289 SWAP2 SWAP1 PUSH2 0x1671 JUMP JUMPDEST PUSH2 0x6C6 JUMP JUMPDEST STOP JUMPDEST PUSH2 0x298 PUSH2 0x904 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x2A5 SWAP2 SWAP1 PUSH2 0x1393 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x2C8 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x2C3 SWAP2 SWAP1 PUSH2 0x16AF JUMP JUMPDEST PUSH2 0x994 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x2D5 SWAP2 SWAP1 PUSH2 0x18C0 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x2F8 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x2F3 SWAP2 SWAP1 PUSH2 0x1448 JUMP JUMPDEST PUSH2 0xAD4 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x305 SWAP2 SWAP1 PUSH2 0x14A0 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x316 PUSH2 0xAF6 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x323 SWAP2 SWAP1 PUSH2 0x14C8 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x346 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x341 SWAP2 SWAP1 PUSH2 0x18E0 JUMP JUMPDEST PUSH2 0xAFC JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x353 SWAP2 SWAP1 PUSH2 0x14C8 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH1 0x60 PUSH1 0x3 DUP1 SLOAD PUSH2 0x36B SWAP1 PUSH2 0x194B JUMP JUMPDEST DUP1 PUSH1 0x1F ADD PUSH1 0x20 DUP1 SWAP2 DIV MUL PUSH1 0x20 ADD PUSH1 0x40 MLOAD SWAP1 DUP2 ADD PUSH1 0x40 MSTORE DUP1 SWAP3 SWAP2 SWAP1 DUP2 DUP2 MSTORE PUSH1 0x20 ADD DUP3 DUP1 SLOAD PUSH2 0x397 SWAP1 PUSH2 0x194B JUMP JUMPDEST DUP1 ISZERO PUSH2 0x3E2 JUMPI DUP1 PUSH1 0x1F LT PUSH2 0x3B9 JUMPI PUSH2 0x100 DUP1 DUP4 SLOAD DIV MUL DUP4 MSTORE SWAP2 PUSH1 0x20 ADD SWAP2 PUSH2 0x3E2 JUMP JUMPDEST DUP3 ADD SWAP2 SWAP1 PUSH0 MSTORE PUSH1 0x20 PUSH0 KECCAK256 SWAP1 JUMPDEST DUP2 SLOAD DUP2 MSTORE SWAP1 PUSH1 0x1 ADD SWAP1 PUSH1 0x20 ADD DUP1 DUP4 GT PUSH2 0x3C5 JUMPI DUP3 SWAP1 SUB PUSH1 0x1F AND DUP3 ADD SWAP2 JUMPDEST POP POP POP POP POP SWAP1 POP SWAP1 JUMP JUMPDEST PUSH0 DUP1 PUSH2 0x3F6 PUSH2 0xB7E JUMP JUMPDEST SWAP1 POP PUSH2 0x403 DUP2 DUP6 DUP6 PUSH2 0xB85 JUMP JUMPDEST PUSH1 0x1 SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH1 0x2 SLOAD SWAP1 POP SWAP1 JUMP JUMPDEST PUSH0 DUP1 PUSH2 0x421 PUSH2 0xB7E JUMP JUMPDEST SWAP1 POP PUSH2 0x42E DUP6 DUP3 DUP6 PUSH2 0xB97 JUMP JUMPDEST PUSH2 0x439 DUP6 DUP6 DUP6 PUSH2 0xC2A JUMP JUMPDEST PUSH1 0x1 SWAP2 POP POP SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH0 PUSH1 0x12 SWAP1 POP SWAP1 JUMP JUMPDEST PUSH1 0x8 SLOAD PUSH1 0x9 SLOAD PUSH2 0x45B PUSH2 0x40E JUMP JUMPDEST PUSH2 0x465 SWAP2 SWAP1 PUSH2 0x19A8 JUMP JUMPDEST GT ISZERO PUSH2 0x49D JUMPI PUSH1 0x40 MLOAD PUSH32 0xCBE2483100000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x7 PUSH0 CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 PUSH0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH1 0xFF AND ISZERO PUSH2 0x51E JUMPI PUSH1 0x40 MLOAD PUSH32 0xB1327A600000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH2 0x52A CALLER PUSH1 0x9 SLOAD PUSH2 0xD1A JUMP JUMPDEST PUSH1 0x1 PUSH1 0x7 PUSH0 CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 PUSH0 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH1 0xFF MUL NOT AND SWAP1 DUP4 ISZERO ISZERO MUL OR SWAP1 SSTORE POP JUMP JUMPDEST PUSH1 0x7 PUSH1 0x20 MSTORE DUP1 PUSH0 MSTORE PUSH1 0x40 PUSH0 KECCAK256 PUSH0 SWAP2 POP SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH1 0xFF AND DUP2 JUMP JUMPDEST PUSH0 DUP1 PUSH0 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 SLOAD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x9 SLOAD DUP2 JUMP JUMPDEST PUSH0 DUP1 PUSH2 0x5F4 CALLER PUSH2 0x59E JUMP JUMPDEST SUB PUSH2 0x62B JUMPI PUSH1 0x40 MLOAD PUSH32 0x8439960D00000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH2 0x633 PUSH2 0x40E JUMP JUMPDEST DUP3 GT ISZERO PUSH2 0x66C JUMPI PUSH1 0x40 MLOAD PUSH32 0xD92730000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH0 PUSH1 0x6 PUSH1 0x1 DUP2 PUSH1 0x1 DUP2 SLOAD ADD DUP1 DUP3 SSTORE DUP1 SWAP2 POP POP SUB SWAP1 PUSH0 MSTORE PUSH1 0x20 PUSH0 KECCAK256 SWAP1 PUSH1 0x9 MUL ADD SWAP1 POP DUP5 DUP5 DUP3 PUSH1 0x2 ADD SWAP2 DUP3 PUSH2 0x6A0 SWAP3 SWAP2 SWAP1 PUSH2 0x1BAF JUMP JUMPDEST POP DUP3 DUP2 PUSH1 0x3 ADD DUP2 SWAP1 SSTORE POP PUSH1 0x1 PUSH1 0x6 DUP1 SLOAD SWAP1 POP PUSH2 0x6BC SWAP2 SWAP1 PUSH2 0x1C7C JUMP JUMPDEST SWAP2 POP POP SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH0 PUSH1 0x6 DUP4 DUP2 SLOAD DUP2 LT PUSH2 0x6DB JUMPI PUSH2 0x6DA PUSH2 0x1CAF JUMP JUMPDEST JUMPDEST SWAP1 PUSH0 MSTORE PUSH1 0x20 PUSH0 KECCAK256 SWAP1 PUSH1 0x9 MUL ADD SWAP1 POP DUP1 PUSH1 0x8 ADD PUSH1 0x1 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH1 0xFF AND ISZERO PUSH2 0x732 JUMPI PUSH1 0x40 MLOAD PUSH32 0x66B6CB4A00000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH2 0x747 CALLER DUP3 PUSH0 ADD PUSH2 0xD99 SWAP1 SWAP2 SWAP1 PUSH4 0xFFFFFFFF AND JUMP JUMPDEST ISZERO PUSH2 0x77E JUMPI PUSH1 0x40 MLOAD PUSH32 0x7C9A1CF900000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH0 PUSH2 0x788 CALLER PUSH2 0x59E JUMP JUMPDEST SWAP1 POP PUSH0 DUP2 SUB PUSH2 0x7C3 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8439960D00000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH0 PUSH1 0x2 DUP2 GT ISZERO PUSH2 0x7D6 JUMPI PUSH2 0x7D5 PUSH2 0x1CDC JUMP JUMPDEST JUMPDEST DUP4 PUSH1 0x2 DUP2 GT ISZERO PUSH2 0x7E9 JUMPI PUSH2 0x7E8 PUSH2 0x1CDC JUMP JUMPDEST JUMPDEST SUB PUSH2 0x80D JUMPI DUP1 DUP3 PUSH1 0x6 ADD PUSH0 DUP3 DUP3 SLOAD PUSH2 0x801 SWAP2 SWAP1 PUSH2 0x19A8 JUMP JUMPDEST SWAP3 POP POP DUP2 SWAP1 SSTORE POP PUSH2 0x874 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x2 DUP2 GT ISZERO PUSH2 0x821 JUMPI PUSH2 0x820 PUSH2 0x1CDC JUMP JUMPDEST JUMPDEST DUP4 PUSH1 0x2 DUP2 GT ISZERO PUSH2 0x834 JUMPI PUSH2 0x833 PUSH2 0x1CDC JUMP JUMPDEST JUMPDEST SUB PUSH2 0x858 JUMPI DUP1 DUP3 PUSH1 0x5 ADD PUSH0 DUP3 DUP3 SLOAD PUSH2 0x84C SWAP2 SWAP1 PUSH2 0x19A8 JUMP JUMPDEST SWAP3 POP POP DUP2 SWAP1 SSTORE POP PUSH2 0x873 JUMP JUMPDEST DUP1 DUP3 PUSH1 0x7 ADD PUSH0 DUP3 DUP3 SLOAD PUSH2 0x86B SWAP2 SWAP1 PUSH2 0x19A8 JUMP JUMPDEST SWAP3 POP POP DUP2 SWAP1 SSTORE POP JUMPDEST JUMPDEST PUSH2 0x889 CALLER DUP4 PUSH0 ADD PUSH2 0xDC6 SWAP1 SWAP2 SWAP1 PUSH4 0xFFFFFFFF AND JUMP JUMPDEST POP DUP1 DUP3 PUSH1 0x4 ADD PUSH0 DUP3 DUP3 SLOAD PUSH2 0x89D SWAP2 SWAP1 PUSH2 0x19A8 JUMP JUMPDEST SWAP3 POP POP DUP2 SWAP1 SSTORE POP DUP2 PUSH1 0x3 ADD SLOAD DUP3 PUSH1 0x4 ADD SLOAD LT PUSH2 0x8FE JUMPI PUSH1 0x1 DUP3 PUSH1 0x8 ADD PUSH1 0x1 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH1 0xFF MUL NOT AND SWAP1 DUP4 ISZERO ISZERO MUL OR SWAP1 SSTORE POP DUP2 PUSH1 0x6 ADD SLOAD DUP3 PUSH1 0x5 ADD SLOAD GT ISZERO PUSH2 0x8FD JUMPI PUSH1 0x1 DUP3 PUSH1 0x8 ADD PUSH0 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH1 0xFF MUL NOT AND SWAP1 DUP4 ISZERO ISZERO MUL OR SWAP1 SSTORE POP JUMPDEST JUMPDEST POP POP POP POP JUMP JUMPDEST PUSH1 0x60 PUSH1 0x4 DUP1 SLOAD PUSH2 0x913 SWAP1 PUSH2 0x194B JUMP JUMPDEST DUP1 PUSH1 0x1F ADD PUSH1 0x20 DUP1 SWAP2 DIV MUL PUSH1 0x20 ADD PUSH1 0x40 MLOAD SWAP1 DUP2 ADD PUSH1 0x40 MSTORE DUP1 SWAP3 SWAP2 SWAP1 DUP2 DUP2 MSTORE PUSH1 0x20 ADD DUP3 DUP1 SLOAD PUSH2 0x93F SWAP1 PUSH2 0x194B JUMP JUMPDEST DUP1 ISZERO PUSH2 0x98A JUMPI DUP1 PUSH1 0x1F LT PUSH2 0x961 JUMPI PUSH2 0x100 DUP1 DUP4 SLOAD DIV MUL DUP4 MSTORE SWAP2 PUSH1 0x20 ADD SWAP2 PUSH2 0x98A JUMP JUMPDEST DUP3 ADD SWAP2 SWAP1 PUSH0 MSTORE PUSH1 0x20 PUSH0 KECCAK256 SWAP1 JUMPDEST DUP2 SLOAD DUP2 MSTORE SWAP1 PUSH1 0x1 ADD SWAP1 PUSH1 0x20 ADD DUP1 DUP4 GT PUSH2 0x96D JUMPI DUP3 SWAP1 SUB PUSH1 0x1F AND DUP3 ADD SWAP2 JUMPDEST POP POP POP POP POP SWAP1 POP SWAP1 JUMP JUMPDEST PUSH2 0x99C PUSH2 0x12DA JUMP JUMPDEST PUSH0 PUSH1 0x6 DUP4 DUP2 SLOAD DUP2 LT PUSH2 0x9B1 JUMPI PUSH2 0x9B0 PUSH2 0x1CAF JUMP JUMPDEST JUMPDEST SWAP1 PUSH0 MSTORE PUSH1 0x20 PUSH0 KECCAK256 SWAP1 PUSH1 0x9 MUL ADD SWAP1 POP PUSH1 0x40 MLOAD DUP1 PUSH2 0x120 ADD PUSH1 0x40 MSTORE DUP1 PUSH2 0x9D6 DUP4 PUSH0 ADD PUSH2 0xDF3 JUMP JUMPDEST DUP2 MSTORE PUSH1 0x20 ADD DUP3 PUSH1 0x2 ADD DUP1 SLOAD PUSH2 0x9EA SWAP1 PUSH2 0x194B JUMP JUMPDEST DUP1 PUSH1 0x1F ADD PUSH1 0x20 DUP1 SWAP2 DIV MUL PUSH1 0x20 ADD PUSH1 0x40 MLOAD SWAP1 DUP2 ADD PUSH1 0x40 MSTORE DUP1 SWAP3 SWAP2 SWAP1 DUP2 DUP2 MSTORE PUSH1 0x20 ADD DUP3 DUP1 SLOAD PUSH2 0xA16 SWAP1 PUSH2 0x194B JUMP JUMPDEST DUP1 ISZERO PUSH2 0xA61 JUMPI DUP1 PUSH1 0x1F LT PUSH2 0xA38 JUMPI PUSH2 0x100 DUP1 DUP4 SLOAD DIV MUL DUP4 MSTORE SWAP2 PUSH1 0x20 ADD SWAP2 PUSH2 0xA61 JUMP JUMPDEST DUP3 ADD SWAP2 SWAP1 PUSH0 MSTORE PUSH1 0x20 PUSH0 KECCAK256 SWAP1 JUMPDEST DUP2 SLOAD DUP2 MSTORE SWAP1 PUSH1 0x1 ADD SWAP1 PUSH1 0x20 ADD DUP1 DUP4 GT PUSH2 0xA44 JUMPI DUP3 SWAP1 SUB PUSH1 0x1F AND DUP3 ADD SWAP2 JUMPDEST POP POP POP POP POP DUP2 MSTORE PUSH1 0x20 ADD DUP3 PUSH1 0x3 ADD SLOAD DUP2 MSTORE PUSH1 0x20 ADD DUP3 PUSH1 0x4 ADD SLOAD DUP2 MSTORE PUSH1 0x20 ADD DUP3 PUSH1 0x5 ADD SLOAD DUP2 MSTORE PUSH1 0x20 ADD DUP3 PUSH1 0x6 ADD SLOAD DUP2 MSTORE PUSH1 0x20 ADD DUP3 PUSH1 0x7 ADD SLOAD DUP2 MSTORE PUSH1 0x20 ADD DUP3 PUSH1 0x8 ADD PUSH0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH1 0xFF AND ISZERO ISZERO DUP2 MSTORE PUSH1 0x20 ADD DUP3 PUSH1 0x8 ADD PUSH1 0x1 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH1 0xFF AND ISZERO ISZERO DUP2 MSTORE POP SWAP2 POP POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 DUP1 PUSH2 0xADE PUSH2 0xB7E JUMP JUMPDEST SWAP1 POP PUSH2 0xAEB DUP2 DUP6 DUP6 PUSH2 0xC2A JUMP JUMPDEST PUSH1 0x1 SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x8 SLOAD DUP2 JUMP JUMPDEST PUSH0 PUSH1 0x1 PUSH0 DUP5 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 PUSH0 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 SLOAD SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 CALLER SWAP1 POP SWAP1 JUMP JUMPDEST PUSH2 0xB92 DUP4 DUP4 DUP4 PUSH1 0x1 PUSH2 0xE12 JUMP JUMPDEST POP POP POP JUMP JUMPDEST PUSH0 PUSH2 0xBA2 DUP5 DUP5 PUSH2 0xAFC JUMP JUMPDEST SWAP1 POP PUSH32 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP2 LT ISZERO PUSH2 0xC24 JUMPI DUP2 DUP2 LT ISZERO PUSH2 0xC15 JUMPI DUP3 DUP2 DUP4 PUSH1 0x40 MLOAD PUSH32 0xFB8F41B200000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0xC0C SWAP4 SWAP3 SWAP2 SWAP1 PUSH2 0x1D18 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH2 0xC23 DUP5 DUP5 DUP5 DUP5 SUB PUSH0 PUSH2 0xE12 JUMP JUMPDEST JUMPDEST POP POP POP POP JUMP JUMPDEST PUSH0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SUB PUSH2 0xC9A JUMPI PUSH0 PUSH1 0x40 MLOAD PUSH32 0x96C6FD1E00000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0xC91 SWAP2 SWAP1 PUSH2 0x1D4D JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP3 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SUB PUSH2 0xD0A JUMPI PUSH0 PUSH1 0x40 MLOAD PUSH32 0xEC442F0500000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0xD01 SWAP2 SWAP1 PUSH2 0x1D4D JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH2 0xD15 DUP4 DUP4 DUP4 PUSH2 0xFE1 JUMP JUMPDEST POP POP POP JUMP JUMPDEST PUSH0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP3 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SUB PUSH2 0xD8A JUMPI PUSH0 PUSH1 0x40 MLOAD PUSH32 0xEC442F0500000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0xD81 SWAP2 SWAP1 PUSH2 0x1D4D JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH2 0xD95 PUSH0 DUP4 DUP4 PUSH2 0xFE1 JUMP JUMPDEST POP POP JUMP JUMPDEST PUSH0 PUSH2 0xDBE DUP4 PUSH0 ADD DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH0 SHL PUSH2 0x11FA JUMP JUMPDEST SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH2 0xDEB DUP4 PUSH0 ADD DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH0 SHL PUSH2 0x121A JUMP JUMPDEST SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x60 PUSH0 PUSH2 0xE01 DUP4 PUSH0 ADD PUSH2 0x1281 JUMP JUMPDEST SWAP1 POP PUSH1 0x60 DUP2 SWAP1 POP DUP1 SWAP3 POP POP POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP5 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SUB PUSH2 0xE82 JUMPI PUSH0 PUSH1 0x40 MLOAD PUSH32 0xE602DF0500000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0xE79 SWAP2 SWAP1 PUSH2 0x1D4D JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SUB PUSH2 0xEF2 JUMPI PUSH0 PUSH1 0x40 MLOAD PUSH32 0x94280D6200000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0xEE9 SWAP2 SWAP1 PUSH2 0x1D4D JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST DUP2 PUSH1 0x1 PUSH0 DUP7 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 PUSH0 DUP6 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 DUP2 SWAP1 SSTORE POP DUP1 ISZERO PUSH2 0xFDB JUMPI DUP3 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP5 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH32 0x8C5BE1E5EBEC7D5BD14F71427D1E84F3DD0314C0F7B2291E5B200AC8C7C3B925 DUP5 PUSH1 0x40 MLOAD PUSH2 0xFD2 SWAP2 SWAP1 PUSH2 0x14C8 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG3 JUMPDEST POP POP POP POP JUMP JUMPDEST PUSH0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SUB PUSH2 0x1031 JUMPI DUP1 PUSH1 0x2 PUSH0 DUP3 DUP3 SLOAD PUSH2 0x1025 SWAP2 SWAP1 PUSH2 0x19A8 JUMP JUMPDEST SWAP3 POP POP DUP2 SWAP1 SSTORE POP PUSH2 0x10FF JUMP JUMPDEST PUSH0 DUP1 PUSH0 DUP6 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 SLOAD SWAP1 POP DUP2 DUP2 LT ISZERO PUSH2 0x10BA JUMPI DUP4 DUP2 DUP4 PUSH1 0x40 MLOAD PUSH32 0xE450D38C00000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x10B1 SWAP4 SWAP3 SWAP2 SWAP1 PUSH2 0x1D18 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST DUP2 DUP2 SUB PUSH0 DUP1 DUP7 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 DUP2 SWAP1 SSTORE POP POP JUMPDEST PUSH0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP3 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SUB PUSH2 0x1146 JUMPI DUP1 PUSH1 0x2 PUSH0 DUP3 DUP3 SLOAD SUB SWAP3 POP POP DUP2 SWAP1 SSTORE POP PUSH2 0x1190 JUMP JUMPDEST DUP1 PUSH0 DUP1 DUP5 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 PUSH0 DUP3 DUP3 SLOAD ADD SWAP3 POP POP DUP2 SWAP1 SSTORE POP JUMPDEST DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH32 0xDDF252AD1BE2C89B69C2B068FC378DAA952BA7F163C4A11628F55A4DF523B3EF DUP4 PUSH1 0x40 MLOAD PUSH2 0x11ED SWAP2 SWAP1 PUSH2 0x14C8 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG3 POP POP POP JUMP JUMPDEST PUSH0 DUP1 DUP4 PUSH1 0x1 ADD PUSH0 DUP5 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 SLOAD EQ ISZERO SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH2 0x1225 DUP4 DUP4 PUSH2 0x11FA JUMP JUMPDEST PUSH2 0x1277 JUMPI DUP3 PUSH0 ADD DUP3 SWAP1 DUP1 PUSH1 0x1 DUP2 SLOAD ADD DUP1 DUP3 SSTORE DUP1 SWAP2 POP POP PUSH1 0x1 SWAP1 SUB SWAP1 PUSH0 MSTORE PUSH1 0x20 PUSH0 KECCAK256 ADD PUSH0 SWAP1 SWAP2 SWAP1 SWAP2 SWAP1 SWAP2 POP SSTORE DUP3 PUSH0 ADD DUP1 SLOAD SWAP1 POP DUP4 PUSH1 0x1 ADD PUSH0 DUP5 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 DUP2 SWAP1 SSTORE POP PUSH1 0x1 SWAP1 POP PUSH2 0x127B JUMP JUMPDEST PUSH0 SWAP1 POP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x60 DUP2 PUSH0 ADD DUP1 SLOAD DUP1 PUSH1 0x20 MUL PUSH1 0x20 ADD PUSH1 0x40 MLOAD SWAP1 DUP2 ADD PUSH1 0x40 MSTORE DUP1 SWAP3 SWAP2 SWAP1 DUP2 DUP2 MSTORE PUSH1 0x20 ADD DUP3 DUP1 SLOAD DUP1 ISZERO PUSH2 0x12CE JUMPI PUSH1 0x20 MUL DUP3 ADD SWAP2 SWAP1 PUSH0 MSTORE PUSH1 0x20 PUSH0 KECCAK256 SWAP1 JUMPDEST DUP2 SLOAD DUP2 MSTORE PUSH1 0x20 ADD SWAP1 PUSH1 0x1 ADD SWAP1 DUP1 DUP4 GT PUSH2 0x12BA JUMPI JUMPDEST POP POP POP POP POP SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 PUSH2 0x120 ADD PUSH1 0x40 MSTORE DUP1 PUSH1 0x60 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x60 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 ISZERO ISZERO DUP2 MSTORE PUSH1 0x20 ADD PUSH0 ISZERO ISZERO DUP2 MSTORE POP SWAP1 JUMP JUMPDEST PUSH0 DUP2 MLOAD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 DUP3 DUP3 MSTORE PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST DUP3 DUP2 DUP4 MCOPY PUSH0 DUP4 DUP4 ADD MSTORE POP POP POP JUMP JUMPDEST PUSH0 PUSH1 0x1F NOT PUSH1 0x1F DUP4 ADD AND SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH2 0x1365 DUP3 PUSH2 0x1323 JUMP JUMPDEST PUSH2 0x136F DUP2 DUP6 PUSH2 0x132D JUMP JUMPDEST SWAP4 POP PUSH2 0x137F DUP2 DUP6 PUSH1 0x20 DUP7 ADD PUSH2 0x133D JUMP JUMPDEST PUSH2 0x1388 DUP2 PUSH2 0x134B JUMP JUMPDEST DUP5 ADD SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH0 DUP4 ADD MSTORE PUSH2 0x13AB DUP2 DUP5 PUSH2 0x135B JUMP JUMPDEST SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 DUP1 REVERT JUMPDEST PUSH0 DUP1 REVERT JUMPDEST PUSH0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP3 AND SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH2 0x13E4 DUP3 PUSH2 0x13BB JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x13F4 DUP2 PUSH2 0x13DA JUMP JUMPDEST DUP2 EQ PUSH2 0x13FE JUMPI PUSH0 DUP1 REVERT JUMPDEST POP JUMP JUMPDEST PUSH0 DUP2 CALLDATALOAD SWAP1 POP PUSH2 0x140F DUP2 PUSH2 0x13EB JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 DUP2 SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x1427 DUP2 PUSH2 0x1415 JUMP JUMPDEST DUP2 EQ PUSH2 0x1431 JUMPI PUSH0 DUP1 REVERT JUMPDEST POP JUMP JUMPDEST PUSH0 DUP2 CALLDATALOAD SWAP1 POP PUSH2 0x1442 DUP2 PUSH2 0x141E JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 DUP1 PUSH1 0x40 DUP4 DUP6 SUB SLT ISZERO PUSH2 0x145E JUMPI PUSH2 0x145D PUSH2 0x13B3 JUMP JUMPDEST JUMPDEST PUSH0 PUSH2 0x146B DUP6 DUP3 DUP7 ADD PUSH2 0x1401 JUMP JUMPDEST SWAP3 POP POP PUSH1 0x20 PUSH2 0x147C DUP6 DUP3 DUP7 ADD PUSH2 0x1434 JUMP JUMPDEST SWAP2 POP POP SWAP3 POP SWAP3 SWAP1 POP JUMP JUMPDEST PUSH0 DUP2 ISZERO ISZERO SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x149A DUP2 PUSH2 0x1486 JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH2 0x14B3 PUSH0 DUP4 ADD DUP5 PUSH2 0x1491 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH2 0x14C2 DUP2 PUSH2 0x1415 JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH2 0x14DB PUSH0 DUP4 ADD DUP5 PUSH2 0x14B9 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 DUP1 PUSH0 PUSH1 0x60 DUP5 DUP7 SUB SLT ISZERO PUSH2 0x14F8 JUMPI PUSH2 0x14F7 PUSH2 0x13B3 JUMP JUMPDEST JUMPDEST PUSH0 PUSH2 0x1505 DUP7 DUP3 DUP8 ADD PUSH2 0x1401 JUMP JUMPDEST SWAP4 POP POP PUSH1 0x20 PUSH2 0x1516 DUP7 DUP3 DUP8 ADD PUSH2 0x1401 JUMP JUMPDEST SWAP3 POP POP PUSH1 0x40 PUSH2 0x1527 DUP7 DUP3 DUP8 ADD PUSH2 0x1434 JUMP JUMPDEST SWAP2 POP POP SWAP3 POP SWAP3 POP SWAP3 JUMP JUMPDEST PUSH0 PUSH1 0xFF DUP3 AND SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x1546 DUP2 PUSH2 0x1531 JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH2 0x155F PUSH0 DUP4 ADD DUP5 PUSH2 0x153D JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x157A JUMPI PUSH2 0x1579 PUSH2 0x13B3 JUMP JUMPDEST JUMPDEST PUSH0 PUSH2 0x1587 DUP5 DUP3 DUP6 ADD PUSH2 0x1401 JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 DUP1 REVERT JUMPDEST PUSH0 DUP1 REVERT JUMPDEST PUSH0 DUP1 REVERT JUMPDEST PUSH0 DUP1 DUP4 PUSH1 0x1F DUP5 ADD SLT PUSH2 0x15B1 JUMPI PUSH2 0x15B0 PUSH2 0x1590 JUMP JUMPDEST JUMPDEST DUP3 CALLDATALOAD SWAP1 POP PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT ISZERO PUSH2 0x15CE JUMPI PUSH2 0x15CD PUSH2 0x1594 JUMP JUMPDEST JUMPDEST PUSH1 0x20 DUP4 ADD SWAP2 POP DUP4 PUSH1 0x1 DUP3 MUL DUP4 ADD GT ISZERO PUSH2 0x15EA JUMPI PUSH2 0x15E9 PUSH2 0x1598 JUMP JUMPDEST JUMPDEST SWAP3 POP SWAP3 SWAP1 POP JUMP JUMPDEST PUSH0 DUP1 PUSH0 PUSH1 0x40 DUP5 DUP7 SUB SLT ISZERO PUSH2 0x1608 JUMPI PUSH2 0x1607 PUSH2 0x13B3 JUMP JUMPDEST JUMPDEST PUSH0 DUP5 ADD CALLDATALOAD PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT ISZERO PUSH2 0x1625 JUMPI PUSH2 0x1624 PUSH2 0x13B7 JUMP JUMPDEST JUMPDEST PUSH2 0x1631 DUP7 DUP3 DUP8 ADD PUSH2 0x159C JUMP JUMPDEST SWAP4 POP SWAP4 POP POP PUSH1 0x20 PUSH2 0x1644 DUP7 DUP3 DUP8 ADD PUSH2 0x1434 JUMP JUMPDEST SWAP2 POP POP SWAP3 POP SWAP3 POP SWAP3 JUMP JUMPDEST PUSH1 0x3 DUP2 LT PUSH2 0x165A JUMPI PUSH0 DUP1 REVERT JUMPDEST POP JUMP JUMPDEST PUSH0 DUP2 CALLDATALOAD SWAP1 POP PUSH2 0x166B DUP2 PUSH2 0x164E JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 DUP1 PUSH1 0x40 DUP4 DUP6 SUB SLT ISZERO PUSH2 0x1687 JUMPI PUSH2 0x1686 PUSH2 0x13B3 JUMP JUMPDEST JUMPDEST PUSH0 PUSH2 0x1694 DUP6 DUP3 DUP7 ADD PUSH2 0x1434 JUMP JUMPDEST SWAP3 POP POP PUSH1 0x20 PUSH2 0x16A5 DUP6 DUP3 DUP7 ADD PUSH2 0x165D JUMP JUMPDEST SWAP2 POP POP SWAP3 POP SWAP3 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x16C4 JUMPI PUSH2 0x16C3 PUSH2 0x13B3 JUMP JUMPDEST JUMPDEST PUSH0 PUSH2 0x16D1 DUP5 DUP3 DUP6 ADD PUSH2 0x1434 JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 DUP2 MLOAD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 DUP3 DUP3 MSTORE PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 DUP2 SWAP1 POP PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x170C DUP2 PUSH2 0x13DA JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH0 PUSH2 0x171D DUP4 DUP4 PUSH2 0x1703 JUMP JUMPDEST PUSH1 0x20 DUP4 ADD SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH2 0x173F DUP3 PUSH2 0x16DA JUMP JUMPDEST PUSH2 0x1749 DUP2 DUP6 PUSH2 0x16E4 JUMP JUMPDEST SWAP4 POP PUSH2 0x1754 DUP4 PUSH2 0x16F4 JUMP JUMPDEST DUP1 PUSH0 JUMPDEST DUP4 DUP2 LT ISZERO PUSH2 0x1784 JUMPI DUP2 MLOAD PUSH2 0x176B DUP9 DUP3 PUSH2 0x1712 JUMP JUMPDEST SWAP8 POP PUSH2 0x1776 DUP4 PUSH2 0x1729 JUMP JUMPDEST SWAP3 POP POP PUSH1 0x1 DUP2 ADD SWAP1 POP PUSH2 0x1757 JUMP JUMPDEST POP DUP6 SWAP4 POP POP POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 DUP3 DUP3 MSTORE PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH2 0x17AB DUP3 PUSH2 0x1323 JUMP JUMPDEST PUSH2 0x17B5 DUP2 DUP6 PUSH2 0x1791 JUMP JUMPDEST SWAP4 POP PUSH2 0x17C5 DUP2 DUP6 PUSH1 0x20 DUP7 ADD PUSH2 0x133D JUMP JUMPDEST PUSH2 0x17CE DUP2 PUSH2 0x134B JUMP JUMPDEST DUP5 ADD SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH2 0x17E2 DUP2 PUSH2 0x1415 JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH2 0x17F1 DUP2 PUSH2 0x1486 JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH0 PUSH2 0x120 DUP4 ADD PUSH0 DUP4 ADD MLOAD DUP5 DUP3 SUB PUSH0 DUP7 ADD MSTORE PUSH2 0x1812 DUP3 DUP3 PUSH2 0x1735 JUMP JUMPDEST SWAP2 POP POP PUSH1 0x20 DUP4 ADD MLOAD DUP5 DUP3 SUB PUSH1 0x20 DUP7 ADD MSTORE PUSH2 0x182C DUP3 DUP3 PUSH2 0x17A1 JUMP JUMPDEST SWAP2 POP POP PUSH1 0x40 DUP4 ADD MLOAD PUSH2 0x1841 PUSH1 0x40 DUP7 ADD DUP3 PUSH2 0x17D9 JUMP JUMPDEST POP PUSH1 0x60 DUP4 ADD MLOAD PUSH2 0x1854 PUSH1 0x60 DUP7 ADD DUP3 PUSH2 0x17D9 JUMP JUMPDEST POP PUSH1 0x80 DUP4 ADD MLOAD PUSH2 0x1867 PUSH1 0x80 DUP7 ADD DUP3 PUSH2 0x17D9 JUMP JUMPDEST POP PUSH1 0xA0 DUP4 ADD MLOAD PUSH2 0x187A PUSH1 0xA0 DUP7 ADD DUP3 PUSH2 0x17D9 JUMP JUMPDEST POP PUSH1 0xC0 DUP4 ADD MLOAD PUSH2 0x188D PUSH1 0xC0 DUP7 ADD DUP3 PUSH2 0x17D9 JUMP JUMPDEST POP PUSH1 0xE0 DUP4 ADD MLOAD PUSH2 0x18A0 PUSH1 0xE0 DUP7 ADD DUP3 PUSH2 0x17E8 JUMP JUMPDEST POP PUSH2 0x100 DUP4 ADD MLOAD PUSH2 0x18B5 PUSH2 0x100 DUP7 ADD DUP3 PUSH2 0x17E8 JUMP JUMPDEST POP DUP1 SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH0 DUP4 ADD MSTORE PUSH2 0x18D8 DUP2 DUP5 PUSH2 0x17F7 JUMP JUMPDEST SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 DUP1 PUSH1 0x40 DUP4 DUP6 SUB SLT ISZERO PUSH2 0x18F6 JUMPI PUSH2 0x18F5 PUSH2 0x13B3 JUMP JUMPDEST JUMPDEST PUSH0 PUSH2 0x1903 DUP6 DUP3 DUP7 ADD PUSH2 0x1401 JUMP JUMPDEST SWAP3 POP POP PUSH1 0x20 PUSH2 0x1914 DUP6 DUP3 DUP7 ADD PUSH2 0x1401 JUMP JUMPDEST SWAP2 POP POP SWAP3 POP SWAP3 SWAP1 POP JUMP JUMPDEST PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH0 MSTORE PUSH1 0x22 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH0 REVERT JUMPDEST PUSH0 PUSH1 0x2 DUP3 DIV SWAP1 POP PUSH1 0x1 DUP3 AND DUP1 PUSH2 0x1962 JUMPI PUSH1 0x7F DUP3 AND SWAP2 POP JUMPDEST PUSH1 0x20 DUP3 LT DUP2 SUB PUSH2 0x1975 JUMPI PUSH2 0x1974 PUSH2 0x191E JUMP JUMPDEST JUMPDEST POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH0 MSTORE PUSH1 0x11 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH0 REVERT JUMPDEST PUSH0 PUSH2 0x19B2 DUP3 PUSH2 0x1415 JUMP JUMPDEST SWAP2 POP PUSH2 0x19BD DUP4 PUSH2 0x1415 JUMP JUMPDEST SWAP3 POP DUP3 DUP3 ADD SWAP1 POP DUP1 DUP3 GT ISZERO PUSH2 0x19D5 JUMPI PUSH2 0x19D4 PUSH2 0x197B JUMP JUMPDEST JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 DUP3 SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH0 MSTORE PUSH1 0x41 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH0 REVERT JUMPDEST PUSH0 DUP2 SWAP1 POP DUP2 PUSH0 MSTORE PUSH1 0x20 PUSH0 KECCAK256 SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH1 0x20 PUSH1 0x1F DUP4 ADD DIV SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 DUP3 DUP3 SHL SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH1 0x8 DUP4 MUL PUSH2 0x1A6E PUSH32 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP3 PUSH2 0x1A33 JUMP JUMPDEST PUSH2 0x1A78 DUP7 DUP4 PUSH2 0x1A33 JUMP JUMPDEST SWAP6 POP DUP1 NOT DUP5 AND SWAP4 POP DUP1 DUP7 AND DUP5 OR SWAP3 POP POP POP SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH0 DUP2 SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH2 0x1AB3 PUSH2 0x1AAE PUSH2 0x1AA9 DUP5 PUSH2 0x1415 JUMP JUMPDEST PUSH2 0x1A90 JUMP JUMPDEST PUSH2 0x1415 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 DUP2 SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x1ACC DUP4 PUSH2 0x1A99 JUMP JUMPDEST PUSH2 0x1AE0 PUSH2 0x1AD8 DUP3 PUSH2 0x1ABA JUMP JUMPDEST DUP5 DUP5 SLOAD PUSH2 0x1A3F JUMP JUMPDEST DUP3 SSTORE POP POP POP POP JUMP JUMPDEST PUSH0 SWAP1 JUMP JUMPDEST PUSH2 0x1AF4 PUSH2 0x1AE8 JUMP JUMPDEST PUSH2 0x1AFF DUP2 DUP5 DUP5 PUSH2 0x1AC3 JUMP JUMPDEST POP POP POP JUMP JUMPDEST JUMPDEST DUP2 DUP2 LT ISZERO PUSH2 0x1B22 JUMPI PUSH2 0x1B17 PUSH0 DUP3 PUSH2 0x1AEC JUMP JUMPDEST PUSH1 0x1 DUP2 ADD SWAP1 POP PUSH2 0x1B05 JUMP JUMPDEST POP POP JUMP JUMPDEST PUSH1 0x1F DUP3 GT ISZERO PUSH2 0x1B67 JUMPI PUSH2 0x1B38 DUP2 PUSH2 0x1A12 JUMP JUMPDEST PUSH2 0x1B41 DUP5 PUSH2 0x1A24 JUMP JUMPDEST DUP2 ADD PUSH1 0x20 DUP6 LT ISZERO PUSH2 0x1B50 JUMPI DUP2 SWAP1 POP JUMPDEST PUSH2 0x1B64 PUSH2 0x1B5C DUP6 PUSH2 0x1A24 JUMP JUMPDEST DUP4 ADD DUP3 PUSH2 0x1B04 JUMP JUMPDEST POP POP JUMPDEST POP POP POP JUMP JUMPDEST PUSH0 DUP3 DUP3 SHR SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH2 0x1B87 PUSH0 NOT DUP5 PUSH1 0x8 MUL PUSH2 0x1B6C JUMP JUMPDEST NOT DUP1 DUP4 AND SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH2 0x1B9F DUP4 DUP4 PUSH2 0x1B78 JUMP JUMPDEST SWAP2 POP DUP3 PUSH1 0x2 MUL DUP3 OR SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH2 0x1BB9 DUP4 DUP4 PUSH2 0x19DB JUMP JUMPDEST PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT ISZERO PUSH2 0x1BD2 JUMPI PUSH2 0x1BD1 PUSH2 0x19E5 JUMP JUMPDEST JUMPDEST PUSH2 0x1BDC DUP3 SLOAD PUSH2 0x194B JUMP JUMPDEST PUSH2 0x1BE7 DUP3 DUP3 DUP6 PUSH2 0x1B26 JUMP JUMPDEST PUSH0 PUSH1 0x1F DUP4 GT PUSH1 0x1 DUP2 EQ PUSH2 0x1C14 JUMPI PUSH0 DUP5 ISZERO PUSH2 0x1C02 JUMPI DUP3 DUP8 ADD CALLDATALOAD SWAP1 POP JUMPDEST PUSH2 0x1C0C DUP6 DUP3 PUSH2 0x1B94 JUMP JUMPDEST DUP7 SSTORE POP PUSH2 0x1C73 JUMP JUMPDEST PUSH1 0x1F NOT DUP5 AND PUSH2 0x1C22 DUP7 PUSH2 0x1A12 JUMP JUMPDEST PUSH0 JUMPDEST DUP3 DUP2 LT ISZERO PUSH2 0x1C49 JUMPI DUP5 DUP10 ADD CALLDATALOAD DUP3 SSTORE PUSH1 0x1 DUP3 ADD SWAP2 POP PUSH1 0x20 DUP6 ADD SWAP5 POP PUSH1 0x20 DUP2 ADD SWAP1 POP PUSH2 0x1C24 JUMP JUMPDEST DUP7 DUP4 LT ISZERO PUSH2 0x1C66 JUMPI DUP5 DUP10 ADD CALLDATALOAD PUSH2 0x1C62 PUSH1 0x1F DUP10 AND DUP3 PUSH2 0x1B78 JUMP JUMPDEST DUP4 SSTORE POP JUMPDEST PUSH1 0x1 PUSH1 0x2 DUP9 MUL ADD DUP9 SSTORE POP POP POP JUMPDEST POP POP POP POP POP POP POP JUMP JUMPDEST PUSH0 PUSH2 0x1C86 DUP3 PUSH2 0x1415 JUMP JUMPDEST SWAP2 POP PUSH2 0x1C91 DUP4 PUSH2 0x1415 JUMP JUMPDEST SWAP3 POP DUP3 DUP3 SUB SWAP1 POP DUP2 DUP2 GT ISZERO PUSH2 0x1CA9 JUMPI PUSH2 0x1CA8 PUSH2 0x197B JUMP JUMPDEST JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH0 MSTORE PUSH1 0x32 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH0 REVERT JUMPDEST PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH0 MSTORE PUSH1 0x21 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH0 REVERT JUMPDEST PUSH2 0x1D12 DUP2 PUSH2 0x13DA JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH0 PUSH1 0x60 DUP3 ADD SWAP1 POP PUSH2 0x1D2B PUSH0 DUP4 ADD DUP7 PUSH2 0x1D09 JUMP JUMPDEST PUSH2 0x1D38 PUSH1 0x20 DUP4 ADD DUP6 PUSH2 0x14B9 JUMP JUMPDEST PUSH2 0x1D45 PUSH1 0x40 DUP4 ADD DUP5 PUSH2 0x14B9 JUMP JUMPDEST SWAP5 SWAP4 POP POP POP POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH2 0x1D60 PUSH0 DUP4 ADD DUP5 PUSH2 0x1D09 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 EXTCODEHASH CALLER 0xC0 0xD7 0x4D PUSH11 0xAD406CF6F588BB40936AF0 MSTORE8 JUMPDEST SHR 0xE BYTE 0xBE 0xC0 CODECOPY PUSH6 0x1DE87EA33C24 PUSH5 0x736F6C6343 STOP ADDMOD BYTE STOP CALLER ",
							"sourceMap": "318:5866:6:-:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;1779:89:1;;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;3998:186;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;2849:97;;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;4776:244;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;2707:82;;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;3047:474:6;;;:::i;:::-;;2526:45;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;3004:116:1;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;2646:32:6;;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;3572:612;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;4923:1259;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;1981:93:1;;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;4239:629:6;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;3315:178:1;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;2578:34:6;;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;3551:140:1;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;1779:89;1824:13;1856:5;1849:12;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;1779:89;:::o;3998:186::-;4071:4;4087:13;4103:12;:10;:12::i;:::-;4087:28;;4125:31;4134:5;4141:7;4150:5;4125:8;:31::i;:::-;4173:4;4166:11;;;3998:186;;;;:::o;2849:97::-;2901:7;2927:12;;2920:19;;2849:97;:::o;4776:244::-;4863:4;4879:15;4897:12;:10;:12::i;:::-;4879:30;;4919:37;4935:4;4941:7;4950:5;4919:15;:37::i;:::-;4966:26;4976:4;4982:2;4986:5;4966:9;:26::i;:::-;5009:4;5002:11;;;4776:244;;;;;:::o;2707:82::-;2756:5;2780:2;2773:9;;2707:82;:::o;3047:474:6:-;3164:9;;3150:11;;3134:13;:11;:13::i;:::-;:27;;;;:::i;:::-;:39;3130:95;;;3196:18;;;;;;;;;;;;;;3130:95;3296:13;:25;3310:10;3296:25;;;;;;;;;;;;;;;;;;;;;;;;;3292:78;;;3344:15;;;;;;;;;;;;;;3292:78;3416:30;3422:10;3434:11;;3416:5;:30::i;:::-;3484:4;3456:13;:25;3470:10;3456:25;;;;;;;;;;;;;;;;:32;;;;;;;;;;;;;;;;;;3047:474::o;2526:45::-;;;;;;;;;;;;;;;;;;;;;;:::o;3004:116:1:-;3069:7;3095:9;:18;3105:7;3095:18;;;;;;;;;;;;;;;;3088:25;;3004:116;;;:::o;2646:32:6:-;;;;:::o;3572:612::-;3672:7;3772:1;3747:21;3757:10;3747:9;:21::i;:::-;:26;3743:78;;3796:14;;;;;;;;;;;;;;3743:78;3913:13;:11;:13::i;:::-;3903:7;:23;3899:76;;;3949:15;;;;;;;;;;;;;;3899:76;4035:20;4058:6;:13;;;;;;;;;;;;;;;;;;;;;;;;4035:36;;4100:10;;4081:6;:16;;:29;;;;;;;:::i;:::-;;4136:7;4120:6;:13;;:23;;;;4176:1;4160:6;:13;;;;:17;;;;:::i;:::-;4153:24;;;3572:612;;;;;:::o;4923:1259::-;4984:20;5007:6;5014:8;5007:16;;;;;;;;:::i;:::-;;;;;;;;;;;;4984:39;;5078:6;:13;;;;;;;;;;;;5074:65;;;5114:14;;;;;;;;;;;;;;5074:65;5201:34;5224:10;5201:6;:13;;:22;;:34;;;;:::i;:::-;5197:86;;;5258:14;;;;;;;;;;;;;;5197:86;5293:15;5311:21;5321:10;5311:9;:21::i;:::-;5293:39;;5405:1;5394:7;:12;5390:64;;5429:14;;;;;;;;;;;;;;5390:64;5532:12;5523:21;;;;;;;;:::i;:::-;;:5;:21;;;;;;;;:::i;:::-;;;5519:223;;5583:7;5560:6;:19;;;:30;;;;;;;:::i;:::-;;;;;;;;5519:223;;;5620:8;5611:17;;;;;;;;:::i;:::-;;:5;:17;;;;;;;;:::i;:::-;;;5607:135;;5663:7;5644:6;:15;;;:26;;;;;;;:::i;:::-;;;;;;;;5607:135;;;5724:7;5701:6;:19;;;:30;;;;;;;:::i;:::-;;;;;;;;5607:135;5519:223;5829:29;5847:10;5829:6;:13;;:17;;:29;;;;:::i;:::-;;5889:7;5868:6;:17;;;:28;;;;;;;:::i;:::-;;;;;;;;6007:6;:13;;;5986:6;:17;;;:34;5982:194;;6052:4;6036:6;:13;;;:20;;;;;;;;;;;;;;;;;;6092:6;:19;;;6074:6;:15;;;:37;6070:96;;;6147:4;6131:6;:13;;;:20;;;;;;;;;;;;;;;;;;6070:96;5982:194;4974:1208;;4923:1259;;:::o;1981:93:1:-;2028:13;2060:7;2053:14;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;1981:93;:::o;4239:629:6:-;4322:22;;:::i;:::-;4360:20;4383:6;4390:8;4383:16;;;;;;;;:::i;:::-;;;;;;;;;;;;4360:39;;4428:433;;;;;;;;4470:22;:6;:13;;:20;:22::i;:::-;4428:433;;;;4521:6;:16;;4428:433;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;4563:6;:13;;;4428:433;;;;4606:6;:17;;;4428:433;;;;4651:6;:15;;;4428:433;;;;4698:6;:19;;;4428:433;;;;4749:6;:19;;;4428:433;;;;4794:6;:13;;;;;;;;;;;;4428:433;;;;;;4833:6;:13;;;;;;;;;;;;4428:433;;;;;4409:452;;;4239:629;;;:::o;3315:178:1:-;3384:4;3400:13;3416:12;:10;:12::i;:::-;3400:28;;3438:27;3448:5;3455:2;3459:5;3438:9;:27::i;:::-;3482:4;3475:11;;;3315:178;;;;:::o;2578:34:6:-;;;;:::o;3551:140:1:-;3631:7;3657:11;:18;3669:5;3657:18;;;;;;;;;;;;;;;:27;3676:7;3657:27;;;;;;;;;;;;;;;;3650:34;;3551:140;;;;:::o;656:96:4:-;709:7;735:10;728:17;;656:96;:::o;8726:128:1:-;8810:37;8819:5;8826:7;8835:5;8842:4;8810:8;:37::i;:::-;8726:128;;;:::o;10415:476::-;10514:24;10541:25;10551:5;10558:7;10541:9;:25::i;:::-;10514:52;;10599:17;10580:16;:36;10576:309;;;10655:5;10636:16;:24;10632:130;;;10714:7;10723:16;10741:5;10687:60;;;;;;;;;;;;;:::i;:::-;;;;;;;;10632:130;10803:57;10812:5;10819:7;10847:5;10828:16;:24;10854:5;10803:8;:57::i;:::-;10576:309;10504:387;10415:476;;;:::o;5393:300::-;5492:1;5476:18;;:4;:18;;;5472:86;;5544:1;5517:30;;;;;;;;;;;:::i;:::-;;;;;;;;5472:86;5585:1;5571:16;;:2;:16;;;5567:86;;5639:1;5610:32;;;;;;;;;;;:::i;:::-;;;;;;;;5567:86;5662:24;5670:4;5676:2;5680:5;5662:7;:24::i;:::-;5393:300;;;:::o;7458:208::-;7547:1;7528:21;;:7;:21;;;7524:91;;7601:1;7572:32;;;;;;;;;;;:::i;:::-;;;;;;;;7524:91;7624:35;7640:1;7644:7;7653:5;7624:7;:35::i;:::-;7458:208;;:::o;8844:165:5:-;8924:4;8947:55;8957:3;:10;;8993:5;8977:23;;8969:32;;8947:9;:55::i;:::-;8940:62;;8844:165;;;;:::o;8289:150::-;8359:4;8382:50;8387:3;:10;;8423:5;8407:23;;8399:32;;8382:4;:50::i;:::-;8375:57;;8289:150;;;;:::o;10243:273::-;10306:16;10334:22;10359:19;10367:3;:10;;10359:7;:19::i;:::-;10334:44;;10388:23;10471:5;10461:15;;10503:6;10496:13;;;;10243:273;;;:::o;9701:432:1:-;9830:1;9813:19;;:5;:19;;;9809:89;;9884:1;9855:32;;;;;;;;;;;:::i;:::-;;;;;;;;9809:89;9930:1;9911:21;;:7;:21;;;9907:90;;9983:1;9955:31;;;;;;;;;;;:::i;:::-;;;;;;;;9907:90;10036:5;10006:11;:18;10018:5;10006:18;;;;;;;;;;;;;;;:27;10025:7;10006:27;;;;;;;;;;;;;;;:35;;;;10055:9;10051:76;;;10101:7;10085:31;;10094:5;10085:31;;;10110:5;10085:31;;;;;;:::i;:::-;;;;;;;;10051:76;9701:432;;;;:::o;6008:1107::-;6113:1;6097:18;;:4;:18;;;6093:540;;6249:5;6233:12;;:21;;;;;;;:::i;:::-;;;;;;;;6093:540;;;6285:19;6307:9;:15;6317:4;6307:15;;;;;;;;;;;;;;;;6285:37;;6354:5;6340:11;:19;6336:115;;;6411:4;6417:11;6430:5;6386:50;;;;;;;;;;;;;:::i;:::-;;;;;;;;6336:115;6603:5;6589:11;:19;6571:9;:15;6581:4;6571:15;;;;;;;;;;;;;;;:37;;;;6271:362;6093:540;6661:1;6647:16;;:2;:16;;;6643:425;;6826:5;6810:12;;:21;;;;;;;;;;;6643:425;;;7038:5;7021:9;:13;7031:2;7021:13;;;;;;;;;;;;;;;;:22;;;;;;;;;;;6643:425;7098:2;7083:25;;7092:4;7083:25;;;7102:5;7083:25;;;;;;:::i;:::-;;;;;;;;6008:1107;;;:::o;4264:129:5:-;4337:4;4385:1;4360:3;:14;;:21;4375:5;4360:21;;;;;;;;;;;;:26;;4353:33;;4264:129;;;;:::o;2241:406::-;2304:4;2325:21;2335:3;2340:5;2325:9;:21::i;:::-;2320:321;;2362:3;:11;;2379:5;2362:23;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;2544:3;:11;;:18;;;;2520:3;:14;;:21;2535:5;2520:21;;;;;;;;;;;:42;;;;2583:4;2576:11;;;;2320:321;2625:5;2618:12;;2241:406;;;;;:::o;5581:109::-;5637:16;5672:3;:11;;5665:18;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;5581:109;;;:::o;-1:-1:-1:-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::o;7:99:7:-;59:6;93:5;87:12;77:22;;7:99;;;:::o;112:169::-;196:11;230:6;225:3;218:19;270:4;265:3;261:14;246:29;;112:169;;;;:::o;287:139::-;376:6;371:3;366;360:23;417:1;408:6;403:3;399:16;392:27;287:139;;;:::o;432:102::-;473:6;524:2;520:7;515:2;508:5;504:14;500:28;490:38;;432:102;;;:::o;540:377::-;628:3;656:39;689:5;656:39;:::i;:::-;711:71;775:6;770:3;711:71;:::i;:::-;704:78;;791:65;849:6;844:3;837:4;830:5;826:16;791:65;:::i;:::-;881:29;903:6;881:29;:::i;:::-;876:3;872:39;865:46;;632:285;540:377;;;;:::o;923:313::-;1036:4;1074:2;1063:9;1059:18;1051:26;;1123:9;1117:4;1113:20;1109:1;1098:9;1094:17;1087:47;1151:78;1224:4;1215:6;1151:78;:::i;:::-;1143:86;;923:313;;;;:::o;1323:117::-;1432:1;1429;1422:12;1446:117;1555:1;1552;1545:12;1569:126;1606:7;1646:42;1639:5;1635:54;1624:65;;1569:126;;;:::o;1701:96::-;1738:7;1767:24;1785:5;1767:24;:::i;:::-;1756:35;;1701:96;;;:::o;1803:122::-;1876:24;1894:5;1876:24;:::i;:::-;1869:5;1866:35;1856:63;;1915:1;1912;1905:12;1856:63;1803:122;:::o;1931:139::-;1977:5;2015:6;2002:20;1993:29;;2031:33;2058:5;2031:33;:::i;:::-;1931:139;;;;:::o;2076:77::-;2113:7;2142:5;2131:16;;2076:77;;;:::o;2159:122::-;2232:24;2250:5;2232:24;:::i;:::-;2225:5;2222:35;2212:63;;2271:1;2268;2261:12;2212:63;2159:122;:::o;2287:139::-;2333:5;2371:6;2358:20;2349:29;;2387:33;2414:5;2387:33;:::i;:::-;2287:139;;;;:::o;2432:474::-;2500:6;2508;2557:2;2545:9;2536:7;2532:23;2528:32;2525:119;;;2563:79;;:::i;:::-;2525:119;2683:1;2708:53;2753:7;2744:6;2733:9;2729:22;2708:53;:::i;:::-;2698:63;;2654:117;2810:2;2836:53;2881:7;2872:6;2861:9;2857:22;2836:53;:::i;:::-;2826:63;;2781:118;2432:474;;;;;:::o;2912:90::-;2946:7;2989:5;2982:13;2975:21;2964:32;;2912:90;;;:::o;3008:109::-;3089:21;3104:5;3089:21;:::i;:::-;3084:3;3077:34;3008:109;;:::o;3123:210::-;3210:4;3248:2;3237:9;3233:18;3225:26;;3261:65;3323:1;3312:9;3308:17;3299:6;3261:65;:::i;:::-;3123:210;;;;:::o;3339:118::-;3426:24;3444:5;3426:24;:::i;:::-;3421:3;3414:37;3339:118;;:::o;3463:222::-;3556:4;3594:2;3583:9;3579:18;3571:26;;3607:71;3675:1;3664:9;3660:17;3651:6;3607:71;:::i;:::-;3463:222;;;;:::o;3691:619::-;3768:6;3776;3784;3833:2;3821:9;3812:7;3808:23;3804:32;3801:119;;;3839:79;;:::i;:::-;3801:119;3959:1;3984:53;4029:7;4020:6;4009:9;4005:22;3984:53;:::i;:::-;3974:63;;3930:117;4086:2;4112:53;4157:7;4148:6;4137:9;4133:22;4112:53;:::i;:::-;4102:63;;4057:118;4214:2;4240:53;4285:7;4276:6;4265:9;4261:22;4240:53;:::i;:::-;4230:63;;4185:118;3691:619;;;;;:::o;4316:86::-;4351:7;4391:4;4384:5;4380:16;4369:27;;4316:86;;;:::o;4408:112::-;4491:22;4507:5;4491:22;:::i;:::-;4486:3;4479:35;4408:112;;:::o;4526:214::-;4615:4;4653:2;4642:9;4638:18;4630:26;;4666:67;4730:1;4719:9;4715:17;4706:6;4666:67;:::i;:::-;4526:214;;;;:::o;4746:329::-;4805:6;4854:2;4842:9;4833:7;4829:23;4825:32;4822:119;;;4860:79;;:::i;:::-;4822:119;4980:1;5005:53;5050:7;5041:6;5030:9;5026:22;5005:53;:::i;:::-;4995:63;;4951:117;4746:329;;;;:::o;5081:117::-;5190:1;5187;5180:12;5204:117;5313:1;5310;5303:12;5327:117;5436:1;5433;5426:12;5464:553;5522:8;5532:6;5582:3;5575:4;5567:6;5563:17;5559:27;5549:122;;5590:79;;:::i;:::-;5549:122;5703:6;5690:20;5680:30;;5733:18;5725:6;5722:30;5719:117;;;5755:79;;:::i;:::-;5719:117;5869:4;5861:6;5857:17;5845:29;;5923:3;5915:4;5907:6;5903:17;5893:8;5889:32;5886:41;5883:128;;;5930:79;;:::i;:::-;5883:128;5464:553;;;;;:::o;6023:674::-;6103:6;6111;6119;6168:2;6156:9;6147:7;6143:23;6139:32;6136:119;;;6174:79;;:::i;:::-;6136:119;6322:1;6311:9;6307:17;6294:31;6352:18;6344:6;6341:30;6338:117;;;6374:79;;:::i;:::-;6338:117;6487:65;6544:7;6535:6;6524:9;6520:22;6487:65;:::i;:::-;6469:83;;;;6265:297;6601:2;6627:53;6672:7;6663:6;6652:9;6648:22;6627:53;:::i;:::-;6617:63;;6572:118;6023:674;;;;;:::o;6703:108::-;6785:1;6778:5;6775:12;6765:40;;6801:1;6798;6791:12;6765:40;6703:108;:::o;6817:157::-;6872:5;6910:6;6897:20;6888:29;;6926:42;6962:5;6926:42;:::i;:::-;6817:157;;;;:::o;6980:492::-;7057:6;7065;7114:2;7102:9;7093:7;7089:23;7085:32;7082:119;;;7120:79;;:::i;:::-;7082:119;7240:1;7265:53;7310:7;7301:6;7290:9;7286:22;7265:53;:::i;:::-;7255:63;;7211:117;7367:2;7393:62;7447:7;7438:6;7427:9;7423:22;7393:62;:::i;:::-;7383:72;;7338:127;6980:492;;;;;:::o;7478:329::-;7537:6;7586:2;7574:9;7565:7;7561:23;7557:32;7554:119;;;7592:79;;:::i;:::-;7554:119;7712:1;7737:53;7782:7;7773:6;7762:9;7758:22;7737:53;:::i;:::-;7727:63;;7683:117;7478:329;;;;:::o;7813:114::-;7880:6;7914:5;7908:12;7898:22;;7813:114;;;:::o;7933:174::-;8022:11;8056:6;8051:3;8044:19;8096:4;8091:3;8087:14;8072:29;;7933:174;;;;:::o;8113:132::-;8180:4;8203:3;8195:11;;8233:4;8228:3;8224:14;8216:22;;8113:132;;;:::o;8251:108::-;8328:24;8346:5;8328:24;:::i;:::-;8323:3;8316:37;8251:108;;:::o;8365:179::-;8434:10;8455:46;8497:3;8489:6;8455:46;:::i;:::-;8533:4;8528:3;8524:14;8510:28;;8365:179;;;;:::o;8550:113::-;8620:4;8652;8647:3;8643:14;8635:22;;8550:113;;;:::o;8699:712::-;8808:3;8837:54;8885:5;8837:54;:::i;:::-;8907:76;8976:6;8971:3;8907:76;:::i;:::-;8900:83;;9007:56;9057:5;9007:56;:::i;:::-;9086:7;9117:1;9102:284;9127:6;9124:1;9121:13;9102:284;;;9203:6;9197:13;9230:63;9289:3;9274:13;9230:63;:::i;:::-;9223:70;;9316:60;9369:6;9316:60;:::i;:::-;9306:70;;9162:224;9149:1;9146;9142:9;9137:14;;9102:284;;;9106:14;9402:3;9395:10;;8813:598;;;8699:712;;;;:::o;9417:159::-;9491:11;9525:6;9520:3;9513:19;9565:4;9560:3;9556:14;9541:29;;9417:159;;;;:::o;9582:357::-;9660:3;9688:39;9721:5;9688:39;:::i;:::-;9743:61;9797:6;9792:3;9743:61;:::i;:::-;9736:68;;9813:65;9871:6;9866:3;9859:4;9852:5;9848:16;9813:65;:::i;:::-;9903:29;9925:6;9903:29;:::i;:::-;9898:3;9894:39;9887:46;;9664:275;9582:357;;;;:::o;9945:108::-;10022:24;10040:5;10022:24;:::i;:::-;10017:3;10010:37;9945:108;;:::o;10059:99::-;10130:21;10145:5;10130:21;:::i;:::-;10125:3;10118:34;10059:99;;:::o;10250:1974::-;10385:3;10421:6;10416:3;10412:16;10512:4;10505:5;10501:16;10495:23;10565:3;10559:4;10555:14;10548:4;10543:3;10539:14;10532:38;10591:103;10689:4;10675:12;10591:103;:::i;:::-;10583:111;;10438:267;10792:4;10785:5;10781:16;10775:23;10845:3;10839:4;10835:14;10828:4;10823:3;10819:14;10812:38;10871:73;10939:4;10925:12;10871:73;:::i;:::-;10863:81;;10715:240;11039:4;11032:5;11028:16;11022:23;11058:63;11115:4;11110:3;11106:14;11092:12;11058:63;:::i;:::-;10965:166;11219:4;11212:5;11208:16;11202:23;11238:63;11295:4;11290:3;11286:14;11272:12;11238:63;:::i;:::-;11141:170;11397:4;11390:5;11386:16;11380:23;11416:63;11473:4;11468:3;11464:14;11450:12;11416:63;:::i;:::-;11321:168;11579:4;11572:5;11568:16;11562:23;11598:63;11655:4;11650:3;11646:14;11632:12;11598:63;:::i;:::-;11499:172;11761:4;11754:5;11750:16;11744:23;11780:63;11837:4;11832:3;11828:14;11814:12;11780:63;:::i;:::-;11681:172;11937:4;11930:5;11926:16;11920:23;11956:57;12007:4;12002:3;11998:14;11984:12;11956:57;:::i;:::-;11863:160;12107:6;12100:5;12096:18;12090:25;12128:59;12179:6;12174:3;12170:16;12156:12;12128:59;:::i;:::-;12033:164;12214:4;12207:11;;10390:1834;10250:1974;;;;:::o;12230:405::-;12389:4;12427:2;12416:9;12412:18;12404:26;;12476:9;12470:4;12466:20;12462:1;12451:9;12447:17;12440:47;12504:124;12623:4;12614:6;12504:124;:::i;:::-;12496:132;;12230:405;;;;:::o;12641:474::-;12709:6;12717;12766:2;12754:9;12745:7;12741:23;12737:32;12734:119;;;12772:79;;:::i;:::-;12734:119;12892:1;12917:53;12962:7;12953:6;12942:9;12938:22;12917:53;:::i;:::-;12907:63;;12863:117;13019:2;13045:53;13090:7;13081:6;13070:9;13066:22;13045:53;:::i;:::-;13035:63;;12990:118;12641:474;;;;;:::o;13121:180::-;13169:77;13166:1;13159:88;13266:4;13263:1;13256:15;13290:4;13287:1;13280:15;13307:320;13351:6;13388:1;13382:4;13378:12;13368:22;;13435:1;13429:4;13425:12;13456:18;13446:81;;13512:4;13504:6;13500:17;13490:27;;13446:81;13574:2;13566:6;13563:14;13543:18;13540:38;13537:84;;13593:18;;:::i;:::-;13537:84;13358:269;13307:320;;;:::o;13633:180::-;13681:77;13678:1;13671:88;13778:4;13775:1;13768:15;13802:4;13799:1;13792:15;13819:191;13859:3;13878:20;13896:1;13878:20;:::i;:::-;13873:25;;13912:20;13930:1;13912:20;:::i;:::-;13907:25;;13955:1;13952;13948:9;13941:16;;13976:3;13973:1;13970:10;13967:36;;;13983:18;;:::i;:::-;13967:36;13819:191;;;;:::o;14016:97::-;14075:6;14103:3;14093:13;;14016:97;;;;:::o;14119:180::-;14167:77;14164:1;14157:88;14264:4;14261:1;14254:15;14288:4;14285:1;14278:15;14305:141;14354:4;14377:3;14369:11;;14400:3;14397:1;14390:14;14434:4;14431:1;14421:18;14413:26;;14305:141;;;:::o;14452:93::-;14489:6;14536:2;14531;14524:5;14520:14;14516:23;14506:33;;14452:93;;;:::o;14551:107::-;14595:8;14645:5;14639:4;14635:16;14614:37;;14551:107;;;;:::o;14664:393::-;14733:6;14783:1;14771:10;14767:18;14806:97;14836:66;14825:9;14806:97;:::i;:::-;14924:39;14954:8;14943:9;14924:39;:::i;:::-;14912:51;;14996:4;14992:9;14985:5;14981:21;14972:30;;15045:4;15035:8;15031:19;15024:5;15021:30;15011:40;;14740:317;;14664:393;;;;;:::o;15063:60::-;15091:3;15112:5;15105:12;;15063:60;;;:::o;15129:142::-;15179:9;15212:53;15230:34;15239:24;15257:5;15239:24;:::i;:::-;15230:34;:::i;:::-;15212:53;:::i;:::-;15199:66;;15129:142;;;:::o;15277:75::-;15320:3;15341:5;15334:12;;15277:75;;;:::o;15358:269::-;15468:39;15499:7;15468:39;:::i;:::-;15529:91;15578:41;15602:16;15578:41;:::i;:::-;15570:6;15563:4;15557:11;15529:91;:::i;:::-;15523:4;15516:105;15434:193;15358:269;;;:::o;15633:73::-;15678:3;15633:73;:::o;15712:189::-;15789:32;;:::i;:::-;15830:65;15888:6;15880;15874:4;15830:65;:::i;:::-;15765:136;15712:189;;:::o;15907:186::-;15967:120;15984:3;15977:5;15974:14;15967:120;;;16038:39;16075:1;16068:5;16038:39;:::i;:::-;16011:1;16004:5;16000:13;15991:22;;15967:120;;;15907:186;;:::o;16099:543::-;16200:2;16195:3;16192:11;16189:446;;;16234:38;16266:5;16234:38;:::i;:::-;16318:29;16336:10;16318:29;:::i;:::-;16308:8;16304:44;16501:2;16489:10;16486:18;16483:49;;;16522:8;16507:23;;16483:49;16545:80;16601:22;16619:3;16601:22;:::i;:::-;16591:8;16587:37;16574:11;16545:80;:::i;:::-;16204:431;;16189:446;16099:543;;;:::o;16648:117::-;16702:8;16752:5;16746:4;16742:16;16721:37;;16648:117;;;;:::o;16771:169::-;16815:6;16848:51;16896:1;16892:6;16884:5;16881:1;16877:13;16848:51;:::i;:::-;16844:56;16929:4;16923;16919:15;16909:25;;16822:118;16771:169;;;;:::o;16945:295::-;17021:4;17167:29;17192:3;17186:4;17167:29;:::i;:::-;17159:37;;17229:3;17226:1;17222:11;17216:4;17213:21;17205:29;;16945:295;;;;:::o;17245:1403::-;17369:44;17409:3;17404;17369:44;:::i;:::-;17478:18;17470:6;17467:30;17464:56;;;17500:18;;:::i;:::-;17464:56;17544:38;17576:4;17570:11;17544:38;:::i;:::-;17629:67;17689:6;17681;17675:4;17629:67;:::i;:::-;17723:1;17752:2;17744:6;17741:14;17769:1;17764:632;;;;18440:1;18457:6;18454:84;;;18513:9;18508:3;18504:19;18491:33;18482:42;;18454:84;18564:67;18624:6;18617:5;18564:67;:::i;:::-;18558:4;18551:81;18413:229;17734:908;;17764:632;17816:4;17812:9;17804:6;17800:22;17850:37;17882:4;17850:37;:::i;:::-;17909:1;17923:215;17937:7;17934:1;17931:14;17923:215;;;18023:9;18018:3;18014:19;18001:33;17993:6;17986:49;18074:1;18066:6;18062:14;18052:24;;18121:2;18110:9;18106:18;18093:31;;17960:4;17957:1;17953:12;17948:17;;17923:215;;;18166:6;18157:7;18154:19;18151:186;;;18231:9;18226:3;18222:19;18209:33;18274:48;18316:4;18308:6;18304:17;18293:9;18274:48;:::i;:::-;18266:6;18259:64;18174:163;18151:186;18383:1;18379;18371:6;18367:14;18363:22;18357:4;18350:36;17771:625;;;17734:908;;17344:1304;;;17245:1403;;;:::o;18654:194::-;18694:4;18714:20;18732:1;18714:20;:::i;:::-;18709:25;;18748:20;18766:1;18748:20;:::i;:::-;18743:25;;18792:1;18789;18785:9;18777:17;;18816:1;18810:4;18807:11;18804:37;;;18821:18;;:::i;:::-;18804:37;18654:194;;;;:::o;18854:180::-;18902:77;18899:1;18892:88;18999:4;18996:1;18989:15;19023:4;19020:1;19013:15;19040:180;19088:77;19085:1;19078:88;19185:4;19182:1;19175:15;19209:4;19206:1;19199:15;19226:118;19313:24;19331:5;19313:24;:::i;:::-;19308:3;19301:37;19226:118;;:::o;19350:442::-;19499:4;19537:2;19526:9;19522:18;19514:26;;19550:71;19618:1;19607:9;19603:17;19594:6;19550:71;:::i;:::-;19631:72;19699:2;19688:9;19684:18;19675:6;19631:72;:::i;:::-;19713;19781:2;19770:9;19766:18;19757:6;19713:72;:::i;:::-;19350:442;;;;;;:::o;19798:222::-;19891:4;19929:2;19918:9;19914:18;19906:26;;19942:71;20010:1;19999:9;19995:17;19986:6;19942:71;:::i;:::-;19798:222;;;;:::o"
						},
						"gasEstimates": {
							"creation": {
								"codeDepositCost": "1516000",
								"executionCost": "infinite",
								"totalCost": "infinite"
							},
							"external": {
								"allowance(address,address)": "infinite",
								"approve(address,uint256)": "infinite",
								"balanceOf(address)": "2918",
								"claim()": "infinite",
								"claimAmount()": "2448",
								"createIssue(string,uint256)": "infinite",
								"decimals()": "361",
								"getIssue(uint256)": "infinite",
								"maxSupply()": "2491",
								"name()": "infinite",
								"symbol()": "infinite",
								"tokensClaimed(address)": "2900",
								"totalSupply()": "2500",
								"transfer(address,uint256)": "infinite",
								"transferFrom(address,address,uint256)": "infinite",
								"vote(uint256,uint8)": "infinite"
							}
						},
						"legacyAssembly": {
							".code": [
								{
									"begin": 318,
									"end": 6184,
									"name": "PUSH",
									"source": 6,
									"value": "80"
								},
								{
									"begin": 318,
									"end": 6184,
									"name": "PUSH",
									"source": 6,
									"value": "40"
								},
								{
									"begin": 318,
									"end": 6184,
									"name": "MSTORE",
									"source": 6
								},
								{
									"begin": 357,
									"end": 386,
									"name": "PUSH",
									"source": 6,
									"value": "40"
								},
								{
									"begin": 357,
									"end": 386,
									"name": "MLOAD",
									"source": 6
								},
								{
									"begin": 357,
									"end": 386,
									"name": "DUP1",
									"source": 6
								},
								{
									"begin": 357,
									"end": 386,
									"name": "PUSH",
									"source": 6,
									"value": "40"
								},
								{
									"begin": 357,
									"end": 386,
									"name": "ADD",
									"source": 6
								},
								{
									"begin": 357,
									"end": 386,
									"name": "PUSH",
									"source": 6,
									"value": "40"
								},
								{
									"begin": 357,
									"end": 386,
									"name": "MSTORE",
									"source": 6
								},
								{
									"begin": 357,
									"end": 386,
									"name": "DUP1",
									"source": 6
								},
								{
									"begin": 357,
									"end": 386,
									"name": "PUSH",
									"source": 6,
									"value": "5"
								},
								{
									"begin": 357,
									"end": 386,
									"name": "DUP2",
									"source": 6
								},
								{
									"begin": 357,
									"end": 386,
									"name": "MSTORE",
									"source": 6
								},
								{
									"begin": 357,
									"end": 386,
									"name": "PUSH",
									"source": 6,
									"value": "20"
								},
								{
									"begin": 357,
									"end": 386,
									"name": "ADD",
									"source": 6
								},
								{
									"begin": 357,
									"end": 386,
									"name": "PUSH",
									"source": 6,
									"value": "76616C7565000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 357,
									"end": 386,
									"name": "DUP2",
									"source": 6
								},
								{
									"begin": 357,
									"end": 386,
									"name": "MSTORE",
									"source": 6
								},
								{
									"begin": 357,
									"end": 386,
									"name": "POP",
									"source": 6
								},
								{
									"begin": 357,
									"end": 386,
									"name": "PUSH",
									"source": 6,
									"value": "5"
								},
								{
									"begin": 357,
									"end": 386,
									"name": "SWAP1",
									"source": 6
								},
								{
									"begin": 357,
									"end": 386,
									"name": "DUP2",
									"source": 6
								},
								{
									"begin": 357,
									"end": 386,
									"name": "PUSH [tag]",
									"source": 6,
									"value": "1"
								},
								{
									"begin": 357,
									"end": 386,
									"name": "SWAP2",
									"source": 6
								},
								{
									"begin": 357,
									"end": 386,
									"name": "SWAP1",
									"source": 6
								},
								{
									"begin": 357,
									"end": 386,
									"name": "PUSH [tag]",
									"source": 6,
									"value": "2"
								},
								{
									"begin": 357,
									"end": 386,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 6
								},
								{
									"begin": 357,
									"end": 386,
									"name": "tag",
									"source": 6,
									"value": "1"
								},
								{
									"begin": 357,
									"end": 386,
									"name": "JUMPDEST",
									"source": 6
								},
								{
									"begin": 357,
									"end": 386,
									"name": "POP",
									"source": 6
								},
								{
									"begin": 2605,
									"end": 2612,
									"name": "PUSH",
									"source": 6,
									"value": "F4240"
								},
								{
									"begin": 2578,
									"end": 2612,
									"name": "PUSH",
									"source": 6,
									"value": "8"
								},
								{
									"begin": 2578,
									"end": 2612,
									"name": "SSTORE",
									"source": 6
								},
								{
									"begin": 2675,
									"end": 2678,
									"name": "PUSH",
									"source": 6,
									"value": "64"
								},
								{
									"begin": 2646,
									"end": 2678,
									"name": "PUSH",
									"source": 6,
									"value": "9"
								},
								{
									"begin": 2646,
									"end": 2678,
									"name": "SSTORE",
									"source": 6
								},
								{
									"begin": 2719,
									"end": 2739,
									"name": "PUSH",
									"source": 6,
									"value": "40"
								},
								{
									"begin": 2719,
									"end": 2739,
									"name": "MLOAD",
									"source": 6
								},
								{
									"begin": 2719,
									"end": 2739,
									"name": "DUP1",
									"source": 6
								},
								{
									"begin": 2719,
									"end": 2739,
									"name": "PUSH",
									"source": 6,
									"value": "40"
								},
								{
									"begin": 2719,
									"end": 2739,
									"name": "ADD",
									"source": 6
								},
								{
									"begin": 2719,
									"end": 2739,
									"name": "PUSH",
									"source": 6,
									"value": "40"
								},
								{
									"begin": 2719,
									"end": 2739,
									"name": "MSTORE",
									"source": 6
								},
								{
									"begin": 2719,
									"end": 2739,
									"name": "DUP1",
									"source": 6
								},
								{
									"begin": 2719,
									"end": 2739,
									"name": "PUSH",
									"source": 6,
									"value": "3"
								},
								{
									"begin": 2719,
									"end": 2739,
									"name": "DUP2",
									"source": 6
								},
								{
									"begin": 2719,
									"end": 2739,
									"name": "MSTORE",
									"source": 6
								},
								{
									"begin": 2719,
									"end": 2739,
									"name": "PUSH",
									"source": 6,
									"value": "20"
								},
								{
									"begin": 2719,
									"end": 2739,
									"name": "ADD",
									"source": 6
								},
								{
									"begin": 2719,
									"end": 2739,
									"name": "PUSH",
									"source": 6,
									"value": "616E790000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 2719,
									"end": 2739,
									"name": "DUP2",
									"source": 6
								},
								{
									"begin": 2719,
									"end": 2739,
									"name": "MSTORE",
									"source": 6
								},
								{
									"begin": 2719,
									"end": 2739,
									"name": "POP",
									"source": 6
								},
								{
									"begin": 2719,
									"end": 2739,
									"name": "PUSH",
									"source": 6,
									"value": "A"
								},
								{
									"begin": 2719,
									"end": 2739,
									"name": "SWAP1",
									"source": 6
								},
								{
									"begin": 2719,
									"end": 2739,
									"name": "DUP2",
									"source": 6
								},
								{
									"begin": 2719,
									"end": 2739,
									"name": "PUSH [tag]",
									"source": 6,
									"value": "3"
								},
								{
									"begin": 2719,
									"end": 2739,
									"name": "SWAP2",
									"source": 6
								},
								{
									"begin": 2719,
									"end": 2739,
									"name": "SWAP1",
									"source": 6
								},
								{
									"begin": 2719,
									"end": 2739,
									"name": "PUSH [tag]",
									"source": 6,
									"value": "2"
								},
								{
									"begin": 2719,
									"end": 2739,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 6
								},
								{
									"begin": 2719,
									"end": 2739,
									"name": "tag",
									"source": 6,
									"value": "3"
								},
								{
									"begin": 2719,
									"end": 2739,
									"name": "JUMPDEST",
									"source": 6
								},
								{
									"begin": 2719,
									"end": 2739,
									"name": "POP",
									"source": 6
								},
								{
									"begin": 2841,
									"end": 3009,
									"name": "CALLVALUE",
									"source": 6
								},
								{
									"begin": 2841,
									"end": 3009,
									"name": "DUP1",
									"source": 6
								},
								{
									"begin": 2841,
									"end": 3009,
									"name": "ISZERO",
									"source": 6
								},
								{
									"begin": 2841,
									"end": 3009,
									"name": "PUSH [tag]",
									"source": 6,
									"value": "4"
								},
								{
									"begin": 2841,
									"end": 3009,
									"name": "JUMPI",
									"source": 6
								},
								{
									"begin": 2841,
									"end": 3009,
									"name": "PUSH",
									"source": 6,
									"value": "0"
								},
								{
									"begin": 2841,
									"end": 3009,
									"name": "DUP1",
									"source": 6
								},
								{
									"begin": 2841,
									"end": 3009,
									"name": "REVERT",
									"source": 6
								},
								{
									"begin": 2841,
									"end": 3009,
									"name": "tag",
									"source": 6,
									"value": "4"
								},
								{
									"begin": 2841,
									"end": 3009,
									"name": "JUMPDEST",
									"source": 6
								},
								{
									"begin": 2841,
									"end": 3009,
									"name": "POP",
									"source": 6
								},
								{
									"begin": 2841,
									"end": 3009,
									"name": "PUSH",
									"source": 6,
									"value": "40"
								},
								{
									"begin": 2841,
									"end": 3009,
									"name": "MLOAD",
									"source": 6
								},
								{
									"begin": 2841,
									"end": 3009,
									"name": "PUSHSIZE",
									"source": 6
								},
								{
									"begin": 2841,
									"end": 3009,
									"name": "CODESIZE",
									"source": 6
								},
								{
									"begin": 2841,
									"end": 3009,
									"name": "SUB",
									"source": 6
								},
								{
									"begin": 2841,
									"end": 3009,
									"name": "DUP1",
									"source": 6
								},
								{
									"begin": 2841,
									"end": 3009,
									"name": "PUSHSIZE",
									"source": 6
								},
								{
									"begin": 2841,
									"end": 3009,
									"name": "DUP4",
									"source": 6
								},
								{
									"begin": 2841,
									"end": 3009,
									"name": "CODECOPY",
									"source": 6
								},
								{
									"begin": 2841,
									"end": 3009,
									"name": "DUP2",
									"source": 6
								},
								{
									"begin": 2841,
									"end": 3009,
									"name": "DUP2",
									"source": 6
								},
								{
									"begin": 2841,
									"end": 3009,
									"name": "ADD",
									"source": 6
								},
								{
									"begin": 2841,
									"end": 3009,
									"name": "PUSH",
									"source": 6,
									"value": "40"
								},
								{
									"begin": 2841,
									"end": 3009,
									"name": "MSTORE",
									"source": 6
								},
								{
									"begin": 2841,
									"end": 3009,
									"name": "DUP2",
									"source": 6
								},
								{
									"begin": 2841,
									"end": 3009,
									"name": "ADD",
									"source": 6
								},
								{
									"begin": 2841,
									"end": 3009,
									"name": "SWAP1",
									"source": 6
								},
								{
									"begin": 2841,
									"end": 3009,
									"name": "PUSH [tag]",
									"source": 6,
									"value": "5"
								},
								{
									"begin": 2841,
									"end": 3009,
									"name": "SWAP2",
									"source": 6
								},
								{
									"begin": 2841,
									"end": 3009,
									"name": "SWAP1",
									"source": 6
								},
								{
									"begin": 2841,
									"end": 3009,
									"name": "PUSH [tag]",
									"source": 6,
									"value": "6"
								},
								{
									"begin": 2841,
									"end": 3009,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 6
								},
								{
									"begin": 2841,
									"end": 3009,
									"name": "tag",
									"source": 6,
									"value": "5"
								},
								{
									"begin": 2841,
									"end": 3009,
									"name": "JUMPDEST",
									"source": 6
								},
								{
									"begin": 2911,
									"end": 2916,
									"name": "DUP2",
									"source": 6
								},
								{
									"begin": 2918,
									"end": 2925,
									"name": "DUP2",
									"source": 6
								},
								{
									"begin": 1675,
									"end": 1680,
									"name": "DUP2",
									"source": 1
								},
								{
									"begin": 1667,
									"end": 1672,
									"name": "PUSH",
									"source": 1,
									"value": "3"
								},
								{
									"begin": 1667,
									"end": 1680,
									"name": "SWAP1",
									"source": 1
								},
								{
									"begin": 1667,
									"end": 1680,
									"name": "DUP2",
									"source": 1
								},
								{
									"begin": 1667,
									"end": 1680,
									"name": "PUSH [tag]",
									"source": 1,
									"value": "10"
								},
								{
									"begin": 1667,
									"end": 1680,
									"name": "SWAP2",
									"source": 1
								},
								{
									"begin": 1667,
									"end": 1680,
									"name": "SWAP1",
									"source": 1
								},
								{
									"begin": 1667,
									"end": 1680,
									"name": "PUSH [tag]",
									"source": 1,
									"value": "2"
								},
								{
									"begin": 1667,
									"end": 1680,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 1
								},
								{
									"begin": 1667,
									"end": 1680,
									"name": "tag",
									"source": 1,
									"value": "10"
								},
								{
									"begin": 1667,
									"end": 1680,
									"name": "JUMPDEST",
									"source": 1
								},
								{
									"begin": 1667,
									"end": 1680,
									"name": "POP",
									"source": 1
								},
								{
									"begin": 1700,
									"end": 1707,
									"name": "DUP1",
									"source": 1
								},
								{
									"begin": 1690,
									"end": 1697,
									"name": "PUSH",
									"source": 1,
									"value": "4"
								},
								{
									"begin": 1690,
									"end": 1707,
									"name": "SWAP1",
									"source": 1
								},
								{
									"begin": 1690,
									"end": 1707,
									"name": "DUP2",
									"source": 1
								},
								{
									"begin": 1690,
									"end": 1707,
									"name": "PUSH [tag]",
									"source": 1,
									"value": "11"
								},
								{
									"begin": 1690,
									"end": 1707,
									"name": "SWAP2",
									"source": 1
								},
								{
									"begin": 1690,
									"end": 1707,
									"name": "SWAP1",
									"source": 1
								},
								{
									"begin": 1690,
									"end": 1707,
									"name": "PUSH [tag]",
									"source": 1,
									"value": "2"
								},
								{
									"begin": 1690,
									"end": 1707,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 1
								},
								{
									"begin": 1690,
									"end": 1707,
									"name": "tag",
									"source": 1,
									"value": "11"
								},
								{
									"begin": 1690,
									"end": 1707,
									"name": "JUMPDEST",
									"source": 1
								},
								{
									"begin": 1690,
									"end": 1707,
									"name": "POP",
									"source": 1
								},
								{
									"begin": 1601,
									"end": 1714,
									"name": "POP",
									"source": 1
								},
								{
									"begin": 1601,
									"end": 1714,
									"name": "POP",
									"source": 1
								},
								{
									"begin": 2941,
									"end": 2947,
									"modifierDepth": 1,
									"name": "PUSH",
									"source": 6,
									"value": "6"
								},
								{
									"begin": 2941,
									"end": 2954,
									"modifierDepth": 1,
									"name": "PUSH",
									"source": 6,
									"value": "1"
								},
								{
									"begin": 2941,
									"end": 2954,
									"modifierDepth": 1,
									"name": "DUP2",
									"source": 6
								},
								{
									"begin": 2941,
									"end": 2954,
									"modifierDepth": 1,
									"name": "PUSH",
									"source": 6,
									"value": "1"
								},
								{
									"begin": 2941,
									"end": 2954,
									"modifierDepth": 1,
									"name": "DUP2",
									"source": 6
								},
								{
									"begin": 2941,
									"end": 2954,
									"modifierDepth": 1,
									"name": "SLOAD",
									"source": 6
								},
								{
									"begin": 2941,
									"end": 2954,
									"modifierDepth": 1,
									"name": "ADD",
									"source": 6
								},
								{
									"begin": 2941,
									"end": 2954,
									"modifierDepth": 1,
									"name": "DUP1",
									"source": 6
								},
								{
									"begin": 2941,
									"end": 2954,
									"modifierDepth": 1,
									"name": "DUP3",
									"source": 6
								},
								{
									"begin": 2941,
									"end": 2954,
									"modifierDepth": 1,
									"name": "SSTORE",
									"source": 6
								},
								{
									"begin": 2941,
									"end": 2954,
									"modifierDepth": 1,
									"name": "DUP1",
									"source": 6
								},
								{
									"begin": 2941,
									"end": 2954,
									"modifierDepth": 1,
									"name": "SWAP2",
									"source": 6
								},
								{
									"begin": 2941,
									"end": 2954,
									"modifierDepth": 1,
									"name": "POP",
									"source": 6
								},
								{
									"begin": 2941,
									"end": 2954,
									"modifierDepth": 1,
									"name": "POP",
									"source": 6
								},
								{
									"begin": 2941,
									"end": 2954,
									"modifierDepth": 1,
									"name": "SUB",
									"source": 6
								},
								{
									"begin": 2941,
									"end": 2954,
									"modifierDepth": 1,
									"name": "SWAP1",
									"source": 6
								},
								{
									"begin": 2941,
									"end": 2954,
									"modifierDepth": 1,
									"name": "PUSH",
									"source": 6,
									"value": "0"
								},
								{
									"begin": 2941,
									"end": 2954,
									"modifierDepth": 1,
									"name": "MSTORE",
									"source": 6
								},
								{
									"begin": 2941,
									"end": 2954,
									"modifierDepth": 1,
									"name": "PUSH",
									"source": 6,
									"value": "20"
								},
								{
									"begin": 2941,
									"end": 2954,
									"modifierDepth": 1,
									"name": "PUSH",
									"source": 6,
									"value": "0"
								},
								{
									"begin": 2941,
									"end": 2954,
									"modifierDepth": 1,
									"name": "KECCAK256",
									"source": 6
								},
								{
									"begin": 2941,
									"end": 2954,
									"modifierDepth": 1,
									"name": "SWAP1",
									"source": 6
								},
								{
									"begin": 2941,
									"end": 2954,
									"name": "POP",
									"source": 6
								},
								{
									"begin": 2941,
									"end": 2954,
									"name": "POP",
									"source": 6
								},
								{
									"begin": 2841,
									"end": 3009,
									"name": "POP",
									"source": 6
								},
								{
									"begin": 2841,
									"end": 3009,
									"name": "POP",
									"source": 6
								},
								{
									"begin": 318,
									"end": 6184,
									"name": "PUSH [tag]",
									"source": 6,
									"value": "14"
								},
								{
									"begin": 318,
									"end": 6184,
									"name": "JUMP",
									"source": 6
								},
								{
									"begin": 7,
									"end": 106,
									"name": "tag",
									"source": 7,
									"value": "15"
								},
								{
									"begin": 7,
									"end": 106,
									"name": "JUMPDEST",
									"source": 7
								},
								{
									"begin": 59,
									"end": 65,
									"name": "PUSH",
									"source": 7,
									"value": "0"
								},
								{
									"begin": 93,
									"end": 98,
									"name": "DUP2",
									"source": 7
								},
								{
									"begin": 87,
									"end": 99,
									"name": "MLOAD",
									"source": 7
								},
								{
									"begin": 77,
									"end": 99,
									"name": "SWAP1",
									"source": 7
								},
								{
									"begin": 77,
									"end": 99,
									"name": "POP",
									"source": 7
								},
								{
									"begin": 7,
									"end": 106,
									"name": "SWAP2",
									"source": 7
								},
								{
									"begin": 7,
									"end": 106,
									"name": "SWAP1",
									"source": 7
								},
								{
									"begin": 7,
									"end": 106,
									"name": "POP",
									"source": 7
								},
								{
									"begin": 7,
									"end": 106,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 7
								},
								{
									"begin": 112,
									"end": 292,
									"name": "tag",
									"source": 7,
									"value": "16"
								},
								{
									"begin": 112,
									"end": 292,
									"name": "JUMPDEST",
									"source": 7
								},
								{
									"begin": 160,
									"end": 237,
									"name": "PUSH",
									"source": 7,
									"value": "4E487B7100000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 157,
									"end": 158,
									"name": "PUSH",
									"source": 7,
									"value": "0"
								},
								{
									"begin": 150,
									"end": 238,
									"name": "MSTORE",
									"source": 7
								},
								{
									"begin": 257,
									"end": 261,
									"name": "PUSH",
									"source": 7,
									"value": "41"
								},
								{
									"begin": 254,
									"end": 255,
									"name": "PUSH",
									"source": 7,
									"value": "4"
								},
								{
									"begin": 247,
									"end": 262,
									"name": "MSTORE",
									"source": 7
								},
								{
									"begin": 281,
									"end": 285,
									"name": "PUSH",
									"source": 7,
									"value": "24"
								},
								{
									"begin": 278,
									"end": 279,
									"name": "PUSH",
									"source": 7,
									"value": "0"
								},
								{
									"begin": 271,
									"end": 286,
									"name": "REVERT",
									"source": 7
								},
								{
									"begin": 298,
									"end": 478,
									"name": "tag",
									"source": 7,
									"value": "17"
								},
								{
									"begin": 298,
									"end": 478,
									"name": "JUMPDEST",
									"source": 7
								},
								{
									"begin": 346,
									"end": 423,
									"name": "PUSH",
									"source": 7,
									"value": "4E487B7100000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 343,
									"end": 344,
									"name": "PUSH",
									"source": 7,
									"value": "0"
								},
								{
									"begin": 336,
									"end": 424,
									"name": "MSTORE",
									"source": 7
								},
								{
									"begin": 443,
									"end": 447,
									"name": "PUSH",
									"source": 7,
									"value": "22"
								},
								{
									"begin": 440,
									"end": 441,
									"name": "PUSH",
									"source": 7,
									"value": "4"
								},
								{
									"begin": 433,
									"end": 448,
									"name": "MSTORE",
									"source": 7
								},
								{
									"begin": 467,
									"end": 471,
									"name": "PUSH",
									"source": 7,
									"value": "24"
								},
								{
									"begin": 464,
									"end": 465,
									"name": "PUSH",
									"source": 7,
									"value": "0"
								},
								{
									"begin": 457,
									"end": 472,
									"name": "REVERT",
									"source": 7
								},
								{
									"begin": 484,
									"end": 804,
									"name": "tag",
									"source": 7,
									"value": "18"
								},
								{
									"begin": 484,
									"end": 804,
									"name": "JUMPDEST",
									"source": 7
								},
								{
									"begin": 528,
									"end": 534,
									"name": "PUSH",
									"source": 7,
									"value": "0"
								},
								{
									"begin": 565,
									"end": 566,
									"name": "PUSH",
									"source": 7,
									"value": "2"
								},
								{
									"begin": 559,
									"end": 563,
									"name": "DUP3",
									"source": 7
								},
								{
									"begin": 555,
									"end": 567,
									"name": "DIV",
									"source": 7
								},
								{
									"begin": 545,
									"end": 567,
									"name": "SWAP1",
									"source": 7
								},
								{
									"begin": 545,
									"end": 567,
									"name": "POP",
									"source": 7
								},
								{
									"begin": 612,
									"end": 613,
									"name": "PUSH",
									"source": 7,
									"value": "1"
								},
								{
									"begin": 606,
									"end": 610,
									"name": "DUP3",
									"source": 7
								},
								{
									"begin": 602,
									"end": 614,
									"name": "AND",
									"source": 7
								},
								{
									"begin": 633,
									"end": 651,
									"name": "DUP1",
									"source": 7
								},
								{
									"begin": 623,
									"end": 704,
									"name": "PUSH [tag]",
									"source": 7,
									"value": "52"
								},
								{
									"begin": 623,
									"end": 704,
									"name": "JUMPI",
									"source": 7
								},
								{
									"begin": 689,
									"end": 693,
									"name": "PUSH",
									"source": 7,
									"value": "7F"
								},
								{
									"begin": 681,
									"end": 687,
									"name": "DUP3",
									"source": 7
								},
								{
									"begin": 677,
									"end": 694,
									"name": "AND",
									"source": 7
								},
								{
									"begin": 667,
									"end": 694,
									"name": "SWAP2",
									"source": 7
								},
								{
									"begin": 667,
									"end": 694,
									"name": "POP",
									"source": 7
								},
								{
									"begin": 623,
									"end": 704,
									"name": "tag",
									"source": 7,
									"value": "52"
								},
								{
									"begin": 623,
									"end": 704,
									"name": "JUMPDEST",
									"source": 7
								},
								{
									"begin": 751,
									"end": 753,
									"name": "PUSH",
									"source": 7,
									"value": "20"
								},
								{
									"begin": 743,
									"end": 749,
									"name": "DUP3",
									"source": 7
								},
								{
									"begin": 740,
									"end": 754,
									"name": "LT",
									"source": 7
								},
								{
									"begin": 720,
									"end": 738,
									"name": "DUP2",
									"source": 7
								},
								{
									"begin": 717,
									"end": 755,
									"name": "SUB",
									"source": 7
								},
								{
									"begin": 714,
									"end": 798,
									"name": "PUSH [tag]",
									"source": 7,
									"value": "53"
								},
								{
									"begin": 714,
									"end": 798,
									"name": "JUMPI",
									"source": 7
								},
								{
									"begin": 770,
									"end": 788,
									"name": "PUSH [tag]",
									"source": 7,
									"value": "54"
								},
								{
									"begin": 770,
									"end": 788,
									"name": "PUSH [tag]",
									"source": 7,
									"value": "17"
								},
								{
									"begin": 770,
									"end": 788,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 7
								},
								{
									"begin": 770,
									"end": 788,
									"name": "tag",
									"source": 7,
									"value": "54"
								},
								{
									"begin": 770,
									"end": 788,
									"name": "JUMPDEST",
									"source": 7
								},
								{
									"begin": 714,
									"end": 798,
									"name": "tag",
									"source": 7,
									"value": "53"
								},
								{
									"begin": 714,
									"end": 798,
									"name": "JUMPDEST",
									"source": 7
								},
								{
									"begin": 535,
									"end": 804,
									"name": "POP",
									"source": 7
								},
								{
									"begin": 484,
									"end": 804,
									"name": "SWAP2",
									"source": 7
								},
								{
									"begin": 484,
									"end": 804,
									"name": "SWAP1",
									"source": 7
								},
								{
									"begin": 484,
									"end": 804,
									"name": "POP",
									"source": 7
								},
								{
									"begin": 484,
									"end": 804,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 7
								},
								{
									"begin": 810,
									"end": 951,
									"name": "tag",
									"source": 7,
									"value": "19"
								},
								{
									"begin": 810,
									"end": 951,
									"name": "JUMPDEST",
									"source": 7
								},
								{
									"begin": 859,
									"end": 863,
									"name": "PUSH",
									"source": 7,
									"value": "0"
								},
								{
									"begin": 882,
									"end": 885,
									"name": "DUP2",
									"source": 7
								},
								{
									"begin": 874,
									"end": 885,
									"name": "SWAP1",
									"source": 7
								},
								{
									"begin": 874,
									"end": 885,
									"name": "POP",
									"source": 7
								},
								{
									"begin": 905,
									"end": 908,
									"name": "DUP2",
									"source": 7
								},
								{
									"begin": 902,
									"end": 903,
									"name": "PUSH",
									"source": 7,
									"value": "0"
								},
								{
									"begin": 895,
									"end": 909,
									"name": "MSTORE",
									"source": 7
								},
								{
									"begin": 939,
									"end": 943,
									"name": "PUSH",
									"source": 7,
									"value": "20"
								},
								{
									"begin": 936,
									"end": 937,
									"name": "PUSH",
									"source": 7,
									"value": "0"
								},
								{
									"begin": 926,
									"end": 944,
									"name": "KECCAK256",
									"source": 7
								},
								{
									"begin": 918,
									"end": 944,
									"name": "SWAP1",
									"source": 7
								},
								{
									"begin": 918,
									"end": 944,
									"name": "POP",
									"source": 7
								},
								{
									"begin": 810,
									"end": 951,
									"name": "SWAP2",
									"source": 7
								},
								{
									"begin": 810,
									"end": 951,
									"name": "SWAP1",
									"source": 7
								},
								{
									"begin": 810,
									"end": 951,
									"name": "POP",
									"source": 7
								},
								{
									"begin": 810,
									"end": 951,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 7
								},
								{
									"begin": 957,
									"end": 1050,
									"name": "tag",
									"source": 7,
									"value": "20"
								},
								{
									"begin": 957,
									"end": 1050,
									"name": "JUMPDEST",
									"source": 7
								},
								{
									"begin": 994,
									"end": 1000,
									"name": "PUSH",
									"source": 7,
									"value": "0"
								},
								{
									"begin": 1041,
									"end": 1043,
									"name": "PUSH",
									"source": 7,
									"value": "20"
								},
								{
									"begin": 1036,
									"end": 1038,
									"name": "PUSH",
									"source": 7,
									"value": "1F"
								},
								{
									"begin": 1029,
									"end": 1034,
									"name": "DUP4",
									"source": 7
								},
								{
									"begin": 1025,
									"end": 1039,
									"name": "ADD",
									"source": 7
								},
								{
									"begin": 1021,
									"end": 1044,
									"name": "DIV",
									"source": 7
								},
								{
									"begin": 1011,
									"end": 1044,
									"name": "SWAP1",
									"source": 7
								},
								{
									"begin": 1011,
									"end": 1044,
									"name": "POP",
									"source": 7
								},
								{
									"begin": 957,
									"end": 1050,
									"name": "SWAP2",
									"source": 7
								},
								{
									"begin": 957,
									"end": 1050,
									"name": "SWAP1",
									"source": 7
								},
								{
									"begin": 957,
									"end": 1050,
									"name": "POP",
									"source": 7
								},
								{
									"begin": 957,
									"end": 1050,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 7
								},
								{
									"begin": 1056,
									"end": 1163,
									"name": "tag",
									"source": 7,
									"value": "21"
								},
								{
									"begin": 1056,
									"end": 1163,
									"name": "JUMPDEST",
									"source": 7
								},
								{
									"begin": 1100,
									"end": 1108,
									"name": "PUSH",
									"source": 7,
									"value": "0"
								},
								{
									"begin": 1150,
									"end": 1155,
									"name": "DUP3",
									"source": 7
								},
								{
									"begin": 1144,
									"end": 1148,
									"name": "DUP3",
									"source": 7
								},
								{
									"begin": 1140,
									"end": 1156,
									"name": "SHL",
									"source": 7
								},
								{
									"begin": 1119,
									"end": 1156,
									"name": "SWAP1",
									"source": 7
								},
								{
									"begin": 1119,
									"end": 1156,
									"name": "POP",
									"source": 7
								},
								{
									"begin": 1056,
									"end": 1163,
									"name": "SWAP3",
									"source": 7
								},
								{
									"begin": 1056,
									"end": 1163,
									"name": "SWAP2",
									"source": 7
								},
								{
									"begin": 1056,
									"end": 1163,
									"name": "POP",
									"source": 7
								},
								{
									"begin": 1056,
									"end": 1163,
									"name": "POP",
									"source": 7
								},
								{
									"begin": 1056,
									"end": 1163,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 7
								},
								{
									"begin": 1169,
									"end": 1562,
									"name": "tag",
									"source": 7,
									"value": "22"
								},
								{
									"begin": 1169,
									"end": 1562,
									"name": "JUMPDEST",
									"source": 7
								},
								{
									"begin": 1238,
									"end": 1244,
									"name": "PUSH",
									"source": 7,
									"value": "0"
								},
								{
									"begin": 1288,
									"end": 1289,
									"name": "PUSH",
									"source": 7,
									"value": "8"
								},
								{
									"begin": 1276,
									"end": 1286,
									"name": "DUP4",
									"source": 7
								},
								{
									"begin": 1272,
									"end": 1290,
									"name": "MUL",
									"source": 7
								},
								{
									"begin": 1311,
									"end": 1408,
									"name": "PUSH [tag]",
									"source": 7,
									"value": "59"
								},
								{
									"begin": 1341,
									"end": 1407,
									"name": "PUSH",
									"source": 7,
									"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
								},
								{
									"begin": 1330,
									"end": 1339,
									"name": "DUP3",
									"source": 7
								},
								{
									"begin": 1311,
									"end": 1408,
									"name": "PUSH [tag]",
									"source": 7,
									"value": "21"
								},
								{
									"begin": 1311,
									"end": 1408,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 7
								},
								{
									"begin": 1311,
									"end": 1408,
									"name": "tag",
									"source": 7,
									"value": "59"
								},
								{
									"begin": 1311,
									"end": 1408,
									"name": "JUMPDEST",
									"source": 7
								},
								{
									"begin": 1429,
									"end": 1468,
									"name": "PUSH [tag]",
									"source": 7,
									"value": "60"
								},
								{
									"begin": 1459,
									"end": 1467,
									"name": "DUP7",
									"source": 7
								},
								{
									"begin": 1448,
									"end": 1457,
									"name": "DUP4",
									"source": 7
								},
								{
									"begin": 1429,
									"end": 1468,
									"name": "PUSH [tag]",
									"source": 7,
									"value": "21"
								},
								{
									"begin": 1429,
									"end": 1468,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 7
								},
								{
									"begin": 1429,
									"end": 1468,
									"name": "tag",
									"source": 7,
									"value": "60"
								},
								{
									"begin": 1429,
									"end": 1468,
									"name": "JUMPDEST",
									"source": 7
								},
								{
									"begin": 1417,
									"end": 1468,
									"name": "SWAP6",
									"source": 7
								},
								{
									"begin": 1417,
									"end": 1468,
									"name": "POP",
									"source": 7
								},
								{
									"begin": 1501,
									"end": 1505,
									"name": "DUP1",
									"source": 7
								},
								{
									"begin": 1497,
									"end": 1506,
									"name": "NOT",
									"source": 7
								},
								{
									"begin": 1490,
									"end": 1495,
									"name": "DUP5",
									"source": 7
								},
								{
									"begin": 1486,
									"end": 1507,
									"name": "AND",
									"source": 7
								},
								{
									"begin": 1477,
									"end": 1507,
									"name": "SWAP4",
									"source": 7
								},
								{
									"begin": 1477,
									"end": 1507,
									"name": "POP",
									"source": 7
								},
								{
									"begin": 1550,
									"end": 1554,
									"name": "DUP1",
									"source": 7
								},
								{
									"begin": 1540,
									"end": 1548,
									"name": "DUP7",
									"source": 7
								},
								{
									"begin": 1536,
									"end": 1555,
									"name": "AND",
									"source": 7
								},
								{
									"begin": 1529,
									"end": 1534,
									"name": "DUP5",
									"source": 7
								},
								{
									"begin": 1526,
									"end": 1556,
									"name": "OR",
									"source": 7
								},
								{
									"begin": 1516,
									"end": 1556,
									"name": "SWAP3",
									"source": 7
								},
								{
									"begin": 1516,
									"end": 1556,
									"name": "POP",
									"source": 7
								},
								{
									"begin": 1245,
									"end": 1562,
									"name": "POP",
									"source": 7
								},
								{
									"begin": 1245,
									"end": 1562,
									"name": "POP",
									"source": 7
								},
								{
									"begin": 1169,
									"end": 1562,
									"name": "SWAP4",
									"source": 7
								},
								{
									"begin": 1169,
									"end": 1562,
									"name": "SWAP3",
									"source": 7
								},
								{
									"begin": 1169,
									"end": 1562,
									"name": "POP",
									"source": 7
								},
								{
									"begin": 1169,
									"end": 1562,
									"name": "POP",
									"source": 7
								},
								{
									"begin": 1169,
									"end": 1562,
									"name": "POP",
									"source": 7
								},
								{
									"begin": 1169,
									"end": 1562,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 7
								},
								{
									"begin": 1568,
									"end": 1645,
									"name": "tag",
									"source": 7,
									"value": "23"
								},
								{
									"begin": 1568,
									"end": 1645,
									"name": "JUMPDEST",
									"source": 7
								},
								{
									"begin": 1605,
									"end": 1612,
									"name": "PUSH",
									"source": 7,
									"value": "0"
								},
								{
									"begin": 1634,
									"end": 1639,
									"name": "DUP2",
									"source": 7
								},
								{
									"begin": 1623,
									"end": 1639,
									"name": "SWAP1",
									"source": 7
								},
								{
									"begin": 1623,
									"end": 1639,
									"name": "POP",
									"source": 7
								},
								{
									"begin": 1568,
									"end": 1645,
									"name": "SWAP2",
									"source": 7
								},
								{
									"begin": 1568,
									"end": 1645,
									"name": "SWAP1",
									"source": 7
								},
								{
									"begin": 1568,
									"end": 1645,
									"name": "POP",
									"source": 7
								},
								{
									"begin": 1568,
									"end": 1645,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 7
								},
								{
									"begin": 1651,
									"end": 1711,
									"name": "tag",
									"source": 7,
									"value": "24"
								},
								{
									"begin": 1651,
									"end": 1711,
									"name": "JUMPDEST",
									"source": 7
								},
								{
									"begin": 1679,
									"end": 1682,
									"name": "PUSH",
									"source": 7,
									"value": "0"
								},
								{
									"begin": 1700,
									"end": 1705,
									"name": "DUP2",
									"source": 7
								},
								{
									"begin": 1693,
									"end": 1705,
									"name": "SWAP1",
									"source": 7
								},
								{
									"begin": 1693,
									"end": 1705,
									"name": "POP",
									"source": 7
								},
								{
									"begin": 1651,
									"end": 1711,
									"name": "SWAP2",
									"source": 7
								},
								{
									"begin": 1651,
									"end": 1711,
									"name": "SWAP1",
									"source": 7
								},
								{
									"begin": 1651,
									"end": 1711,
									"name": "POP",
									"source": 7
								},
								{
									"begin": 1651,
									"end": 1711,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 7
								},
								{
									"begin": 1717,
									"end": 1859,
									"name": "tag",
									"source": 7,
									"value": "25"
								},
								{
									"begin": 1717,
									"end": 1859,
									"name": "JUMPDEST",
									"source": 7
								},
								{
									"begin": 1767,
									"end": 1776,
									"name": "PUSH",
									"source": 7,
									"value": "0"
								},
								{
									"begin": 1800,
									"end": 1853,
									"name": "PUSH [tag]",
									"source": 7,
									"value": "64"
								},
								{
									"begin": 1818,
									"end": 1852,
									"name": "PUSH [tag]",
									"source": 7,
									"value": "65"
								},
								{
									"begin": 1827,
									"end": 1851,
									"name": "PUSH [tag]",
									"source": 7,
									"value": "66"
								},
								{
									"begin": 1845,
									"end": 1850,
									"name": "DUP5",
									"source": 7
								},
								{
									"begin": 1827,
									"end": 1851,
									"name": "PUSH [tag]",
									"source": 7,
									"value": "23"
								},
								{
									"begin": 1827,
									"end": 1851,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 7
								},
								{
									"begin": 1827,
									"end": 1851,
									"name": "tag",
									"source": 7,
									"value": "66"
								},
								{
									"begin": 1827,
									"end": 1851,
									"name": "JUMPDEST",
									"source": 7
								},
								{
									"begin": 1818,
									"end": 1852,
									"name": "PUSH [tag]",
									"source": 7,
									"value": "24"
								},
								{
									"begin": 1818,
									"end": 1852,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 7
								},
								{
									"begin": 1818,
									"end": 1852,
									"name": "tag",
									"source": 7,
									"value": "65"
								},
								{
									"begin": 1818,
									"end": 1852,
									"name": "JUMPDEST",
									"source": 7
								},
								{
									"begin": 1800,
									"end": 1853,
									"name": "PUSH [tag]",
									"source": 7,
									"value": "23"
								},
								{
									"begin": 1800,
									"end": 1853,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 7
								},
								{
									"begin": 1800,
									"end": 1853,
									"name": "tag",
									"source": 7,
									"value": "64"
								},
								{
									"begin": 1800,
									"end": 1853,
									"name": "JUMPDEST",
									"source": 7
								},
								{
									"begin": 1787,
									"end": 1853,
									"name": "SWAP1",
									"source": 7
								},
								{
									"begin": 1787,
									"end": 1853,
									"name": "POP",
									"source": 7
								},
								{
									"begin": 1717,
									"end": 1859,
									"name": "SWAP2",
									"source": 7
								},
								{
									"begin": 1717,
									"end": 1859,
									"name": "SWAP1",
									"source": 7
								},
								{
									"begin": 1717,
									"end": 1859,
									"name": "POP",
									"source": 7
								},
								{
									"begin": 1717,
									"end": 1859,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 7
								},
								{
									"begin": 1865,
									"end": 1940,
									"name": "tag",
									"source": 7,
									"value": "26"
								},
								{
									"begin": 1865,
									"end": 1940,
									"name": "JUMPDEST",
									"source": 7
								},
								{
									"begin": 1908,
									"end": 1911,
									"name": "PUSH",
									"source": 7,
									"value": "0"
								},
								{
									"begin": 1929,
									"end": 1934,
									"name": "DUP2",
									"source": 7
								},
								{
									"begin": 1922,
									"end": 1934,
									"name": "SWAP1",
									"source": 7
								},
								{
									"begin": 1922,
									"end": 1934,
									"name": "POP",
									"source": 7
								},
								{
									"begin": 1865,
									"end": 1940,
									"name": "SWAP2",
									"source": 7
								},
								{
									"begin": 1865,
									"end": 1940,
									"name": "SWAP1",
									"source": 7
								},
								{
									"begin": 1865,
									"end": 1940,
									"name": "POP",
									"source": 7
								},
								{
									"begin": 1865,
									"end": 1940,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 7
								},
								{
									"begin": 1946,
									"end": 2215,
									"name": "tag",
									"source": 7,
									"value": "27"
								},
								{
									"begin": 1946,
									"end": 2215,
									"name": "JUMPDEST",
									"source": 7
								},
								{
									"begin": 2056,
									"end": 2095,
									"name": "PUSH [tag]",
									"source": 7,
									"value": "69"
								},
								{
									"begin": 2087,
									"end": 2094,
									"name": "DUP4",
									"source": 7
								},
								{
									"begin": 2056,
									"end": 2095,
									"name": "PUSH [tag]",
									"source": 7,
									"value": "25"
								},
								{
									"begin": 2056,
									"end": 2095,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 7
								},
								{
									"begin": 2056,
									"end": 2095,
									"name": "tag",
									"source": 7,
									"value": "69"
								},
								{
									"begin": 2056,
									"end": 2095,
									"name": "JUMPDEST",
									"source": 7
								},
								{
									"begin": 2117,
									"end": 2208,
									"name": "PUSH [tag]",
									"source": 7,
									"value": "70"
								},
								{
									"begin": 2166,
									"end": 2207,
									"name": "PUSH [tag]",
									"source": 7,
									"value": "71"
								},
								{
									"begin": 2190,
									"end": 2206,
									"name": "DUP3",
									"source": 7
								},
								{
									"begin": 2166,
									"end": 2207,
									"name": "PUSH [tag]",
									"source": 7,
									"value": "26"
								},
								{
									"begin": 2166,
									"end": 2207,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 7
								},
								{
									"begin": 2166,
									"end": 2207,
									"name": "tag",
									"source": 7,
									"value": "71"
								},
								{
									"begin": 2166,
									"end": 2207,
									"name": "JUMPDEST",
									"source": 7
								},
								{
									"begin": 2158,
									"end": 2164,
									"name": "DUP5",
									"source": 7
								},
								{
									"begin": 2151,
									"end": 2155,
									"name": "DUP5",
									"source": 7
								},
								{
									"begin": 2145,
									"end": 2156,
									"name": "SLOAD",
									"source": 7
								},
								{
									"begin": 2117,
									"end": 2208,
									"name": "PUSH [tag]",
									"source": 7,
									"value": "22"
								},
								{
									"begin": 2117,
									"end": 2208,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 7
								},
								{
									"begin": 2117,
									"end": 2208,
									"name": "tag",
									"source": 7,
									"value": "70"
								},
								{
									"begin": 2117,
									"end": 2208,
									"name": "JUMPDEST",
									"source": 7
								},
								{
									"begin": 2111,
									"end": 2115,
									"name": "DUP3",
									"source": 7
								},
								{
									"begin": 2104,
									"end": 2209,
									"name": "SSTORE",
									"source": 7
								},
								{
									"begin": 2022,
									"end": 2215,
									"name": "POP",
									"source": 7
								},
								{
									"begin": 1946,
									"end": 2215,
									"name": "POP",
									"source": 7
								},
								{
									"begin": 1946,
									"end": 2215,
									"name": "POP",
									"source": 7
								},
								{
									"begin": 1946,
									"end": 2215,
									"name": "POP",
									"source": 7
								},
								{
									"begin": 1946,
									"end": 2215,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 7
								},
								{
									"begin": 2221,
									"end": 2294,
									"name": "tag",
									"source": 7,
									"value": "28"
								},
								{
									"begin": 2221,
									"end": 2294,
									"name": "JUMPDEST",
									"source": 7
								},
								{
									"begin": 2266,
									"end": 2269,
									"name": "PUSH",
									"source": 7,
									"value": "0"
								},
								{
									"begin": 2221,
									"end": 2294,
									"name": "SWAP1",
									"source": 7
								},
								{
									"begin": 2221,
									"end": 2294,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 7
								},
								{
									"begin": 2300,
									"end": 2489,
									"name": "tag",
									"source": 7,
									"value": "29"
								},
								{
									"begin": 2300,
									"end": 2489,
									"name": "JUMPDEST",
									"source": 7
								},
								{
									"begin": 2377,
									"end": 2409,
									"name": "PUSH [tag]",
									"source": 7,
									"value": "74"
								},
								{
									"begin": 2377,
									"end": 2409,
									"name": "PUSH [tag]",
									"source": 7,
									"value": "28"
								},
								{
									"begin": 2377,
									"end": 2409,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 7
								},
								{
									"begin": 2377,
									"end": 2409,
									"name": "tag",
									"source": 7,
									"value": "74"
								},
								{
									"begin": 2377,
									"end": 2409,
									"name": "JUMPDEST",
									"source": 7
								},
								{
									"begin": 2418,
									"end": 2483,
									"name": "PUSH [tag]",
									"source": 7,
									"value": "75"
								},
								{
									"begin": 2476,
									"end": 2482,
									"name": "DUP2",
									"source": 7
								},
								{
									"begin": 2468,
									"end": 2474,
									"name": "DUP5",
									"source": 7
								},
								{
									"begin": 2462,
									"end": 2466,
									"name": "DUP5",
									"source": 7
								},
								{
									"begin": 2418,
									"end": 2483,
									"name": "PUSH [tag]",
									"source": 7,
									"value": "27"
								},
								{
									"begin": 2418,
									"end": 2483,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 7
								},
								{
									"begin": 2418,
									"end": 2483,
									"name": "tag",
									"source": 7,
									"value": "75"
								},
								{
									"begin": 2418,
									"end": 2483,
									"name": "JUMPDEST",
									"source": 7
								},
								{
									"begin": 2353,
									"end": 2489,
									"name": "POP",
									"source": 7
								},
								{
									"begin": 2300,
									"end": 2489,
									"name": "POP",
									"source": 7
								},
								{
									"begin": 2300,
									"end": 2489,
									"name": "POP",
									"source": 7
								},
								{
									"begin": 2300,
									"end": 2489,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 7
								},
								{
									"begin": 2495,
									"end": 2681,
									"name": "tag",
									"source": 7,
									"value": "30"
								},
								{
									"begin": 2495,
									"end": 2681,
									"name": "JUMPDEST",
									"source": 7
								},
								{
									"begin": 2555,
									"end": 2675,
									"name": "tag",
									"source": 7,
									"value": "77"
								},
								{
									"begin": 2555,
									"end": 2675,
									"name": "JUMPDEST",
									"source": 7
								},
								{
									"begin": 2572,
									"end": 2575,
									"name": "DUP2",
									"source": 7
								},
								{
									"begin": 2565,
									"end": 2570,
									"name": "DUP2",
									"source": 7
								},
								{
									"begin": 2562,
									"end": 2576,
									"name": "LT",
									"source": 7
								},
								{
									"begin": 2555,
									"end": 2675,
									"name": "ISZERO",
									"source": 7
								},
								{
									"begin": 2555,
									"end": 2675,
									"name": "PUSH [tag]",
									"source": 7,
									"value": "79"
								},
								{
									"begin": 2555,
									"end": 2675,
									"name": "JUMPI",
									"source": 7
								},
								{
									"begin": 2626,
									"end": 2665,
									"name": "PUSH [tag]",
									"source": 7,
									"value": "80"
								},
								{
									"begin": 2663,
									"end": 2664,
									"name": "PUSH",
									"source": 7,
									"value": "0"
								},
								{
									"begin": 2656,
									"end": 2661,
									"name": "DUP3",
									"source": 7
								},
								{
									"begin": 2626,
									"end": 2665,
									"name": "PUSH [tag]",
									"source": 7,
									"value": "29"
								},
								{
									"begin": 2626,
									"end": 2665,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 7
								},
								{
									"begin": 2626,
									"end": 2665,
									"name": "tag",
									"source": 7,
									"value": "80"
								},
								{
									"begin": 2626,
									"end": 2665,
									"name": "JUMPDEST",
									"source": 7
								},
								{
									"begin": 2599,
									"end": 2600,
									"name": "PUSH",
									"source": 7,
									"value": "1"
								},
								{
									"begin": 2592,
									"end": 2597,
									"name": "DUP2",
									"source": 7
								},
								{
									"begin": 2588,
									"end": 2601,
									"name": "ADD",
									"source": 7
								},
								{
									"begin": 2579,
									"end": 2601,
									"name": "SWAP1",
									"source": 7
								},
								{
									"begin": 2579,
									"end": 2601,
									"name": "POP",
									"source": 7
								},
								{
									"begin": 2555,
									"end": 2675,
									"name": "PUSH [tag]",
									"source": 7,
									"value": "77"
								},
								{
									"begin": 2555,
									"end": 2675,
									"name": "JUMP",
									"source": 7
								},
								{
									"begin": 2555,
									"end": 2675,
									"name": "tag",
									"source": 7,
									"value": "79"
								},
								{
									"begin": 2555,
									"end": 2675,
									"name": "JUMPDEST",
									"source": 7
								},
								{
									"begin": 2495,
									"end": 2681,
									"name": "POP",
									"source": 7
								},
								{
									"begin": 2495,
									"end": 2681,
									"name": "POP",
									"source": 7
								},
								{
									"begin": 2495,
									"end": 2681,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 7
								},
								{
									"begin": 2687,
									"end": 3230,
									"name": "tag",
									"source": 7,
									"value": "31"
								},
								{
									"begin": 2687,
									"end": 3230,
									"name": "JUMPDEST",
									"source": 7
								},
								{
									"begin": 2788,
									"end": 2790,
									"name": "PUSH",
									"source": 7,
									"value": "1F"
								},
								{
									"begin": 2783,
									"end": 2786,
									"name": "DUP3",
									"source": 7
								},
								{
									"begin": 2780,
									"end": 2791,
									"name": "GT",
									"source": 7
								},
								{
									"begin": 2777,
									"end": 3223,
									"name": "ISZERO",
									"source": 7
								},
								{
									"begin": 2777,
									"end": 3223,
									"name": "PUSH [tag]",
									"source": 7,
									"value": "82"
								},
								{
									"begin": 2777,
									"end": 3223,
									"name": "JUMPI",
									"source": 7
								},
								{
									"begin": 2822,
									"end": 2860,
									"name": "PUSH [tag]",
									"source": 7,
									"value": "83"
								},
								{
									"begin": 2854,
									"end": 2859,
									"name": "DUP2",
									"source": 7
								},
								{
									"begin": 2822,
									"end": 2860,
									"name": "PUSH [tag]",
									"source": 7,
									"value": "19"
								},
								{
									"begin": 2822,
									"end": 2860,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 7
								},
								{
									"begin": 2822,
									"end": 2860,
									"name": "tag",
									"source": 7,
									"value": "83"
								},
								{
									"begin": 2822,
									"end": 2860,
									"name": "JUMPDEST",
									"source": 7
								},
								{
									"begin": 2906,
									"end": 2935,
									"name": "PUSH [tag]",
									"source": 7,
									"value": "84"
								},
								{
									"begin": 2924,
									"end": 2934,
									"name": "DUP5",
									"source": 7
								},
								{
									"begin": 2906,
									"end": 2935,
									"name": "PUSH [tag]",
									"source": 7,
									"value": "20"
								},
								{
									"begin": 2906,
									"end": 2935,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 7
								},
								{
									"begin": 2906,
									"end": 2935,
									"name": "tag",
									"source": 7,
									"value": "84"
								},
								{
									"begin": 2906,
									"end": 2935,
									"name": "JUMPDEST",
									"source": 7
								},
								{
									"begin": 2896,
									"end": 2904,
									"name": "DUP2",
									"source": 7
								},
								{
									"begin": 2892,
									"end": 2936,
									"name": "ADD",
									"source": 7
								},
								{
									"begin": 3089,
									"end": 3091,
									"name": "PUSH",
									"source": 7,
									"value": "20"
								},
								{
									"begin": 3077,
									"end": 3087,
									"name": "DUP6",
									"source": 7
								},
								{
									"begin": 3074,
									"end": 3092,
									"name": "LT",
									"source": 7
								},
								{
									"begin": 3071,
									"end": 3120,
									"name": "ISZERO",
									"source": 7
								},
								{
									"begin": 3071,
									"end": 3120,
									"name": "PUSH [tag]",
									"source": 7,
									"value": "85"
								},
								{
									"begin": 3071,
									"end": 3120,
									"name": "JUMPI",
									"source": 7
								},
								{
									"begin": 3110,
									"end": 3118,
									"name": "DUP2",
									"source": 7
								},
								{
									"begin": 3095,
									"end": 3118,
									"name": "SWAP1",
									"source": 7
								},
								{
									"begin": 3095,
									"end": 3118,
									"name": "POP",
									"source": 7
								},
								{
									"begin": 3071,
									"end": 3120,
									"name": "tag",
									"source": 7,
									"value": "85"
								},
								{
									"begin": 3071,
									"end": 3120,
									"name": "JUMPDEST",
									"source": 7
								},
								{
									"begin": 3133,
									"end": 3213,
									"name": "PUSH [tag]",
									"source": 7,
									"value": "86"
								},
								{
									"begin": 3189,
									"end": 3211,
									"name": "PUSH [tag]",
									"source": 7,
									"value": "87"
								},
								{
									"begin": 3207,
									"end": 3210,
									"name": "DUP6",
									"source": 7
								},
								{
									"begin": 3189,
									"end": 3211,
									"name": "PUSH [tag]",
									"source": 7,
									"value": "20"
								},
								{
									"begin": 3189,
									"end": 3211,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 7
								},
								{
									"begin": 3189,
									"end": 3211,
									"name": "tag",
									"source": 7,
									"value": "87"
								},
								{
									"begin": 3189,
									"end": 3211,
									"name": "JUMPDEST",
									"source": 7
								},
								{
									"begin": 3179,
									"end": 3187,
									"name": "DUP4",
									"source": 7
								},
								{
									"begin": 3175,
									"end": 3212,
									"name": "ADD",
									"source": 7
								},
								{
									"begin": 3162,
									"end": 3173,
									"name": "DUP3",
									"source": 7
								},
								{
									"begin": 3133,
									"end": 3213,
									"name": "PUSH [tag]",
									"source": 7,
									"value": "30"
								},
								{
									"begin": 3133,
									"end": 3213,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 7
								},
								{
									"begin": 3133,
									"end": 3213,
									"name": "tag",
									"source": 7,
									"value": "86"
								},
								{
									"begin": 3133,
									"end": 3213,
									"name": "JUMPDEST",
									"source": 7
								},
								{
									"begin": 2792,
									"end": 3223,
									"name": "POP",
									"source": 7
								},
								{
									"begin": 2792,
									"end": 3223,
									"name": "POP",
									"source": 7
								},
								{
									"begin": 2777,
									"end": 3223,
									"name": "tag",
									"source": 7,
									"value": "82"
								},
								{
									"begin": 2777,
									"end": 3223,
									"name": "JUMPDEST",
									"source": 7
								},
								{
									"begin": 2687,
									"end": 3230,
									"name": "POP",
									"source": 7
								},
								{
									"begin": 2687,
									"end": 3230,
									"name": "POP",
									"source": 7
								},
								{
									"begin": 2687,
									"end": 3230,
									"name": "POP",
									"source": 7
								},
								{
									"begin": 2687,
									"end": 3230,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 7
								},
								{
									"begin": 3236,
									"end": 3353,
									"name": "tag",
									"source": 7,
									"value": "32"
								},
								{
									"begin": 3236,
									"end": 3353,
									"name": "JUMPDEST",
									"source": 7
								},
								{
									"begin": 3290,
									"end": 3298,
									"name": "PUSH",
									"source": 7,
									"value": "0"
								},
								{
									"begin": 3340,
									"end": 3345,
									"name": "DUP3",
									"source": 7
								},
								{
									"begin": 3334,
									"end": 3338,
									"name": "DUP3",
									"source": 7
								},
								{
									"begin": 3330,
									"end": 3346,
									"name": "SHR",
									"source": 7
								},
								{
									"begin": 3309,
									"end": 3346,
									"name": "SWAP1",
									"source": 7
								},
								{
									"begin": 3309,
									"end": 3346,
									"name": "POP",
									"source": 7
								},
								{
									"begin": 3236,
									"end": 3353,
									"name": "SWAP3",
									"source": 7
								},
								{
									"begin": 3236,
									"end": 3353,
									"name": "SWAP2",
									"source": 7
								},
								{
									"begin": 3236,
									"end": 3353,
									"name": "POP",
									"source": 7
								},
								{
									"begin": 3236,
									"end": 3353,
									"name": "POP",
									"source": 7
								},
								{
									"begin": 3236,
									"end": 3353,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 7
								},
								{
									"begin": 3359,
									"end": 3528,
									"name": "tag",
									"source": 7,
									"value": "33"
								},
								{
									"begin": 3359,
									"end": 3528,
									"name": "JUMPDEST",
									"source": 7
								},
								{
									"begin": 3403,
									"end": 3409,
									"name": "PUSH",
									"source": 7,
									"value": "0"
								},
								{
									"begin": 3436,
									"end": 3487,
									"name": "PUSH [tag]",
									"source": 7,
									"value": "90"
								},
								{
									"begin": 3484,
									"end": 3485,
									"name": "PUSH",
									"source": 7,
									"value": "0"
								},
								{
									"begin": 3480,
									"end": 3486,
									"name": "NOT",
									"source": 7
								},
								{
									"begin": 3472,
									"end": 3477,
									"name": "DUP5",
									"source": 7
								},
								{
									"begin": 3469,
									"end": 3470,
									"name": "PUSH",
									"source": 7,
									"value": "8"
								},
								{
									"begin": 3465,
									"end": 3478,
									"name": "MUL",
									"source": 7
								},
								{
									"begin": 3436,
									"end": 3487,
									"name": "PUSH [tag]",
									"source": 7,
									"value": "32"
								},
								{
									"begin": 3436,
									"end": 3487,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 7
								},
								{
									"begin": 3436,
									"end": 3487,
									"name": "tag",
									"source": 7,
									"value": "90"
								},
								{
									"begin": 3436,
									"end": 3487,
									"name": "JUMPDEST",
									"source": 7
								},
								{
									"begin": 3432,
									"end": 3488,
									"name": "NOT",
									"source": 7
								},
								{
									"begin": 3517,
									"end": 3521,
									"name": "DUP1",
									"source": 7
								},
								{
									"begin": 3511,
									"end": 3515,
									"name": "DUP4",
									"source": 7
								},
								{
									"begin": 3507,
									"end": 3522,
									"name": "AND",
									"source": 7
								},
								{
									"begin": 3497,
									"end": 3522,
									"name": "SWAP2",
									"source": 7
								},
								{
									"begin": 3497,
									"end": 3522,
									"name": "POP",
									"source": 7
								},
								{
									"begin": 3410,
									"end": 3528,
									"name": "POP",
									"source": 7
								},
								{
									"begin": 3359,
									"end": 3528,
									"name": "SWAP3",
									"source": 7
								},
								{
									"begin": 3359,
									"end": 3528,
									"name": "SWAP2",
									"source": 7
								},
								{
									"begin": 3359,
									"end": 3528,
									"name": "POP",
									"source": 7
								},
								{
									"begin": 3359,
									"end": 3528,
									"name": "POP",
									"source": 7
								},
								{
									"begin": 3359,
									"end": 3528,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 7
								},
								{
									"begin": 3533,
									"end": 3828,
									"name": "tag",
									"source": 7,
									"value": "34"
								},
								{
									"begin": 3533,
									"end": 3828,
									"name": "JUMPDEST",
									"source": 7
								},
								{
									"begin": 3609,
									"end": 3613,
									"name": "PUSH",
									"source": 7,
									"value": "0"
								},
								{
									"begin": 3755,
									"end": 3784,
									"name": "PUSH [tag]",
									"source": 7,
									"value": "92"
								},
								{
									"begin": 3780,
									"end": 3783,
									"name": "DUP4",
									"source": 7
								},
								{
									"begin": 3774,
									"end": 3778,
									"name": "DUP4",
									"source": 7
								},
								{
									"begin": 3755,
									"end": 3784,
									"name": "PUSH [tag]",
									"source": 7,
									"value": "33"
								},
								{
									"begin": 3755,
									"end": 3784,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 7
								},
								{
									"begin": 3755,
									"end": 3784,
									"name": "tag",
									"source": 7,
									"value": "92"
								},
								{
									"begin": 3755,
									"end": 3784,
									"name": "JUMPDEST",
									"source": 7
								},
								{
									"begin": 3747,
									"end": 3784,
									"name": "SWAP2",
									"source": 7
								},
								{
									"begin": 3747,
									"end": 3784,
									"name": "POP",
									"source": 7
								},
								{
									"begin": 3817,
									"end": 3820,
									"name": "DUP3",
									"source": 7
								},
								{
									"begin": 3814,
									"end": 3815,
									"name": "PUSH",
									"source": 7,
									"value": "2"
								},
								{
									"begin": 3810,
									"end": 3821,
									"name": "MUL",
									"source": 7
								},
								{
									"begin": 3804,
									"end": 3808,
									"name": "DUP3",
									"source": 7
								},
								{
									"begin": 3801,
									"end": 3822,
									"name": "OR",
									"source": 7
								},
								{
									"begin": 3793,
									"end": 3822,
									"name": "SWAP1",
									"source": 7
								},
								{
									"begin": 3793,
									"end": 3822,
									"name": "POP",
									"source": 7
								},
								{
									"begin": 3533,
									"end": 3828,
									"name": "SWAP3",
									"source": 7
								},
								{
									"begin": 3533,
									"end": 3828,
									"name": "SWAP2",
									"source": 7
								},
								{
									"begin": 3533,
									"end": 3828,
									"name": "POP",
									"source": 7
								},
								{
									"begin": 3533,
									"end": 3828,
									"name": "POP",
									"source": 7
								},
								{
									"begin": 3533,
									"end": 3828,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 7
								},
								{
									"begin": 3833,
									"end": 5228,
									"name": "tag",
									"source": 7,
									"value": "2"
								},
								{
									"begin": 3833,
									"end": 5228,
									"name": "JUMPDEST",
									"source": 7
								},
								{
									"begin": 3950,
									"end": 3987,
									"name": "PUSH [tag]",
									"source": 7,
									"value": "94"
								},
								{
									"begin": 3983,
									"end": 3986,
									"name": "DUP3",
									"source": 7
								},
								{
									"begin": 3950,
									"end": 3987,
									"name": "PUSH [tag]",
									"source": 7,
									"value": "15"
								},
								{
									"begin": 3950,
									"end": 3987,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 7
								},
								{
									"begin": 3950,
									"end": 3987,
									"name": "tag",
									"source": 7,
									"value": "94"
								},
								{
									"begin": 3950,
									"end": 3987,
									"name": "JUMPDEST",
									"source": 7
								},
								{
									"begin": 4052,
									"end": 4070,
									"name": "PUSH",
									"source": 7,
									"value": "FFFFFFFFFFFFFFFF"
								},
								{
									"begin": 4044,
									"end": 4050,
									"name": "DUP2",
									"source": 7
								},
								{
									"begin": 4041,
									"end": 4071,
									"name": "GT",
									"source": 7
								},
								{
									"begin": 4038,
									"end": 4094,
									"name": "ISZERO",
									"source": 7
								},
								{
									"begin": 4038,
									"end": 4094,
									"name": "PUSH [tag]",
									"source": 7,
									"value": "95"
								},
								{
									"begin": 4038,
									"end": 4094,
									"name": "JUMPI",
									"source": 7
								},
								{
									"begin": 4074,
									"end": 4092,
									"name": "PUSH [tag]",
									"source": 7,
									"value": "96"
								},
								{
									"begin": 4074,
									"end": 4092,
									"name": "PUSH [tag]",
									"source": 7,
									"value": "16"
								},
								{
									"begin": 4074,
									"end": 4092,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 7
								},
								{
									"begin": 4074,
									"end": 4092,
									"name": "tag",
									"source": 7,
									"value": "96"
								},
								{
									"begin": 4074,
									"end": 4092,
									"name": "JUMPDEST",
									"source": 7
								},
								{
									"begin": 4038,
									"end": 4094,
									"name": "tag",
									"source": 7,
									"value": "95"
								},
								{
									"begin": 4038,
									"end": 4094,
									"name": "JUMPDEST",
									"source": 7
								},
								{
									"begin": 4118,
									"end": 4156,
									"name": "PUSH [tag]",
									"source": 7,
									"value": "97"
								},
								{
									"begin": 4150,
									"end": 4154,
									"name": "DUP3",
									"source": 7
								},
								{
									"begin": 4144,
									"end": 4155,
									"name": "SLOAD",
									"source": 7
								},
								{
									"begin": 4118,
									"end": 4156,
									"name": "PUSH [tag]",
									"source": 7,
									"value": "18"
								},
								{
									"begin": 4118,
									"end": 4156,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 7
								},
								{
									"begin": 4118,
									"end": 4156,
									"name": "tag",
									"source": 7,
									"value": "97"
								},
								{
									"begin": 4118,
									"end": 4156,
									"name": "JUMPDEST",
									"source": 7
								},
								{
									"begin": 4203,
									"end": 4270,
									"name": "PUSH [tag]",
									"source": 7,
									"value": "98"
								},
								{
									"begin": 4263,
									"end": 4269,
									"name": "DUP3",
									"source": 7
								},
								{
									"begin": 4255,
									"end": 4261,
									"name": "DUP3",
									"source": 7
								},
								{
									"begin": 4249,
									"end": 4253,
									"name": "DUP6",
									"source": 7
								},
								{
									"begin": 4203,
									"end": 4270,
									"name": "PUSH [tag]",
									"source": 7,
									"value": "31"
								},
								{
									"begin": 4203,
									"end": 4270,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 7
								},
								{
									"begin": 4203,
									"end": 4270,
									"name": "tag",
									"source": 7,
									"value": "98"
								},
								{
									"begin": 4203,
									"end": 4270,
									"name": "JUMPDEST",
									"source": 7
								},
								{
									"begin": 4297,
									"end": 4298,
									"name": "PUSH",
									"source": 7,
									"value": "0"
								},
								{
									"begin": 4321,
									"end": 4325,
									"name": "PUSH",
									"source": 7,
									"value": "20"
								},
								{
									"begin": 4308,
									"end": 4325,
									"name": "SWAP1",
									"source": 7
								},
								{
									"begin": 4308,
									"end": 4325,
									"name": "POP",
									"source": 7
								},
								{
									"begin": 4353,
									"end": 4355,
									"name": "PUSH",
									"source": 7,
									"value": "1F"
								},
								{
									"begin": 4345,
									"end": 4351,
									"name": "DUP4",
									"source": 7
								},
								{
									"begin": 4342,
									"end": 4356,
									"name": "GT",
									"source": 7
								},
								{
									"begin": 4370,
									"end": 4371,
									"name": "PUSH",
									"source": 7,
									"value": "1"
								},
								{
									"begin": 4365,
									"end": 4983,
									"name": "DUP2",
									"source": 7
								},
								{
									"begin": 4365,
									"end": 4983,
									"name": "EQ",
									"source": 7
								},
								{
									"begin": 4365,
									"end": 4983,
									"name": "PUSH [tag]",
									"source": 7,
									"value": "100"
								},
								{
									"begin": 4365,
									"end": 4983,
									"name": "JUMPI",
									"source": 7
								},
								{
									"begin": 5027,
									"end": 5028,
									"name": "PUSH",
									"source": 7,
									"value": "0"
								},
								{
									"begin": 5044,
									"end": 5050,
									"name": "DUP5",
									"source": 7
								},
								{
									"begin": 5041,
									"end": 5118,
									"name": "ISZERO",
									"source": 7
								},
								{
									"begin": 5041,
									"end": 5118,
									"name": "PUSH [tag]",
									"source": 7,
									"value": "101"
								},
								{
									"begin": 5041,
									"end": 5118,
									"name": "JUMPI",
									"source": 7
								},
								{
									"begin": 5093,
									"end": 5102,
									"name": "DUP3",
									"source": 7
								},
								{
									"begin": 5088,
									"end": 5091,
									"name": "DUP8",
									"source": 7
								},
								{
									"begin": 5084,
									"end": 5103,
									"name": "ADD",
									"source": 7
								},
								{
									"begin": 5078,
									"end": 5104,
									"name": "MLOAD",
									"source": 7
								},
								{
									"begin": 5069,
									"end": 5104,
									"name": "SWAP1",
									"source": 7
								},
								{
									"begin": 5069,
									"end": 5104,
									"name": "POP",
									"source": 7
								},
								{
									"begin": 5041,
									"end": 5118,
									"name": "tag",
									"source": 7,
									"value": "101"
								},
								{
									"begin": 5041,
									"end": 5118,
									"name": "JUMPDEST",
									"source": 7
								},
								{
									"begin": 5144,
									"end": 5211,
									"name": "PUSH [tag]",
									"source": 7,
									"value": "102"
								},
								{
									"begin": 5204,
									"end": 5210,
									"name": "DUP6",
									"source": 7
								},
								{
									"begin": 5197,
									"end": 5202,
									"name": "DUP3",
									"source": 7
								},
								{
									"begin": 5144,
									"end": 5211,
									"name": "PUSH [tag]",
									"source": 7,
									"value": "34"
								},
								{
									"begin": 5144,
									"end": 5211,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 7
								},
								{
									"begin": 5144,
									"end": 5211,
									"name": "tag",
									"source": 7,
									"value": "102"
								},
								{
									"begin": 5144,
									"end": 5211,
									"name": "JUMPDEST",
									"source": 7
								},
								{
									"begin": 5138,
									"end": 5142,
									"name": "DUP7",
									"source": 7
								},
								{
									"begin": 5131,
									"end": 5212,
									"name": "SSTORE",
									"source": 7
								},
								{
									"begin": 5000,
									"end": 5222,
									"name": "POP",
									"source": 7
								},
								{
									"begin": 4335,
									"end": 5222,
									"name": "PUSH [tag]",
									"source": 7,
									"value": "99"
								},
								{
									"begin": 4335,
									"end": 5222,
									"name": "JUMP",
									"source": 7
								},
								{
									"begin": 4365,
									"end": 4983,
									"name": "tag",
									"source": 7,
									"value": "100"
								},
								{
									"begin": 4365,
									"end": 4983,
									"name": "JUMPDEST",
									"source": 7
								},
								{
									"begin": 4417,
									"end": 4421,
									"name": "PUSH",
									"source": 7,
									"value": "1F"
								},
								{
									"begin": 4413,
									"end": 4422,
									"name": "NOT",
									"source": 7
								},
								{
									"begin": 4405,
									"end": 4411,
									"name": "DUP5",
									"source": 7
								},
								{
									"begin": 4401,
									"end": 4423,
									"name": "AND",
									"source": 7
								},
								{
									"begin": 4451,
									"end": 4488,
									"name": "PUSH [tag]",
									"source": 7,
									"value": "103"
								},
								{
									"begin": 4483,
									"end": 4487,
									"name": "DUP7",
									"source": 7
								},
								{
									"begin": 4451,
									"end": 4488,
									"name": "PUSH [tag]",
									"source": 7,
									"value": "19"
								},
								{
									"begin": 4451,
									"end": 4488,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 7
								},
								{
									"begin": 4451,
									"end": 4488,
									"name": "tag",
									"source": 7,
									"value": "103"
								},
								{
									"begin": 4451,
									"end": 4488,
									"name": "JUMPDEST",
									"source": 7
								},
								{
									"begin": 4510,
									"end": 4511,
									"name": "PUSH",
									"source": 7,
									"value": "0"
								},
								{
									"begin": 4524,
									"end": 4732,
									"name": "tag",
									"source": 7,
									"value": "104"
								},
								{
									"begin": 4524,
									"end": 4732,
									"name": "JUMPDEST",
									"source": 7
								},
								{
									"begin": 4538,
									"end": 4545,
									"name": "DUP3",
									"source": 7
								},
								{
									"begin": 4535,
									"end": 4536,
									"name": "DUP2",
									"source": 7
								},
								{
									"begin": 4532,
									"end": 4546,
									"name": "LT",
									"source": 7
								},
								{
									"begin": 4524,
									"end": 4732,
									"name": "ISZERO",
									"source": 7
								},
								{
									"begin": 4524,
									"end": 4732,
									"name": "PUSH [tag]",
									"source": 7,
									"value": "106"
								},
								{
									"begin": 4524,
									"end": 4732,
									"name": "JUMPI",
									"source": 7
								},
								{
									"begin": 4617,
									"end": 4626,
									"name": "DUP5",
									"source": 7
								},
								{
									"begin": 4612,
									"end": 4615,
									"name": "DUP10",
									"source": 7
								},
								{
									"begin": 4608,
									"end": 4627,
									"name": "ADD",
									"source": 7
								},
								{
									"begin": 4602,
									"end": 4628,
									"name": "MLOAD",
									"source": 7
								},
								{
									"begin": 4594,
									"end": 4600,
									"name": "DUP3",
									"source": 7
								},
								{
									"begin": 4587,
									"end": 4629,
									"name": "SSTORE",
									"source": 7
								},
								{
									"begin": 4668,
									"end": 4669,
									"name": "PUSH",
									"source": 7,
									"value": "1"
								},
								{
									"begin": 4660,
									"end": 4666,
									"name": "DUP3",
									"source": 7
								},
								{
									"begin": 4656,
									"end": 4670,
									"name": "ADD",
									"source": 7
								},
								{
									"begin": 4646,
									"end": 4670,
									"name": "SWAP2",
									"source": 7
								},
								{
									"begin": 4646,
									"end": 4670,
									"name": "POP",
									"source": 7
								},
								{
									"begin": 4715,
									"end": 4717,
									"name": "PUSH",
									"source": 7,
									"value": "20"
								},
								{
									"begin": 4704,
									"end": 4713,
									"name": "DUP6",
									"source": 7
								},
								{
									"begin": 4700,
									"end": 4718,
									"name": "ADD",
									"source": 7
								},
								{
									"begin": 4687,
									"end": 4718,
									"name": "SWAP5",
									"source": 7
								},
								{
									"begin": 4687,
									"end": 4718,
									"name": "POP",
									"source": 7
								},
								{
									"begin": 4561,
									"end": 4565,
									"name": "PUSH",
									"source": 7,
									"value": "20"
								},
								{
									"begin": 4558,
									"end": 4559,
									"name": "DUP2",
									"source": 7
								},
								{
									"begin": 4554,
									"end": 4566,
									"name": "ADD",
									"source": 7
								},
								{
									"begin": 4549,
									"end": 4566,
									"name": "SWAP1",
									"source": 7
								},
								{
									"begin": 4549,
									"end": 4566,
									"name": "POP",
									"source": 7
								},
								{
									"begin": 4524,
									"end": 4732,
									"name": "PUSH [tag]",
									"source": 7,
									"value": "104"
								},
								{
									"begin": 4524,
									"end": 4732,
									"name": "JUMP",
									"source": 7
								},
								{
									"begin": 4524,
									"end": 4732,
									"name": "tag",
									"source": 7,
									"value": "106"
								},
								{
									"begin": 4524,
									"end": 4732,
									"name": "JUMPDEST",
									"source": 7
								},
								{
									"begin": 4760,
									"end": 4766,
									"name": "DUP7",
									"source": 7
								},
								{
									"begin": 4751,
									"end": 4758,
									"name": "DUP4",
									"source": 7
								},
								{
									"begin": 4748,
									"end": 4767,
									"name": "LT",
									"source": 7
								},
								{
									"begin": 4745,
									"end": 4924,
									"name": "ISZERO",
									"source": 7
								},
								{
									"begin": 4745,
									"end": 4924,
									"name": "PUSH [tag]",
									"source": 7,
									"value": "107"
								},
								{
									"begin": 4745,
									"end": 4924,
									"name": "JUMPI",
									"source": 7
								},
								{
									"begin": 4818,
									"end": 4827,
									"name": "DUP5",
									"source": 7
								},
								{
									"begin": 4813,
									"end": 4816,
									"name": "DUP10",
									"source": 7
								},
								{
									"begin": 4809,
									"end": 4828,
									"name": "ADD",
									"source": 7
								},
								{
									"begin": 4803,
									"end": 4829,
									"name": "MLOAD",
									"source": 7
								},
								{
									"begin": 4861,
									"end": 4909,
									"name": "PUSH [tag]",
									"source": 7,
									"value": "108"
								},
								{
									"begin": 4903,
									"end": 4907,
									"name": "PUSH",
									"source": 7,
									"value": "1F"
								},
								{
									"begin": 4895,
									"end": 4901,
									"name": "DUP10",
									"source": 7
								},
								{
									"begin": 4891,
									"end": 4908,
									"name": "AND",
									"source": 7
								},
								{
									"begin": 4880,
									"end": 4889,
									"name": "DUP3",
									"source": 7
								},
								{
									"begin": 4861,
									"end": 4909,
									"name": "PUSH [tag]",
									"source": 7,
									"value": "33"
								},
								{
									"begin": 4861,
									"end": 4909,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 7
								},
								{
									"begin": 4861,
									"end": 4909,
									"name": "tag",
									"source": 7,
									"value": "108"
								},
								{
									"begin": 4861,
									"end": 4909,
									"name": "JUMPDEST",
									"source": 7
								},
								{
									"begin": 4853,
									"end": 4859,
									"name": "DUP4",
									"source": 7
								},
								{
									"begin": 4846,
									"end": 4910,
									"name": "SSTORE",
									"source": 7
								},
								{
									"begin": 4768,
									"end": 4924,
									"name": "POP",
									"source": 7
								},
								{
									"begin": 4745,
									"end": 4924,
									"name": "tag",
									"source": 7,
									"value": "107"
								},
								{
									"begin": 4745,
									"end": 4924,
									"name": "JUMPDEST",
									"source": 7
								},
								{
									"begin": 4970,
									"end": 4971,
									"name": "PUSH",
									"source": 7,
									"value": "1"
								},
								{
									"begin": 4966,
									"end": 4967,
									"name": "PUSH",
									"source": 7,
									"value": "2"
								},
								{
									"begin": 4958,
									"end": 4964,
									"name": "DUP9",
									"source": 7
								},
								{
									"begin": 4954,
									"end": 4968,
									"name": "MUL",
									"source": 7
								},
								{
									"begin": 4950,
									"end": 4972,
									"name": "ADD",
									"source": 7
								},
								{
									"begin": 4944,
									"end": 4948,
									"name": "DUP9",
									"source": 7
								},
								{
									"begin": 4937,
									"end": 4973,
									"name": "SSTORE",
									"source": 7
								},
								{
									"begin": 4372,
									"end": 4983,
									"name": "POP",
									"source": 7
								},
								{
									"begin": 4372,
									"end": 4983,
									"name": "POP",
									"source": 7
								},
								{
									"begin": 4372,
									"end": 4983,
									"name": "POP",
									"source": 7
								},
								{
									"begin": 4335,
									"end": 5222,
									"name": "tag",
									"source": 7,
									"value": "99"
								},
								{
									"begin": 4335,
									"end": 5222,
									"name": "JUMPDEST",
									"source": 7
								},
								{
									"begin": 4335,
									"end": 5222,
									"name": "POP",
									"source": 7
								},
								{
									"begin": 3925,
									"end": 5228,
									"name": "POP",
									"source": 7
								},
								{
									"begin": 3925,
									"end": 5228,
									"name": "POP",
									"source": 7
								},
								{
									"begin": 3925,
									"end": 5228,
									"name": "POP",
									"source": 7
								},
								{
									"begin": 3833,
									"end": 5228,
									"name": "POP",
									"source": 7
								},
								{
									"begin": 3833,
									"end": 5228,
									"name": "POP",
									"source": 7
								},
								{
									"begin": 3833,
									"end": 5228,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 7
								},
								{
									"begin": 5234,
									"end": 5309,
									"name": "tag",
									"source": 7,
									"value": "35"
								},
								{
									"begin": 5234,
									"end": 5309,
									"name": "JUMPDEST",
									"source": 7
								},
								{
									"begin": 5267,
									"end": 5273,
									"name": "PUSH",
									"source": 7,
									"value": "0"
								},
								{
									"begin": 5300,
									"end": 5302,
									"name": "PUSH",
									"source": 7,
									"value": "40"
								},
								{
									"begin": 5294,
									"end": 5303,
									"name": "MLOAD",
									"source": 7
								},
								{
									"begin": 5284,
									"end": 5303,
									"name": "SWAP1",
									"source": 7
								},
								{
									"begin": 5284,
									"end": 5303,
									"name": "POP",
									"source": 7
								},
								{
									"begin": 5234,
									"end": 5309,
									"name": "SWAP1",
									"source": 7
								},
								{
									"begin": 5234,
									"end": 5309,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 7
								},
								{
									"begin": 5315,
									"end": 5432,
									"name": "tag",
									"source": 7,
									"value": "36"
								},
								{
									"begin": 5315,
									"end": 5432,
									"name": "JUMPDEST",
									"source": 7
								},
								{
									"begin": 5424,
									"end": 5425,
									"name": "PUSH",
									"source": 7,
									"value": "0"
								},
								{
									"begin": 5421,
									"end": 5422,
									"name": "DUP1",
									"source": 7
								},
								{
									"begin": 5414,
									"end": 5426,
									"name": "REVERT",
									"source": 7
								},
								{
									"begin": 5438,
									"end": 5555,
									"name": "tag",
									"source": 7,
									"value": "37"
								},
								{
									"begin": 5438,
									"end": 5555,
									"name": "JUMPDEST",
									"source": 7
								},
								{
									"begin": 5547,
									"end": 5548,
									"name": "PUSH",
									"source": 7,
									"value": "0"
								},
								{
									"begin": 5544,
									"end": 5545,
									"name": "DUP1",
									"source": 7
								},
								{
									"begin": 5537,
									"end": 5549,
									"name": "REVERT",
									"source": 7
								},
								{
									"begin": 5561,
									"end": 5678,
									"name": "tag",
									"source": 7,
									"value": "38"
								},
								{
									"begin": 5561,
									"end": 5678,
									"name": "JUMPDEST",
									"source": 7
								},
								{
									"begin": 5670,
									"end": 5671,
									"name": "PUSH",
									"source": 7,
									"value": "0"
								},
								{
									"begin": 5667,
									"end": 5668,
									"name": "DUP1",
									"source": 7
								},
								{
									"begin": 5660,
									"end": 5672,
									"name": "REVERT",
									"source": 7
								},
								{
									"begin": 5684,
									"end": 5801,
									"name": "tag",
									"source": 7,
									"value": "39"
								},
								{
									"begin": 5684,
									"end": 5801,
									"name": "JUMPDEST",
									"source": 7
								},
								{
									"begin": 5793,
									"end": 5794,
									"name": "PUSH",
									"source": 7,
									"value": "0"
								},
								{
									"begin": 5790,
									"end": 5791,
									"name": "DUP1",
									"source": 7
								},
								{
									"begin": 5783,
									"end": 5795,
									"name": "REVERT",
									"source": 7
								},
								{
									"begin": 5807,
									"end": 5909,
									"name": "tag",
									"source": 7,
									"value": "40"
								},
								{
									"begin": 5807,
									"end": 5909,
									"name": "JUMPDEST",
									"source": 7
								},
								{
									"begin": 5848,
									"end": 5854,
									"name": "PUSH",
									"source": 7,
									"value": "0"
								},
								{
									"begin": 5899,
									"end": 5901,
									"name": "PUSH",
									"source": 7,
									"value": "1F"
								},
								{
									"begin": 5895,
									"end": 5902,
									"name": "NOT",
									"source": 7
								},
								{
									"begin": 5890,
									"end": 5892,
									"name": "PUSH",
									"source": 7,
									"value": "1F"
								},
								{
									"begin": 5883,
									"end": 5888,
									"name": "DUP4",
									"source": 7
								},
								{
									"begin": 5879,
									"end": 5893,
									"name": "ADD",
									"source": 7
								},
								{
									"begin": 5875,
									"end": 5903,
									"name": "AND",
									"source": 7
								},
								{
									"begin": 5865,
									"end": 5903,
									"name": "SWAP1",
									"source": 7
								},
								{
									"begin": 5865,
									"end": 5903,
									"name": "POP",
									"source": 7
								},
								{
									"begin": 5807,
									"end": 5909,
									"name": "SWAP2",
									"source": 7
								},
								{
									"begin": 5807,
									"end": 5909,
									"name": "SWAP1",
									"source": 7
								},
								{
									"begin": 5807,
									"end": 5909,
									"name": "POP",
									"source": 7
								},
								{
									"begin": 5807,
									"end": 5909,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 7
								},
								{
									"begin": 5915,
									"end": 6196,
									"name": "tag",
									"source": 7,
									"value": "41"
								},
								{
									"begin": 5915,
									"end": 6196,
									"name": "JUMPDEST",
									"source": 7
								},
								{
									"begin": 5998,
									"end": 6025,
									"name": "PUSH [tag]",
									"source": 7,
									"value": "116"
								},
								{
									"begin": 6020,
									"end": 6024,
									"name": "DUP3",
									"source": 7
								},
								{
									"begin": 5998,
									"end": 6025,
									"name": "PUSH [tag]",
									"source": 7,
									"value": "40"
								},
								{
									"begin": 5998,
									"end": 6025,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 7
								},
								{
									"begin": 5998,
									"end": 6025,
									"name": "tag",
									"source": 7,
									"value": "116"
								},
								{
									"begin": 5998,
									"end": 6025,
									"name": "JUMPDEST",
									"source": 7
								},
								{
									"begin": 5990,
									"end": 5996,
									"name": "DUP2",
									"source": 7
								},
								{
									"begin": 5986,
									"end": 6026,
									"name": "ADD",
									"source": 7
								},
								{
									"begin": 6128,
									"end": 6134,
									"name": "DUP2",
									"source": 7
								},
								{
									"begin": 6116,
									"end": 6126,
									"name": "DUP2",
									"source": 7
								},
								{
									"begin": 6113,
									"end": 6135,
									"name": "LT",
									"source": 7
								},
								{
									"begin": 6092,
									"end": 6110,
									"name": "PUSH",
									"source": 7,
									"value": "FFFFFFFFFFFFFFFF"
								},
								{
									"begin": 6080,
									"end": 6090,
									"name": "DUP3",
									"source": 7
								},
								{
									"begin": 6077,
									"end": 6111,
									"name": "GT",
									"source": 7
								},
								{
									"begin": 6074,
									"end": 6136,
									"name": "OR",
									"source": 7
								},
								{
									"begin": 6071,
									"end": 6159,
									"name": "ISZERO",
									"source": 7
								},
								{
									"begin": 6071,
									"end": 6159,
									"name": "PUSH [tag]",
									"source": 7,
									"value": "117"
								},
								{
									"begin": 6071,
									"end": 6159,
									"name": "JUMPI",
									"source": 7
								},
								{
									"begin": 6139,
									"end": 6157,
									"name": "PUSH [tag]",
									"source": 7,
									"value": "118"
								},
								{
									"begin": 6139,
									"end": 6157,
									"name": "PUSH [tag]",
									"source": 7,
									"value": "16"
								},
								{
									"begin": 6139,
									"end": 6157,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 7
								},
								{
									"begin": 6139,
									"end": 6157,
									"name": "tag",
									"source": 7,
									"value": "118"
								},
								{
									"begin": 6139,
									"end": 6157,
									"name": "JUMPDEST",
									"source": 7
								},
								{
									"begin": 6071,
									"end": 6159,
									"name": "tag",
									"source": 7,
									"value": "117"
								},
								{
									"begin": 6071,
									"end": 6159,
									"name": "JUMPDEST",
									"source": 7
								},
								{
									"begin": 6179,
									"end": 6189,
									"name": "DUP1",
									"source": 7
								},
								{
									"begin": 6175,
									"end": 6177,
									"name": "PUSH",
									"source": 7,
									"value": "40"
								},
								{
									"begin": 6168,
									"end": 6190,
									"name": "MSTORE",
									"source": 7
								},
								{
									"begin": 5958,
									"end": 6196,
									"name": "POP",
									"source": 7
								},
								{
									"begin": 5915,
									"end": 6196,
									"name": "POP",
									"source": 7
								},
								{
									"begin": 5915,
									"end": 6196,
									"name": "POP",
									"source": 7
								},
								{
									"begin": 5915,
									"end": 6196,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 7
								},
								{
									"begin": 6202,
									"end": 6331,
									"name": "tag",
									"source": 7,
									"value": "42"
								},
								{
									"begin": 6202,
									"end": 6331,
									"name": "JUMPDEST",
									"source": 7
								},
								{
									"begin": 6236,
									"end": 6242,
									"name": "PUSH",
									"source": 7,
									"value": "0"
								},
								{
									"begin": 6263,
									"end": 6283,
									"name": "PUSH [tag]",
									"source": 7,
									"value": "120"
								},
								{
									"begin": 6263,
									"end": 6283,
									"name": "PUSH [tag]",
									"source": 7,
									"value": "35"
								},
								{
									"begin": 6263,
									"end": 6283,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 7
								},
								{
									"begin": 6263,
									"end": 6283,
									"name": "tag",
									"source": 7,
									"value": "120"
								},
								{
									"begin": 6263,
									"end": 6283,
									"name": "JUMPDEST",
									"source": 7
								},
								{
									"begin": 6253,
									"end": 6283,
									"name": "SWAP1",
									"source": 7
								},
								{
									"begin": 6253,
									"end": 6283,
									"name": "POP",
									"source": 7
								},
								{
									"begin": 6292,
									"end": 6325,
									"name": "PUSH [tag]",
									"source": 7,
									"value": "121"
								},
								{
									"begin": 6320,
									"end": 6324,
									"name": "DUP3",
									"source": 7
								},
								{
									"begin": 6312,
									"end": 6318,
									"name": "DUP3",
									"source": 7
								},
								{
									"begin": 6292,
									"end": 6325,
									"name": "PUSH [tag]",
									"source": 7,
									"value": "41"
								},
								{
									"begin": 6292,
									"end": 6325,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 7
								},
								{
									"begin": 6292,
									"end": 6325,
									"name": "tag",
									"source": 7,
									"value": "121"
								},
								{
									"begin": 6292,
									"end": 6325,
									"name": "JUMPDEST",
									"source": 7
								},
								{
									"begin": 6202,
									"end": 6331,
									"name": "SWAP2",
									"source": 7
								},
								{
									"begin": 6202,
									"end": 6331,
									"name": "SWAP1",
									"source": 7
								},
								{
									"begin": 6202,
									"end": 6331,
									"name": "POP",
									"source": 7
								},
								{
									"begin": 6202,
									"end": 6331,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 7
								},
								{
									"begin": 6337,
									"end": 6645,
									"name": "tag",
									"source": 7,
									"value": "43"
								},
								{
									"begin": 6337,
									"end": 6645,
									"name": "JUMPDEST",
									"source": 7
								},
								{
									"begin": 6399,
									"end": 6403,
									"name": "PUSH",
									"source": 7,
									"value": "0"
								},
								{
									"begin": 6489,
									"end": 6507,
									"name": "PUSH",
									"source": 7,
									"value": "FFFFFFFFFFFFFFFF"
								},
								{
									"begin": 6481,
									"end": 6487,
									"name": "DUP3",
									"source": 7
								},
								{
									"begin": 6478,
									"end": 6508,
									"name": "GT",
									"source": 7
								},
								{
									"begin": 6475,
									"end": 6531,
									"name": "ISZERO",
									"source": 7
								},
								{
									"begin": 6475,
									"end": 6531,
									"name": "PUSH [tag]",
									"source": 7,
									"value": "123"
								},
								{
									"begin": 6475,
									"end": 6531,
									"name": "JUMPI",
									"source": 7
								},
								{
									"begin": 6511,
									"end": 6529,
									"name": "PUSH [tag]",
									"source": 7,
									"value": "124"
								},
								{
									"begin": 6511,
									"end": 6529,
									"name": "PUSH [tag]",
									"source": 7,
									"value": "16"
								},
								{
									"begin": 6511,
									"end": 6529,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 7
								},
								{
									"begin": 6511,
									"end": 6529,
									"name": "tag",
									"source": 7,
									"value": "124"
								},
								{
									"begin": 6511,
									"end": 6529,
									"name": "JUMPDEST",
									"source": 7
								},
								{
									"begin": 6475,
									"end": 6531,
									"name": "tag",
									"source": 7,
									"value": "123"
								},
								{
									"begin": 6475,
									"end": 6531,
									"name": "JUMPDEST",
									"source": 7
								},
								{
									"begin": 6549,
									"end": 6578,
									"name": "PUSH [tag]",
									"source": 7,
									"value": "125"
								},
								{
									"begin": 6571,
									"end": 6577,
									"name": "DUP3",
									"source": 7
								},
								{
									"begin": 6549,
									"end": 6578,
									"name": "PUSH [tag]",
									"source": 7,
									"value": "40"
								},
								{
									"begin": 6549,
									"end": 6578,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 7
								},
								{
									"begin": 6549,
									"end": 6578,
									"name": "tag",
									"source": 7,
									"value": "125"
								},
								{
									"begin": 6549,
									"end": 6578,
									"name": "JUMPDEST",
									"source": 7
								},
								{
									"begin": 6541,
									"end": 6578,
									"name": "SWAP1",
									"source": 7
								},
								{
									"begin": 6541,
									"end": 6578,
									"name": "POP",
									"source": 7
								},
								{
									"begin": 6633,
									"end": 6637,
									"name": "PUSH",
									"source": 7,
									"value": "20"
								},
								{
									"begin": 6627,
									"end": 6631,
									"name": "DUP2",
									"source": 7
								},
								{
									"begin": 6623,
									"end": 6638,
									"name": "ADD",
									"source": 7
								},
								{
									"begin": 6615,
									"end": 6638,
									"name": "SWAP1",
									"source": 7
								},
								{
									"begin": 6615,
									"end": 6638,
									"name": "POP",
									"source": 7
								},
								{
									"begin": 6337,
									"end": 6645,
									"name": "SWAP2",
									"source": 7
								},
								{
									"begin": 6337,
									"end": 6645,
									"name": "SWAP1",
									"source": 7
								},
								{
									"begin": 6337,
									"end": 6645,
									"name": "POP",
									"source": 7
								},
								{
									"begin": 6337,
									"end": 6645,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 7
								},
								{
									"begin": 6651,
									"end": 6790,
									"name": "tag",
									"source": 7,
									"value": "44"
								},
								{
									"begin": 6651,
									"end": 6790,
									"name": "JUMPDEST",
									"source": 7
								},
								{
									"begin": 6740,
									"end": 6746,
									"name": "DUP3",
									"source": 7
								},
								{
									"begin": 6735,
									"end": 6738,
									"name": "DUP2",
									"source": 7
								},
								{
									"begin": 6730,
									"end": 6733,
									"name": "DUP4",
									"source": 7
								},
								{
									"begin": 6724,
									"end": 6747,
									"name": "MCOPY",
									"source": 7
								},
								{
									"begin": 6781,
									"end": 6782,
									"name": "PUSH",
									"source": 7,
									"value": "0"
								},
								{
									"begin": 6772,
									"end": 6778,
									"name": "DUP4",
									"source": 7
								},
								{
									"begin": 6767,
									"end": 6770,
									"name": "DUP4",
									"source": 7
								},
								{
									"begin": 6763,
									"end": 6779,
									"name": "ADD",
									"source": 7
								},
								{
									"begin": 6756,
									"end": 6783,
									"name": "MSTORE",
									"source": 7
								},
								{
									"begin": 6651,
									"end": 6790,
									"name": "POP",
									"source": 7
								},
								{
									"begin": 6651,
									"end": 6790,
									"name": "POP",
									"source": 7
								},
								{
									"begin": 6651,
									"end": 6790,
									"name": "POP",
									"source": 7
								},
								{
									"begin": 6651,
									"end": 6790,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 7
								},
								{
									"begin": 6796,
									"end": 7230,
									"name": "tag",
									"source": 7,
									"value": "45"
								},
								{
									"begin": 6796,
									"end": 7230,
									"name": "JUMPDEST",
									"source": 7
								},
								{
									"begin": 6885,
									"end": 6890,
									"name": "PUSH",
									"source": 7,
									"value": "0"
								},
								{
									"begin": 6910,
									"end": 6976,
									"name": "PUSH [tag]",
									"source": 7,
									"value": "128"
								},
								{
									"begin": 6926,
									"end": 6975,
									"name": "PUSH [tag]",
									"source": 7,
									"value": "129"
								},
								{
									"begin": 6968,
									"end": 6974,
									"name": "DUP5",
									"source": 7
								},
								{
									"begin": 6926,
									"end": 6975,
									"name": "PUSH [tag]",
									"source": 7,
									"value": "43"
								},
								{
									"begin": 6926,
									"end": 6975,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 7
								},
								{
									"begin": 6926,
									"end": 6975,
									"name": "tag",
									"source": 7,
									"value": "129"
								},
								{
									"begin": 6926,
									"end": 6975,
									"name": "JUMPDEST",
									"source": 7
								},
								{
									"begin": 6910,
									"end": 6976,
									"name": "PUSH [tag]",
									"source": 7,
									"value": "42"
								},
								{
									"begin": 6910,
									"end": 6976,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 7
								},
								{
									"begin": 6910,
									"end": 6976,
									"name": "tag",
									"source": 7,
									"value": "128"
								},
								{
									"begin": 6910,
									"end": 6976,
									"name": "JUMPDEST",
									"source": 7
								},
								{
									"begin": 6901,
									"end": 6976,
									"name": "SWAP1",
									"source": 7
								},
								{
									"begin": 6901,
									"end": 6976,
									"name": "POP",
									"source": 7
								},
								{
									"begin": 6999,
									"end": 7005,
									"name": "DUP3",
									"source": 7
								},
								{
									"begin": 6992,
									"end": 6997,
									"name": "DUP2",
									"source": 7
								},
								{
									"begin": 6985,
									"end": 7006,
									"name": "MSTORE",
									"source": 7
								},
								{
									"begin": 7037,
									"end": 7041,
									"name": "PUSH",
									"source": 7,
									"value": "20"
								},
								{
									"begin": 7030,
									"end": 7035,
									"name": "DUP2",
									"source": 7
								},
								{
									"begin": 7026,
									"end": 7042,
									"name": "ADD",
									"source": 7
								},
								{
									"begin": 7075,
									"end": 7078,
									"name": "DUP5",
									"source": 7
								},
								{
									"begin": 7066,
									"end": 7072,
									"name": "DUP5",
									"source": 7
								},
								{
									"begin": 7061,
									"end": 7064,
									"name": "DUP5",
									"source": 7
								},
								{
									"begin": 7057,
									"end": 7073,
									"name": "ADD",
									"source": 7
								},
								{
									"begin": 7054,
									"end": 7079,
									"name": "GT",
									"source": 7
								},
								{
									"begin": 7051,
									"end": 7163,
									"name": "ISZERO",
									"source": 7
								},
								{
									"begin": 7051,
									"end": 7163,
									"name": "PUSH [tag]",
									"source": 7,
									"value": "130"
								},
								{
									"begin": 7051,
									"end": 7163,
									"name": "JUMPI",
									"source": 7
								},
								{
									"begin": 7082,
									"end": 7161,
									"name": "PUSH [tag]",
									"source": 7,
									"value": "131"
								},
								{
									"begin": 7082,
									"end": 7161,
									"name": "PUSH [tag]",
									"source": 7,
									"value": "39"
								},
								{
									"begin": 7082,
									"end": 7161,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 7
								},
								{
									"begin": 7082,
									"end": 7161,
									"name": "tag",
									"source": 7,
									"value": "131"
								},
								{
									"begin": 7082,
									"end": 7161,
									"name": "JUMPDEST",
									"source": 7
								},
								{
									"begin": 7051,
									"end": 7163,
									"name": "tag",
									"source": 7,
									"value": "130"
								},
								{
									"begin": 7051,
									"end": 7163,
									"name": "JUMPDEST",
									"source": 7
								},
								{
									"begin": 7172,
									"end": 7224,
									"name": "PUSH [tag]",
									"source": 7,
									"value": "132"
								},
								{
									"begin": 7217,
									"end": 7223,
									"name": "DUP5",
									"source": 7
								},
								{
									"begin": 7212,
									"end": 7215,
									"name": "DUP3",
									"source": 7
								},
								{
									"begin": 7207,
									"end": 7210,
									"name": "DUP6",
									"source": 7
								},
								{
									"begin": 7172,
									"end": 7224,
									"name": "PUSH [tag]",
									"source": 7,
									"value": "44"
								},
								{
									"begin": 7172,
									"end": 7224,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 7
								},
								{
									"begin": 7172,
									"end": 7224,
									"name": "tag",
									"source": 7,
									"value": "132"
								},
								{
									"begin": 7172,
									"end": 7224,
									"name": "JUMPDEST",
									"source": 7
								},
								{
									"begin": 6891,
									"end": 7230,
									"name": "POP",
									"source": 7
								},
								{
									"begin": 6796,
									"end": 7230,
									"name": "SWAP4",
									"source": 7
								},
								{
									"begin": 6796,
									"end": 7230,
									"name": "SWAP3",
									"source": 7
								},
								{
									"begin": 6796,
									"end": 7230,
									"name": "POP",
									"source": 7
								},
								{
									"begin": 6796,
									"end": 7230,
									"name": "POP",
									"source": 7
								},
								{
									"begin": 6796,
									"end": 7230,
									"name": "POP",
									"source": 7
								},
								{
									"begin": 6796,
									"end": 7230,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 7
								},
								{
									"begin": 7250,
									"end": 7605,
									"name": "tag",
									"source": 7,
									"value": "46"
								},
								{
									"begin": 7250,
									"end": 7605,
									"name": "JUMPDEST",
									"source": 7
								},
								{
									"begin": 7317,
									"end": 7322,
									"name": "PUSH",
									"source": 7,
									"value": "0"
								},
								{
									"begin": 7366,
									"end": 7369,
									"name": "DUP3",
									"source": 7
								},
								{
									"begin": 7359,
									"end": 7363,
									"name": "PUSH",
									"source": 7,
									"value": "1F"
								},
								{
									"begin": 7351,
									"end": 7357,
									"name": "DUP4",
									"source": 7
								},
								{
									"begin": 7347,
									"end": 7364,
									"name": "ADD",
									"source": 7
								},
								{
									"begin": 7343,
									"end": 7370,
									"name": "SLT",
									"source": 7
								},
								{
									"begin": 7333,
									"end": 7455,
									"name": "PUSH [tag]",
									"source": 7,
									"value": "134"
								},
								{
									"begin": 7333,
									"end": 7455,
									"name": "JUMPI",
									"source": 7
								},
								{
									"begin": 7374,
									"end": 7453,
									"name": "PUSH [tag]",
									"source": 7,
									"value": "135"
								},
								{
									"begin": 7374,
									"end": 7453,
									"name": "PUSH [tag]",
									"source": 7,
									"value": "38"
								},
								{
									"begin": 7374,
									"end": 7453,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 7
								},
								{
									"begin": 7374,
									"end": 7453,
									"name": "tag",
									"source": 7,
									"value": "135"
								},
								{
									"begin": 7374,
									"end": 7453,
									"name": "JUMPDEST",
									"source": 7
								},
								{
									"begin": 7333,
									"end": 7455,
									"name": "tag",
									"source": 7,
									"value": "134"
								},
								{
									"begin": 7333,
									"end": 7455,
									"name": "JUMPDEST",
									"source": 7
								},
								{
									"begin": 7484,
									"end": 7490,
									"name": "DUP2",
									"source": 7
								},
								{
									"begin": 7478,
									"end": 7491,
									"name": "MLOAD",
									"source": 7
								},
								{
									"begin": 7509,
									"end": 7599,
									"name": "PUSH [tag]",
									"source": 7,
									"value": "136"
								},
								{
									"begin": 7595,
									"end": 7598,
									"name": "DUP5",
									"source": 7
								},
								{
									"begin": 7587,
									"end": 7593,
									"name": "DUP3",
									"source": 7
								},
								{
									"begin": 7580,
									"end": 7584,
									"name": "PUSH",
									"source": 7,
									"value": "20"
								},
								{
									"begin": 7572,
									"end": 7578,
									"name": "DUP7",
									"source": 7
								},
								{
									"begin": 7568,
									"end": 7585,
									"name": "ADD",
									"source": 7
								},
								{
									"begin": 7509,
									"end": 7599,
									"name": "PUSH [tag]",
									"source": 7,
									"value": "45"
								},
								{
									"begin": 7509,
									"end": 7599,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 7
								},
								{
									"begin": 7509,
									"end": 7599,
									"name": "tag",
									"source": 7,
									"value": "136"
								},
								{
									"begin": 7509,
									"end": 7599,
									"name": "JUMPDEST",
									"source": 7
								},
								{
									"begin": 7500,
									"end": 7599,
									"name": "SWAP2",
									"source": 7
								},
								{
									"begin": 7500,
									"end": 7599,
									"name": "POP",
									"source": 7
								},
								{
									"begin": 7323,
									"end": 7605,
									"name": "POP",
									"source": 7
								},
								{
									"begin": 7250,
									"end": 7605,
									"name": "SWAP3",
									"source": 7
								},
								{
									"begin": 7250,
									"end": 7605,
									"name": "SWAP2",
									"source": 7
								},
								{
									"begin": 7250,
									"end": 7605,
									"name": "POP",
									"source": 7
								},
								{
									"begin": 7250,
									"end": 7605,
									"name": "POP",
									"source": 7
								},
								{
									"begin": 7250,
									"end": 7605,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 7
								},
								{
									"begin": 7611,
									"end": 8464,
									"name": "tag",
									"source": 7,
									"value": "6"
								},
								{
									"begin": 7611,
									"end": 8464,
									"name": "JUMPDEST",
									"source": 7
								},
								{
									"begin": 7710,
									"end": 7716,
									"name": "PUSH",
									"source": 7,
									"value": "0"
								},
								{
									"begin": 7718,
									"end": 7724,
									"name": "DUP1",
									"source": 7
								},
								{
									"begin": 7767,
									"end": 7769,
									"name": "PUSH",
									"source": 7,
									"value": "40"
								},
								{
									"begin": 7755,
									"end": 7764,
									"name": "DUP4",
									"source": 7
								},
								{
									"begin": 7746,
									"end": 7753,
									"name": "DUP6",
									"source": 7
								},
								{
									"begin": 7742,
									"end": 7765,
									"name": "SUB",
									"source": 7
								},
								{
									"begin": 7738,
									"end": 7770,
									"name": "SLT",
									"source": 7
								},
								{
									"begin": 7735,
									"end": 7854,
									"name": "ISZERO",
									"source": 7
								},
								{
									"begin": 7735,
									"end": 7854,
									"name": "PUSH [tag]",
									"source": 7,
									"value": "138"
								},
								{
									"begin": 7735,
									"end": 7854,
									"name": "JUMPI",
									"source": 7
								},
								{
									"begin": 7773,
									"end": 7852,
									"name": "PUSH [tag]",
									"source": 7,
									"value": "139"
								},
								{
									"begin": 7773,
									"end": 7852,
									"name": "PUSH [tag]",
									"source": 7,
									"value": "36"
								},
								{
									"begin": 7773,
									"end": 7852,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 7
								},
								{
									"begin": 7773,
									"end": 7852,
									"name": "tag",
									"source": 7,
									"value": "139"
								},
								{
									"begin": 7773,
									"end": 7852,
									"name": "JUMPDEST",
									"source": 7
								},
								{
									"begin": 7735,
									"end": 7854,
									"name": "tag",
									"source": 7,
									"value": "138"
								},
								{
									"begin": 7735,
									"end": 7854,
									"name": "JUMPDEST",
									"source": 7
								},
								{
									"begin": 7914,
									"end": 7915,
									"name": "PUSH",
									"source": 7,
									"value": "0"
								},
								{
									"begin": 7903,
									"end": 7912,
									"name": "DUP4",
									"source": 7
								},
								{
									"begin": 7899,
									"end": 7916,
									"name": "ADD",
									"source": 7
								},
								{
									"begin": 7893,
									"end": 7917,
									"name": "MLOAD",
									"source": 7
								},
								{
									"begin": 7944,
									"end": 7962,
									"name": "PUSH",
									"source": 7,
									"value": "FFFFFFFFFFFFFFFF"
								},
								{
									"begin": 7936,
									"end": 7942,
									"name": "DUP2",
									"source": 7
								},
								{
									"begin": 7933,
									"end": 7963,
									"name": "GT",
									"source": 7
								},
								{
									"begin": 7930,
									"end": 8047,
									"name": "ISZERO",
									"source": 7
								},
								{
									"begin": 7930,
									"end": 8047,
									"name": "PUSH [tag]",
									"source": 7,
									"value": "140"
								},
								{
									"begin": 7930,
									"end": 8047,
									"name": "JUMPI",
									"source": 7
								},
								{
									"begin": 7966,
									"end": 8045,
									"name": "PUSH [tag]",
									"source": 7,
									"value": "141"
								},
								{
									"begin": 7966,
									"end": 8045,
									"name": "PUSH [tag]",
									"source": 7,
									"value": "37"
								},
								{
									"begin": 7966,
									"end": 8045,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 7
								},
								{
									"begin": 7966,
									"end": 8045,
									"name": "tag",
									"source": 7,
									"value": "141"
								},
								{
									"begin": 7966,
									"end": 8045,
									"name": "JUMPDEST",
									"source": 7
								},
								{
									"begin": 7930,
									"end": 8047,
									"name": "tag",
									"source": 7,
									"value": "140"
								},
								{
									"begin": 7930,
									"end": 8047,
									"name": "JUMPDEST",
									"source": 7
								},
								{
									"begin": 8071,
									"end": 8145,
									"name": "PUSH [tag]",
									"source": 7,
									"value": "142"
								},
								{
									"begin": 8137,
									"end": 8144,
									"name": "DUP6",
									"source": 7
								},
								{
									"begin": 8128,
									"end": 8134,
									"name": "DUP3",
									"source": 7
								},
								{
									"begin": 8117,
									"end": 8126,
									"name": "DUP7",
									"source": 7
								},
								{
									"begin": 8113,
									"end": 8135,
									"name": "ADD",
									"source": 7
								},
								{
									"begin": 8071,
									"end": 8145,
									"name": "PUSH [tag]",
									"source": 7,
									"value": "46"
								},
								{
									"begin": 8071,
									"end": 8145,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 7
								},
								{
									"begin": 8071,
									"end": 8145,
									"name": "tag",
									"source": 7,
									"value": "142"
								},
								{
									"begin": 8071,
									"end": 8145,
									"name": "JUMPDEST",
									"source": 7
								},
								{
									"begin": 8061,
									"end": 8145,
									"name": "SWAP3",
									"source": 7
								},
								{
									"begin": 8061,
									"end": 8145,
									"name": "POP",
									"source": 7
								},
								{
									"begin": 7864,
									"end": 8155,
									"name": "POP",
									"source": 7
								},
								{
									"begin": 8215,
									"end": 8217,
									"name": "PUSH",
									"source": 7,
									"value": "20"
								},
								{
									"begin": 8204,
									"end": 8213,
									"name": "DUP4",
									"source": 7
								},
								{
									"begin": 8200,
									"end": 8218,
									"name": "ADD",
									"source": 7
								},
								{
									"begin": 8194,
									"end": 8219,
									"name": "MLOAD",
									"source": 7
								},
								{
									"begin": 8246,
									"end": 8264,
									"name": "PUSH",
									"source": 7,
									"value": "FFFFFFFFFFFFFFFF"
								},
								{
									"begin": 8238,
									"end": 8244,
									"name": "DUP2",
									"source": 7
								},
								{
									"begin": 8235,
									"end": 8265,
									"name": "GT",
									"source": 7
								},
								{
									"begin": 8232,
									"end": 8349,
									"name": "ISZERO",
									"source": 7
								},
								{
									"begin": 8232,
									"end": 8349,
									"name": "PUSH [tag]",
									"source": 7,
									"value": "143"
								},
								{
									"begin": 8232,
									"end": 8349,
									"name": "JUMPI",
									"source": 7
								},
								{
									"begin": 8268,
									"end": 8347,
									"name": "PUSH [tag]",
									"source": 7,
									"value": "144"
								},
								{
									"begin": 8268,
									"end": 8347,
									"name": "PUSH [tag]",
									"source": 7,
									"value": "37"
								},
								{
									"begin": 8268,
									"end": 8347,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 7
								},
								{
									"begin": 8268,
									"end": 8347,
									"name": "tag",
									"source": 7,
									"value": "144"
								},
								{
									"begin": 8268,
									"end": 8347,
									"name": "JUMPDEST",
									"source": 7
								},
								{
									"begin": 8232,
									"end": 8349,
									"name": "tag",
									"source": 7,
									"value": "143"
								},
								{
									"begin": 8232,
									"end": 8349,
									"name": "JUMPDEST",
									"source": 7
								},
								{
									"begin": 8373,
									"end": 8447,
									"name": "PUSH [tag]",
									"source": 7,
									"value": "145"
								},
								{
									"begin": 8439,
									"end": 8446,
									"name": "DUP6",
									"source": 7
								},
								{
									"begin": 8430,
									"end": 8436,
									"name": "DUP3",
									"source": 7
								},
								{
									"begin": 8419,
									"end": 8428,
									"name": "DUP7",
									"source": 7
								},
								{
									"begin": 8415,
									"end": 8437,
									"name": "ADD",
									"source": 7
								},
								{
									"begin": 8373,
									"end": 8447,
									"name": "PUSH [tag]",
									"source": 7,
									"value": "46"
								},
								{
									"begin": 8373,
									"end": 8447,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 7
								},
								{
									"begin": 8373,
									"end": 8447,
									"name": "tag",
									"source": 7,
									"value": "145"
								},
								{
									"begin": 8373,
									"end": 8447,
									"name": "JUMPDEST",
									"source": 7
								},
								{
									"begin": 8363,
									"end": 8447,
									"name": "SWAP2",
									"source": 7
								},
								{
									"begin": 8363,
									"end": 8447,
									"name": "POP",
									"source": 7
								},
								{
									"begin": 8165,
									"end": 8457,
									"name": "POP",
									"source": 7
								},
								{
									"begin": 7611,
									"end": 8464,
									"name": "SWAP3",
									"source": 7
								},
								{
									"begin": 7611,
									"end": 8464,
									"name": "POP",
									"source": 7
								},
								{
									"begin": 7611,
									"end": 8464,
									"name": "SWAP3",
									"source": 7
								},
								{
									"begin": 7611,
									"end": 8464,
									"name": "SWAP1",
									"source": 7
								},
								{
									"begin": 7611,
									"end": 8464,
									"name": "POP",
									"source": 7
								},
								{
									"begin": 7611,
									"end": 8464,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 7
								},
								{
									"begin": 318,
									"end": 6184,
									"name": "tag",
									"source": 6,
									"value": "14"
								},
								{
									"begin": 318,
									"end": 6184,
									"name": "JUMPDEST",
									"source": 6
								},
								{
									"begin": 318,
									"end": 6184,
									"name": "PUSH #[$]",
									"source": 6,
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 318,
									"end": 6184,
									"name": "DUP1",
									"source": 6
								},
								{
									"begin": 318,
									"end": 6184,
									"name": "PUSH [$]",
									"source": 6,
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 318,
									"end": 6184,
									"name": "PUSH",
									"source": 6,
									"value": "0"
								},
								{
									"begin": 318,
									"end": 6184,
									"name": "CODECOPY",
									"source": 6
								},
								{
									"begin": 318,
									"end": 6184,
									"name": "PUSH",
									"source": 6,
									"value": "0"
								},
								{
									"begin": 318,
									"end": 6184,
									"name": "RETURN",
									"source": 6
								}
							],
							".data": {
								"0": {
									".auxdata": "a26469706673582212203f33c0d74d6aad406cf6f588bb40936af0535b1c0e1abec039651de87ea33c2464736f6c634300081a0033",
									".code": [
										{
											"begin": 318,
											"end": 6184,
											"name": "PUSH",
											"source": 6,
											"value": "80"
										},
										{
											"begin": 318,
											"end": 6184,
											"name": "PUSH",
											"source": 6,
											"value": "40"
										},
										{
											"begin": 318,
											"end": 6184,
											"name": "MSTORE",
											"source": 6
										},
										{
											"begin": 318,
											"end": 6184,
											"name": "CALLVALUE",
											"source": 6
										},
										{
											"begin": 318,
											"end": 6184,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 318,
											"end": 6184,
											"name": "ISZERO",
											"source": 6
										},
										{
											"begin": 318,
											"end": 6184,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "1"
										},
										{
											"begin": 318,
											"end": 6184,
											"name": "JUMPI",
											"source": 6
										},
										{
											"begin": 318,
											"end": 6184,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 318,
											"end": 6184,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 318,
											"end": 6184,
											"name": "REVERT",
											"source": 6
										},
										{
											"begin": 318,
											"end": 6184,
											"name": "tag",
											"source": 6,
											"value": "1"
										},
										{
											"begin": 318,
											"end": 6184,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 318,
											"end": 6184,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 318,
											"end": 6184,
											"name": "PUSH",
											"source": 6,
											"value": "4"
										},
										{
											"begin": 318,
											"end": 6184,
											"name": "CALLDATASIZE",
											"source": 6
										},
										{
											"begin": 318,
											"end": 6184,
											"name": "LT",
											"source": 6
										},
										{
											"begin": 318,
											"end": 6184,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "2"
										},
										{
											"begin": 318,
											"end": 6184,
											"name": "JUMPI",
											"source": 6
										},
										{
											"begin": 318,
											"end": 6184,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 318,
											"end": 6184,
											"name": "CALLDATALOAD",
											"source": 6
										},
										{
											"begin": 318,
											"end": 6184,
											"name": "PUSH",
											"source": 6,
											"value": "E0"
										},
										{
											"begin": 318,
											"end": 6184,
											"name": "SHR",
											"source": 6
										},
										{
											"begin": 318,
											"end": 6184,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 318,
											"end": 6184,
											"name": "PUSH",
											"source": 6,
											"value": "830953AB"
										},
										{
											"begin": 318,
											"end": 6184,
											"name": "GT",
											"source": 6
										},
										{
											"begin": 318,
											"end": 6184,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "19"
										},
										{
											"begin": 318,
											"end": 6184,
											"name": "JUMPI",
											"source": 6
										},
										{
											"begin": 318,
											"end": 6184,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 318,
											"end": 6184,
											"name": "PUSH",
											"source": 6,
											"value": "976B3113"
										},
										{
											"begin": 318,
											"end": 6184,
											"name": "GT",
											"source": 6
										},
										{
											"begin": 318,
											"end": 6184,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "20"
										},
										{
											"begin": 318,
											"end": 6184,
											"name": "JUMPI",
											"source": 6
										},
										{
											"begin": 318,
											"end": 6184,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 318,
											"end": 6184,
											"name": "PUSH",
											"source": 6,
											"value": "976B3113"
										},
										{
											"begin": 318,
											"end": 6184,
											"name": "EQ",
											"source": 6
										},
										{
											"begin": 318,
											"end": 6184,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "15"
										},
										{
											"begin": 318,
											"end": 6184,
											"name": "JUMPI",
											"source": 6
										},
										{
											"begin": 318,
											"end": 6184,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 318,
											"end": 6184,
											"name": "PUSH",
											"source": 6,
											"value": "A9059CBB"
										},
										{
											"begin": 318,
											"end": 6184,
											"name": "EQ",
											"source": 6
										},
										{
											"begin": 318,
											"end": 6184,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "16"
										},
										{
											"begin": 318,
											"end": 6184,
											"name": "JUMPI",
											"source": 6
										},
										{
											"begin": 318,
											"end": 6184,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 318,
											"end": 6184,
											"name": "PUSH",
											"source": 6,
											"value": "D5ABEB01"
										},
										{
											"begin": 318,
											"end": 6184,
											"name": "EQ",
											"source": 6
										},
										{
											"begin": 318,
											"end": 6184,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "17"
										},
										{
											"begin": 318,
											"end": 6184,
											"name": "JUMPI",
											"source": 6
										},
										{
											"begin": 318,
											"end": 6184,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 318,
											"end": 6184,
											"name": "PUSH",
											"source": 6,
											"value": "DD62ED3E"
										},
										{
											"begin": 318,
											"end": 6184,
											"name": "EQ",
											"source": 6
										},
										{
											"begin": 318,
											"end": 6184,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "18"
										},
										{
											"begin": 318,
											"end": 6184,
											"name": "JUMPI",
											"source": 6
										},
										{
											"begin": 318,
											"end": 6184,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "2"
										},
										{
											"begin": 318,
											"end": 6184,
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 318,
											"end": 6184,
											"name": "tag",
											"source": 6,
											"value": "20"
										},
										{
											"begin": 318,
											"end": 6184,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 318,
											"end": 6184,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 318,
											"end": 6184,
											"name": "PUSH",
											"source": 6,
											"value": "830953AB"
										},
										{
											"begin": 318,
											"end": 6184,
											"name": "EQ",
											"source": 6
										},
										{
											"begin": 318,
											"end": 6184,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "11"
										},
										{
											"begin": 318,
											"end": 6184,
											"name": "JUMPI",
											"source": 6
										},
										{
											"begin": 318,
											"end": 6184,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 318,
											"end": 6184,
											"name": "PUSH",
											"source": 6,
											"value": "8615D855"
										},
										{
											"begin": 318,
											"end": 6184,
											"name": "EQ",
											"source": 6
										},
										{
											"begin": 318,
											"end": 6184,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "12"
										},
										{
											"begin": 318,
											"end": 6184,
											"name": "JUMPI",
											"source": 6
										},
										{
											"begin": 318,
											"end": 6184,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 318,
											"end": 6184,
											"name": "PUSH",
											"source": 6,
											"value": "943E8216"
										},
										{
											"begin": 318,
											"end": 6184,
											"name": "EQ",
											"source": 6
										},
										{
											"begin": 318,
											"end": 6184,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "13"
										},
										{
											"begin": 318,
											"end": 6184,
											"name": "JUMPI",
											"source": 6
										},
										{
											"begin": 318,
											"end": 6184,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 318,
											"end": 6184,
											"name": "PUSH",
											"source": 6,
											"value": "95D89B41"
										},
										{
											"begin": 318,
											"end": 6184,
											"name": "EQ",
											"source": 6
										},
										{
											"begin": 318,
											"end": 6184,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "14"
										},
										{
											"begin": 318,
											"end": 6184,
											"name": "JUMPI",
											"source": 6
										},
										{
											"begin": 318,
											"end": 6184,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "2"
										},
										{
											"begin": 318,
											"end": 6184,
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 318,
											"end": 6184,
											"name": "tag",
											"source": 6,
											"value": "19"
										},
										{
											"begin": 318,
											"end": 6184,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 318,
											"end": 6184,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 318,
											"end": 6184,
											"name": "PUSH",
											"source": 6,
											"value": "313CE567"
										},
										{
											"begin": 318,
											"end": 6184,
											"name": "GT",
											"source": 6
										},
										{
											"begin": 318,
											"end": 6184,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "21"
										},
										{
											"begin": 318,
											"end": 6184,
											"name": "JUMPI",
											"source": 6
										},
										{
											"begin": 318,
											"end": 6184,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 318,
											"end": 6184,
											"name": "PUSH",
											"source": 6,
											"value": "313CE567"
										},
										{
											"begin": 318,
											"end": 6184,
											"name": "EQ",
											"source": 6
										},
										{
											"begin": 318,
											"end": 6184,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "7"
										},
										{
											"begin": 318,
											"end": 6184,
											"name": "JUMPI",
											"source": 6
										},
										{
											"begin": 318,
											"end": 6184,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 318,
											"end": 6184,
											"name": "PUSH",
											"source": 6,
											"value": "4E71D92D"
										},
										{
											"begin": 318,
											"end": 6184,
											"name": "EQ",
											"source": 6
										},
										{
											"begin": 318,
											"end": 6184,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "8"
										},
										{
											"begin": 318,
											"end": 6184,
											"name": "JUMPI",
											"source": 6
										},
										{
											"begin": 318,
											"end": 6184,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 318,
											"end": 6184,
											"name": "PUSH",
											"source": 6,
											"value": "624601B6"
										},
										{
											"begin": 318,
											"end": 6184,
											"name": "EQ",
											"source": 6
										},
										{
											"begin": 318,
											"end": 6184,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "9"
										},
										{
											"begin": 318,
											"end": 6184,
											"name": "JUMPI",
											"source": 6
										},
										{
											"begin": 318,
											"end": 6184,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 318,
											"end": 6184,
											"name": "PUSH",
											"source": 6,
											"value": "70A08231"
										},
										{
											"begin": 318,
											"end": 6184,
											"name": "EQ",
											"source": 6
										},
										{
											"begin": 318,
											"end": 6184,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "10"
										},
										{
											"begin": 318,
											"end": 6184,
											"name": "JUMPI",
											"source": 6
										},
										{
											"begin": 318,
											"end": 6184,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "2"
										},
										{
											"begin": 318,
											"end": 6184,
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 318,
											"end": 6184,
											"name": "tag",
											"source": 6,
											"value": "21"
										},
										{
											"begin": 318,
											"end": 6184,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 318,
											"end": 6184,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 318,
											"end": 6184,
											"name": "PUSH",
											"source": 6,
											"value": "6FDDE03"
										},
										{
											"begin": 318,
											"end": 6184,
											"name": "EQ",
											"source": 6
										},
										{
											"begin": 318,
											"end": 6184,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "3"
										},
										{
											"begin": 318,
											"end": 6184,
											"name": "JUMPI",
											"source": 6
										},
										{
											"begin": 318,
											"end": 6184,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 318,
											"end": 6184,
											"name": "PUSH",
											"source": 6,
											"value": "95EA7B3"
										},
										{
											"begin": 318,
											"end": 6184,
											"name": "EQ",
											"source": 6
										},
										{
											"begin": 318,
											"end": 6184,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "4"
										},
										{
											"begin": 318,
											"end": 6184,
											"name": "JUMPI",
											"source": 6
										},
										{
											"begin": 318,
											"end": 6184,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 318,
											"end": 6184,
											"name": "PUSH",
											"source": 6,
											"value": "18160DDD"
										},
										{
											"begin": 318,
											"end": 6184,
											"name": "EQ",
											"source": 6
										},
										{
											"begin": 318,
											"end": 6184,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "5"
										},
										{
											"begin": 318,
											"end": 6184,
											"name": "JUMPI",
											"source": 6
										},
										{
											"begin": 318,
											"end": 6184,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 318,
											"end": 6184,
											"name": "PUSH",
											"source": 6,
											"value": "23B872DD"
										},
										{
											"begin": 318,
											"end": 6184,
											"name": "EQ",
											"source": 6
										},
										{
											"begin": 318,
											"end": 6184,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "6"
										},
										{
											"begin": 318,
											"end": 6184,
											"name": "JUMPI",
											"source": 6
										},
										{
											"begin": 318,
											"end": 6184,
											"name": "tag",
											"source": 6,
											"value": "2"
										},
										{
											"begin": 318,
											"end": 6184,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 318,
											"end": 6184,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 318,
											"end": 6184,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 318,
											"end": 6184,
											"name": "REVERT",
											"source": 6
										},
										{
											"begin": 1779,
											"end": 1868,
											"name": "tag",
											"source": 1,
											"value": "3"
										},
										{
											"begin": 1779,
											"end": 1868,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 1779,
											"end": 1868,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "22"
										},
										{
											"begin": 1779,
											"end": 1868,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "23"
										},
										{
											"begin": 1779,
											"end": 1868,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 1779,
											"end": 1868,
											"name": "tag",
											"source": 1,
											"value": "22"
										},
										{
											"begin": 1779,
											"end": 1868,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 1779,
											"end": 1868,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 1779,
											"end": 1868,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": 1779,
											"end": 1868,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "24"
										},
										{
											"begin": 1779,
											"end": 1868,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 1779,
											"end": 1868,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 1779,
											"end": 1868,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "25"
										},
										{
											"begin": 1779,
											"end": 1868,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 1779,
											"end": 1868,
											"name": "tag",
											"source": 1,
											"value": "24"
										},
										{
											"begin": 1779,
											"end": 1868,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 1779,
											"end": 1868,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 1779,
											"end": 1868,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": 1779,
											"end": 1868,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 1779,
											"end": 1868,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 1779,
											"end": 1868,
											"name": "SUB",
											"source": 1
										},
										{
											"begin": 1779,
											"end": 1868,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 1779,
											"end": 1868,
											"name": "RETURN",
											"source": 1
										},
										{
											"begin": 3998,
											"end": 4184,
											"name": "tag",
											"source": 1,
											"value": "4"
										},
										{
											"begin": 3998,
											"end": 4184,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 3998,
											"end": 4184,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "26"
										},
										{
											"begin": 3998,
											"end": 4184,
											"name": "PUSH",
											"source": 1,
											"value": "4"
										},
										{
											"begin": 3998,
											"end": 4184,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 3998,
											"end": 4184,
											"name": "CALLDATASIZE",
											"source": 1
										},
										{
											"begin": 3998,
											"end": 4184,
											"name": "SUB",
											"source": 1
										},
										{
											"begin": 3998,
											"end": 4184,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 3998,
											"end": 4184,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 3998,
											"end": 4184,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 3998,
											"end": 4184,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "27"
										},
										{
											"begin": 3998,
											"end": 4184,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 3998,
											"end": 4184,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 3998,
											"end": 4184,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "28"
										},
										{
											"begin": 3998,
											"end": 4184,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 3998,
											"end": 4184,
											"name": "tag",
											"source": 1,
											"value": "27"
										},
										{
											"begin": 3998,
											"end": 4184,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 3998,
											"end": 4184,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "29"
										},
										{
											"begin": 3998,
											"end": 4184,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 3998,
											"end": 4184,
											"name": "tag",
											"source": 1,
											"value": "26"
										},
										{
											"begin": 3998,
											"end": 4184,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 3998,
											"end": 4184,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 3998,
											"end": 4184,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": 3998,
											"end": 4184,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "30"
										},
										{
											"begin": 3998,
											"end": 4184,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 3998,
											"end": 4184,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 3998,
											"end": 4184,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "31"
										},
										{
											"begin": 3998,
											"end": 4184,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 3998,
											"end": 4184,
											"name": "tag",
											"source": 1,
											"value": "30"
										},
										{
											"begin": 3998,
											"end": 4184,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 3998,
											"end": 4184,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 3998,
											"end": 4184,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": 3998,
											"end": 4184,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 3998,
											"end": 4184,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 3998,
											"end": 4184,
											"name": "SUB",
											"source": 1
										},
										{
											"begin": 3998,
											"end": 4184,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 3998,
											"end": 4184,
											"name": "RETURN",
											"source": 1
										},
										{
											"begin": 2849,
											"end": 2946,
											"name": "tag",
											"source": 1,
											"value": "5"
										},
										{
											"begin": 2849,
											"end": 2946,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 2849,
											"end": 2946,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "32"
										},
										{
											"begin": 2849,
											"end": 2946,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "33"
										},
										{
											"begin": 2849,
											"end": 2946,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 2849,
											"end": 2946,
											"name": "tag",
											"source": 1,
											"value": "32"
										},
										{
											"begin": 2849,
											"end": 2946,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 2849,
											"end": 2946,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 2849,
											"end": 2946,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": 2849,
											"end": 2946,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "34"
										},
										{
											"begin": 2849,
											"end": 2946,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 2849,
											"end": 2946,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 2849,
											"end": 2946,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "35"
										},
										{
											"begin": 2849,
											"end": 2946,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 2849,
											"end": 2946,
											"name": "tag",
											"source": 1,
											"value": "34"
										},
										{
											"begin": 2849,
											"end": 2946,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 2849,
											"end": 2946,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 2849,
											"end": 2946,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": 2849,
											"end": 2946,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 2849,
											"end": 2946,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 2849,
											"end": 2946,
											"name": "SUB",
											"source": 1
										},
										{
											"begin": 2849,
											"end": 2946,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 2849,
											"end": 2946,
											"name": "RETURN",
											"source": 1
										},
										{
											"begin": 4776,
											"end": 5020,
											"name": "tag",
											"source": 1,
											"value": "6"
										},
										{
											"begin": 4776,
											"end": 5020,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 4776,
											"end": 5020,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "36"
										},
										{
											"begin": 4776,
											"end": 5020,
											"name": "PUSH",
											"source": 1,
											"value": "4"
										},
										{
											"begin": 4776,
											"end": 5020,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 4776,
											"end": 5020,
											"name": "CALLDATASIZE",
											"source": 1
										},
										{
											"begin": 4776,
											"end": 5020,
											"name": "SUB",
											"source": 1
										},
										{
											"begin": 4776,
											"end": 5020,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 4776,
											"end": 5020,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 4776,
											"end": 5020,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 4776,
											"end": 5020,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "37"
										},
										{
											"begin": 4776,
											"end": 5020,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 4776,
											"end": 5020,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 4776,
											"end": 5020,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "38"
										},
										{
											"begin": 4776,
											"end": 5020,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 4776,
											"end": 5020,
											"name": "tag",
											"source": 1,
											"value": "37"
										},
										{
											"begin": 4776,
											"end": 5020,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 4776,
											"end": 5020,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "39"
										},
										{
											"begin": 4776,
											"end": 5020,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 4776,
											"end": 5020,
											"name": "tag",
											"source": 1,
											"value": "36"
										},
										{
											"begin": 4776,
											"end": 5020,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 4776,
											"end": 5020,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 4776,
											"end": 5020,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": 4776,
											"end": 5020,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 4776,
											"end": 5020,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 4776,
											"end": 5020,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 4776,
											"end": 5020,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "31"
										},
										{
											"begin": 4776,
											"end": 5020,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 4776,
											"end": 5020,
											"name": "tag",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 4776,
											"end": 5020,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 4776,
											"end": 5020,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 4776,
											"end": 5020,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": 4776,
											"end": 5020,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 4776,
											"end": 5020,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 4776,
											"end": 5020,
											"name": "SUB",
											"source": 1
										},
										{
											"begin": 4776,
											"end": 5020,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 4776,
											"end": 5020,
											"name": "RETURN",
											"source": 1
										},
										{
											"begin": 2707,
											"end": 2789,
											"name": "tag",
											"source": 1,
											"value": "7"
										},
										{
											"begin": 2707,
											"end": 2789,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 2707,
											"end": 2789,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "41"
										},
										{
											"begin": 2707,
											"end": 2789,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "42"
										},
										{
											"begin": 2707,
											"end": 2789,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 2707,
											"end": 2789,
											"name": "tag",
											"source": 1,
											"value": "41"
										},
										{
											"begin": 2707,
											"end": 2789,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 2707,
											"end": 2789,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 2707,
											"end": 2789,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": 2707,
											"end": 2789,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "43"
										},
										{
											"begin": 2707,
											"end": 2789,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 2707,
											"end": 2789,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 2707,
											"end": 2789,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "44"
										},
										{
											"begin": 2707,
											"end": 2789,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 2707,
											"end": 2789,
											"name": "tag",
											"source": 1,
											"value": "43"
										},
										{
											"begin": 2707,
											"end": 2789,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 2707,
											"end": 2789,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 2707,
											"end": 2789,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": 2707,
											"end": 2789,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 2707,
											"end": 2789,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 2707,
											"end": 2789,
											"name": "SUB",
											"source": 1
										},
										{
											"begin": 2707,
											"end": 2789,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 2707,
											"end": 2789,
											"name": "RETURN",
											"source": 1
										},
										{
											"begin": 3047,
											"end": 3521,
											"name": "tag",
											"source": 6,
											"value": "8"
										},
										{
											"begin": 3047,
											"end": 3521,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 3047,
											"end": 3521,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "45"
										},
										{
											"begin": 3047,
											"end": 3521,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "46"
										},
										{
											"begin": 3047,
											"end": 3521,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 3047,
											"end": 3521,
											"name": "tag",
											"source": 6,
											"value": "45"
										},
										{
											"begin": 3047,
											"end": 3521,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 3047,
											"end": 3521,
											"name": "STOP",
											"source": 6
										},
										{
											"begin": 2526,
											"end": 2571,
											"name": "tag",
											"source": 6,
											"value": "9"
										},
										{
											"begin": 2526,
											"end": 2571,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 2526,
											"end": 2571,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "47"
										},
										{
											"begin": 2526,
											"end": 2571,
											"name": "PUSH",
											"source": 6,
											"value": "4"
										},
										{
											"begin": 2526,
											"end": 2571,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 2526,
											"end": 2571,
											"name": "CALLDATASIZE",
											"source": 6
										},
										{
											"begin": 2526,
											"end": 2571,
											"name": "SUB",
											"source": 6
										},
										{
											"begin": 2526,
											"end": 2571,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 2526,
											"end": 2571,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 2526,
											"end": 2571,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 2526,
											"end": 2571,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "48"
										},
										{
											"begin": 2526,
											"end": 2571,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 2526,
											"end": 2571,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 2526,
											"end": 2571,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "49"
										},
										{
											"begin": 2526,
											"end": 2571,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 2526,
											"end": 2571,
											"name": "tag",
											"source": 6,
											"value": "48"
										},
										{
											"begin": 2526,
											"end": 2571,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 2526,
											"end": 2571,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "50"
										},
										{
											"begin": 2526,
											"end": 2571,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 2526,
											"end": 2571,
											"name": "tag",
											"source": 6,
											"value": "47"
										},
										{
											"begin": 2526,
											"end": 2571,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 2526,
											"end": 2571,
											"name": "PUSH",
											"source": 6,
											"value": "40"
										},
										{
											"begin": 2526,
											"end": 2571,
											"name": "MLOAD",
											"source": 6
										},
										{
											"begin": 2526,
											"end": 2571,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "51"
										},
										{
											"begin": 2526,
											"end": 2571,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 2526,
											"end": 2571,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 2526,
											"end": 2571,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "31"
										},
										{
											"begin": 2526,
											"end": 2571,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 2526,
											"end": 2571,
											"name": "tag",
											"source": 6,
											"value": "51"
										},
										{
											"begin": 2526,
											"end": 2571,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 2526,
											"end": 2571,
											"name": "PUSH",
											"source": 6,
											"value": "40"
										},
										{
											"begin": 2526,
											"end": 2571,
											"name": "MLOAD",
											"source": 6
										},
										{
											"begin": 2526,
											"end": 2571,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 2526,
											"end": 2571,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 2526,
											"end": 2571,
											"name": "SUB",
											"source": 6
										},
										{
											"begin": 2526,
											"end": 2571,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 2526,
											"end": 2571,
											"name": "RETURN",
											"source": 6
										},
										{
											"begin": 3004,
											"end": 3120,
											"name": "tag",
											"source": 1,
											"value": "10"
										},
										{
											"begin": 3004,
											"end": 3120,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 3004,
											"end": 3120,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "52"
										},
										{
											"begin": 3004,
											"end": 3120,
											"name": "PUSH",
											"source": 1,
											"value": "4"
										},
										{
											"begin": 3004,
											"end": 3120,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 3004,
											"end": 3120,
											"name": "CALLDATASIZE",
											"source": 1
										},
										{
											"begin": 3004,
											"end": 3120,
											"name": "SUB",
											"source": 1
										},
										{
											"begin": 3004,
											"end": 3120,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 3004,
											"end": 3120,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 3004,
											"end": 3120,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 3004,
											"end": 3120,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "53"
										},
										{
											"begin": 3004,
											"end": 3120,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 3004,
											"end": 3120,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 3004,
											"end": 3120,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "49"
										},
										{
											"begin": 3004,
											"end": 3120,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 3004,
											"end": 3120,
											"name": "tag",
											"source": 1,
											"value": "53"
										},
										{
											"begin": 3004,
											"end": 3120,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 3004,
											"end": 3120,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "54"
										},
										{
											"begin": 3004,
											"end": 3120,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 3004,
											"end": 3120,
											"name": "tag",
											"source": 1,
											"value": "52"
										},
										{
											"begin": 3004,
											"end": 3120,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 3004,
											"end": 3120,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 3004,
											"end": 3120,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": 3004,
											"end": 3120,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "55"
										},
										{
											"begin": 3004,
											"end": 3120,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 3004,
											"end": 3120,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 3004,
											"end": 3120,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "35"
										},
										{
											"begin": 3004,
											"end": 3120,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 3004,
											"end": 3120,
											"name": "tag",
											"source": 1,
											"value": "55"
										},
										{
											"begin": 3004,
											"end": 3120,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 3004,
											"end": 3120,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 3004,
											"end": 3120,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": 3004,
											"end": 3120,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 3004,
											"end": 3120,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 3004,
											"end": 3120,
											"name": "SUB",
											"source": 1
										},
										{
											"begin": 3004,
											"end": 3120,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 3004,
											"end": 3120,
											"name": "RETURN",
											"source": 1
										},
										{
											"begin": 2646,
											"end": 2678,
											"name": "tag",
											"source": 6,
											"value": "11"
										},
										{
											"begin": 2646,
											"end": 2678,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 2646,
											"end": 2678,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "56"
										},
										{
											"begin": 2646,
											"end": 2678,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "57"
										},
										{
											"begin": 2646,
											"end": 2678,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 2646,
											"end": 2678,
											"name": "tag",
											"source": 6,
											"value": "56"
										},
										{
											"begin": 2646,
											"end": 2678,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 2646,
											"end": 2678,
											"name": "PUSH",
											"source": 6,
											"value": "40"
										},
										{
											"begin": 2646,
											"end": 2678,
											"name": "MLOAD",
											"source": 6
										},
										{
											"begin": 2646,
											"end": 2678,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "58"
										},
										{
											"begin": 2646,
											"end": 2678,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 2646,
											"end": 2678,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 2646,
											"end": 2678,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "35"
										},
										{
											"begin": 2646,
											"end": 2678,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 2646,
											"end": 2678,
											"name": "tag",
											"source": 6,
											"value": "58"
										},
										{
											"begin": 2646,
											"end": 2678,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 2646,
											"end": 2678,
											"name": "PUSH",
											"source": 6,
											"value": "40"
										},
										{
											"begin": 2646,
											"end": 2678,
											"name": "MLOAD",
											"source": 6
										},
										{
											"begin": 2646,
											"end": 2678,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 2646,
											"end": 2678,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 2646,
											"end": 2678,
											"name": "SUB",
											"source": 6
										},
										{
											"begin": 2646,
											"end": 2678,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 2646,
											"end": 2678,
											"name": "RETURN",
											"source": 6
										},
										{
											"begin": 3572,
											"end": 4184,
											"name": "tag",
											"source": 6,
											"value": "12"
										},
										{
											"begin": 3572,
											"end": 4184,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 3572,
											"end": 4184,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "59"
										},
										{
											"begin": 3572,
											"end": 4184,
											"name": "PUSH",
											"source": 6,
											"value": "4"
										},
										{
											"begin": 3572,
											"end": 4184,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 3572,
											"end": 4184,
											"name": "CALLDATASIZE",
											"source": 6
										},
										{
											"begin": 3572,
											"end": 4184,
											"name": "SUB",
											"source": 6
										},
										{
											"begin": 3572,
											"end": 4184,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 3572,
											"end": 4184,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 3572,
											"end": 4184,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 3572,
											"end": 4184,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "60"
										},
										{
											"begin": 3572,
											"end": 4184,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 3572,
											"end": 4184,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 3572,
											"end": 4184,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "61"
										},
										{
											"begin": 3572,
											"end": 4184,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 3572,
											"end": 4184,
											"name": "tag",
											"source": 6,
											"value": "60"
										},
										{
											"begin": 3572,
											"end": 4184,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 3572,
											"end": 4184,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "62"
										},
										{
											"begin": 3572,
											"end": 4184,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 3572,
											"end": 4184,
											"name": "tag",
											"source": 6,
											"value": "59"
										},
										{
											"begin": 3572,
											"end": 4184,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 3572,
											"end": 4184,
											"name": "PUSH",
											"source": 6,
											"value": "40"
										},
										{
											"begin": 3572,
											"end": 4184,
											"name": "MLOAD",
											"source": 6
										},
										{
											"begin": 3572,
											"end": 4184,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "63"
										},
										{
											"begin": 3572,
											"end": 4184,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 3572,
											"end": 4184,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 3572,
											"end": 4184,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "35"
										},
										{
											"begin": 3572,
											"end": 4184,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 3572,
											"end": 4184,
											"name": "tag",
											"source": 6,
											"value": "63"
										},
										{
											"begin": 3572,
											"end": 4184,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 3572,
											"end": 4184,
											"name": "PUSH",
											"source": 6,
											"value": "40"
										},
										{
											"begin": 3572,
											"end": 4184,
											"name": "MLOAD",
											"source": 6
										},
										{
											"begin": 3572,
											"end": 4184,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 3572,
											"end": 4184,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 3572,
											"end": 4184,
											"name": "SUB",
											"source": 6
										},
										{
											"begin": 3572,
											"end": 4184,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 3572,
											"end": 4184,
											"name": "RETURN",
											"source": 6
										},
										{
											"begin": 4923,
											"end": 6182,
											"name": "tag",
											"source": 6,
											"value": "13"
										},
										{
											"begin": 4923,
											"end": 6182,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 4923,
											"end": 6182,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "64"
										},
										{
											"begin": 4923,
											"end": 6182,
											"name": "PUSH",
											"source": 6,
											"value": "4"
										},
										{
											"begin": 4923,
											"end": 6182,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 4923,
											"end": 6182,
											"name": "CALLDATASIZE",
											"source": 6
										},
										{
											"begin": 4923,
											"end": 6182,
											"name": "SUB",
											"source": 6
										},
										{
											"begin": 4923,
											"end": 6182,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 4923,
											"end": 6182,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 4923,
											"end": 6182,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 4923,
											"end": 6182,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "65"
										},
										{
											"begin": 4923,
											"end": 6182,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 4923,
											"end": 6182,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 4923,
											"end": 6182,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "66"
										},
										{
											"begin": 4923,
											"end": 6182,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 4923,
											"end": 6182,
											"name": "tag",
											"source": 6,
											"value": "65"
										},
										{
											"begin": 4923,
											"end": 6182,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 4923,
											"end": 6182,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "67"
										},
										{
											"begin": 4923,
											"end": 6182,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 4923,
											"end": 6182,
											"name": "tag",
											"source": 6,
											"value": "64"
										},
										{
											"begin": 4923,
											"end": 6182,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 4923,
											"end": 6182,
											"name": "STOP",
											"source": 6
										},
										{
											"begin": 1981,
											"end": 2074,
											"name": "tag",
											"source": 1,
											"value": "14"
										},
										{
											"begin": 1981,
											"end": 2074,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 1981,
											"end": 2074,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "68"
										},
										{
											"begin": 1981,
											"end": 2074,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "69"
										},
										{
											"begin": 1981,
											"end": 2074,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 1981,
											"end": 2074,
											"name": "tag",
											"source": 1,
											"value": "68"
										},
										{
											"begin": 1981,
											"end": 2074,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 1981,
											"end": 2074,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 1981,
											"end": 2074,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": 1981,
											"end": 2074,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "70"
										},
										{
											"begin": 1981,
											"end": 2074,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 1981,
											"end": 2074,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 1981,
											"end": 2074,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "25"
										},
										{
											"begin": 1981,
											"end": 2074,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 1981,
											"end": 2074,
											"name": "tag",
											"source": 1,
											"value": "70"
										},
										{
											"begin": 1981,
											"end": 2074,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 1981,
											"end": 2074,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 1981,
											"end": 2074,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": 1981,
											"end": 2074,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 1981,
											"end": 2074,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 1981,
											"end": 2074,
											"name": "SUB",
											"source": 1
										},
										{
											"begin": 1981,
											"end": 2074,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 1981,
											"end": 2074,
											"name": "RETURN",
											"source": 1
										},
										{
											"begin": 4239,
											"end": 4868,
											"name": "tag",
											"source": 6,
											"value": "15"
										},
										{
											"begin": 4239,
											"end": 4868,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 4239,
											"end": 4868,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "71"
										},
										{
											"begin": 4239,
											"end": 4868,
											"name": "PUSH",
											"source": 6,
											"value": "4"
										},
										{
											"begin": 4239,
											"end": 4868,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 4239,
											"end": 4868,
											"name": "CALLDATASIZE",
											"source": 6
										},
										{
											"begin": 4239,
											"end": 4868,
											"name": "SUB",
											"source": 6
										},
										{
											"begin": 4239,
											"end": 4868,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 4239,
											"end": 4868,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 4239,
											"end": 4868,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 4239,
											"end": 4868,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "72"
										},
										{
											"begin": 4239,
											"end": 4868,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 4239,
											"end": 4868,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 4239,
											"end": 4868,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "73"
										},
										{
											"begin": 4239,
											"end": 4868,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 4239,
											"end": 4868,
											"name": "tag",
											"source": 6,
											"value": "72"
										},
										{
											"begin": 4239,
											"end": 4868,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 4239,
											"end": 4868,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "74"
										},
										{
											"begin": 4239,
											"end": 4868,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 4239,
											"end": 4868,
											"name": "tag",
											"source": 6,
											"value": "71"
										},
										{
											"begin": 4239,
											"end": 4868,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 4239,
											"end": 4868,
											"name": "PUSH",
											"source": 6,
											"value": "40"
										},
										{
											"begin": 4239,
											"end": 4868,
											"name": "MLOAD",
											"source": 6
										},
										{
											"begin": 4239,
											"end": 4868,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "75"
										},
										{
											"begin": 4239,
											"end": 4868,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 4239,
											"end": 4868,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 4239,
											"end": 4868,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "76"
										},
										{
											"begin": 4239,
											"end": 4868,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 4239,
											"end": 4868,
											"name": "tag",
											"source": 6,
											"value": "75"
										},
										{
											"begin": 4239,
											"end": 4868,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 4239,
											"end": 4868,
											"name": "PUSH",
											"source": 6,
											"value": "40"
										},
										{
											"begin": 4239,
											"end": 4868,
											"name": "MLOAD",
											"source": 6
										},
										{
											"begin": 4239,
											"end": 4868,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 4239,
											"end": 4868,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 4239,
											"end": 4868,
											"name": "SUB",
											"source": 6
										},
										{
											"begin": 4239,
											"end": 4868,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 4239,
											"end": 4868,
											"name": "RETURN",
											"source": 6
										},
										{
											"begin": 3315,
											"end": 3493,
											"name": "tag",
											"source": 1,
											"value": "16"
										},
										{
											"begin": 3315,
											"end": 3493,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 3315,
											"end": 3493,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "77"
										},
										{
											"begin": 3315,
											"end": 3493,
											"name": "PUSH",
											"source": 1,
											"value": "4"
										},
										{
											"begin": 3315,
											"end": 3493,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 3315,
											"end": 3493,
											"name": "CALLDATASIZE",
											"source": 1
										},
										{
											"begin": 3315,
											"end": 3493,
											"name": "SUB",
											"source": 1
										},
										{
											"begin": 3315,
											"end": 3493,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 3315,
											"end": 3493,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 3315,
											"end": 3493,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 3315,
											"end": 3493,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "78"
										},
										{
											"begin": 3315,
											"end": 3493,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 3315,
											"end": 3493,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 3315,
											"end": 3493,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "28"
										},
										{
											"begin": 3315,
											"end": 3493,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 3315,
											"end": 3493,
											"name": "tag",
											"source": 1,
											"value": "78"
										},
										{
											"begin": 3315,
											"end": 3493,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 3315,
											"end": 3493,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "79"
										},
										{
											"begin": 3315,
											"end": 3493,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 3315,
											"end": 3493,
											"name": "tag",
											"source": 1,
											"value": "77"
										},
										{
											"begin": 3315,
											"end": 3493,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 3315,
											"end": 3493,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 3315,
											"end": 3493,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": 3315,
											"end": 3493,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "80"
										},
										{
											"begin": 3315,
											"end": 3493,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 3315,
											"end": 3493,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 3315,
											"end": 3493,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "31"
										},
										{
											"begin": 3315,
											"end": 3493,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 3315,
											"end": 3493,
											"name": "tag",
											"source": 1,
											"value": "80"
										},
										{
											"begin": 3315,
											"end": 3493,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 3315,
											"end": 3493,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 3315,
											"end": 3493,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": 3315,
											"end": 3493,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 3315,
											"end": 3493,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 3315,
											"end": 3493,
											"name": "SUB",
											"source": 1
										},
										{
											"begin": 3315,
											"end": 3493,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 3315,
											"end": 3493,
											"name": "RETURN",
											"source": 1
										},
										{
											"begin": 2578,
											"end": 2612,
											"name": "tag",
											"source": 6,
											"value": "17"
										},
										{
											"begin": 2578,
											"end": 2612,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 2578,
											"end": 2612,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "81"
										},
										{
											"begin": 2578,
											"end": 2612,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "82"
										},
										{
											"begin": 2578,
											"end": 2612,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 2578,
											"end": 2612,
											"name": "tag",
											"source": 6,
											"value": "81"
										},
										{
											"begin": 2578,
											"end": 2612,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 2578,
											"end": 2612,
											"name": "PUSH",
											"source": 6,
											"value": "40"
										},
										{
											"begin": 2578,
											"end": 2612,
											"name": "MLOAD",
											"source": 6
										},
										{
											"begin": 2578,
											"end": 2612,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "83"
										},
										{
											"begin": 2578,
											"end": 2612,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 2578,
											"end": 2612,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 2578,
											"end": 2612,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "35"
										},
										{
											"begin": 2578,
											"end": 2612,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 2578,
											"end": 2612,
											"name": "tag",
											"source": 6,
											"value": "83"
										},
										{
											"begin": 2578,
											"end": 2612,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 2578,
											"end": 2612,
											"name": "PUSH",
											"source": 6,
											"value": "40"
										},
										{
											"begin": 2578,
											"end": 2612,
											"name": "MLOAD",
											"source": 6
										},
										{
											"begin": 2578,
											"end": 2612,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 2578,
											"end": 2612,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 2578,
											"end": 2612,
											"name": "SUB",
											"source": 6
										},
										{
											"begin": 2578,
											"end": 2612,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 2578,
											"end": 2612,
											"name": "RETURN",
											"source": 6
										},
										{
											"begin": 3551,
											"end": 3691,
											"name": "tag",
											"source": 1,
											"value": "18"
										},
										{
											"begin": 3551,
											"end": 3691,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 3551,
											"end": 3691,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "84"
										},
										{
											"begin": 3551,
											"end": 3691,
											"name": "PUSH",
											"source": 1,
											"value": "4"
										},
										{
											"begin": 3551,
											"end": 3691,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 3551,
											"end": 3691,
											"name": "CALLDATASIZE",
											"source": 1
										},
										{
											"begin": 3551,
											"end": 3691,
											"name": "SUB",
											"source": 1
										},
										{
											"begin": 3551,
											"end": 3691,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 3551,
											"end": 3691,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 3551,
											"end": 3691,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 3551,
											"end": 3691,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "85"
										},
										{
											"begin": 3551,
											"end": 3691,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 3551,
											"end": 3691,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 3551,
											"end": 3691,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "86"
										},
										{
											"begin": 3551,
											"end": 3691,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 3551,
											"end": 3691,
											"name": "tag",
											"source": 1,
											"value": "85"
										},
										{
											"begin": 3551,
											"end": 3691,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 3551,
											"end": 3691,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "87"
										},
										{
											"begin": 3551,
											"end": 3691,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 3551,
											"end": 3691,
											"name": "tag",
											"source": 1,
											"value": "84"
										},
										{
											"begin": 3551,
											"end": 3691,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 3551,
											"end": 3691,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 3551,
											"end": 3691,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": 3551,
											"end": 3691,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "88"
										},
										{
											"begin": 3551,
											"end": 3691,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 3551,
											"end": 3691,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 3551,
											"end": 3691,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "35"
										},
										{
											"begin": 3551,
											"end": 3691,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 3551,
											"end": 3691,
											"name": "tag",
											"source": 1,
											"value": "88"
										},
										{
											"begin": 3551,
											"end": 3691,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 3551,
											"end": 3691,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 3551,
											"end": 3691,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": 3551,
											"end": 3691,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 3551,
											"end": 3691,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 3551,
											"end": 3691,
											"name": "SUB",
											"source": 1
										},
										{
											"begin": 3551,
											"end": 3691,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 3551,
											"end": 3691,
											"name": "RETURN",
											"source": 1
										},
										{
											"begin": 1779,
											"end": 1868,
											"name": "tag",
											"source": 1,
											"value": "23"
										},
										{
											"begin": 1779,
											"end": 1868,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 1824,
											"end": 1837,
											"name": "PUSH",
											"source": 1,
											"value": "60"
										},
										{
											"begin": 1856,
											"end": 1861,
											"name": "PUSH",
											"source": 1,
											"value": "3"
										},
										{
											"begin": 1849,
											"end": 1861,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 1849,
											"end": 1861,
											"name": "SLOAD",
											"source": 1
										},
										{
											"begin": 1849,
											"end": 1861,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "90"
										},
										{
											"begin": 1849,
											"end": 1861,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 1849,
											"end": 1861,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "91"
										},
										{
											"begin": 1849,
											"end": 1861,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 1849,
											"end": 1861,
											"name": "tag",
											"source": 1,
											"value": "90"
										},
										{
											"begin": 1849,
											"end": 1861,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 1849,
											"end": 1861,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 1849,
											"end": 1861,
											"name": "PUSH",
											"source": 1,
											"value": "1F"
										},
										{
											"begin": 1849,
											"end": 1861,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 1849,
											"end": 1861,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 1849,
											"end": 1861,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 1849,
											"end": 1861,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 1849,
											"end": 1861,
											"name": "DIV",
											"source": 1
										},
										{
											"begin": 1849,
											"end": 1861,
											"name": "MUL",
											"source": 1
										},
										{
											"begin": 1849,
											"end": 1861,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 1849,
											"end": 1861,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 1849,
											"end": 1861,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 1849,
											"end": 1861,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": 1849,
											"end": 1861,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 1849,
											"end": 1861,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 1849,
											"end": 1861,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 1849,
											"end": 1861,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 1849,
											"end": 1861,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 1849,
											"end": 1861,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 1849,
											"end": 1861,
											"name": "SWAP3",
											"source": 1
										},
										{
											"begin": 1849,
											"end": 1861,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 1849,
											"end": 1861,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 1849,
											"end": 1861,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 1849,
											"end": 1861,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 1849,
											"end": 1861,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 1849,
											"end": 1861,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 1849,
											"end": 1861,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 1849,
											"end": 1861,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 1849,
											"end": 1861,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 1849,
											"end": 1861,
											"name": "SLOAD",
											"source": 1
										},
										{
											"begin": 1849,
											"end": 1861,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "92"
										},
										{
											"begin": 1849,
											"end": 1861,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 1849,
											"end": 1861,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "91"
										},
										{
											"begin": 1849,
											"end": 1861,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 1849,
											"end": 1861,
											"name": "tag",
											"source": 1,
											"value": "92"
										},
										{
											"begin": 1849,
											"end": 1861,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 1849,
											"end": 1861,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 1849,
											"end": 1861,
											"name": "ISZERO",
											"source": 1
										},
										{
											"begin": 1849,
											"end": 1861,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "93"
										},
										{
											"begin": 1849,
											"end": 1861,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 1849,
											"end": 1861,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 1849,
											"end": 1861,
											"name": "PUSH",
											"source": 1,
											"value": "1F"
										},
										{
											"begin": 1849,
											"end": 1861,
											"name": "LT",
											"source": 1
										},
										{
											"begin": 1849,
											"end": 1861,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "94"
										},
										{
											"begin": 1849,
											"end": 1861,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 1849,
											"end": 1861,
											"name": "PUSH",
											"source": 1,
											"value": "100"
										},
										{
											"begin": 1849,
											"end": 1861,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 1849,
											"end": 1861,
											"name": "DUP4",
											"source": 1
										},
										{
											"begin": 1849,
											"end": 1861,
											"name": "SLOAD",
											"source": 1
										},
										{
											"begin": 1849,
											"end": 1861,
											"name": "DIV",
											"source": 1
										},
										{
											"begin": 1849,
											"end": 1861,
											"name": "MUL",
											"source": 1
										},
										{
											"begin": 1849,
											"end": 1861,
											"name": "DUP4",
											"source": 1
										},
										{
											"begin": 1849,
											"end": 1861,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 1849,
											"end": 1861,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 1849,
											"end": 1861,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 1849,
											"end": 1861,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 1849,
											"end": 1861,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 1849,
											"end": 1861,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "93"
										},
										{
											"begin": 1849,
											"end": 1861,
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 1849,
											"end": 1861,
											"name": "tag",
											"source": 1,
											"value": "94"
										},
										{
											"begin": 1849,
											"end": 1861,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 1849,
											"end": 1861,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 1849,
											"end": 1861,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 1849,
											"end": 1861,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 1849,
											"end": 1861,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 1849,
											"end": 1861,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 1849,
											"end": 1861,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 1849,
											"end": 1861,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 1849,
											"end": 1861,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 1849,
											"end": 1861,
											"name": "KECCAK256",
											"source": 1
										},
										{
											"begin": 1849,
											"end": 1861,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 1849,
											"end": 1861,
											"name": "tag",
											"source": 1,
											"value": "95"
										},
										{
											"begin": 1849,
											"end": 1861,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 1849,
											"end": 1861,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 1849,
											"end": 1861,
											"name": "SLOAD",
											"source": 1
										},
										{
											"begin": 1849,
											"end": 1861,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 1849,
											"end": 1861,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 1849,
											"end": 1861,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 1849,
											"end": 1861,
											"name": "PUSH",
											"source": 1,
											"value": "1"
										},
										{
											"begin": 1849,
											"end": 1861,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 1849,
											"end": 1861,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 1849,
											"end": 1861,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 1849,
											"end": 1861,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 1849,
											"end": 1861,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 1849,
											"end": 1861,
											"name": "DUP4",
											"source": 1
										},
										{
											"begin": 1849,
											"end": 1861,
											"name": "GT",
											"source": 1
										},
										{
											"begin": 1849,
											"end": 1861,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "95"
										},
										{
											"begin": 1849,
											"end": 1861,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 1849,
											"end": 1861,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 1849,
											"end": 1861,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 1849,
											"end": 1861,
											"name": "SUB",
											"source": 1
										},
										{
											"begin": 1849,
											"end": 1861,
											"name": "PUSH",
											"source": 1,
											"value": "1F"
										},
										{
											"begin": 1849,
											"end": 1861,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 1849,
											"end": 1861,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 1849,
											"end": 1861,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 1849,
											"end": 1861,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 1849,
											"end": 1861,
											"name": "tag",
											"source": 1,
											"value": "93"
										},
										{
											"begin": 1849,
											"end": 1861,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 1849,
											"end": 1861,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 1849,
											"end": 1861,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 1849,
											"end": 1861,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 1849,
											"end": 1861,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 1849,
											"end": 1861,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 1849,
											"end": 1861,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 1849,
											"end": 1861,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 1779,
											"end": 1868,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 1779,
											"end": 1868,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 3998,
											"end": 4184,
											"name": "tag",
											"source": 1,
											"value": "29"
										},
										{
											"begin": 3998,
											"end": 4184,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 4071,
											"end": 4075,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 4087,
											"end": 4100,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 4103,
											"end": 4115,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "97"
										},
										{
											"begin": 4103,
											"end": 4113,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "98"
										},
										{
											"begin": 4103,
											"end": 4115,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 4103,
											"end": 4115,
											"name": "tag",
											"source": 1,
											"value": "97"
										},
										{
											"begin": 4103,
											"end": 4115,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 4087,
											"end": 4115,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 4087,
											"end": 4115,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 4125,
											"end": 4156,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "99"
										},
										{
											"begin": 4134,
											"end": 4139,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 4141,
											"end": 4148,
											"name": "DUP6",
											"source": 1
										},
										{
											"begin": 4150,
											"end": 4155,
											"name": "DUP6",
											"source": 1
										},
										{
											"begin": 4125,
											"end": 4133,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "100"
										},
										{
											"begin": 4125,
											"end": 4156,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 4125,
											"end": 4156,
											"name": "tag",
											"source": 1,
											"value": "99"
										},
										{
											"begin": 4125,
											"end": 4156,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 4173,
											"end": 4177,
											"name": "PUSH",
											"source": 1,
											"value": "1"
										},
										{
											"begin": 4166,
											"end": 4177,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 4166,
											"end": 4177,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 4166,
											"end": 4177,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 3998,
											"end": 4184,
											"name": "SWAP3",
											"source": 1
										},
										{
											"begin": 3998,
											"end": 4184,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 3998,
											"end": 4184,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 3998,
											"end": 4184,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 3998,
											"end": 4184,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 2849,
											"end": 2946,
											"name": "tag",
											"source": 1,
											"value": "33"
										},
										{
											"begin": 2849,
											"end": 2946,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 2901,
											"end": 2908,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 2927,
											"end": 2939,
											"name": "PUSH",
											"source": 1,
											"value": "2"
										},
										{
											"begin": 2927,
											"end": 2939,
											"name": "SLOAD",
											"source": 1
										},
										{
											"begin": 2920,
											"end": 2939,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 2920,
											"end": 2939,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 2849,
											"end": 2946,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 2849,
											"end": 2946,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 4776,
											"end": 5020,
											"name": "tag",
											"source": 1,
											"value": "39"
										},
										{
											"begin": 4776,
											"end": 5020,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 4863,
											"end": 4867,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 4879,
											"end": 4894,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 4897,
											"end": 4909,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "103"
										},
										{
											"begin": 4897,
											"end": 4907,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "98"
										},
										{
											"begin": 4897,
											"end": 4909,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 4897,
											"end": 4909,
											"name": "tag",
											"source": 1,
											"value": "103"
										},
										{
											"begin": 4897,
											"end": 4909,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 4879,
											"end": 4909,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 4879,
											"end": 4909,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 4919,
											"end": 4956,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "104"
										},
										{
											"begin": 4935,
											"end": 4939,
											"name": "DUP6",
											"source": 1
										},
										{
											"begin": 4941,
											"end": 4948,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 4950,
											"end": 4955,
											"name": "DUP6",
											"source": 1
										},
										{
											"begin": 4919,
											"end": 4934,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "105"
										},
										{
											"begin": 4919,
											"end": 4956,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 4919,
											"end": 4956,
											"name": "tag",
											"source": 1,
											"value": "104"
										},
										{
											"begin": 4919,
											"end": 4956,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 4966,
											"end": 4992,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "106"
										},
										{
											"begin": 4976,
											"end": 4980,
											"name": "DUP6",
											"source": 1
										},
										{
											"begin": 4982,
											"end": 4984,
											"name": "DUP6",
											"source": 1
										},
										{
											"begin": 4986,
											"end": 4991,
											"name": "DUP6",
											"source": 1
										},
										{
											"begin": 4966,
											"end": 4975,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "107"
										},
										{
											"begin": 4966,
											"end": 4992,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 4966,
											"end": 4992,
											"name": "tag",
											"source": 1,
											"value": "106"
										},
										{
											"begin": 4966,
											"end": 4992,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 5009,
											"end": 5013,
											"name": "PUSH",
											"source": 1,
											"value": "1"
										},
										{
											"begin": 5002,
											"end": 5013,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 5002,
											"end": 5013,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 5002,
											"end": 5013,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 4776,
											"end": 5020,
											"name": "SWAP4",
											"source": 1
										},
										{
											"begin": 4776,
											"end": 5020,
											"name": "SWAP3",
											"source": 1
										},
										{
											"begin": 4776,
											"end": 5020,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 4776,
											"end": 5020,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 4776,
											"end": 5020,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 4776,
											"end": 5020,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 2707,
											"end": 2789,
											"name": "tag",
											"source": 1,
											"value": "42"
										},
										{
											"begin": 2707,
											"end": 2789,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 2756,
											"end": 2761,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 2780,
											"end": 2782,
											"name": "PUSH",
											"source": 1,
											"value": "12"
										},
										{
											"begin": 2773,
											"end": 2782,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 2773,
											"end": 2782,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 2707,
											"end": 2789,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 2707,
											"end": 2789,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 3047,
											"end": 3521,
											"name": "tag",
											"source": 6,
											"value": "46"
										},
										{
											"begin": 3047,
											"end": 3521,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 3164,
											"end": 3173,
											"name": "PUSH",
											"source": 6,
											"value": "8"
										},
										{
											"begin": 3164,
											"end": 3173,
											"name": "SLOAD",
											"source": 6
										},
										{
											"begin": 3150,
											"end": 3161,
											"name": "PUSH",
											"source": 6,
											"value": "9"
										},
										{
											"begin": 3150,
											"end": 3161,
											"name": "SLOAD",
											"source": 6
										},
										{
											"begin": 3134,
											"end": 3147,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "110"
										},
										{
											"begin": 3134,
											"end": 3145,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "33"
										},
										{
											"begin": 3134,
											"end": 3147,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 3134,
											"end": 3147,
											"name": "tag",
											"source": 6,
											"value": "110"
										},
										{
											"begin": 3134,
											"end": 3147,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 3134,
											"end": 3161,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "111"
										},
										{
											"begin": 3134,
											"end": 3161,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 3134,
											"end": 3161,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 3134,
											"end": 3161,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "112"
										},
										{
											"begin": 3134,
											"end": 3161,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 3134,
											"end": 3161,
											"name": "tag",
											"source": 6,
											"value": "111"
										},
										{
											"begin": 3134,
											"end": 3161,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 3134,
											"end": 3173,
											"name": "GT",
											"source": 6
										},
										{
											"begin": 3130,
											"end": 3225,
											"name": "ISZERO",
											"source": 6
										},
										{
											"begin": 3130,
											"end": 3225,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "113"
										},
										{
											"begin": 3130,
											"end": 3225,
											"name": "JUMPI",
											"source": 6
										},
										{
											"begin": 3196,
											"end": 3214,
											"name": "PUSH",
											"source": 6,
											"value": "40"
										},
										{
											"begin": 3196,
											"end": 3214,
											"name": "MLOAD",
											"source": 6
										},
										{
											"begin": 3196,
											"end": 3214,
											"name": "PUSH",
											"source": 6,
											"value": "CBE2483100000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 3196,
											"end": 3214,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 3196,
											"end": 3214,
											"name": "MSTORE",
											"source": 6
										},
										{
											"begin": 3196,
											"end": 3214,
											"name": "PUSH",
											"source": 6,
											"value": "4"
										},
										{
											"begin": 3196,
											"end": 3214,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 3196,
											"end": 3214,
											"name": "PUSH",
											"source": 6,
											"value": "40"
										},
										{
											"begin": 3196,
											"end": 3214,
											"name": "MLOAD",
											"source": 6
										},
										{
											"begin": 3196,
											"end": 3214,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 3196,
											"end": 3214,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 3196,
											"end": 3214,
											"name": "SUB",
											"source": 6
										},
										{
											"begin": 3196,
											"end": 3214,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 3196,
											"end": 3214,
											"name": "REVERT",
											"source": 6
										},
										{
											"begin": 3130,
											"end": 3225,
											"name": "tag",
											"source": 6,
											"value": "113"
										},
										{
											"begin": 3130,
											"end": 3225,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 3296,
											"end": 3309,
											"name": "PUSH",
											"source": 6,
											"value": "7"
										},
										{
											"begin": 3296,
											"end": 3321,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 3310,
											"end": 3320,
											"name": "CALLER",
											"source": 6
										},
										{
											"begin": 3296,
											"end": 3321,
											"name": "PUSH",
											"source": 6,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 3296,
											"end": 3321,
											"name": "AND",
											"source": 6
										},
										{
											"begin": 3296,
											"end": 3321,
											"name": "PUSH",
											"source": 6,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 3296,
											"end": 3321,
											"name": "AND",
											"source": 6
										},
										{
											"begin": 3296,
											"end": 3321,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 3296,
											"end": 3321,
											"name": "MSTORE",
											"source": 6
										},
										{
											"begin": 3296,
											"end": 3321,
											"name": "PUSH",
											"source": 6,
											"value": "20"
										},
										{
											"begin": 3296,
											"end": 3321,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 3296,
											"end": 3321,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 3296,
											"end": 3321,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 3296,
											"end": 3321,
											"name": "MSTORE",
											"source": 6
										},
										{
											"begin": 3296,
											"end": 3321,
											"name": "PUSH",
											"source": 6,
											"value": "20"
										},
										{
											"begin": 3296,
											"end": 3321,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 3296,
											"end": 3321,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 3296,
											"end": 3321,
											"name": "KECCAK256",
											"source": 6
										},
										{
											"begin": 3296,
											"end": 3321,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 3296,
											"end": 3321,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 3296,
											"end": 3321,
											"name": "SLOAD",
											"source": 6
										},
										{
											"begin": 3296,
											"end": 3321,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 3296,
											"end": 3321,
											"name": "PUSH",
											"source": 6,
											"value": "100"
										},
										{
											"begin": 3296,
											"end": 3321,
											"name": "EXP",
											"source": 6
										},
										{
											"begin": 3296,
											"end": 3321,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 3296,
											"end": 3321,
											"name": "DIV",
											"source": 6
										},
										{
											"begin": 3296,
											"end": 3321,
											"name": "PUSH",
											"source": 6,
											"value": "FF"
										},
										{
											"begin": 3296,
											"end": 3321,
											"name": "AND",
											"source": 6
										},
										{
											"begin": 3292,
											"end": 3370,
											"name": "ISZERO",
											"source": 6
										},
										{
											"begin": 3292,
											"end": 3370,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "114"
										},
										{
											"begin": 3292,
											"end": 3370,
											"name": "JUMPI",
											"source": 6
										},
										{
											"begin": 3344,
											"end": 3359,
											"name": "PUSH",
											"source": 6,
											"value": "40"
										},
										{
											"begin": 3344,
											"end": 3359,
											"name": "MLOAD",
											"source": 6
										},
										{
											"begin": 3344,
											"end": 3359,
											"name": "PUSH",
											"source": 6,
											"value": "B1327A600000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 3344,
											"end": 3359,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 3344,
											"end": 3359,
											"name": "MSTORE",
											"source": 6
										},
										{
											"begin": 3344,
											"end": 3359,
											"name": "PUSH",
											"source": 6,
											"value": "4"
										},
										{
											"begin": 3344,
											"end": 3359,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 3344,
											"end": 3359,
											"name": "PUSH",
											"source": 6,
											"value": "40"
										},
										{
											"begin": 3344,
											"end": 3359,
											"name": "MLOAD",
											"source": 6
										},
										{
											"begin": 3344,
											"end": 3359,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 3344,
											"end": 3359,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 3344,
											"end": 3359,
											"name": "SUB",
											"source": 6
										},
										{
											"begin": 3344,
											"end": 3359,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 3344,
											"end": 3359,
											"name": "REVERT",
											"source": 6
										},
										{
											"begin": 3292,
											"end": 3370,
											"name": "tag",
											"source": 6,
											"value": "114"
										},
										{
											"begin": 3292,
											"end": 3370,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 3416,
											"end": 3446,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "115"
										},
										{
											"begin": 3422,
											"end": 3432,
											"name": "CALLER",
											"source": 6
										},
										{
											"begin": 3434,
											"end": 3445,
											"name": "PUSH",
											"source": 6,
											"value": "9"
										},
										{
											"begin": 3434,
											"end": 3445,
											"name": "SLOAD",
											"source": 6
										},
										{
											"begin": 3416,
											"end": 3421,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "116"
										},
										{
											"begin": 3416,
											"end": 3446,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 3416,
											"end": 3446,
											"name": "tag",
											"source": 6,
											"value": "115"
										},
										{
											"begin": 3416,
											"end": 3446,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 3484,
											"end": 3488,
											"name": "PUSH",
											"source": 6,
											"value": "1"
										},
										{
											"begin": 3456,
											"end": 3469,
											"name": "PUSH",
											"source": 6,
											"value": "7"
										},
										{
											"begin": 3456,
											"end": 3481,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 3470,
											"end": 3480,
											"name": "CALLER",
											"source": 6
										},
										{
											"begin": 3456,
											"end": 3481,
											"name": "PUSH",
											"source": 6,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 3456,
											"end": 3481,
											"name": "AND",
											"source": 6
										},
										{
											"begin": 3456,
											"end": 3481,
											"name": "PUSH",
											"source": 6,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 3456,
											"end": 3481,
											"name": "AND",
											"source": 6
										},
										{
											"begin": 3456,
											"end": 3481,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 3456,
											"end": 3481,
											"name": "MSTORE",
											"source": 6
										},
										{
											"begin": 3456,
											"end": 3481,
											"name": "PUSH",
											"source": 6,
											"value": "20"
										},
										{
											"begin": 3456,
											"end": 3481,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 3456,
											"end": 3481,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 3456,
											"end": 3481,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 3456,
											"end": 3481,
											"name": "MSTORE",
											"source": 6
										},
										{
											"begin": 3456,
											"end": 3481,
											"name": "PUSH",
											"source": 6,
											"value": "20"
										},
										{
											"begin": 3456,
											"end": 3481,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 3456,
											"end": 3481,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 3456,
											"end": 3481,
											"name": "KECCAK256",
											"source": 6
										},
										{
											"begin": 3456,
											"end": 3481,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 3456,
											"end": 3488,
											"name": "PUSH",
											"source": 6,
											"value": "100"
										},
										{
											"begin": 3456,
											"end": 3488,
											"name": "EXP",
											"source": 6
										},
										{
											"begin": 3456,
											"end": 3488,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 3456,
											"end": 3488,
											"name": "SLOAD",
											"source": 6
										},
										{
											"begin": 3456,
											"end": 3488,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 3456,
											"end": 3488,
											"name": "PUSH",
											"source": 6,
											"value": "FF"
										},
										{
											"begin": 3456,
											"end": 3488,
											"name": "MUL",
											"source": 6
										},
										{
											"begin": 3456,
											"end": 3488,
											"name": "NOT",
											"source": 6
										},
										{
											"begin": 3456,
											"end": 3488,
											"name": "AND",
											"source": 6
										},
										{
											"begin": 3456,
											"end": 3488,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 3456,
											"end": 3488,
											"name": "DUP4",
											"source": 6
										},
										{
											"begin": 3456,
											"end": 3488,
											"name": "ISZERO",
											"source": 6
										},
										{
											"begin": 3456,
											"end": 3488,
											"name": "ISZERO",
											"source": 6
										},
										{
											"begin": 3456,
											"end": 3488,
											"name": "MUL",
											"source": 6
										},
										{
											"begin": 3456,
											"end": 3488,
											"name": "OR",
											"source": 6
										},
										{
											"begin": 3456,
											"end": 3488,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 3456,
											"end": 3488,
											"name": "SSTORE",
											"source": 6
										},
										{
											"begin": 3456,
											"end": 3488,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 3047,
											"end": 3521,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 2526,
											"end": 2571,
											"name": "tag",
											"source": 6,
											"value": "50"
										},
										{
											"begin": 2526,
											"end": 2571,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 2526,
											"end": 2571,
											"name": "PUSH",
											"source": 6,
											"value": "7"
										},
										{
											"begin": 2526,
											"end": 2571,
											"name": "PUSH",
											"source": 6,
											"value": "20"
										},
										{
											"begin": 2526,
											"end": 2571,
											"name": "MSTORE",
											"source": 6
										},
										{
											"begin": 2526,
											"end": 2571,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 2526,
											"end": 2571,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 2526,
											"end": 2571,
											"name": "MSTORE",
											"source": 6
										},
										{
											"begin": 2526,
											"end": 2571,
											"name": "PUSH",
											"source": 6,
											"value": "40"
										},
										{
											"begin": 2526,
											"end": 2571,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 2526,
											"end": 2571,
											"name": "KECCAK256",
											"source": 6
										},
										{
											"begin": 2526,
											"end": 2571,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 2526,
											"end": 2571,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 2526,
											"end": 2571,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 2526,
											"end": 2571,
											"name": "SLOAD",
											"source": 6
										},
										{
											"begin": 2526,
											"end": 2571,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 2526,
											"end": 2571,
											"name": "PUSH",
											"source": 6,
											"value": "100"
										},
										{
											"begin": 2526,
											"end": 2571,
											"name": "EXP",
											"source": 6
										},
										{
											"begin": 2526,
											"end": 2571,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 2526,
											"end": 2571,
											"name": "DIV",
											"source": 6
										},
										{
											"begin": 2526,
											"end": 2571,
											"name": "PUSH",
											"source": 6,
											"value": "FF"
										},
										{
											"begin": 2526,
											"end": 2571,
											"name": "AND",
											"source": 6
										},
										{
											"begin": 2526,
											"end": 2571,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 2526,
											"end": 2571,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 3004,
											"end": 3120,
											"name": "tag",
											"source": 1,
											"value": "54"
										},
										{
											"begin": 3004,
											"end": 3120,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 3069,
											"end": 3076,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 3095,
											"end": 3104,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 3095,
											"end": 3113,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 3105,
											"end": 3112,
											"name": "DUP4",
											"source": 1
										},
										{
											"begin": 3095,
											"end": 3113,
											"name": "PUSH",
											"source": 1,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 3095,
											"end": 3113,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 3095,
											"end": 3113,
											"name": "PUSH",
											"source": 1,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 3095,
											"end": 3113,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 3095,
											"end": 3113,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 3095,
											"end": 3113,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 3095,
											"end": 3113,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 3095,
											"end": 3113,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 3095,
											"end": 3113,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 3095,
											"end": 3113,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 3095,
											"end": 3113,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 3095,
											"end": 3113,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 3095,
											"end": 3113,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 3095,
											"end": 3113,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 3095,
											"end": 3113,
											"name": "KECCAK256",
											"source": 1
										},
										{
											"begin": 3095,
											"end": 3113,
											"name": "SLOAD",
											"source": 1
										},
										{
											"begin": 3088,
											"end": 3113,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 3088,
											"end": 3113,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 3004,
											"end": 3120,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 3004,
											"end": 3120,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 3004,
											"end": 3120,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 3004,
											"end": 3120,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 2646,
											"end": 2678,
											"name": "tag",
											"source": 6,
											"value": "57"
										},
										{
											"begin": 2646,
											"end": 2678,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 2646,
											"end": 2678,
											"name": "PUSH",
											"source": 6,
											"value": "9"
										},
										{
											"begin": 2646,
											"end": 2678,
											"name": "SLOAD",
											"source": 6
										},
										{
											"begin": 2646,
											"end": 2678,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 2646,
											"end": 2678,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 3572,
											"end": 4184,
											"name": "tag",
											"source": 6,
											"value": "62"
										},
										{
											"begin": 3572,
											"end": 4184,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 3672,
											"end": 3679,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 3772,
											"end": 3773,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 3747,
											"end": 3768,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "119"
										},
										{
											"begin": 3757,
											"end": 3767,
											"name": "CALLER",
											"source": 6
										},
										{
											"begin": 3747,
											"end": 3756,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "54"
										},
										{
											"begin": 3747,
											"end": 3768,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 3747,
											"end": 3768,
											"name": "tag",
											"source": 6,
											"value": "119"
										},
										{
											"begin": 3747,
											"end": 3768,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 3747,
											"end": 3773,
											"name": "SUB",
											"source": 6
										},
										{
											"begin": 3743,
											"end": 3821,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "120"
										},
										{
											"begin": 3743,
											"end": 3821,
											"name": "JUMPI",
											"source": 6
										},
										{
											"begin": 3796,
											"end": 3810,
											"name": "PUSH",
											"source": 6,
											"value": "40"
										},
										{
											"begin": 3796,
											"end": 3810,
											"name": "MLOAD",
											"source": 6
										},
										{
											"begin": 3796,
											"end": 3810,
											"name": "PUSH",
											"source": 6,
											"value": "8439960D00000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 3796,
											"end": 3810,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 3796,
											"end": 3810,
											"name": "MSTORE",
											"source": 6
										},
										{
											"begin": 3796,
											"end": 3810,
											"name": "PUSH",
											"source": 6,
											"value": "4"
										},
										{
											"begin": 3796,
											"end": 3810,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 3796,
											"end": 3810,
											"name": "PUSH",
											"source": 6,
											"value": "40"
										},
										{
											"begin": 3796,
											"end": 3810,
											"name": "MLOAD",
											"source": 6
										},
										{
											"begin": 3796,
											"end": 3810,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 3796,
											"end": 3810,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 3796,
											"end": 3810,
											"name": "SUB",
											"source": 6
										},
										{
											"begin": 3796,
											"end": 3810,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 3796,
											"end": 3810,
											"name": "REVERT",
											"source": 6
										},
										{
											"begin": 3743,
											"end": 3821,
											"name": "tag",
											"source": 6,
											"value": "120"
										},
										{
											"begin": 3743,
											"end": 3821,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 3913,
											"end": 3926,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "121"
										},
										{
											"begin": 3913,
											"end": 3924,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "33"
										},
										{
											"begin": 3913,
											"end": 3926,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 3913,
											"end": 3926,
											"name": "tag",
											"source": 6,
											"value": "121"
										},
										{
											"begin": 3913,
											"end": 3926,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 3903,
											"end": 3910,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 3903,
											"end": 3926,
											"name": "GT",
											"source": 6
										},
										{
											"begin": 3899,
											"end": 3975,
											"name": "ISZERO",
											"source": 6
										},
										{
											"begin": 3899,
											"end": 3975,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "122"
										},
										{
											"begin": 3899,
											"end": 3975,
											"name": "JUMPI",
											"source": 6
										},
										{
											"begin": 3949,
											"end": 3964,
											"name": "PUSH",
											"source": 6,
											"value": "40"
										},
										{
											"begin": 3949,
											"end": 3964,
											"name": "MLOAD",
											"source": 6
										},
										{
											"begin": 3949,
											"end": 3964,
											"name": "PUSH",
											"source": 6,
											"value": "D92730000000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 3949,
											"end": 3964,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 3949,
											"end": 3964,
											"name": "MSTORE",
											"source": 6
										},
										{
											"begin": 3949,
											"end": 3964,
											"name": "PUSH",
											"source": 6,
											"value": "4"
										},
										{
											"begin": 3949,
											"end": 3964,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 3949,
											"end": 3964,
											"name": "PUSH",
											"source": 6,
											"value": "40"
										},
										{
											"begin": 3949,
											"end": 3964,
											"name": "MLOAD",
											"source": 6
										},
										{
											"begin": 3949,
											"end": 3964,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 3949,
											"end": 3964,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 3949,
											"end": 3964,
											"name": "SUB",
											"source": 6
										},
										{
											"begin": 3949,
											"end": 3964,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 3949,
											"end": 3964,
											"name": "REVERT",
											"source": 6
										},
										{
											"begin": 3899,
											"end": 3975,
											"name": "tag",
											"source": 6,
											"value": "122"
										},
										{
											"begin": 3899,
											"end": 3975,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 4035,
											"end": 4055,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 4058,
											"end": 4064,
											"name": "PUSH",
											"source": 6,
											"value": "6"
										},
										{
											"begin": 4058,
											"end": 4071,
											"name": "PUSH",
											"source": 6,
											"value": "1"
										},
										{
											"begin": 4058,
											"end": 4071,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 4058,
											"end": 4071,
											"name": "PUSH",
											"source": 6,
											"value": "1"
										},
										{
											"begin": 4058,
											"end": 4071,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 4058,
											"end": 4071,
											"name": "SLOAD",
											"source": 6
										},
										{
											"begin": 4058,
											"end": 4071,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 4058,
											"end": 4071,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 4058,
											"end": 4071,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 4058,
											"end": 4071,
											"name": "SSTORE",
											"source": 6
										},
										{
											"begin": 4058,
											"end": 4071,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 4058,
											"end": 4071,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 4058,
											"end": 4071,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 4058,
											"end": 4071,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 4058,
											"end": 4071,
											"name": "SUB",
											"source": 6
										},
										{
											"begin": 4058,
											"end": 4071,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 4058,
											"end": 4071,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 4058,
											"end": 4071,
											"name": "MSTORE",
											"source": 6
										},
										{
											"begin": 4058,
											"end": 4071,
											"name": "PUSH",
											"source": 6,
											"value": "20"
										},
										{
											"begin": 4058,
											"end": 4071,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 4058,
											"end": 4071,
											"name": "KECCAK256",
											"source": 6
										},
										{
											"begin": 4058,
											"end": 4071,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 4058,
											"end": 4071,
											"name": "PUSH",
											"source": 6,
											"value": "9"
										},
										{
											"begin": 4058,
											"end": 4071,
											"name": "MUL",
											"source": 6
										},
										{
											"begin": 4058,
											"end": 4071,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 4035,
											"end": 4071,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 4035,
											"end": 4071,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 4100,
											"end": 4110,
											"name": "DUP5",
											"source": 6
										},
										{
											"begin": 4100,
											"end": 4110,
											"name": "DUP5",
											"source": 6
										},
										{
											"begin": 4081,
											"end": 4087,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 4081,
											"end": 4097,
											"name": "PUSH",
											"source": 6,
											"value": "2"
										},
										{
											"begin": 4081,
											"end": 4097,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 4081,
											"end": 4110,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 4081,
											"end": 4110,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 4081,
											"end": 4110,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "124"
										},
										{
											"begin": 4081,
											"end": 4110,
											"name": "SWAP3",
											"source": 6
										},
										{
											"begin": 4081,
											"end": 4110,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 4081,
											"end": 4110,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 4081,
											"end": 4110,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "125"
										},
										{
											"begin": 4081,
											"end": 4110,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 4081,
											"end": 4110,
											"name": "tag",
											"source": 6,
											"value": "124"
										},
										{
											"begin": 4081,
											"end": 4110,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 4081,
											"end": 4110,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 4136,
											"end": 4143,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 4120,
											"end": 4126,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 4120,
											"end": 4133,
											"name": "PUSH",
											"source": 6,
											"value": "3"
										},
										{
											"begin": 4120,
											"end": 4133,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 4120,
											"end": 4143,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 4120,
											"end": 4143,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 4120,
											"end": 4143,
											"name": "SSTORE",
											"source": 6
										},
										{
											"begin": 4120,
											"end": 4143,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 4176,
											"end": 4177,
											"name": "PUSH",
											"source": 6,
											"value": "1"
										},
										{
											"begin": 4160,
											"end": 4166,
											"name": "PUSH",
											"source": 6,
											"value": "6"
										},
										{
											"begin": 4160,
											"end": 4173,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 4160,
											"end": 4173,
											"name": "SLOAD",
											"source": 6
										},
										{
											"begin": 4160,
											"end": 4173,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 4160,
											"end": 4173,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 4160,
											"end": 4177,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "126"
										},
										{
											"begin": 4160,
											"end": 4177,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 4160,
											"end": 4177,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 4160,
											"end": 4177,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "127"
										},
										{
											"begin": 4160,
											"end": 4177,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 4160,
											"end": 4177,
											"name": "tag",
											"source": 6,
											"value": "126"
										},
										{
											"begin": 4160,
											"end": 4177,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 4153,
											"end": 4177,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 4153,
											"end": 4177,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 4153,
											"end": 4177,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 3572,
											"end": 4184,
											"name": "SWAP4",
											"source": 6
										},
										{
											"begin": 3572,
											"end": 4184,
											"name": "SWAP3",
											"source": 6
										},
										{
											"begin": 3572,
											"end": 4184,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 3572,
											"end": 4184,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 3572,
											"end": 4184,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 3572,
											"end": 4184,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 4923,
											"end": 6182,
											"name": "tag",
											"source": 6,
											"value": "67"
										},
										{
											"begin": 4923,
											"end": 6182,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 4984,
											"end": 5004,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 5007,
											"end": 5013,
											"name": "PUSH",
											"source": 6,
											"value": "6"
										},
										{
											"begin": 5014,
											"end": 5022,
											"name": "DUP4",
											"source": 6
										},
										{
											"begin": 5007,
											"end": 5023,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 5007,
											"end": 5023,
											"name": "SLOAD",
											"source": 6
										},
										{
											"begin": 5007,
											"end": 5023,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 5007,
											"end": 5023,
											"name": "LT",
											"source": 6
										},
										{
											"begin": 5007,
											"end": 5023,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "129"
										},
										{
											"begin": 5007,
											"end": 5023,
											"name": "JUMPI",
											"source": 6
										},
										{
											"begin": 5007,
											"end": 5023,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "130"
										},
										{
											"begin": 5007,
											"end": 5023,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "131"
										},
										{
											"begin": 5007,
											"end": 5023,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 5007,
											"end": 5023,
											"name": "tag",
											"source": 6,
											"value": "130"
										},
										{
											"begin": 5007,
											"end": 5023,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 5007,
											"end": 5023,
											"name": "tag",
											"source": 6,
											"value": "129"
										},
										{
											"begin": 5007,
											"end": 5023,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 5007,
											"end": 5023,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 5007,
											"end": 5023,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 5007,
											"end": 5023,
											"name": "MSTORE",
											"source": 6
										},
										{
											"begin": 5007,
											"end": 5023,
											"name": "PUSH",
											"source": 6,
											"value": "20"
										},
										{
											"begin": 5007,
											"end": 5023,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 5007,
											"end": 5023,
											"name": "KECCAK256",
											"source": 6
										},
										{
											"begin": 5007,
											"end": 5023,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 5007,
											"end": 5023,
											"name": "PUSH",
											"source": 6,
											"value": "9"
										},
										{
											"begin": 5007,
											"end": 5023,
											"name": "MUL",
											"source": 6
										},
										{
											"begin": 5007,
											"end": 5023,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 4984,
											"end": 5023,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 4984,
											"end": 5023,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 5078,
											"end": 5084,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 5078,
											"end": 5091,
											"name": "PUSH",
											"source": 6,
											"value": "8"
										},
										{
											"begin": 5078,
											"end": 5091,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 5078,
											"end": 5091,
											"name": "PUSH",
											"source": 6,
											"value": "1"
										},
										{
											"begin": 5078,
											"end": 5091,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 5078,
											"end": 5091,
											"name": "SLOAD",
											"source": 6
										},
										{
											"begin": 5078,
											"end": 5091,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 5078,
											"end": 5091,
											"name": "PUSH",
											"source": 6,
											"value": "100"
										},
										{
											"begin": 5078,
											"end": 5091,
											"name": "EXP",
											"source": 6
										},
										{
											"begin": 5078,
											"end": 5091,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 5078,
											"end": 5091,
											"name": "DIV",
											"source": 6
										},
										{
											"begin": 5078,
											"end": 5091,
											"name": "PUSH",
											"source": 6,
											"value": "FF"
										},
										{
											"begin": 5078,
											"end": 5091,
											"name": "AND",
											"source": 6
										},
										{
											"begin": 5074,
											"end": 5139,
											"name": "ISZERO",
											"source": 6
										},
										{
											"begin": 5074,
											"end": 5139,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "133"
										},
										{
											"begin": 5074,
											"end": 5139,
											"name": "JUMPI",
											"source": 6
										},
										{
											"begin": 5114,
											"end": 5128,
											"name": "PUSH",
											"source": 6,
											"value": "40"
										},
										{
											"begin": 5114,
											"end": 5128,
											"name": "MLOAD",
											"source": 6
										},
										{
											"begin": 5114,
											"end": 5128,
											"name": "PUSH",
											"source": 6,
											"value": "66B6CB4A00000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 5114,
											"end": 5128,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 5114,
											"end": 5128,
											"name": "MSTORE",
											"source": 6
										},
										{
											"begin": 5114,
											"end": 5128,
											"name": "PUSH",
											"source": 6,
											"value": "4"
										},
										{
											"begin": 5114,
											"end": 5128,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 5114,
											"end": 5128,
											"name": "PUSH",
											"source": 6,
											"value": "40"
										},
										{
											"begin": 5114,
											"end": 5128,
											"name": "MLOAD",
											"source": 6
										},
										{
											"begin": 5114,
											"end": 5128,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 5114,
											"end": 5128,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 5114,
											"end": 5128,
											"name": "SUB",
											"source": 6
										},
										{
											"begin": 5114,
											"end": 5128,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 5114,
											"end": 5128,
											"name": "REVERT",
											"source": 6
										},
										{
											"begin": 5074,
											"end": 5139,
											"name": "tag",
											"source": 6,
											"value": "133"
										},
										{
											"begin": 5074,
											"end": 5139,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 5201,
											"end": 5235,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "134"
										},
										{
											"begin": 5224,
											"end": 5234,
											"name": "CALLER",
											"source": 6
										},
										{
											"begin": 5201,
											"end": 5207,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 5201,
											"end": 5214,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 5201,
											"end": 5214,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 5201,
											"end": 5223,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "135"
										},
										{
											"begin": 5201,
											"end": 5223,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 5201,
											"end": 5235,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 5201,
											"end": 5235,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 5201,
											"end": 5235,
											"name": "PUSH",
											"source": 6,
											"value": "FFFFFFFF"
										},
										{
											"begin": 5201,
											"end": 5235,
											"name": "AND",
											"source": 6
										},
										{
											"begin": 5201,
											"end": 5235,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 5201,
											"end": 5235,
											"name": "tag",
											"source": 6,
											"value": "134"
										},
										{
											"begin": 5201,
											"end": 5235,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 5197,
											"end": 5283,
											"name": "ISZERO",
											"source": 6
										},
										{
											"begin": 5197,
											"end": 5283,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "136"
										},
										{
											"begin": 5197,
											"end": 5283,
											"name": "JUMPI",
											"source": 6
										},
										{
											"begin": 5258,
											"end": 5272,
											"name": "PUSH",
											"source": 6,
											"value": "40"
										},
										{
											"begin": 5258,
											"end": 5272,
											"name": "MLOAD",
											"source": 6
										},
										{
											"begin": 5258,
											"end": 5272,
											"name": "PUSH",
											"source": 6,
											"value": "7C9A1CF900000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 5258,
											"end": 5272,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 5258,
											"end": 5272,
											"name": "MSTORE",
											"source": 6
										},
										{
											"begin": 5258,
											"end": 5272,
											"name": "PUSH",
											"source": 6,
											"value": "4"
										},
										{
											"begin": 5258,
											"end": 5272,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 5258,
											"end": 5272,
											"name": "PUSH",
											"source": 6,
											"value": "40"
										},
										{
											"begin": 5258,
											"end": 5272,
											"name": "MLOAD",
											"source": 6
										},
										{
											"begin": 5258,
											"end": 5272,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 5258,
											"end": 5272,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 5258,
											"end": 5272,
											"name": "SUB",
											"source": 6
										},
										{
											"begin": 5258,
											"end": 5272,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 5258,
											"end": 5272,
											"name": "REVERT",
											"source": 6
										},
										{
											"begin": 5197,
											"end": 5283,
											"name": "tag",
											"source": 6,
											"value": "136"
										},
										{
											"begin": 5197,
											"end": 5283,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 5293,
											"end": 5308,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 5311,
											"end": 5332,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "137"
										},
										{
											"begin": 5321,
											"end": 5331,
											"name": "CALLER",
											"source": 6
										},
										{
											"begin": 5311,
											"end": 5320,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "54"
										},
										{
											"begin": 5311,
											"end": 5332,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 5311,
											"end": 5332,
											"name": "tag",
											"source": 6,
											"value": "137"
										},
										{
											"begin": 5311,
											"end": 5332,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 5293,
											"end": 5332,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 5293,
											"end": 5332,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 5405,
											"end": 5406,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 5394,
											"end": 5401,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 5394,
											"end": 5406,
											"name": "SUB",
											"source": 6
										},
										{
											"begin": 5390,
											"end": 5454,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "138"
										},
										{
											"begin": 5390,
											"end": 5454,
											"name": "JUMPI",
											"source": 6
										},
										{
											"begin": 5429,
											"end": 5443,
											"name": "PUSH",
											"source": 6,
											"value": "40"
										},
										{
											"begin": 5429,
											"end": 5443,
											"name": "MLOAD",
											"source": 6
										},
										{
											"begin": 5429,
											"end": 5443,
											"name": "PUSH",
											"source": 6,
											"value": "8439960D00000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 5429,
											"end": 5443,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 5429,
											"end": 5443,
											"name": "MSTORE",
											"source": 6
										},
										{
											"begin": 5429,
											"end": 5443,
											"name": "PUSH",
											"source": 6,
											"value": "4"
										},
										{
											"begin": 5429,
											"end": 5443,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 5429,
											"end": 5443,
											"name": "PUSH",
											"source": 6,
											"value": "40"
										},
										{
											"begin": 5429,
											"end": 5443,
											"name": "MLOAD",
											"source": 6
										},
										{
											"begin": 5429,
											"end": 5443,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 5429,
											"end": 5443,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 5429,
											"end": 5443,
											"name": "SUB",
											"source": 6
										},
										{
											"begin": 5429,
											"end": 5443,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 5429,
											"end": 5443,
											"name": "REVERT",
											"source": 6
										},
										{
											"begin": 5390,
											"end": 5454,
											"name": "tag",
											"source": 6,
											"value": "138"
										},
										{
											"begin": 5390,
											"end": 5454,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 5532,
											"end": 5544,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 5523,
											"end": 5544,
											"name": "PUSH",
											"source": 6,
											"value": "2"
										},
										{
											"begin": 5523,
											"end": 5544,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 5523,
											"end": 5544,
											"name": "GT",
											"source": 6
										},
										{
											"begin": 5523,
											"end": 5544,
											"name": "ISZERO",
											"source": 6
										},
										{
											"begin": 5523,
											"end": 5544,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "139"
										},
										{
											"begin": 5523,
											"end": 5544,
											"name": "JUMPI",
											"source": 6
										},
										{
											"begin": 5523,
											"end": 5544,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "140"
										},
										{
											"begin": 5523,
											"end": 5544,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "141"
										},
										{
											"begin": 5523,
											"end": 5544,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 5523,
											"end": 5544,
											"name": "tag",
											"source": 6,
											"value": "140"
										},
										{
											"begin": 5523,
											"end": 5544,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 5523,
											"end": 5544,
											"name": "tag",
											"source": 6,
											"value": "139"
										},
										{
											"begin": 5523,
											"end": 5544,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 5523,
											"end": 5528,
											"name": "DUP4",
											"source": 6
										},
										{
											"begin": 5523,
											"end": 5544,
											"name": "PUSH",
											"source": 6,
											"value": "2"
										},
										{
											"begin": 5523,
											"end": 5544,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 5523,
											"end": 5544,
											"name": "GT",
											"source": 6
										},
										{
											"begin": 5523,
											"end": 5544,
											"name": "ISZERO",
											"source": 6
										},
										{
											"begin": 5523,
											"end": 5544,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "142"
										},
										{
											"begin": 5523,
											"end": 5544,
											"name": "JUMPI",
											"source": 6
										},
										{
											"begin": 5523,
											"end": 5544,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "143"
										},
										{
											"begin": 5523,
											"end": 5544,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "141"
										},
										{
											"begin": 5523,
											"end": 5544,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 5523,
											"end": 5544,
											"name": "tag",
											"source": 6,
											"value": "143"
										},
										{
											"begin": 5523,
											"end": 5544,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 5523,
											"end": 5544,
											"name": "tag",
											"source": 6,
											"value": "142"
										},
										{
											"begin": 5523,
											"end": 5544,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 5523,
											"end": 5544,
											"name": "SUB",
											"source": 6
										},
										{
											"begin": 5519,
											"end": 5742,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "144"
										},
										{
											"begin": 5519,
											"end": 5742,
											"name": "JUMPI",
											"source": 6
										},
										{
											"begin": 5583,
											"end": 5590,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 5560,
											"end": 5566,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 5560,
											"end": 5579,
											"name": "PUSH",
											"source": 6,
											"value": "6"
										},
										{
											"begin": 5560,
											"end": 5579,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 5560,
											"end": 5579,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 5560,
											"end": 5590,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 5560,
											"end": 5590,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 5560,
											"end": 5590,
											"name": "SLOAD",
											"source": 6
										},
										{
											"begin": 5560,
											"end": 5590,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "145"
										},
										{
											"begin": 5560,
											"end": 5590,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 5560,
											"end": 5590,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 5560,
											"end": 5590,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "112"
										},
										{
											"begin": 5560,
											"end": 5590,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 5560,
											"end": 5590,
											"name": "tag",
											"source": 6,
											"value": "145"
										},
										{
											"begin": 5560,
											"end": 5590,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 5560,
											"end": 5590,
											"name": "SWAP3",
											"source": 6
										},
										{
											"begin": 5560,
											"end": 5590,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 5560,
											"end": 5590,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 5560,
											"end": 5590,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 5560,
											"end": 5590,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 5560,
											"end": 5590,
											"name": "SSTORE",
											"source": 6
										},
										{
											"begin": 5560,
											"end": 5590,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 5519,
											"end": 5742,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "146"
										},
										{
											"begin": 5519,
											"end": 5742,
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 5519,
											"end": 5742,
											"name": "tag",
											"source": 6,
											"value": "144"
										},
										{
											"begin": 5519,
											"end": 5742,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 5620,
											"end": 5628,
											"name": "PUSH",
											"source": 6,
											"value": "1"
										},
										{
											"begin": 5611,
											"end": 5628,
											"name": "PUSH",
											"source": 6,
											"value": "2"
										},
										{
											"begin": 5611,
											"end": 5628,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 5611,
											"end": 5628,
											"name": "GT",
											"source": 6
										},
										{
											"begin": 5611,
											"end": 5628,
											"name": "ISZERO",
											"source": 6
										},
										{
											"begin": 5611,
											"end": 5628,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "147"
										},
										{
											"begin": 5611,
											"end": 5628,
											"name": "JUMPI",
											"source": 6
										},
										{
											"begin": 5611,
											"end": 5628,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "148"
										},
										{
											"begin": 5611,
											"end": 5628,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "141"
										},
										{
											"begin": 5611,
											"end": 5628,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 5611,
											"end": 5628,
											"name": "tag",
											"source": 6,
											"value": "148"
										},
										{
											"begin": 5611,
											"end": 5628,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 5611,
											"end": 5628,
											"name": "tag",
											"source": 6,
											"value": "147"
										},
										{
											"begin": 5611,
											"end": 5628,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 5611,
											"end": 5616,
											"name": "DUP4",
											"source": 6
										},
										{
											"begin": 5611,
											"end": 5628,
											"name": "PUSH",
											"source": 6,
											"value": "2"
										},
										{
											"begin": 5611,
											"end": 5628,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 5611,
											"end": 5628,
											"name": "GT",
											"source": 6
										},
										{
											"begin": 5611,
											"end": 5628,
											"name": "ISZERO",
											"source": 6
										},
										{
											"begin": 5611,
											"end": 5628,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "149"
										},
										{
											"begin": 5611,
											"end": 5628,
											"name": "JUMPI",
											"source": 6
										},
										{
											"begin": 5611,
											"end": 5628,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "150"
										},
										{
											"begin": 5611,
											"end": 5628,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "141"
										},
										{
											"begin": 5611,
											"end": 5628,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 5611,
											"end": 5628,
											"name": "tag",
											"source": 6,
											"value": "150"
										},
										{
											"begin": 5611,
											"end": 5628,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 5611,
											"end": 5628,
											"name": "tag",
											"source": 6,
											"value": "149"
										},
										{
											"begin": 5611,
											"end": 5628,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 5611,
											"end": 5628,
											"name": "SUB",
											"source": 6
										},
										{
											"begin": 5607,
											"end": 5742,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "151"
										},
										{
											"begin": 5607,
											"end": 5742,
											"name": "JUMPI",
											"source": 6
										},
										{
											"begin": 5663,
											"end": 5670,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 5644,
											"end": 5650,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 5644,
											"end": 5659,
											"name": "PUSH",
											"source": 6,
											"value": "5"
										},
										{
											"begin": 5644,
											"end": 5659,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 5644,
											"end": 5659,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 5644,
											"end": 5670,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 5644,
											"end": 5670,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 5644,
											"end": 5670,
											"name": "SLOAD",
											"source": 6
										},
										{
											"begin": 5644,
											"end": 5670,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "152"
										},
										{
											"begin": 5644,
											"end": 5670,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 5644,
											"end": 5670,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 5644,
											"end": 5670,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "112"
										},
										{
											"begin": 5644,
											"end": 5670,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 5644,
											"end": 5670,
											"name": "tag",
											"source": 6,
											"value": "152"
										},
										{
											"begin": 5644,
											"end": 5670,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 5644,
											"end": 5670,
											"name": "SWAP3",
											"source": 6
										},
										{
											"begin": 5644,
											"end": 5670,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 5644,
											"end": 5670,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 5644,
											"end": 5670,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 5644,
											"end": 5670,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 5644,
											"end": 5670,
											"name": "SSTORE",
											"source": 6
										},
										{
											"begin": 5644,
											"end": 5670,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 5607,
											"end": 5742,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "153"
										},
										{
											"begin": 5607,
											"end": 5742,
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 5607,
											"end": 5742,
											"name": "tag",
											"source": 6,
											"value": "151"
										},
										{
											"begin": 5607,
											"end": 5742,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 5724,
											"end": 5731,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 5701,
											"end": 5707,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 5701,
											"end": 5720,
											"name": "PUSH",
											"source": 6,
											"value": "7"
										},
										{
											"begin": 5701,
											"end": 5720,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 5701,
											"end": 5720,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 5701,
											"end": 5731,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 5701,
											"end": 5731,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 5701,
											"end": 5731,
											"name": "SLOAD",
											"source": 6
										},
										{
											"begin": 5701,
											"end": 5731,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "154"
										},
										{
											"begin": 5701,
											"end": 5731,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 5701,
											"end": 5731,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 5701,
											"end": 5731,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "112"
										},
										{
											"begin": 5701,
											"end": 5731,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 5701,
											"end": 5731,
											"name": "tag",
											"source": 6,
											"value": "154"
										},
										{
											"begin": 5701,
											"end": 5731,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 5701,
											"end": 5731,
											"name": "SWAP3",
											"source": 6
										},
										{
											"begin": 5701,
											"end": 5731,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 5701,
											"end": 5731,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 5701,
											"end": 5731,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 5701,
											"end": 5731,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 5701,
											"end": 5731,
											"name": "SSTORE",
											"source": 6
										},
										{
											"begin": 5701,
											"end": 5731,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 5607,
											"end": 5742,
											"name": "tag",
											"source": 6,
											"value": "153"
										},
										{
											"begin": 5607,
											"end": 5742,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 5519,
											"end": 5742,
											"name": "tag",
											"source": 6,
											"value": "146"
										},
										{
											"begin": 5519,
											"end": 5742,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 5829,
											"end": 5858,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "155"
										},
										{
											"begin": 5847,
											"end": 5857,
											"name": "CALLER",
											"source": 6
										},
										{
											"begin": 5829,
											"end": 5835,
											"name": "DUP4",
											"source": 6
										},
										{
											"begin": 5829,
											"end": 5842,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 5829,
											"end": 5842,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 5829,
											"end": 5846,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "156"
										},
										{
											"begin": 5829,
											"end": 5846,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 5829,
											"end": 5858,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 5829,
											"end": 5858,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 5829,
											"end": 5858,
											"name": "PUSH",
											"source": 6,
											"value": "FFFFFFFF"
										},
										{
											"begin": 5829,
											"end": 5858,
											"name": "AND",
											"source": 6
										},
										{
											"begin": 5829,
											"end": 5858,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 5829,
											"end": 5858,
											"name": "tag",
											"source": 6,
											"value": "155"
										},
										{
											"begin": 5829,
											"end": 5858,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 5829,
											"end": 5858,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 5889,
											"end": 5896,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 5868,
											"end": 5874,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 5868,
											"end": 5885,
											"name": "PUSH",
											"source": 6,
											"value": "4"
										},
										{
											"begin": 5868,
											"end": 5885,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 5868,
											"end": 5885,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 5868,
											"end": 5896,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 5868,
											"end": 5896,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 5868,
											"end": 5896,
											"name": "SLOAD",
											"source": 6
										},
										{
											"begin": 5868,
											"end": 5896,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "157"
										},
										{
											"begin": 5868,
											"end": 5896,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 5868,
											"end": 5896,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 5868,
											"end": 5896,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "112"
										},
										{
											"begin": 5868,
											"end": 5896,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 5868,
											"end": 5896,
											"name": "tag",
											"source": 6,
											"value": "157"
										},
										{
											"begin": 5868,
											"end": 5896,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 5868,
											"end": 5896,
											"name": "SWAP3",
											"source": 6
										},
										{
											"begin": 5868,
											"end": 5896,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 5868,
											"end": 5896,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 5868,
											"end": 5896,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 5868,
											"end": 5896,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 5868,
											"end": 5896,
											"name": "SSTORE",
											"source": 6
										},
										{
											"begin": 5868,
											"end": 5896,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 6007,
											"end": 6013,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 6007,
											"end": 6020,
											"name": "PUSH",
											"source": 6,
											"value": "3"
										},
										{
											"begin": 6007,
											"end": 6020,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 6007,
											"end": 6020,
											"name": "SLOAD",
											"source": 6
										},
										{
											"begin": 5986,
											"end": 5992,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 5986,
											"end": 6003,
											"name": "PUSH",
											"source": 6,
											"value": "4"
										},
										{
											"begin": 5986,
											"end": 6003,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 5986,
											"end": 6003,
											"name": "SLOAD",
											"source": 6
										},
										{
											"begin": 5986,
											"end": 6020,
											"name": "LT",
											"source": 6
										},
										{
											"begin": 5982,
											"end": 6176,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "158"
										},
										{
											"begin": 5982,
											"end": 6176,
											"name": "JUMPI",
											"source": 6
										},
										{
											"begin": 6052,
											"end": 6056,
											"name": "PUSH",
											"source": 6,
											"value": "1"
										},
										{
											"begin": 6036,
											"end": 6042,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 6036,
											"end": 6049,
											"name": "PUSH",
											"source": 6,
											"value": "8"
										},
										{
											"begin": 6036,
											"end": 6049,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 6036,
											"end": 6049,
											"name": "PUSH",
											"source": 6,
											"value": "1"
										},
										{
											"begin": 6036,
											"end": 6056,
											"name": "PUSH",
											"source": 6,
											"value": "100"
										},
										{
											"begin": 6036,
											"end": 6056,
											"name": "EXP",
											"source": 6
										},
										{
											"begin": 6036,
											"end": 6056,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 6036,
											"end": 6056,
											"name": "SLOAD",
											"source": 6
										},
										{
											"begin": 6036,
											"end": 6056,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 6036,
											"end": 6056,
											"name": "PUSH",
											"source": 6,
											"value": "FF"
										},
										{
											"begin": 6036,
											"end": 6056,
											"name": "MUL",
											"source": 6
										},
										{
											"begin": 6036,
											"end": 6056,
											"name": "NOT",
											"source": 6
										},
										{
											"begin": 6036,
											"end": 6056,
											"name": "AND",
											"source": 6
										},
										{
											"begin": 6036,
											"end": 6056,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 6036,
											"end": 6056,
											"name": "DUP4",
											"source": 6
										},
										{
											"begin": 6036,
											"end": 6056,
											"name": "ISZERO",
											"source": 6
										},
										{
											"begin": 6036,
											"end": 6056,
											"name": "ISZERO",
											"source": 6
										},
										{
											"begin": 6036,
											"end": 6056,
											"name": "MUL",
											"source": 6
										},
										{
											"begin": 6036,
											"end": 6056,
											"name": "OR",
											"source": 6
										},
										{
											"begin": 6036,
											"end": 6056,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 6036,
											"end": 6056,
											"name": "SSTORE",
											"source": 6
										},
										{
											"begin": 6036,
											"end": 6056,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 6092,
											"end": 6098,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 6092,
											"end": 6111,
											"name": "PUSH",
											"source": 6,
											"value": "6"
										},
										{
											"begin": 6092,
											"end": 6111,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 6092,
											"end": 6111,
											"name": "SLOAD",
											"source": 6
										},
										{
											"begin": 6074,
											"end": 6080,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 6074,
											"end": 6089,
											"name": "PUSH",
											"source": 6,
											"value": "5"
										},
										{
											"begin": 6074,
											"end": 6089,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 6074,
											"end": 6089,
											"name": "SLOAD",
											"source": 6
										},
										{
											"begin": 6074,
											"end": 6111,
											"name": "GT",
											"source": 6
										},
										{
											"begin": 6070,
											"end": 6166,
											"name": "ISZERO",
											"source": 6
										},
										{
											"begin": 6070,
											"end": 6166,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "159"
										},
										{
											"begin": 6070,
											"end": 6166,
											"name": "JUMPI",
											"source": 6
										},
										{
											"begin": 6147,
											"end": 6151,
											"name": "PUSH",
											"source": 6,
											"value": "1"
										},
										{
											"begin": 6131,
											"end": 6137,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 6131,
											"end": 6144,
											"name": "PUSH",
											"source": 6,
											"value": "8"
										},
										{
											"begin": 6131,
											"end": 6144,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 6131,
											"end": 6144,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 6131,
											"end": 6151,
											"name": "PUSH",
											"source": 6,
											"value": "100"
										},
										{
											"begin": 6131,
											"end": 6151,
											"name": "EXP",
											"source": 6
										},
										{
											"begin": 6131,
											"end": 6151,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 6131,
											"end": 6151,
											"name": "SLOAD",
											"source": 6
										},
										{
											"begin": 6131,
											"end": 6151,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 6131,
											"end": 6151,
											"name": "PUSH",
											"source": 6,
											"value": "FF"
										},
										{
											"begin": 6131,
											"end": 6151,
											"name": "MUL",
											"source": 6
										},
										{
											"begin": 6131,
											"end": 6151,
											"name": "NOT",
											"source": 6
										},
										{
											"begin": 6131,
											"end": 6151,
											"name": "AND",
											"source": 6
										},
										{
											"begin": 6131,
											"end": 6151,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 6131,
											"end": 6151,
											"name": "DUP4",
											"source": 6
										},
										{
											"begin": 6131,
											"end": 6151,
											"name": "ISZERO",
											"source": 6
										},
										{
											"begin": 6131,
											"end": 6151,
											"name": "ISZERO",
											"source": 6
										},
										{
											"begin": 6131,
											"end": 6151,
											"name": "MUL",
											"source": 6
										},
										{
											"begin": 6131,
											"end": 6151,
											"name": "OR",
											"source": 6
										},
										{
											"begin": 6131,
											"end": 6151,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 6131,
											"end": 6151,
											"name": "SSTORE",
											"source": 6
										},
										{
											"begin": 6131,
											"end": 6151,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 6070,
											"end": 6166,
											"name": "tag",
											"source": 6,
											"value": "159"
										},
										{
											"begin": 6070,
											"end": 6166,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 5982,
											"end": 6176,
											"name": "tag",
											"source": 6,
											"value": "158"
										},
										{
											"begin": 5982,
											"end": 6176,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 4974,
											"end": 6182,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 4974,
											"end": 6182,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 4923,
											"end": 6182,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 4923,
											"end": 6182,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 4923,
											"end": 6182,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 1981,
											"end": 2074,
											"name": "tag",
											"source": 1,
											"value": "69"
										},
										{
											"begin": 1981,
											"end": 2074,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 2028,
											"end": 2041,
											"name": "PUSH",
											"source": 1,
											"value": "60"
										},
										{
											"begin": 2060,
											"end": 2067,
											"name": "PUSH",
											"source": 1,
											"value": "4"
										},
										{
											"begin": 2053,
											"end": 2067,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 2053,
											"end": 2067,
											"name": "SLOAD",
											"source": 1
										},
										{
											"begin": 2053,
											"end": 2067,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "161"
										},
										{
											"begin": 2053,
											"end": 2067,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 2053,
											"end": 2067,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "91"
										},
										{
											"begin": 2053,
											"end": 2067,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 2053,
											"end": 2067,
											"name": "tag",
											"source": 1,
											"value": "161"
										},
										{
											"begin": 2053,
											"end": 2067,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 2053,
											"end": 2067,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 2053,
											"end": 2067,
											"name": "PUSH",
											"source": 1,
											"value": "1F"
										},
										{
											"begin": 2053,
											"end": 2067,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 2053,
											"end": 2067,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 2053,
											"end": 2067,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 2053,
											"end": 2067,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 2053,
											"end": 2067,
											"name": "DIV",
											"source": 1
										},
										{
											"begin": 2053,
											"end": 2067,
											"name": "MUL",
											"source": 1
										},
										{
											"begin": 2053,
											"end": 2067,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 2053,
											"end": 2067,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 2053,
											"end": 2067,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 2053,
											"end": 2067,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": 2053,
											"end": 2067,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 2053,
											"end": 2067,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 2053,
											"end": 2067,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 2053,
											"end": 2067,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 2053,
											"end": 2067,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 2053,
											"end": 2067,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 2053,
											"end": 2067,
											"name": "SWAP3",
											"source": 1
										},
										{
											"begin": 2053,
											"end": 2067,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 2053,
											"end": 2067,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 2053,
											"end": 2067,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 2053,
											"end": 2067,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 2053,
											"end": 2067,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 2053,
											"end": 2067,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 2053,
											"end": 2067,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 2053,
											"end": 2067,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 2053,
											"end": 2067,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 2053,
											"end": 2067,
											"name": "SLOAD",
											"source": 1
										},
										{
											"begin": 2053,
											"end": 2067,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "162"
										},
										{
											"begin": 2053,
											"end": 2067,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 2053,
											"end": 2067,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "91"
										},
										{
											"begin": 2053,
											"end": 2067,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 2053,
											"end": 2067,
											"name": "tag",
											"source": 1,
											"value": "162"
										},
										{
											"begin": 2053,
											"end": 2067,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 2053,
											"end": 2067,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 2053,
											"end": 2067,
											"name": "ISZERO",
											"source": 1
										},
										{
											"begin": 2053,
											"end": 2067,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "163"
										},
										{
											"begin": 2053,
											"end": 2067,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 2053,
											"end": 2067,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 2053,
											"end": 2067,
											"name": "PUSH",
											"source": 1,
											"value": "1F"
										},
										{
											"begin": 2053,
											"end": 2067,
											"name": "LT",
											"source": 1
										},
										{
											"begin": 2053,
											"end": 2067,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "164"
										},
										{
											"begin": 2053,
											"end": 2067,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 2053,
											"end": 2067,
											"name": "PUSH",
											"source": 1,
											"value": "100"
										},
										{
											"begin": 2053,
											"end": 2067,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 2053,
											"end": 2067,
											"name": "DUP4",
											"source": 1
										},
										{
											"begin": 2053,
											"end": 2067,
											"name": "SLOAD",
											"source": 1
										},
										{
											"begin": 2053,
											"end": 2067,
											"name": "DIV",
											"source": 1
										},
										{
											"begin": 2053,
											"end": 2067,
											"name": "MUL",
											"source": 1
										},
										{
											"begin": 2053,
											"end": 2067,
											"name": "DUP4",
											"source": 1
										},
										{
											"begin": 2053,
											"end": 2067,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 2053,
											"end": 2067,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 2053,
											"end": 2067,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 2053,
											"end": 2067,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 2053,
											"end": 2067,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 2053,
											"end": 2067,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "163"
										},
										{
											"begin": 2053,
											"end": 2067,
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 2053,
											"end": 2067,
											"name": "tag",
											"source": 1,
											"value": "164"
										},
										{
											"begin": 2053,
											"end": 2067,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 2053,
											"end": 2067,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 2053,
											"end": 2067,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 2053,
											"end": 2067,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 2053,
											"end": 2067,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 2053,
											"end": 2067,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 2053,
											"end": 2067,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 2053,
											"end": 2067,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 2053,
											"end": 2067,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 2053,
											"end": 2067,
											"name": "KECCAK256",
											"source": 1
										},
										{
											"begin": 2053,
											"end": 2067,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 2053,
											"end": 2067,
											"name": "tag",
											"source": 1,
											"value": "165"
										},
										{
											"begin": 2053,
											"end": 2067,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 2053,
											"end": 2067,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 2053,
											"end": 2067,
											"name": "SLOAD",
											"source": 1
										},
										{
											"begin": 2053,
											"end": 2067,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 2053,
											"end": 2067,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 2053,
											"end": 2067,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 2053,
											"end": 2067,
											"name": "PUSH",
											"source": 1,
											"value": "1"
										},
										{
											"begin": 2053,
											"end": 2067,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 2053,
											"end": 2067,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 2053,
											"end": 2067,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 2053,
											"end": 2067,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 2053,
											"end": 2067,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 2053,
											"end": 2067,
											"name": "DUP4",
											"source": 1
										},
										{
											"begin": 2053,
											"end": 2067,
											"name": "GT",
											"source": 1
										},
										{
											"begin": 2053,
											"end": 2067,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "165"
										},
										{
											"begin": 2053,
											"end": 2067,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 2053,
											"end": 2067,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 2053,
											"end": 2067,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 2053,
											"end": 2067,
											"name": "SUB",
											"source": 1
										},
										{
											"begin": 2053,
											"end": 2067,
											"name": "PUSH",
											"source": 1,
											"value": "1F"
										},
										{
											"begin": 2053,
											"end": 2067,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 2053,
											"end": 2067,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 2053,
											"end": 2067,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 2053,
											"end": 2067,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 2053,
											"end": 2067,
											"name": "tag",
											"source": 1,
											"value": "163"
										},
										{
											"begin": 2053,
											"end": 2067,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 2053,
											"end": 2067,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 2053,
											"end": 2067,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 2053,
											"end": 2067,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 2053,
											"end": 2067,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 2053,
											"end": 2067,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 2053,
											"end": 2067,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 2053,
											"end": 2067,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 1981,
											"end": 2074,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 1981,
											"end": 2074,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 4239,
											"end": 4868,
											"name": "tag",
											"source": 6,
											"value": "74"
										},
										{
											"begin": 4239,
											"end": 4868,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 4322,
											"end": 4344,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "166"
										},
										{
											"begin": 4322,
											"end": 4344,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "167"
										},
										{
											"begin": 4322,
											"end": 4344,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 4322,
											"end": 4344,
											"name": "tag",
											"source": 6,
											"value": "166"
										},
										{
											"begin": 4322,
											"end": 4344,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 4360,
											"end": 4380,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 4383,
											"end": 4389,
											"name": "PUSH",
											"source": 6,
											"value": "6"
										},
										{
											"begin": 4390,
											"end": 4398,
											"name": "DUP4",
											"source": 6
										},
										{
											"begin": 4383,
											"end": 4399,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 4383,
											"end": 4399,
											"name": "SLOAD",
											"source": 6
										},
										{
											"begin": 4383,
											"end": 4399,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 4383,
											"end": 4399,
											"name": "LT",
											"source": 6
										},
										{
											"begin": 4383,
											"end": 4399,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "169"
										},
										{
											"begin": 4383,
											"end": 4399,
											"name": "JUMPI",
											"source": 6
										},
										{
											"begin": 4383,
											"end": 4399,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "170"
										},
										{
											"begin": 4383,
											"end": 4399,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "131"
										},
										{
											"begin": 4383,
											"end": 4399,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 4383,
											"end": 4399,
											"name": "tag",
											"source": 6,
											"value": "170"
										},
										{
											"begin": 4383,
											"end": 4399,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 4383,
											"end": 4399,
											"name": "tag",
											"source": 6,
											"value": "169"
										},
										{
											"begin": 4383,
											"end": 4399,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 4383,
											"end": 4399,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 4383,
											"end": 4399,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 4383,
											"end": 4399,
											"name": "MSTORE",
											"source": 6
										},
										{
											"begin": 4383,
											"end": 4399,
											"name": "PUSH",
											"source": 6,
											"value": "20"
										},
										{
											"begin": 4383,
											"end": 4399,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 4383,
											"end": 4399,
											"name": "KECCAK256",
											"source": 6
										},
										{
											"begin": 4383,
											"end": 4399,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 4383,
											"end": 4399,
											"name": "PUSH",
											"source": 6,
											"value": "9"
										},
										{
											"begin": 4383,
											"end": 4399,
											"name": "MUL",
											"source": 6
										},
										{
											"begin": 4383,
											"end": 4399,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 4360,
											"end": 4399,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 4360,
											"end": 4399,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 4428,
											"end": 4861,
											"name": "PUSH",
											"source": 6,
											"value": "40"
										},
										{
											"begin": 4428,
											"end": 4861,
											"name": "MLOAD",
											"source": 6
										},
										{
											"begin": 4428,
											"end": 4861,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 4428,
											"end": 4861,
											"name": "PUSH",
											"source": 6,
											"value": "120"
										},
										{
											"begin": 4428,
											"end": 4861,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 4428,
											"end": 4861,
											"name": "PUSH",
											"source": 6,
											"value": "40"
										},
										{
											"begin": 4428,
											"end": 4861,
											"name": "MSTORE",
											"source": 6
										},
										{
											"begin": 4428,
											"end": 4861,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 4470,
											"end": 4492,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "172"
										},
										{
											"begin": 4470,
											"end": 4476,
											"name": "DUP4",
											"source": 6
										},
										{
											"begin": 4470,
											"end": 4483,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 4470,
											"end": 4483,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 4470,
											"end": 4490,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "173"
										},
										{
											"begin": 4470,
											"end": 4492,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 4470,
											"end": 4492,
											"name": "tag",
											"source": 6,
											"value": "172"
										},
										{
											"begin": 4470,
											"end": 4492,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 4428,
											"end": 4861,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 4428,
											"end": 4861,
											"name": "MSTORE",
											"source": 6
										},
										{
											"begin": 4428,
											"end": 4861,
											"name": "PUSH",
											"source": 6,
											"value": "20"
										},
										{
											"begin": 4428,
											"end": 4861,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 4521,
											"end": 4527,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 4521,
											"end": 4537,
											"name": "PUSH",
											"source": 6,
											"value": "2"
										},
										{
											"begin": 4521,
											"end": 4537,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 4428,
											"end": 4861,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 4428,
											"end": 4861,
											"name": "SLOAD",
											"source": 6
										},
										{
											"begin": 4428,
											"end": 4861,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "174"
										},
										{
											"begin": 4428,
											"end": 4861,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 4428,
											"end": 4861,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "91"
										},
										{
											"begin": 4428,
											"end": 4861,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 4428,
											"end": 4861,
											"name": "tag",
											"source": 6,
											"value": "174"
										},
										{
											"begin": 4428,
											"end": 4861,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 4428,
											"end": 4861,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 4428,
											"end": 4861,
											"name": "PUSH",
											"source": 6,
											"value": "1F"
										},
										{
											"begin": 4428,
											"end": 4861,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 4428,
											"end": 4861,
											"name": "PUSH",
											"source": 6,
											"value": "20"
										},
										{
											"begin": 4428,
											"end": 4861,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 4428,
											"end": 4861,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 4428,
											"end": 4861,
											"name": "DIV",
											"source": 6
										},
										{
											"begin": 4428,
											"end": 4861,
											"name": "MUL",
											"source": 6
										},
										{
											"begin": 4428,
											"end": 4861,
											"name": "PUSH",
											"source": 6,
											"value": "20"
										},
										{
											"begin": 4428,
											"end": 4861,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 4428,
											"end": 4861,
											"name": "PUSH",
											"source": 6,
											"value": "40"
										},
										{
											"begin": 4428,
											"end": 4861,
											"name": "MLOAD",
											"source": 6
										},
										{
											"begin": 4428,
											"end": 4861,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 4428,
											"end": 4861,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 4428,
											"end": 4861,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 4428,
											"end": 4861,
											"name": "PUSH",
											"source": 6,
											"value": "40"
										},
										{
											"begin": 4428,
											"end": 4861,
											"name": "MSTORE",
											"source": 6
										},
										{
											"begin": 4428,
											"end": 4861,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 4428,
											"end": 4861,
											"name": "SWAP3",
											"source": 6
										},
										{
											"begin": 4428,
											"end": 4861,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 4428,
											"end": 4861,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 4428,
											"end": 4861,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 4428,
											"end": 4861,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 4428,
											"end": 4861,
											"name": "MSTORE",
											"source": 6
										},
										{
											"begin": 4428,
											"end": 4861,
											"name": "PUSH",
											"source": 6,
											"value": "20"
										},
										{
											"begin": 4428,
											"end": 4861,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 4428,
											"end": 4861,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 4428,
											"end": 4861,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 4428,
											"end": 4861,
											"name": "SLOAD",
											"source": 6
										},
										{
											"begin": 4428,
											"end": 4861,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "175"
										},
										{
											"begin": 4428,
											"end": 4861,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 4428,
											"end": 4861,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "91"
										},
										{
											"begin": 4428,
											"end": 4861,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 4428,
											"end": 4861,
											"name": "tag",
											"source": 6,
											"value": "175"
										},
										{
											"begin": 4428,
											"end": 4861,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 4428,
											"end": 4861,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 4428,
											"end": 4861,
											"name": "ISZERO",
											"source": 6
										},
										{
											"begin": 4428,
											"end": 4861,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "176"
										},
										{
											"begin": 4428,
											"end": 4861,
											"name": "JUMPI",
											"source": 6
										},
										{
											"begin": 4428,
											"end": 4861,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 4428,
											"end": 4861,
											"name": "PUSH",
											"source": 6,
											"value": "1F"
										},
										{
											"begin": 4428,
											"end": 4861,
											"name": "LT",
											"source": 6
										},
										{
											"begin": 4428,
											"end": 4861,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "177"
										},
										{
											"begin": 4428,
											"end": 4861,
											"name": "JUMPI",
											"source": 6
										},
										{
											"begin": 4428,
											"end": 4861,
											"name": "PUSH",
											"source": 6,
											"value": "100"
										},
										{
											"begin": 4428,
											"end": 4861,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 4428,
											"end": 4861,
											"name": "DUP4",
											"source": 6
										},
										{
											"begin": 4428,
											"end": 4861,
											"name": "SLOAD",
											"source": 6
										},
										{
											"begin": 4428,
											"end": 4861,
											"name": "DIV",
											"source": 6
										},
										{
											"begin": 4428,
											"end": 4861,
											"name": "MUL",
											"source": 6
										},
										{
											"begin": 4428,
											"end": 4861,
											"name": "DUP4",
											"source": 6
										},
										{
											"begin": 4428,
											"end": 4861,
											"name": "MSTORE",
											"source": 6
										},
										{
											"begin": 4428,
											"end": 4861,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 4428,
											"end": 4861,
											"name": "PUSH",
											"source": 6,
											"value": "20"
										},
										{
											"begin": 4428,
											"end": 4861,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 4428,
											"end": 4861,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 4428,
											"end": 4861,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "176"
										},
										{
											"begin": 4428,
											"end": 4861,
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 4428,
											"end": 4861,
											"name": "tag",
											"source": 6,
											"value": "177"
										},
										{
											"begin": 4428,
											"end": 4861,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 4428,
											"end": 4861,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 4428,
											"end": 4861,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 4428,
											"end": 4861,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 4428,
											"end": 4861,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 4428,
											"end": 4861,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 4428,
											"end": 4861,
											"name": "MSTORE",
											"source": 6
										},
										{
											"begin": 4428,
											"end": 4861,
											"name": "PUSH",
											"source": 6,
											"value": "20"
										},
										{
											"begin": 4428,
											"end": 4861,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 4428,
											"end": 4861,
											"name": "KECCAK256",
											"source": 6
										},
										{
											"begin": 4428,
											"end": 4861,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 4428,
											"end": 4861,
											"name": "tag",
											"source": 6,
											"value": "178"
										},
										{
											"begin": 4428,
											"end": 4861,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 4428,
											"end": 4861,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 4428,
											"end": 4861,
											"name": "SLOAD",
											"source": 6
										},
										{
											"begin": 4428,
											"end": 4861,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 4428,
											"end": 4861,
											"name": "MSTORE",
											"source": 6
										},
										{
											"begin": 4428,
											"end": 4861,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 4428,
											"end": 4861,
											"name": "PUSH",
											"source": 6,
											"value": "1"
										},
										{
											"begin": 4428,
											"end": 4861,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 4428,
											"end": 4861,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 4428,
											"end": 4861,
											"name": "PUSH",
											"source": 6,
											"value": "20"
										},
										{
											"begin": 4428,
											"end": 4861,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 4428,
											"end": 4861,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 4428,
											"end": 4861,
											"name": "DUP4",
											"source": 6
										},
										{
											"begin": 4428,
											"end": 4861,
											"name": "GT",
											"source": 6
										},
										{
											"begin": 4428,
											"end": 4861,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "178"
										},
										{
											"begin": 4428,
											"end": 4861,
											"name": "JUMPI",
											"source": 6
										},
										{
											"begin": 4428,
											"end": 4861,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 4428,
											"end": 4861,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 4428,
											"end": 4861,
											"name": "SUB",
											"source": 6
										},
										{
											"begin": 4428,
											"end": 4861,
											"name": "PUSH",
											"source": 6,
											"value": "1F"
										},
										{
											"begin": 4428,
											"end": 4861,
											"name": "AND",
											"source": 6
										},
										{
											"begin": 4428,
											"end": 4861,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 4428,
											"end": 4861,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 4428,
											"end": 4861,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 4428,
											"end": 4861,
											"name": "tag",
											"source": 6,
											"value": "176"
										},
										{
											"begin": 4428,
											"end": 4861,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 4428,
											"end": 4861,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 4428,
											"end": 4861,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 4428,
											"end": 4861,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 4428,
											"end": 4861,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 4428,
											"end": 4861,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 4428,
											"end": 4861,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 4428,
											"end": 4861,
											"name": "MSTORE",
											"source": 6
										},
										{
											"begin": 4428,
											"end": 4861,
											"name": "PUSH",
											"source": 6,
											"value": "20"
										},
										{
											"begin": 4428,
											"end": 4861,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 4563,
											"end": 4569,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 4563,
											"end": 4576,
											"name": "PUSH",
											"source": 6,
											"value": "3"
										},
										{
											"begin": 4563,
											"end": 4576,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 4563,
											"end": 4576,
											"name": "SLOAD",
											"source": 6
										},
										{
											"begin": 4428,
											"end": 4861,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 4428,
											"end": 4861,
											"name": "MSTORE",
											"source": 6
										},
										{
											"begin": 4428,
											"end": 4861,
											"name": "PUSH",
											"source": 6,
											"value": "20"
										},
										{
											"begin": 4428,
											"end": 4861,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 4606,
											"end": 4612,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 4606,
											"end": 4623,
											"name": "PUSH",
											"source": 6,
											"value": "4"
										},
										{
											"begin": 4606,
											"end": 4623,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 4606,
											"end": 4623,
											"name": "SLOAD",
											"source": 6
										},
										{
											"begin": 4428,
											"end": 4861,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 4428,
											"end": 4861,
											"name": "MSTORE",
											"source": 6
										},
										{
											"begin": 4428,
											"end": 4861,
											"name": "PUSH",
											"source": 6,
											"value": "20"
										},
										{
											"begin": 4428,
											"end": 4861,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 4651,
											"end": 4657,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 4651,
											"end": 4666,
											"name": "PUSH",
											"source": 6,
											"value": "5"
										},
										{
											"begin": 4651,
											"end": 4666,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 4651,
											"end": 4666,
											"name": "SLOAD",
											"source": 6
										},
										{
											"begin": 4428,
											"end": 4861,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 4428,
											"end": 4861,
											"name": "MSTORE",
											"source": 6
										},
										{
											"begin": 4428,
											"end": 4861,
											"name": "PUSH",
											"source": 6,
											"value": "20"
										},
										{
											"begin": 4428,
											"end": 4861,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 4698,
											"end": 4704,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 4698,
											"end": 4717,
											"name": "PUSH",
											"source": 6,
											"value": "6"
										},
										{
											"begin": 4698,
											"end": 4717,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 4698,
											"end": 4717,
											"name": "SLOAD",
											"source": 6
										},
										{
											"begin": 4428,
											"end": 4861,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 4428,
											"end": 4861,
											"name": "MSTORE",
											"source": 6
										},
										{
											"begin": 4428,
											"end": 4861,
											"name": "PUSH",
											"source": 6,
											"value": "20"
										},
										{
											"begin": 4428,
											"end": 4861,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 4749,
											"end": 4755,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 4749,
											"end": 4768,
											"name": "PUSH",
											"source": 6,
											"value": "7"
										},
										{
											"begin": 4749,
											"end": 4768,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 4749,
											"end": 4768,
											"name": "SLOAD",
											"source": 6
										},
										{
											"begin": 4428,
											"end": 4861,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 4428,
											"end": 4861,
											"name": "MSTORE",
											"source": 6
										},
										{
											"begin": 4428,
											"end": 4861,
											"name": "PUSH",
											"source": 6,
											"value": "20"
										},
										{
											"begin": 4428,
											"end": 4861,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 4794,
											"end": 4800,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 4794,
											"end": 4807,
											"name": "PUSH",
											"source": 6,
											"value": "8"
										},
										{
											"begin": 4794,
											"end": 4807,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 4794,
											"end": 4807,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 4794,
											"end": 4807,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 4794,
											"end": 4807,
											"name": "SLOAD",
											"source": 6
										},
										{
											"begin": 4794,
											"end": 4807,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 4794,
											"end": 4807,
											"name": "PUSH",
											"source": 6,
											"value": "100"
										},
										{
											"begin": 4794,
											"end": 4807,
											"name": "EXP",
											"source": 6
										},
										{
											"begin": 4794,
											"end": 4807,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 4794,
											"end": 4807,
											"name": "DIV",
											"source": 6
										},
										{
											"begin": 4794,
											"end": 4807,
											"name": "PUSH",
											"source": 6,
											"value": "FF"
										},
										{
											"begin": 4794,
											"end": 4807,
											"name": "AND",
											"source": 6
										},
										{
											"begin": 4428,
											"end": 4861,
											"name": "ISZERO",
											"source": 6
										},
										{
											"begin": 4428,
											"end": 4861,
											"name": "ISZERO",
											"source": 6
										},
										{
											"begin": 4428,
											"end": 4861,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 4428,
											"end": 4861,
											"name": "MSTORE",
											"source": 6
										},
										{
											"begin": 4428,
											"end": 4861,
											"name": "PUSH",
											"source": 6,
											"value": "20"
										},
										{
											"begin": 4428,
											"end": 4861,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 4833,
											"end": 4839,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 4833,
											"end": 4846,
											"name": "PUSH",
											"source": 6,
											"value": "8"
										},
										{
											"begin": 4833,
											"end": 4846,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 4833,
											"end": 4846,
											"name": "PUSH",
											"source": 6,
											"value": "1"
										},
										{
											"begin": 4833,
											"end": 4846,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 4833,
											"end": 4846,
											"name": "SLOAD",
											"source": 6
										},
										{
											"begin": 4833,
											"end": 4846,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 4833,
											"end": 4846,
											"name": "PUSH",
											"source": 6,
											"value": "100"
										},
										{
											"begin": 4833,
											"end": 4846,
											"name": "EXP",
											"source": 6
										},
										{
											"begin": 4833,
											"end": 4846,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 4833,
											"end": 4846,
											"name": "DIV",
											"source": 6
										},
										{
											"begin": 4833,
											"end": 4846,
											"name": "PUSH",
											"source": 6,
											"value": "FF"
										},
										{
											"begin": 4833,
											"end": 4846,
											"name": "AND",
											"source": 6
										},
										{
											"begin": 4428,
											"end": 4861,
											"name": "ISZERO",
											"source": 6
										},
										{
											"begin": 4428,
											"end": 4861,
											"name": "ISZERO",
											"source": 6
										},
										{
											"begin": 4428,
											"end": 4861,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 4428,
											"end": 4861,
											"name": "MSTORE",
											"source": 6
										},
										{
											"begin": 4428,
											"end": 4861,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 4409,
											"end": 4861,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 4409,
											"end": 4861,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 4409,
											"end": 4861,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 4239,
											"end": 4868,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 4239,
											"end": 4868,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 4239,
											"end": 4868,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 4239,
											"end": 4868,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 3315,
											"end": 3493,
											"name": "tag",
											"source": 1,
											"value": "79"
										},
										{
											"begin": 3315,
											"end": 3493,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 3384,
											"end": 3388,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 3400,
											"end": 3413,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 3416,
											"end": 3428,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "180"
										},
										{
											"begin": 3416,
											"end": 3426,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "98"
										},
										{
											"begin": 3416,
											"end": 3428,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 3416,
											"end": 3428,
											"name": "tag",
											"source": 1,
											"value": "180"
										},
										{
											"begin": 3416,
											"end": 3428,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 3400,
											"end": 3428,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 3400,
											"end": 3428,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 3438,
											"end": 3465,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "181"
										},
										{
											"begin": 3448,
											"end": 3453,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 3455,
											"end": 3457,
											"name": "DUP6",
											"source": 1
										},
										{
											"begin": 3459,
											"end": 3464,
											"name": "DUP6",
											"source": 1
										},
										{
											"begin": 3438,
											"end": 3447,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "107"
										},
										{
											"begin": 3438,
											"end": 3465,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 3438,
											"end": 3465,
											"name": "tag",
											"source": 1,
											"value": "181"
										},
										{
											"begin": 3438,
											"end": 3465,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 3482,
											"end": 3486,
											"name": "PUSH",
											"source": 1,
											"value": "1"
										},
										{
											"begin": 3475,
											"end": 3486,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 3475,
											"end": 3486,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 3475,
											"end": 3486,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 3315,
											"end": 3493,
											"name": "SWAP3",
											"source": 1
										},
										{
											"begin": 3315,
											"end": 3493,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 3315,
											"end": 3493,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 3315,
											"end": 3493,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 3315,
											"end": 3493,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 2578,
											"end": 2612,
											"name": "tag",
											"source": 6,
											"value": "82"
										},
										{
											"begin": 2578,
											"end": 2612,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 2578,
											"end": 2612,
											"name": "PUSH",
											"source": 6,
											"value": "8"
										},
										{
											"begin": 2578,
											"end": 2612,
											"name": "SLOAD",
											"source": 6
										},
										{
											"begin": 2578,
											"end": 2612,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 2578,
											"end": 2612,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 3551,
											"end": 3691,
											"name": "tag",
											"source": 1,
											"value": "87"
										},
										{
											"begin": 3551,
											"end": 3691,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 3631,
											"end": 3638,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 3657,
											"end": 3668,
											"name": "PUSH",
											"source": 1,
											"value": "1"
										},
										{
											"begin": 3657,
											"end": 3675,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 3669,
											"end": 3674,
											"name": "DUP5",
											"source": 1
										},
										{
											"begin": 3657,
											"end": 3675,
											"name": "PUSH",
											"source": 1,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 3657,
											"end": 3675,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 3657,
											"end": 3675,
											"name": "PUSH",
											"source": 1,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 3657,
											"end": 3675,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 3657,
											"end": 3675,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 3657,
											"end": 3675,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 3657,
											"end": 3675,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 3657,
											"end": 3675,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 3657,
											"end": 3675,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 3657,
											"end": 3675,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 3657,
											"end": 3675,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 3657,
											"end": 3675,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 3657,
											"end": 3675,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 3657,
											"end": 3675,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 3657,
											"end": 3675,
											"name": "KECCAK256",
											"source": 1
										},
										{
											"begin": 3657,
											"end": 3684,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 3676,
											"end": 3683,
											"name": "DUP4",
											"source": 1
										},
										{
											"begin": 3657,
											"end": 3684,
											"name": "PUSH",
											"source": 1,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 3657,
											"end": 3684,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 3657,
											"end": 3684,
											"name": "PUSH",
											"source": 1,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 3657,
											"end": 3684,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 3657,
											"end": 3684,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 3657,
											"end": 3684,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 3657,
											"end": 3684,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 3657,
											"end": 3684,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 3657,
											"end": 3684,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 3657,
											"end": 3684,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 3657,
											"end": 3684,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 3657,
											"end": 3684,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 3657,
											"end": 3684,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 3657,
											"end": 3684,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 3657,
											"end": 3684,
											"name": "KECCAK256",
											"source": 1
										},
										{
											"begin": 3657,
											"end": 3684,
											"name": "SLOAD",
											"source": 1
										},
										{
											"begin": 3650,
											"end": 3684,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 3650,
											"end": 3684,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 3551,
											"end": 3691,
											"name": "SWAP3",
											"source": 1
										},
										{
											"begin": 3551,
											"end": 3691,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 3551,
											"end": 3691,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 3551,
											"end": 3691,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 3551,
											"end": 3691,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 656,
											"end": 752,
											"name": "tag",
											"source": 4,
											"value": "98"
										},
										{
											"begin": 656,
											"end": 752,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 709,
											"end": 716,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 735,
											"end": 745,
											"name": "CALLER",
											"source": 4
										},
										{
											"begin": 728,
											"end": 745,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 728,
											"end": 745,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 656,
											"end": 752,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 656,
											"end": 752,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 8726,
											"end": 8854,
											"name": "tag",
											"source": 1,
											"value": "100"
										},
										{
											"begin": 8726,
											"end": 8854,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 8810,
											"end": 8847,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "185"
										},
										{
											"begin": 8819,
											"end": 8824,
											"name": "DUP4",
											"source": 1
										},
										{
											"begin": 8826,
											"end": 8833,
											"name": "DUP4",
											"source": 1
										},
										{
											"begin": 8835,
											"end": 8840,
											"name": "DUP4",
											"source": 1
										},
										{
											"begin": 8842,
											"end": 8846,
											"name": "PUSH",
											"source": 1,
											"value": "1"
										},
										{
											"begin": 8810,
											"end": 8818,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "186"
										},
										{
											"begin": 8810,
											"end": 8847,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 8810,
											"end": 8847,
											"name": "tag",
											"source": 1,
											"value": "185"
										},
										{
											"begin": 8810,
											"end": 8847,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 8726,
											"end": 8854,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 8726,
											"end": 8854,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 8726,
											"end": 8854,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 8726,
											"end": 8854,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 10415,
											"end": 10891,
											"name": "tag",
											"source": 1,
											"value": "105"
										},
										{
											"begin": 10415,
											"end": 10891,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 10514,
											"end": 10538,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 10541,
											"end": 10566,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "188"
										},
										{
											"begin": 10551,
											"end": 10556,
											"name": "DUP5",
											"source": 1
										},
										{
											"begin": 10558,
											"end": 10565,
											"name": "DUP5",
											"source": 1
										},
										{
											"begin": 10541,
											"end": 10550,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "87"
										},
										{
											"begin": 10541,
											"end": 10566,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 10541,
											"end": 10566,
											"name": "tag",
											"source": 1,
											"value": "188"
										},
										{
											"begin": 10541,
											"end": 10566,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 10514,
											"end": 10566,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 10514,
											"end": 10566,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 10599,
											"end": 10616,
											"name": "PUSH",
											"source": 1,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 10580,
											"end": 10596,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 10580,
											"end": 10616,
											"name": "LT",
											"source": 1
										},
										{
											"begin": 10576,
											"end": 10885,
											"name": "ISZERO",
											"source": 1
										},
										{
											"begin": 10576,
											"end": 10885,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "189"
										},
										{
											"begin": 10576,
											"end": 10885,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 10655,
											"end": 10660,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 10636,
											"end": 10652,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 10636,
											"end": 10660,
											"name": "LT",
											"source": 1
										},
										{
											"begin": 10632,
											"end": 10762,
											"name": "ISZERO",
											"source": 1
										},
										{
											"begin": 10632,
											"end": 10762,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "190"
										},
										{
											"begin": 10632,
											"end": 10762,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 10714,
											"end": 10721,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 10723,
											"end": 10739,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 10741,
											"end": 10746,
											"name": "DUP4",
											"source": 1
										},
										{
											"begin": 10687,
											"end": 10747,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 10687,
											"end": 10747,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": 10687,
											"end": 10747,
											"name": "PUSH",
											"source": 1,
											"value": "FB8F41B200000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 10687,
											"end": 10747,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 10687,
											"end": 10747,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 10687,
											"end": 10747,
											"name": "PUSH",
											"source": 1,
											"value": "4"
										},
										{
											"begin": 10687,
											"end": 10747,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 10687,
											"end": 10747,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "191"
										},
										{
											"begin": 10687,
											"end": 10747,
											"name": "SWAP4",
											"source": 1
										},
										{
											"begin": 10687,
											"end": 10747,
											"name": "SWAP3",
											"source": 1
										},
										{
											"begin": 10687,
											"end": 10747,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 10687,
											"end": 10747,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 10687,
											"end": 10747,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "192"
										},
										{
											"begin": 10687,
											"end": 10747,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 10687,
											"end": 10747,
											"name": "tag",
											"source": 1,
											"value": "191"
										},
										{
											"begin": 10687,
											"end": 10747,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 10687,
											"end": 10747,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 10687,
											"end": 10747,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": 10687,
											"end": 10747,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 10687,
											"end": 10747,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 10687,
											"end": 10747,
											"name": "SUB",
											"source": 1
										},
										{
											"begin": 10687,
											"end": 10747,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 10687,
											"end": 10747,
											"name": "REVERT",
											"source": 1
										},
										{
											"begin": 10632,
											"end": 10762,
											"name": "tag",
											"source": 1,
											"value": "190"
										},
										{
											"begin": 10632,
											"end": 10762,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 10803,
											"end": 10860,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "193"
										},
										{
											"begin": 10812,
											"end": 10817,
											"name": "DUP5",
											"source": 1
										},
										{
											"begin": 10819,
											"end": 10826,
											"name": "DUP5",
											"source": 1
										},
										{
											"begin": 10847,
											"end": 10852,
											"name": "DUP5",
											"source": 1
										},
										{
											"begin": 10828,
											"end": 10844,
											"name": "DUP5",
											"source": 1
										},
										{
											"begin": 10828,
											"end": 10852,
											"name": "SUB",
											"source": 1
										},
										{
											"begin": 10854,
											"end": 10859,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 10803,
											"end": 10811,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "186"
										},
										{
											"begin": 10803,
											"end": 10860,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 10803,
											"end": 10860,
											"name": "tag",
											"source": 1,
											"value": "193"
										},
										{
											"begin": 10803,
											"end": 10860,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 10576,
											"end": 10885,
											"name": "tag",
											"source": 1,
											"value": "189"
										},
										{
											"begin": 10576,
											"end": 10885,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 10504,
											"end": 10891,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 10415,
											"end": 10891,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 10415,
											"end": 10891,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 10415,
											"end": 10891,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 10415,
											"end": 10891,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 5393,
											"end": 5693,
											"name": "tag",
											"source": 1,
											"value": "107"
										},
										{
											"begin": 5393,
											"end": 5693,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 5492,
											"end": 5493,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 5476,
											"end": 5494,
											"name": "PUSH",
											"source": 1,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 5476,
											"end": 5494,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 5476,
											"end": 5480,
											"name": "DUP4",
											"source": 1
										},
										{
											"begin": 5476,
											"end": 5494,
											"name": "PUSH",
											"source": 1,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 5476,
											"end": 5494,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 5476,
											"end": 5494,
											"name": "SUB",
											"source": 1
										},
										{
											"begin": 5472,
											"end": 5558,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "195"
										},
										{
											"begin": 5472,
											"end": 5558,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 5544,
											"end": 5545,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 5517,
											"end": 5547,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 5517,
											"end": 5547,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": 5517,
											"end": 5547,
											"name": "PUSH",
											"source": 1,
											"value": "96C6FD1E00000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 5517,
											"end": 5547,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 5517,
											"end": 5547,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 5517,
											"end": 5547,
											"name": "PUSH",
											"source": 1,
											"value": "4"
										},
										{
											"begin": 5517,
											"end": 5547,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 5517,
											"end": 5547,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "196"
										},
										{
											"begin": 5517,
											"end": 5547,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 5517,
											"end": 5547,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 5517,
											"end": 5547,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "197"
										},
										{
											"begin": 5517,
											"end": 5547,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 5517,
											"end": 5547,
											"name": "tag",
											"source": 1,
											"value": "196"
										},
										{
											"begin": 5517,
											"end": 5547,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 5517,
											"end": 5547,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 5517,
											"end": 5547,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": 5517,
											"end": 5547,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 5517,
											"end": 5547,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 5517,
											"end": 5547,
											"name": "SUB",
											"source": 1
										},
										{
											"begin": 5517,
											"end": 5547,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 5517,
											"end": 5547,
											"name": "REVERT",
											"source": 1
										},
										{
											"begin": 5472,
											"end": 5558,
											"name": "tag",
											"source": 1,
											"value": "195"
										},
										{
											"begin": 5472,
											"end": 5558,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 5585,
											"end": 5586,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 5571,
											"end": 5587,
											"name": "PUSH",
											"source": 1,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 5571,
											"end": 5587,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 5571,
											"end": 5573,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 5571,
											"end": 5587,
											"name": "PUSH",
											"source": 1,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 5571,
											"end": 5587,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 5571,
											"end": 5587,
											"name": "SUB",
											"source": 1
										},
										{
											"begin": 5567,
											"end": 5653,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "198"
										},
										{
											"begin": 5567,
											"end": 5653,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 5639,
											"end": 5640,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 5610,
											"end": 5642,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 5610,
											"end": 5642,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": 5610,
											"end": 5642,
											"name": "PUSH",
											"source": 1,
											"value": "EC442F0500000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 5610,
											"end": 5642,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 5610,
											"end": 5642,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 5610,
											"end": 5642,
											"name": "PUSH",
											"source": 1,
											"value": "4"
										},
										{
											"begin": 5610,
											"end": 5642,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 5610,
											"end": 5642,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "199"
										},
										{
											"begin": 5610,
											"end": 5642,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 5610,
											"end": 5642,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 5610,
											"end": 5642,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "197"
										},
										{
											"begin": 5610,
											"end": 5642,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 5610,
											"end": 5642,
											"name": "tag",
											"source": 1,
											"value": "199"
										},
										{
											"begin": 5610,
											"end": 5642,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 5610,
											"end": 5642,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 5610,
											"end": 5642,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": 5610,
											"end": 5642,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 5610,
											"end": 5642,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 5610,
											"end": 5642,
											"name": "SUB",
											"source": 1
										},
										{
											"begin": 5610,
											"end": 5642,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 5610,
											"end": 5642,
											"name": "REVERT",
											"source": 1
										},
										{
											"begin": 5567,
											"end": 5653,
											"name": "tag",
											"source": 1,
											"value": "198"
										},
										{
											"begin": 5567,
											"end": 5653,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 5662,
											"end": 5686,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "200"
										},
										{
											"begin": 5670,
											"end": 5674,
											"name": "DUP4",
											"source": 1
										},
										{
											"begin": 5676,
											"end": 5678,
											"name": "DUP4",
											"source": 1
										},
										{
											"begin": 5680,
											"end": 5685,
											"name": "DUP4",
											"source": 1
										},
										{
											"begin": 5662,
											"end": 5669,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "201"
										},
										{
											"begin": 5662,
											"end": 5686,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 5662,
											"end": 5686,
											"name": "tag",
											"source": 1,
											"value": "200"
										},
										{
											"begin": 5662,
											"end": 5686,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 5393,
											"end": 5693,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 5393,
											"end": 5693,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 5393,
											"end": 5693,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 5393,
											"end": 5693,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 7458,
											"end": 7666,
											"name": "tag",
											"source": 1,
											"value": "116"
										},
										{
											"begin": 7458,
											"end": 7666,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 7547,
											"end": 7548,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 7528,
											"end": 7549,
											"name": "PUSH",
											"source": 1,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 7528,
											"end": 7549,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 7528,
											"end": 7535,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 7528,
											"end": 7549,
											"name": "PUSH",
											"source": 1,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 7528,
											"end": 7549,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 7528,
											"end": 7549,
											"name": "SUB",
											"source": 1
										},
										{
											"begin": 7524,
											"end": 7615,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "203"
										},
										{
											"begin": 7524,
											"end": 7615,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 7601,
											"end": 7602,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 7572,
											"end": 7604,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 7572,
											"end": 7604,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": 7572,
											"end": 7604,
											"name": "PUSH",
											"source": 1,
											"value": "EC442F0500000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 7572,
											"end": 7604,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 7572,
											"end": 7604,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 7572,
											"end": 7604,
											"name": "PUSH",
											"source": 1,
											"value": "4"
										},
										{
											"begin": 7572,
											"end": 7604,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 7572,
											"end": 7604,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "204"
										},
										{
											"begin": 7572,
											"end": 7604,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 7572,
											"end": 7604,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 7572,
											"end": 7604,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "197"
										},
										{
											"begin": 7572,
											"end": 7604,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 7572,
											"end": 7604,
											"name": "tag",
											"source": 1,
											"value": "204"
										},
										{
											"begin": 7572,
											"end": 7604,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 7572,
											"end": 7604,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 7572,
											"end": 7604,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": 7572,
											"end": 7604,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 7572,
											"end": 7604,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 7572,
											"end": 7604,
											"name": "SUB",
											"source": 1
										},
										{
											"begin": 7572,
											"end": 7604,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 7572,
											"end": 7604,
											"name": "REVERT",
											"source": 1
										},
										{
											"begin": 7524,
											"end": 7615,
											"name": "tag",
											"source": 1,
											"value": "203"
										},
										{
											"begin": 7524,
											"end": 7615,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 7624,
											"end": 7659,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "205"
										},
										{
											"begin": 7640,
											"end": 7641,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 7644,
											"end": 7651,
											"name": "DUP4",
											"source": 1
										},
										{
											"begin": 7653,
											"end": 7658,
											"name": "DUP4",
											"source": 1
										},
										{
											"begin": 7624,
											"end": 7631,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "201"
										},
										{
											"begin": 7624,
											"end": 7659,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 7624,
											"end": 7659,
											"name": "tag",
											"source": 1,
											"value": "205"
										},
										{
											"begin": 7624,
											"end": 7659,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 7458,
											"end": 7666,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 7458,
											"end": 7666,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 7458,
											"end": 7666,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 8844,
											"end": 9009,
											"name": "tag",
											"source": 5,
											"value": "135"
										},
										{
											"begin": 8844,
											"end": 9009,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 8924,
											"end": 8928,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 8947,
											"end": 9002,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "207"
										},
										{
											"begin": 8957,
											"end": 8960,
											"name": "DUP4",
											"source": 5
										},
										{
											"begin": 8957,
											"end": 8967,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 8957,
											"end": 8967,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 8993,
											"end": 8998,
											"name": "DUP4",
											"source": 5
										},
										{
											"begin": 8977,
											"end": 9000,
											"name": "PUSH",
											"source": 5,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 8977,
											"end": 9000,
											"name": "AND",
											"source": 5
										},
										{
											"begin": 8969,
											"end": 9001,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 8969,
											"end": 9001,
											"name": "SHL",
											"source": 5
										},
										{
											"begin": 8947,
											"end": 8956,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "208"
										},
										{
											"begin": 8947,
											"end": 9002,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 8947,
											"end": 9002,
											"name": "tag",
											"source": 5,
											"value": "207"
										},
										{
											"begin": 8947,
											"end": 9002,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 8940,
											"end": 9002,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 8940,
											"end": 9002,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 8844,
											"end": 9009,
											"name": "SWAP3",
											"source": 5
										},
										{
											"begin": 8844,
											"end": 9009,
											"name": "SWAP2",
											"source": 5
										},
										{
											"begin": 8844,
											"end": 9009,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 8844,
											"end": 9009,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 8844,
											"end": 9009,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 8289,
											"end": 8439,
											"name": "tag",
											"source": 5,
											"value": "156"
										},
										{
											"begin": 8289,
											"end": 8439,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 8359,
											"end": 8363,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 8382,
											"end": 8432,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "210"
										},
										{
											"begin": 8387,
											"end": 8390,
											"name": "DUP4",
											"source": 5
										},
										{
											"begin": 8387,
											"end": 8397,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 8387,
											"end": 8397,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 8423,
											"end": 8428,
											"name": "DUP4",
											"source": 5
										},
										{
											"begin": 8407,
											"end": 8430,
											"name": "PUSH",
											"source": 5,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 8407,
											"end": 8430,
											"name": "AND",
											"source": 5
										},
										{
											"begin": 8399,
											"end": 8431,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 8399,
											"end": 8431,
											"name": "SHL",
											"source": 5
										},
										{
											"begin": 8382,
											"end": 8386,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "211"
										},
										{
											"begin": 8382,
											"end": 8432,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 8382,
											"end": 8432,
											"name": "tag",
											"source": 5,
											"value": "210"
										},
										{
											"begin": 8382,
											"end": 8432,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 8375,
											"end": 8432,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 8375,
											"end": 8432,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 8289,
											"end": 8439,
											"name": "SWAP3",
											"source": 5
										},
										{
											"begin": 8289,
											"end": 8439,
											"name": "SWAP2",
											"source": 5
										},
										{
											"begin": 8289,
											"end": 8439,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 8289,
											"end": 8439,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 8289,
											"end": 8439,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 10243,
											"end": 10516,
											"name": "tag",
											"source": 5,
											"value": "173"
										},
										{
											"begin": 10243,
											"end": 10516,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 10306,
											"end": 10322,
											"name": "PUSH",
											"source": 5,
											"value": "60"
										},
										{
											"begin": 10334,
											"end": 10356,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 10359,
											"end": 10378,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "213"
										},
										{
											"begin": 10367,
											"end": 10370,
											"name": "DUP4",
											"source": 5
										},
										{
											"begin": 10367,
											"end": 10377,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 10367,
											"end": 10377,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 10359,
											"end": 10366,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "214"
										},
										{
											"begin": 10359,
											"end": 10378,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 10359,
											"end": 10378,
											"name": "tag",
											"source": 5,
											"value": "213"
										},
										{
											"begin": 10359,
											"end": 10378,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 10334,
											"end": 10378,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 10334,
											"end": 10378,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 10388,
											"end": 10411,
											"name": "PUSH",
											"source": 5,
											"value": "60"
										},
										{
											"begin": 10471,
											"end": 10476,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 10461,
											"end": 10476,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 10461,
											"end": 10476,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 10503,
											"end": 10509,
											"name": "DUP1",
											"source": 5
										},
										{
											"begin": 10496,
											"end": 10509,
											"name": "SWAP3",
											"source": 5
										},
										{
											"begin": 10496,
											"end": 10509,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 10496,
											"end": 10509,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 10496,
											"end": 10509,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 10243,
											"end": 10516,
											"name": "SWAP2",
											"source": 5
										},
										{
											"begin": 10243,
											"end": 10516,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 10243,
											"end": 10516,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 10243,
											"end": 10516,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 9701,
											"end": 10133,
											"name": "tag",
											"source": 1,
											"value": "186"
										},
										{
											"begin": 9701,
											"end": 10133,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 9830,
											"end": 9831,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 9813,
											"end": 9832,
											"name": "PUSH",
											"source": 1,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 9813,
											"end": 9832,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 9813,
											"end": 9818,
											"name": "DUP5",
											"source": 1
										},
										{
											"begin": 9813,
											"end": 9832,
											"name": "PUSH",
											"source": 1,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 9813,
											"end": 9832,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 9813,
											"end": 9832,
											"name": "SUB",
											"source": 1
										},
										{
											"begin": 9809,
											"end": 9898,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "216"
										},
										{
											"begin": 9809,
											"end": 9898,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 9884,
											"end": 9885,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 9855,
											"end": 9887,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 9855,
											"end": 9887,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": 9855,
											"end": 9887,
											"name": "PUSH",
											"source": 1,
											"value": "E602DF0500000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 9855,
											"end": 9887,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 9855,
											"end": 9887,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 9855,
											"end": 9887,
											"name": "PUSH",
											"source": 1,
											"value": "4"
										},
										{
											"begin": 9855,
											"end": 9887,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 9855,
											"end": 9887,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "217"
										},
										{
											"begin": 9855,
											"end": 9887,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 9855,
											"end": 9887,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 9855,
											"end": 9887,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "197"
										},
										{
											"begin": 9855,
											"end": 9887,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 9855,
											"end": 9887,
											"name": "tag",
											"source": 1,
											"value": "217"
										},
										{
											"begin": 9855,
											"end": 9887,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 9855,
											"end": 9887,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 9855,
											"end": 9887,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": 9855,
											"end": 9887,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 9855,
											"end": 9887,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 9855,
											"end": 9887,
											"name": "SUB",
											"source": 1
										},
										{
											"begin": 9855,
											"end": 9887,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 9855,
											"end": 9887,
											"name": "REVERT",
											"source": 1
										},
										{
											"begin": 9809,
											"end": 9898,
											"name": "tag",
											"source": 1,
											"value": "216"
										},
										{
											"begin": 9809,
											"end": 9898,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 9930,
											"end": 9931,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 9911,
											"end": 9932,
											"name": "PUSH",
											"source": 1,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 9911,
											"end": 9932,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 9911,
											"end": 9918,
											"name": "DUP4",
											"source": 1
										},
										{
											"begin": 9911,
											"end": 9932,
											"name": "PUSH",
											"source": 1,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 9911,
											"end": 9932,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 9911,
											"end": 9932,
											"name": "SUB",
											"source": 1
										},
										{
											"begin": 9907,
											"end": 9997,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "218"
										},
										{
											"begin": 9907,
											"end": 9997,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 9983,
											"end": 9984,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 9955,
											"end": 9986,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 9955,
											"end": 9986,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": 9955,
											"end": 9986,
											"name": "PUSH",
											"source": 1,
											"value": "94280D6200000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 9955,
											"end": 9986,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 9955,
											"end": 9986,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 9955,
											"end": 9986,
											"name": "PUSH",
											"source": 1,
											"value": "4"
										},
										{
											"begin": 9955,
											"end": 9986,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 9955,
											"end": 9986,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "219"
										},
										{
											"begin": 9955,
											"end": 9986,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 9955,
											"end": 9986,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 9955,
											"end": 9986,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "197"
										},
										{
											"begin": 9955,
											"end": 9986,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 9955,
											"end": 9986,
											"name": "tag",
											"source": 1,
											"value": "219"
										},
										{
											"begin": 9955,
											"end": 9986,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 9955,
											"end": 9986,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 9955,
											"end": 9986,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": 9955,
											"end": 9986,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 9955,
											"end": 9986,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 9955,
											"end": 9986,
											"name": "SUB",
											"source": 1
										},
										{
											"begin": 9955,
											"end": 9986,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 9955,
											"end": 9986,
											"name": "REVERT",
											"source": 1
										},
										{
											"begin": 9907,
											"end": 9997,
											"name": "tag",
											"source": 1,
											"value": "218"
										},
										{
											"begin": 9907,
											"end": 9997,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 10036,
											"end": 10041,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 10006,
											"end": 10017,
											"name": "PUSH",
											"source": 1,
											"value": "1"
										},
										{
											"begin": 10006,
											"end": 10024,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 10018,
											"end": 10023,
											"name": "DUP7",
											"source": 1
										},
										{
											"begin": 10006,
											"end": 10024,
											"name": "PUSH",
											"source": 1,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 10006,
											"end": 10024,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 10006,
											"end": 10024,
											"name": "PUSH",
											"source": 1,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 10006,
											"end": 10024,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 10006,
											"end": 10024,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 10006,
											"end": 10024,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 10006,
											"end": 10024,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 10006,
											"end": 10024,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 10006,
											"end": 10024,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 10006,
											"end": 10024,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 10006,
											"end": 10024,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 10006,
											"end": 10024,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 10006,
											"end": 10024,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 10006,
											"end": 10024,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 10006,
											"end": 10024,
											"name": "KECCAK256",
											"source": 1
										},
										{
											"begin": 10006,
											"end": 10033,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 10025,
											"end": 10032,
											"name": "DUP6",
											"source": 1
										},
										{
											"begin": 10006,
											"end": 10033,
											"name": "PUSH",
											"source": 1,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 10006,
											"end": 10033,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 10006,
											"end": 10033,
											"name": "PUSH",
											"source": 1,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 10006,
											"end": 10033,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 10006,
											"end": 10033,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 10006,
											"end": 10033,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 10006,
											"end": 10033,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 10006,
											"end": 10033,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 10006,
											"end": 10033,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 10006,
											"end": 10033,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 10006,
											"end": 10033,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 10006,
											"end": 10033,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 10006,
											"end": 10033,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 10006,
											"end": 10033,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 10006,
											"end": 10033,
											"name": "KECCAK256",
											"source": 1
										},
										{
											"begin": 10006,
											"end": 10041,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 10006,
											"end": 10041,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 10006,
											"end": 10041,
											"name": "SSTORE",
											"source": 1
										},
										{
											"begin": 10006,
											"end": 10041,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 10055,
											"end": 10064,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 10051,
											"end": 10127,
											"name": "ISZERO",
											"source": 1
										},
										{
											"begin": 10051,
											"end": 10127,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "220"
										},
										{
											"begin": 10051,
											"end": 10127,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 10101,
											"end": 10108,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 10085,
											"end": 10116,
											"name": "PUSH",
											"source": 1,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 10085,
											"end": 10116,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 10094,
											"end": 10099,
											"name": "DUP5",
											"source": 1
										},
										{
											"begin": 10085,
											"end": 10116,
											"name": "PUSH",
											"source": 1,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 10085,
											"end": 10116,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 10085,
											"end": 10116,
											"name": "PUSH",
											"source": 1,
											"value": "8C5BE1E5EBEC7D5BD14F71427D1E84F3DD0314C0F7B2291E5B200AC8C7C3B925"
										},
										{
											"begin": 10110,
											"end": 10115,
											"name": "DUP5",
											"source": 1
										},
										{
											"begin": 10085,
											"end": 10116,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 10085,
											"end": 10116,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": 10085,
											"end": 10116,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "221"
										},
										{
											"begin": 10085,
											"end": 10116,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 10085,
											"end": 10116,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 10085,
											"end": 10116,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "35"
										},
										{
											"begin": 10085,
											"end": 10116,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 10085,
											"end": 10116,
											"name": "tag",
											"source": 1,
											"value": "221"
										},
										{
											"begin": 10085,
											"end": 10116,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 10085,
											"end": 10116,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 10085,
											"end": 10116,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": 10085,
											"end": 10116,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 10085,
											"end": 10116,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 10085,
											"end": 10116,
											"name": "SUB",
											"source": 1
										},
										{
											"begin": 10085,
											"end": 10116,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 10085,
											"end": 10116,
											"name": "LOG3",
											"source": 1
										},
										{
											"begin": 10051,
											"end": 10127,
											"name": "tag",
											"source": 1,
											"value": "220"
										},
										{
											"begin": 10051,
											"end": 10127,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 9701,
											"end": 10133,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 9701,
											"end": 10133,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 9701,
											"end": 10133,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 9701,
											"end": 10133,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 9701,
											"end": 10133,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 6008,
											"end": 7115,
											"name": "tag",
											"source": 1,
											"value": "201"
										},
										{
											"begin": 6008,
											"end": 7115,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 6113,
											"end": 6114,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 6097,
											"end": 6115,
											"name": "PUSH",
											"source": 1,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 6097,
											"end": 6115,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 6097,
											"end": 6101,
											"name": "DUP4",
											"source": 1
										},
										{
											"begin": 6097,
											"end": 6115,
											"name": "PUSH",
											"source": 1,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 6097,
											"end": 6115,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 6097,
											"end": 6115,
											"name": "SUB",
											"source": 1
										},
										{
											"begin": 6093,
											"end": 6633,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "223"
										},
										{
											"begin": 6093,
											"end": 6633,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 6249,
											"end": 6254,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 6233,
											"end": 6245,
											"name": "PUSH",
											"source": 1,
											"value": "2"
										},
										{
											"begin": 6233,
											"end": 6245,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 6233,
											"end": 6254,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 6233,
											"end": 6254,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 6233,
											"end": 6254,
											"name": "SLOAD",
											"source": 1
										},
										{
											"begin": 6233,
											"end": 6254,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "224"
										},
										{
											"begin": 6233,
											"end": 6254,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 6233,
											"end": 6254,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 6233,
											"end": 6254,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "112"
										},
										{
											"begin": 6233,
											"end": 6254,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 6233,
											"end": 6254,
											"name": "tag",
											"source": 1,
											"value": "224"
										},
										{
											"begin": 6233,
											"end": 6254,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 6233,
											"end": 6254,
											"name": "SWAP3",
											"source": 1
										},
										{
											"begin": 6233,
											"end": 6254,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 6233,
											"end": 6254,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 6233,
											"end": 6254,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 6233,
											"end": 6254,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 6233,
											"end": 6254,
											"name": "SSTORE",
											"source": 1
										},
										{
											"begin": 6233,
											"end": 6254,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 6093,
											"end": 6633,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "225"
										},
										{
											"begin": 6093,
											"end": 6633,
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 6093,
											"end": 6633,
											"name": "tag",
											"source": 1,
											"value": "223"
										},
										{
											"begin": 6093,
											"end": 6633,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 6285,
											"end": 6304,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 6307,
											"end": 6316,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 6307,
											"end": 6322,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 6317,
											"end": 6321,
											"name": "DUP6",
											"source": 1
										},
										{
											"begin": 6307,
											"end": 6322,
											"name": "PUSH",
											"source": 1,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 6307,
											"end": 6322,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 6307,
											"end": 6322,
											"name": "PUSH",
											"source": 1,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 6307,
											"end": 6322,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 6307,
											"end": 6322,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 6307,
											"end": 6322,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 6307,
											"end": 6322,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 6307,
											"end": 6322,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 6307,
											"end": 6322,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 6307,
											"end": 6322,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 6307,
											"end": 6322,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 6307,
											"end": 6322,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 6307,
											"end": 6322,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 6307,
											"end": 6322,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 6307,
											"end": 6322,
											"name": "KECCAK256",
											"source": 1
										},
										{
											"begin": 6307,
											"end": 6322,
											"name": "SLOAD",
											"source": 1
										},
										{
											"begin": 6285,
											"end": 6322,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 6285,
											"end": 6322,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 6354,
											"end": 6359,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 6340,
											"end": 6351,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 6340,
											"end": 6359,
											"name": "LT",
											"source": 1
										},
										{
											"begin": 6336,
											"end": 6451,
											"name": "ISZERO",
											"source": 1
										},
										{
											"begin": 6336,
											"end": 6451,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "226"
										},
										{
											"begin": 6336,
											"end": 6451,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 6411,
											"end": 6415,
											"name": "DUP4",
											"source": 1
										},
										{
											"begin": 6417,
											"end": 6428,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 6430,
											"end": 6435,
											"name": "DUP4",
											"source": 1
										},
										{
											"begin": 6386,
											"end": 6436,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 6386,
											"end": 6436,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": 6386,
											"end": 6436,
											"name": "PUSH",
											"source": 1,
											"value": "E450D38C00000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 6386,
											"end": 6436,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 6386,
											"end": 6436,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 6386,
											"end": 6436,
											"name": "PUSH",
											"source": 1,
											"value": "4"
										},
										{
											"begin": 6386,
											"end": 6436,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 6386,
											"end": 6436,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "227"
										},
										{
											"begin": 6386,
											"end": 6436,
											"name": "SWAP4",
											"source": 1
										},
										{
											"begin": 6386,
											"end": 6436,
											"name": "SWAP3",
											"source": 1
										},
										{
											"begin": 6386,
											"end": 6436,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 6386,
											"end": 6436,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 6386,
											"end": 6436,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "192"
										},
										{
											"begin": 6386,
											"end": 6436,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 6386,
											"end": 6436,
											"name": "tag",
											"source": 1,
											"value": "227"
										},
										{
											"begin": 6386,
											"end": 6436,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 6386,
											"end": 6436,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 6386,
											"end": 6436,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": 6386,
											"end": 6436,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 6386,
											"end": 6436,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 6386,
											"end": 6436,
											"name": "SUB",
											"source": 1
										},
										{
											"begin": 6386,
											"end": 6436,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 6386,
											"end": 6436,
											"name": "REVERT",
											"source": 1
										},
										{
											"begin": 6336,
											"end": 6451,
											"name": "tag",
											"source": 1,
											"value": "226"
										},
										{
											"begin": 6336,
											"end": 6451,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 6603,
											"end": 6608,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 6589,
											"end": 6600,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 6589,
											"end": 6608,
											"name": "SUB",
											"source": 1
										},
										{
											"begin": 6571,
											"end": 6580,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 6571,
											"end": 6586,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 6581,
											"end": 6585,
											"name": "DUP7",
											"source": 1
										},
										{
											"begin": 6571,
											"end": 6586,
											"name": "PUSH",
											"source": 1,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 6571,
											"end": 6586,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 6571,
											"end": 6586,
											"name": "PUSH",
											"source": 1,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 6571,
											"end": 6586,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 6571,
											"end": 6586,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 6571,
											"end": 6586,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 6571,
											"end": 6586,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 6571,
											"end": 6586,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 6571,
											"end": 6586,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 6571,
											"end": 6586,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 6571,
											"end": 6586,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 6571,
											"end": 6586,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 6571,
											"end": 6586,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 6571,
											"end": 6586,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 6571,
											"end": 6586,
											"name": "KECCAK256",
											"source": 1
										},
										{
											"begin": 6571,
											"end": 6608,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 6571,
											"end": 6608,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 6571,
											"end": 6608,
											"name": "SSTORE",
											"source": 1
										},
										{
											"begin": 6571,
											"end": 6608,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 6271,
											"end": 6633,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 6093,
											"end": 6633,
											"name": "tag",
											"source": 1,
											"value": "225"
										},
										{
											"begin": 6093,
											"end": 6633,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 6661,
											"end": 6662,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 6647,
											"end": 6663,
											"name": "PUSH",
											"source": 1,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 6647,
											"end": 6663,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 6647,
											"end": 6649,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 6647,
											"end": 6663,
											"name": "PUSH",
											"source": 1,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 6647,
											"end": 6663,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 6647,
											"end": 6663,
											"name": "SUB",
											"source": 1
										},
										{
											"begin": 6643,
											"end": 7068,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "228"
										},
										{
											"begin": 6643,
											"end": 7068,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 6826,
											"end": 6831,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 6810,
											"end": 6822,
											"name": "PUSH",
											"source": 1,
											"value": "2"
										},
										{
											"begin": 6810,
											"end": 6822,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 6810,
											"end": 6831,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 6810,
											"end": 6831,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 6810,
											"end": 6831,
											"name": "SLOAD",
											"source": 1
										},
										{
											"begin": 6810,
											"end": 6831,
											"name": "SUB",
											"source": 1
										},
										{
											"begin": 6810,
											"end": 6831,
											"name": "SWAP3",
											"source": 1
										},
										{
											"begin": 6810,
											"end": 6831,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 6810,
											"end": 6831,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 6810,
											"end": 6831,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 6810,
											"end": 6831,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 6810,
											"end": 6831,
											"name": "SSTORE",
											"source": 1
										},
										{
											"begin": 6810,
											"end": 6831,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 6643,
											"end": 7068,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "229"
										},
										{
											"begin": 6643,
											"end": 7068,
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 6643,
											"end": 7068,
											"name": "tag",
											"source": 1,
											"value": "228"
										},
										{
											"begin": 6643,
											"end": 7068,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 7038,
											"end": 7043,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 7021,
											"end": 7030,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 7021,
											"end": 7034,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 7031,
											"end": 7033,
											"name": "DUP5",
											"source": 1
										},
										{
											"begin": 7021,
											"end": 7034,
											"name": "PUSH",
											"source": 1,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 7021,
											"end": 7034,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 7021,
											"end": 7034,
											"name": "PUSH",
											"source": 1,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 7021,
											"end": 7034,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 7021,
											"end": 7034,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 7021,
											"end": 7034,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 7021,
											"end": 7034,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 7021,
											"end": 7034,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 7021,
											"end": 7034,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 7021,
											"end": 7034,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 7021,
											"end": 7034,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 7021,
											"end": 7034,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 7021,
											"end": 7034,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 7021,
											"end": 7034,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 7021,
											"end": 7034,
											"name": "KECCAK256",
											"source": 1
										},
										{
											"begin": 7021,
											"end": 7034,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 7021,
											"end": 7043,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 7021,
											"end": 7043,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 7021,
											"end": 7043,
											"name": "SLOAD",
											"source": 1
										},
										{
											"begin": 7021,
											"end": 7043,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 7021,
											"end": 7043,
											"name": "SWAP3",
											"source": 1
										},
										{
											"begin": 7021,
											"end": 7043,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 7021,
											"end": 7043,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 7021,
											"end": 7043,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 7021,
											"end": 7043,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 7021,
											"end": 7043,
											"name": "SSTORE",
											"source": 1
										},
										{
											"begin": 7021,
											"end": 7043,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 6643,
											"end": 7068,
											"name": "tag",
											"source": 1,
											"value": "229"
										},
										{
											"begin": 6643,
											"end": 7068,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 7098,
											"end": 7100,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 7083,
											"end": 7108,
											"name": "PUSH",
											"source": 1,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 7083,
											"end": 7108,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 7092,
											"end": 7096,
											"name": "DUP4",
											"source": 1
										},
										{
											"begin": 7083,
											"end": 7108,
											"name": "PUSH",
											"source": 1,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 7083,
											"end": 7108,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 7083,
											"end": 7108,
											"name": "PUSH",
											"source": 1,
											"value": "DDF252AD1BE2C89B69C2B068FC378DAA952BA7F163C4A11628F55A4DF523B3EF"
										},
										{
											"begin": 7102,
											"end": 7107,
											"name": "DUP4",
											"source": 1
										},
										{
											"begin": 7083,
											"end": 7108,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 7083,
											"end": 7108,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": 7083,
											"end": 7108,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "230"
										},
										{
											"begin": 7083,
											"end": 7108,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 7083,
											"end": 7108,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 7083,
											"end": 7108,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "35"
										},
										{
											"begin": 7083,
											"end": 7108,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 7083,
											"end": 7108,
											"name": "tag",
											"source": 1,
											"value": "230"
										},
										{
											"begin": 7083,
											"end": 7108,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 7083,
											"end": 7108,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 7083,
											"end": 7108,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": 7083,
											"end": 7108,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 7083,
											"end": 7108,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 7083,
											"end": 7108,
											"name": "SUB",
											"source": 1
										},
										{
											"begin": 7083,
											"end": 7108,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 7083,
											"end": 7108,
											"name": "LOG3",
											"source": 1
										},
										{
											"begin": 6008,
											"end": 7115,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 6008,
											"end": 7115,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 6008,
											"end": 7115,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 6008,
											"end": 7115,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 4264,
											"end": 4393,
											"name": "tag",
											"source": 5,
											"value": "208"
										},
										{
											"begin": 4264,
											"end": 4393,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 4337,
											"end": 4341,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 4385,
											"end": 4386,
											"name": "DUP1",
											"source": 5
										},
										{
											"begin": 4360,
											"end": 4363,
											"name": "DUP4",
											"source": 5
										},
										{
											"begin": 4360,
											"end": 4374,
											"name": "PUSH",
											"source": 5,
											"value": "1"
										},
										{
											"begin": 4360,
											"end": 4374,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 4360,
											"end": 4381,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 4375,
											"end": 4380,
											"name": "DUP5",
											"source": 5
										},
										{
											"begin": 4360,
											"end": 4381,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 4360,
											"end": 4381,
											"name": "MSTORE",
											"source": 5
										},
										{
											"begin": 4360,
											"end": 4381,
											"name": "PUSH",
											"source": 5,
											"value": "20"
										},
										{
											"begin": 4360,
											"end": 4381,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 4360,
											"end": 4381,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 4360,
											"end": 4381,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 4360,
											"end": 4381,
											"name": "MSTORE",
											"source": 5
										},
										{
											"begin": 4360,
											"end": 4381,
											"name": "PUSH",
											"source": 5,
											"value": "20"
										},
										{
											"begin": 4360,
											"end": 4381,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 4360,
											"end": 4381,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 4360,
											"end": 4381,
											"name": "KECCAK256",
											"source": 5
										},
										{
											"begin": 4360,
											"end": 4381,
											"name": "SLOAD",
											"source": 5
										},
										{
											"begin": 4360,
											"end": 4386,
											"name": "EQ",
											"source": 5
										},
										{
											"begin": 4360,
											"end": 4386,
											"name": "ISZERO",
											"source": 5
										},
										{
											"begin": 4353,
											"end": 4386,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 4353,
											"end": 4386,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 4264,
											"end": 4393,
											"name": "SWAP3",
											"source": 5
										},
										{
											"begin": 4264,
											"end": 4393,
											"name": "SWAP2",
											"source": 5
										},
										{
											"begin": 4264,
											"end": 4393,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 4264,
											"end": 4393,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 4264,
											"end": 4393,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 2241,
											"end": 2647,
											"name": "tag",
											"source": 5,
											"value": "211"
										},
										{
											"begin": 2241,
											"end": 2647,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 2304,
											"end": 2308,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 2325,
											"end": 2346,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "233"
										},
										{
											"begin": 2335,
											"end": 2338,
											"name": "DUP4",
											"source": 5
										},
										{
											"begin": 2340,
											"end": 2345,
											"name": "DUP4",
											"source": 5
										},
										{
											"begin": 2325,
											"end": 2334,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "208"
										},
										{
											"begin": 2325,
											"end": 2346,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 2325,
											"end": 2346,
											"name": "tag",
											"source": 5,
											"value": "233"
										},
										{
											"begin": 2325,
											"end": 2346,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 2320,
											"end": 2641,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "234"
										},
										{
											"begin": 2320,
											"end": 2641,
											"name": "JUMPI",
											"source": 5
										},
										{
											"begin": 2362,
											"end": 2365,
											"name": "DUP3",
											"source": 5
										},
										{
											"begin": 2362,
											"end": 2373,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 2362,
											"end": 2373,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 2379,
											"end": 2384,
											"name": "DUP3",
											"source": 5
										},
										{
											"begin": 2362,
											"end": 2385,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 2362,
											"end": 2385,
											"name": "DUP1",
											"source": 5
										},
										{
											"begin": 2362,
											"end": 2385,
											"name": "PUSH",
											"source": 5,
											"value": "1"
										},
										{
											"begin": 2362,
											"end": 2385,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 2362,
											"end": 2385,
											"name": "SLOAD",
											"source": 5
										},
										{
											"begin": 2362,
											"end": 2385,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 2362,
											"end": 2385,
											"name": "DUP1",
											"source": 5
										},
										{
											"begin": 2362,
											"end": 2385,
											"name": "DUP3",
											"source": 5
										},
										{
											"begin": 2362,
											"end": 2385,
											"name": "SSTORE",
											"source": 5
										},
										{
											"begin": 2362,
											"end": 2385,
											"name": "DUP1",
											"source": 5
										},
										{
											"begin": 2362,
											"end": 2385,
											"name": "SWAP2",
											"source": 5
										},
										{
											"begin": 2362,
											"end": 2385,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 2362,
											"end": 2385,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 2362,
											"end": 2385,
											"name": "PUSH",
											"source": 5,
											"value": "1"
										},
										{
											"begin": 2362,
											"end": 2385,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 2362,
											"end": 2385,
											"name": "SUB",
											"source": 5
										},
										{
											"begin": 2362,
											"end": 2385,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 2362,
											"end": 2385,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 2362,
											"end": 2385,
											"name": "MSTORE",
											"source": 5
										},
										{
											"begin": 2362,
											"end": 2385,
											"name": "PUSH",
											"source": 5,
											"value": "20"
										},
										{
											"begin": 2362,
											"end": 2385,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 2362,
											"end": 2385,
											"name": "KECCAK256",
											"source": 5
										},
										{
											"begin": 2362,
											"end": 2385,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 2362,
											"end": 2385,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 2362,
											"end": 2385,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 2362,
											"end": 2385,
											"name": "SWAP2",
											"source": 5
										},
										{
											"begin": 2362,
											"end": 2385,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 2362,
											"end": 2385,
											"name": "SWAP2",
											"source": 5
										},
										{
											"begin": 2362,
											"end": 2385,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 2362,
											"end": 2385,
											"name": "SWAP2",
											"source": 5
										},
										{
											"begin": 2362,
											"end": 2385,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 2362,
											"end": 2385,
											"name": "SSTORE",
											"source": 5
										},
										{
											"begin": 2544,
											"end": 2547,
											"name": "DUP3",
											"source": 5
										},
										{
											"begin": 2544,
											"end": 2555,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 2544,
											"end": 2555,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 2544,
											"end": 2562,
											"name": "DUP1",
											"source": 5
										},
										{
											"begin": 2544,
											"end": 2562,
											"name": "SLOAD",
											"source": 5
										},
										{
											"begin": 2544,
											"end": 2562,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 2544,
											"end": 2562,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 2520,
											"end": 2523,
											"name": "DUP4",
											"source": 5
										},
										{
											"begin": 2520,
											"end": 2534,
											"name": "PUSH",
											"source": 5,
											"value": "1"
										},
										{
											"begin": 2520,
											"end": 2534,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 2520,
											"end": 2541,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 2535,
											"end": 2540,
											"name": "DUP5",
											"source": 5
										},
										{
											"begin": 2520,
											"end": 2541,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 2520,
											"end": 2541,
											"name": "MSTORE",
											"source": 5
										},
										{
											"begin": 2520,
											"end": 2541,
											"name": "PUSH",
											"source": 5,
											"value": "20"
										},
										{
											"begin": 2520,
											"end": 2541,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 2520,
											"end": 2541,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 2520,
											"end": 2541,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 2520,
											"end": 2541,
											"name": "MSTORE",
											"source": 5
										},
										{
											"begin": 2520,
											"end": 2541,
											"name": "PUSH",
											"source": 5,
											"value": "20"
										},
										{
											"begin": 2520,
											"end": 2541,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 2520,
											"end": 2541,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 2520,
											"end": 2541,
											"name": "KECCAK256",
											"source": 5
										},
										{
											"begin": 2520,
											"end": 2562,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 2520,
											"end": 2562,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 2520,
											"end": 2562,
											"name": "SSTORE",
											"source": 5
										},
										{
											"begin": 2520,
											"end": 2562,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 2583,
											"end": 2587,
											"name": "PUSH",
											"source": 5,
											"value": "1"
										},
										{
											"begin": 2576,
											"end": 2587,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 2576,
											"end": 2587,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 2576,
											"end": 2587,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "232"
										},
										{
											"begin": 2576,
											"end": 2587,
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 2320,
											"end": 2641,
											"name": "tag",
											"source": 5,
											"value": "234"
										},
										{
											"begin": 2320,
											"end": 2641,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 2625,
											"end": 2630,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 2618,
											"end": 2630,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 2618,
											"end": 2630,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 2241,
											"end": 2647,
											"name": "tag",
											"source": 5,
											"value": "232"
										},
										{
											"begin": 2241,
											"end": 2647,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 2241,
											"end": 2647,
											"name": "SWAP3",
											"source": 5
										},
										{
											"begin": 2241,
											"end": 2647,
											"name": "SWAP2",
											"source": 5
										},
										{
											"begin": 2241,
											"end": 2647,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 2241,
											"end": 2647,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 2241,
											"end": 2647,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 5581,
											"end": 5690,
											"name": "tag",
											"source": 5,
											"value": "214"
										},
										{
											"begin": 5581,
											"end": 5690,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 5637,
											"end": 5653,
											"name": "PUSH",
											"source": 5,
											"value": "60"
										},
										{
											"begin": 5672,
											"end": 5675,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 5672,
											"end": 5683,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 5672,
											"end": 5683,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 5665,
											"end": 5683,
											"name": "DUP1",
											"source": 5
										},
										{
											"begin": 5665,
											"end": 5683,
											"name": "SLOAD",
											"source": 5
										},
										{
											"begin": 5665,
											"end": 5683,
											"name": "DUP1",
											"source": 5
										},
										{
											"begin": 5665,
											"end": 5683,
											"name": "PUSH",
											"source": 5,
											"value": "20"
										},
										{
											"begin": 5665,
											"end": 5683,
											"name": "MUL",
											"source": 5
										},
										{
											"begin": 5665,
											"end": 5683,
											"name": "PUSH",
											"source": 5,
											"value": "20"
										},
										{
											"begin": 5665,
											"end": 5683,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 5665,
											"end": 5683,
											"name": "PUSH",
											"source": 5,
											"value": "40"
										},
										{
											"begin": 5665,
											"end": 5683,
											"name": "MLOAD",
											"source": 5
										},
										{
											"begin": 5665,
											"end": 5683,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 5665,
											"end": 5683,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 5665,
											"end": 5683,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 5665,
											"end": 5683,
											"name": "PUSH",
											"source": 5,
											"value": "40"
										},
										{
											"begin": 5665,
											"end": 5683,
											"name": "MSTORE",
											"source": 5
										},
										{
											"begin": 5665,
											"end": 5683,
											"name": "DUP1",
											"source": 5
										},
										{
											"begin": 5665,
											"end": 5683,
											"name": "SWAP3",
											"source": 5
										},
										{
											"begin": 5665,
											"end": 5683,
											"name": "SWAP2",
											"source": 5
										},
										{
											"begin": 5665,
											"end": 5683,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 5665,
											"end": 5683,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 5665,
											"end": 5683,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 5665,
											"end": 5683,
											"name": "MSTORE",
											"source": 5
										},
										{
											"begin": 5665,
											"end": 5683,
											"name": "PUSH",
											"source": 5,
											"value": "20"
										},
										{
											"begin": 5665,
											"end": 5683,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 5665,
											"end": 5683,
											"name": "DUP3",
											"source": 5
										},
										{
											"begin": 5665,
											"end": 5683,
											"name": "DUP1",
											"source": 5
										},
										{
											"begin": 5665,
											"end": 5683,
											"name": "SLOAD",
											"source": 5
										},
										{
											"begin": 5665,
											"end": 5683,
											"name": "DUP1",
											"source": 5
										},
										{
											"begin": 5665,
											"end": 5683,
											"name": "ISZERO",
											"source": 5
										},
										{
											"begin": 5665,
											"end": 5683,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "238"
										},
										{
											"begin": 5665,
											"end": 5683,
											"name": "JUMPI",
											"source": 5
										},
										{
											"begin": 5665,
											"end": 5683,
											"name": "PUSH",
											"source": 5,
											"value": "20"
										},
										{
											"begin": 5665,
											"end": 5683,
											"name": "MUL",
											"source": 5
										},
										{
											"begin": 5665,
											"end": 5683,
											"name": "DUP3",
											"source": 5
										},
										{
											"begin": 5665,
											"end": 5683,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 5665,
											"end": 5683,
											"name": "SWAP2",
											"source": 5
										},
										{
											"begin": 5665,
											"end": 5683,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 5665,
											"end": 5683,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 5665,
											"end": 5683,
											"name": "MSTORE",
											"source": 5
										},
										{
											"begin": 5665,
											"end": 5683,
											"name": "PUSH",
											"source": 5,
											"value": "20"
										},
										{
											"begin": 5665,
											"end": 5683,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 5665,
											"end": 5683,
											"name": "KECCAK256",
											"source": 5
										},
										{
											"begin": 5665,
											"end": 5683,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 5665,
											"end": 5683,
											"name": "tag",
											"source": 5,
											"value": "239"
										},
										{
											"begin": 5665,
											"end": 5683,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 5665,
											"end": 5683,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 5665,
											"end": 5683,
											"name": "SLOAD",
											"source": 5
										},
										{
											"begin": 5665,
											"end": 5683,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 5665,
											"end": 5683,
											"name": "MSTORE",
											"source": 5
										},
										{
											"begin": 5665,
											"end": 5683,
											"name": "PUSH",
											"source": 5,
											"value": "20"
										},
										{
											"begin": 5665,
											"end": 5683,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 5665,
											"end": 5683,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 5665,
											"end": 5683,
											"name": "PUSH",
											"source": 5,
											"value": "1"
										},
										{
											"begin": 5665,
											"end": 5683,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 5665,
											"end": 5683,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 5665,
											"end": 5683,
											"name": "DUP1",
											"source": 5
										},
										{
											"begin": 5665,
											"end": 5683,
											"name": "DUP4",
											"source": 5
										},
										{
											"begin": 5665,
											"end": 5683,
											"name": "GT",
											"source": 5
										},
										{
											"begin": 5665,
											"end": 5683,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "239"
										},
										{
											"begin": 5665,
											"end": 5683,
											"name": "JUMPI",
											"source": 5
										},
										{
											"begin": 5665,
											"end": 5683,
											"name": "tag",
											"source": 5,
											"value": "238"
										},
										{
											"begin": 5665,
											"end": 5683,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 5665,
											"end": 5683,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 5665,
											"end": 5683,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 5665,
											"end": 5683,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 5665,
											"end": 5683,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 5665,
											"end": 5683,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 5665,
											"end": 5683,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 5665,
											"end": 5683,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 5581,
											"end": 5690,
											"name": "SWAP2",
											"source": 5
										},
										{
											"begin": 5581,
											"end": 5690,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 5581,
											"end": 5690,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 5581,
											"end": 5690,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": -1,
											"end": -1,
											"name": "tag",
											"source": -1,
											"value": "167"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "JUMPDEST",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "40"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "MLOAD",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "DUP1",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "120"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "ADD",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "40"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "MSTORE",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "DUP1",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "60"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "DUP2",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "MSTORE",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "20"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "ADD",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "60"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "DUP2",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "MSTORE",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "20"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "ADD",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "DUP2",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "MSTORE",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "20"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "ADD",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "DUP2",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "MSTORE",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "20"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "ADD",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "DUP2",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "MSTORE",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "20"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "ADD",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "DUP2",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "MSTORE",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "20"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "ADD",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "DUP2",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "MSTORE",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "20"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "ADD",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "ISZERO",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "ISZERO",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "DUP2",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "MSTORE",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "20"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "ADD",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "ISZERO",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "ISZERO",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "DUP2",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "MSTORE",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SWAP1",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": -1
										},
										{
											"begin": 7,
											"end": 106,
											"name": "tag",
											"source": 7,
											"value": "240"
										},
										{
											"begin": 7,
											"end": 106,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 59,
											"end": 65,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 93,
											"end": 98,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 87,
											"end": 99,
											"name": "MLOAD",
											"source": 7
										},
										{
											"begin": 77,
											"end": 99,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 77,
											"end": 99,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 7,
											"end": 106,
											"name": "SWAP2",
											"source": 7
										},
										{
											"begin": 7,
											"end": 106,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 7,
											"end": 106,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 7,
											"end": 106,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 112,
											"end": 281,
											"name": "tag",
											"source": 7,
											"value": "241"
										},
										{
											"begin": 112,
											"end": 281,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 196,
											"end": 207,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 230,
											"end": 236,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 225,
											"end": 228,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 218,
											"end": 237,
											"name": "MSTORE",
											"source": 7
										},
										{
											"begin": 270,
											"end": 274,
											"name": "PUSH",
											"source": 7,
											"value": "20"
										},
										{
											"begin": 265,
											"end": 268,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 261,
											"end": 275,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 246,
											"end": 275,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 246,
											"end": 275,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 112,
											"end": 281,
											"name": "SWAP3",
											"source": 7
										},
										{
											"begin": 112,
											"end": 281,
											"name": "SWAP2",
											"source": 7
										},
										{
											"begin": 112,
											"end": 281,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 112,
											"end": 281,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 112,
											"end": 281,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 287,
											"end": 426,
											"name": "tag",
											"source": 7,
											"value": "242"
										},
										{
											"begin": 287,
											"end": 426,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 376,
											"end": 382,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 371,
											"end": 374,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 366,
											"end": 369,
											"name": "DUP4",
											"source": 7
										},
										{
											"begin": 360,
											"end": 383,
											"name": "MCOPY",
											"source": 7
										},
										{
											"begin": 417,
											"end": 418,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 408,
											"end": 414,
											"name": "DUP4",
											"source": 7
										},
										{
											"begin": 403,
											"end": 406,
											"name": "DUP4",
											"source": 7
										},
										{
											"begin": 399,
											"end": 415,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 392,
											"end": 419,
											"name": "MSTORE",
											"source": 7
										},
										{
											"begin": 287,
											"end": 426,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 287,
											"end": 426,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 287,
											"end": 426,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 287,
											"end": 426,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 432,
											"end": 534,
											"name": "tag",
											"source": 7,
											"value": "243"
										},
										{
											"begin": 432,
											"end": 534,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 473,
											"end": 479,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 524,
											"end": 526,
											"name": "PUSH",
											"source": 7,
											"value": "1F"
										},
										{
											"begin": 520,
											"end": 527,
											"name": "NOT",
											"source": 7
										},
										{
											"begin": 515,
											"end": 517,
											"name": "PUSH",
											"source": 7,
											"value": "1F"
										},
										{
											"begin": 508,
											"end": 513,
											"name": "DUP4",
											"source": 7
										},
										{
											"begin": 504,
											"end": 518,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 500,
											"end": 528,
											"name": "AND",
											"source": 7
										},
										{
											"begin": 490,
											"end": 528,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 490,
											"end": 528,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 432,
											"end": 534,
											"name": "SWAP2",
											"source": 7
										},
										{
											"begin": 432,
											"end": 534,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 432,
											"end": 534,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 432,
											"end": 534,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 540,
											"end": 917,
											"name": "tag",
											"source": 7,
											"value": "244"
										},
										{
											"begin": 540,
											"end": 917,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 628,
											"end": 631,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 656,
											"end": 695,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "304"
										},
										{
											"begin": 689,
											"end": 694,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 656,
											"end": 695,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "240"
										},
										{
											"begin": 656,
											"end": 695,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 656,
											"end": 695,
											"name": "tag",
											"source": 7,
											"value": "304"
										},
										{
											"begin": 656,
											"end": 695,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 711,
											"end": 782,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "305"
										},
										{
											"begin": 775,
											"end": 781,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 770,
											"end": 773,
											"name": "DUP6",
											"source": 7
										},
										{
											"begin": 711,
											"end": 782,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "241"
										},
										{
											"begin": 711,
											"end": 782,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 711,
											"end": 782,
											"name": "tag",
											"source": 7,
											"value": "305"
										},
										{
											"begin": 711,
											"end": 782,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 704,
											"end": 782,
											"name": "SWAP4",
											"source": 7
										},
										{
											"begin": 704,
											"end": 782,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 791,
											"end": 856,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "306"
										},
										{
											"begin": 849,
											"end": 855,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 844,
											"end": 847,
											"name": "DUP6",
											"source": 7
										},
										{
											"begin": 837,
											"end": 841,
											"name": "PUSH",
											"source": 7,
											"value": "20"
										},
										{
											"begin": 830,
											"end": 835,
											"name": "DUP7",
											"source": 7
										},
										{
											"begin": 826,
											"end": 842,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 791,
											"end": 856,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "242"
										},
										{
											"begin": 791,
											"end": 856,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 791,
											"end": 856,
											"name": "tag",
											"source": 7,
											"value": "306"
										},
										{
											"begin": 791,
											"end": 856,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 881,
											"end": 910,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "307"
										},
										{
											"begin": 903,
											"end": 909,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 881,
											"end": 910,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "243"
										},
										{
											"begin": 881,
											"end": 910,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 881,
											"end": 910,
											"name": "tag",
											"source": 7,
											"value": "307"
										},
										{
											"begin": 881,
											"end": 910,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 876,
											"end": 879,
											"name": "DUP5",
											"source": 7
										},
										{
											"begin": 872,
											"end": 911,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 865,
											"end": 911,
											"name": "SWAP2",
											"source": 7
										},
										{
											"begin": 865,
											"end": 911,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 632,
											"end": 917,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 540,
											"end": 917,
											"name": "SWAP3",
											"source": 7
										},
										{
											"begin": 540,
											"end": 917,
											"name": "SWAP2",
											"source": 7
										},
										{
											"begin": 540,
											"end": 917,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 540,
											"end": 917,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 540,
											"end": 917,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 923,
											"end": 1236,
											"name": "tag",
											"source": 7,
											"value": "25"
										},
										{
											"begin": 923,
											"end": 1236,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 1036,
											"end": 1040,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 1074,
											"end": 1076,
											"name": "PUSH",
											"source": 7,
											"value": "20"
										},
										{
											"begin": 1063,
											"end": 1072,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 1059,
											"end": 1077,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 1051,
											"end": 1077,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 1051,
											"end": 1077,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 1123,
											"end": 1132,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 1117,
											"end": 1121,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 1113,
											"end": 1133,
											"name": "SUB",
											"source": 7
										},
										{
											"begin": 1109,
											"end": 1110,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 1098,
											"end": 1107,
											"name": "DUP4",
											"source": 7
										},
										{
											"begin": 1094,
											"end": 1111,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 1087,
											"end": 1134,
											"name": "MSTORE",
											"source": 7
										},
										{
											"begin": 1151,
											"end": 1229,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "309"
										},
										{
											"begin": 1224,
											"end": 1228,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 1215,
											"end": 1221,
											"name": "DUP5",
											"source": 7
										},
										{
											"begin": 1151,
											"end": 1229,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "244"
										},
										{
											"begin": 1151,
											"end": 1229,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 1151,
											"end": 1229,
											"name": "tag",
											"source": 7,
											"value": "309"
										},
										{
											"begin": 1151,
											"end": 1229,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 1143,
											"end": 1229,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 1143,
											"end": 1229,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 923,
											"end": 1236,
											"name": "SWAP3",
											"source": 7
										},
										{
											"begin": 923,
											"end": 1236,
											"name": "SWAP2",
											"source": 7
										},
										{
											"begin": 923,
											"end": 1236,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 923,
											"end": 1236,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 923,
											"end": 1236,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 1323,
											"end": 1440,
											"name": "tag",
											"source": 7,
											"value": "246"
										},
										{
											"begin": 1323,
											"end": 1440,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 1432,
											"end": 1433,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 1429,
											"end": 1430,
											"name": "DUP1",
											"source": 7
										},
										{
											"begin": 1422,
											"end": 1434,
											"name": "REVERT",
											"source": 7
										},
										{
											"begin": 1446,
											"end": 1563,
											"name": "tag",
											"source": 7,
											"value": "247"
										},
										{
											"begin": 1446,
											"end": 1563,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 1555,
											"end": 1556,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 1552,
											"end": 1553,
											"name": "DUP1",
											"source": 7
										},
										{
											"begin": 1545,
											"end": 1557,
											"name": "REVERT",
											"source": 7
										},
										{
											"begin": 1569,
											"end": 1695,
											"name": "tag",
											"source": 7,
											"value": "248"
										},
										{
											"begin": 1569,
											"end": 1695,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 1606,
											"end": 1613,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 1646,
											"end": 1688,
											"name": "PUSH",
											"source": 7,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 1639,
											"end": 1644,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 1635,
											"end": 1689,
											"name": "AND",
											"source": 7
										},
										{
											"begin": 1624,
											"end": 1689,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 1624,
											"end": 1689,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 1569,
											"end": 1695,
											"name": "SWAP2",
											"source": 7
										},
										{
											"begin": 1569,
											"end": 1695,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 1569,
											"end": 1695,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 1569,
											"end": 1695,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 1701,
											"end": 1797,
											"name": "tag",
											"source": 7,
											"value": "249"
										},
										{
											"begin": 1701,
											"end": 1797,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 1738,
											"end": 1745,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 1767,
											"end": 1791,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "315"
										},
										{
											"begin": 1785,
											"end": 1790,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 1767,
											"end": 1791,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "248"
										},
										{
											"begin": 1767,
											"end": 1791,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 1767,
											"end": 1791,
											"name": "tag",
											"source": 7,
											"value": "315"
										},
										{
											"begin": 1767,
											"end": 1791,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 1756,
											"end": 1791,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 1756,
											"end": 1791,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 1701,
											"end": 1797,
											"name": "SWAP2",
											"source": 7
										},
										{
											"begin": 1701,
											"end": 1797,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 1701,
											"end": 1797,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 1701,
											"end": 1797,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 1803,
											"end": 1925,
											"name": "tag",
											"source": 7,
											"value": "250"
										},
										{
											"begin": 1803,
											"end": 1925,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 1876,
											"end": 1900,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "317"
										},
										{
											"begin": 1894,
											"end": 1899,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 1876,
											"end": 1900,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "249"
										},
										{
											"begin": 1876,
											"end": 1900,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 1876,
											"end": 1900,
											"name": "tag",
											"source": 7,
											"value": "317"
										},
										{
											"begin": 1876,
											"end": 1900,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 1869,
											"end": 1874,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 1866,
											"end": 1901,
											"name": "EQ",
											"source": 7
										},
										{
											"begin": 1856,
											"end": 1919,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "318"
										},
										{
											"begin": 1856,
											"end": 1919,
											"name": "JUMPI",
											"source": 7
										},
										{
											"begin": 1915,
											"end": 1916,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 1912,
											"end": 1913,
											"name": "DUP1",
											"source": 7
										},
										{
											"begin": 1905,
											"end": 1917,
											"name": "REVERT",
											"source": 7
										},
										{
											"begin": 1856,
											"end": 1919,
											"name": "tag",
											"source": 7,
											"value": "318"
										},
										{
											"begin": 1856,
											"end": 1919,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 1803,
											"end": 1925,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 1803,
											"end": 1925,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 1931,
											"end": 2070,
											"name": "tag",
											"source": 7,
											"value": "251"
										},
										{
											"begin": 1931,
											"end": 2070,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 1977,
											"end": 1982,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 2015,
											"end": 2021,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 2002,
											"end": 2022,
											"name": "CALLDATALOAD",
											"source": 7
										},
										{
											"begin": 1993,
											"end": 2022,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 1993,
											"end": 2022,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 2031,
											"end": 2064,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "320"
										},
										{
											"begin": 2058,
											"end": 2063,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 2031,
											"end": 2064,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "250"
										},
										{
											"begin": 2031,
											"end": 2064,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 2031,
											"end": 2064,
											"name": "tag",
											"source": 7,
											"value": "320"
										},
										{
											"begin": 2031,
											"end": 2064,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 1931,
											"end": 2070,
											"name": "SWAP3",
											"source": 7
										},
										{
											"begin": 1931,
											"end": 2070,
											"name": "SWAP2",
											"source": 7
										},
										{
											"begin": 1931,
											"end": 2070,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 1931,
											"end": 2070,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 1931,
											"end": 2070,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 2076,
											"end": 2153,
											"name": "tag",
											"source": 7,
											"value": "252"
										},
										{
											"begin": 2076,
											"end": 2153,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 2113,
											"end": 2120,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 2142,
											"end": 2147,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 2131,
											"end": 2147,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 2131,
											"end": 2147,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 2076,
											"end": 2153,
											"name": "SWAP2",
											"source": 7
										},
										{
											"begin": 2076,
											"end": 2153,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 2076,
											"end": 2153,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 2076,
											"end": 2153,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 2159,
											"end": 2281,
											"name": "tag",
											"source": 7,
											"value": "253"
										},
										{
											"begin": 2159,
											"end": 2281,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 2232,
											"end": 2256,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "323"
										},
										{
											"begin": 2250,
											"end": 2255,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 2232,
											"end": 2256,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "252"
										},
										{
											"begin": 2232,
											"end": 2256,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 2232,
											"end": 2256,
											"name": "tag",
											"source": 7,
											"value": "323"
										},
										{
											"begin": 2232,
											"end": 2256,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 2225,
											"end": 2230,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 2222,
											"end": 2257,
											"name": "EQ",
											"source": 7
										},
										{
											"begin": 2212,
											"end": 2275,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "324"
										},
										{
											"begin": 2212,
											"end": 2275,
											"name": "JUMPI",
											"source": 7
										},
										{
											"begin": 2271,
											"end": 2272,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 2268,
											"end": 2269,
											"name": "DUP1",
											"source": 7
										},
										{
											"begin": 2261,
											"end": 2273,
											"name": "REVERT",
											"source": 7
										},
										{
											"begin": 2212,
											"end": 2275,
											"name": "tag",
											"source": 7,
											"value": "324"
										},
										{
											"begin": 2212,
											"end": 2275,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 2159,
											"end": 2281,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 2159,
											"end": 2281,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 2287,
											"end": 2426,
											"name": "tag",
											"source": 7,
											"value": "254"
										},
										{
											"begin": 2287,
											"end": 2426,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 2333,
											"end": 2338,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 2371,
											"end": 2377,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 2358,
											"end": 2378,
											"name": "CALLDATALOAD",
											"source": 7
										},
										{
											"begin": 2349,
											"end": 2378,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 2349,
											"end": 2378,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 2387,
											"end": 2420,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "326"
										},
										{
											"begin": 2414,
											"end": 2419,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 2387,
											"end": 2420,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "253"
										},
										{
											"begin": 2387,
											"end": 2420,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 2387,
											"end": 2420,
											"name": "tag",
											"source": 7,
											"value": "326"
										},
										{
											"begin": 2387,
											"end": 2420,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 2287,
											"end": 2426,
											"name": "SWAP3",
											"source": 7
										},
										{
											"begin": 2287,
											"end": 2426,
											"name": "SWAP2",
											"source": 7
										},
										{
											"begin": 2287,
											"end": 2426,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 2287,
											"end": 2426,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 2287,
											"end": 2426,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 2432,
											"end": 2906,
											"name": "tag",
											"source": 7,
											"value": "28"
										},
										{
											"begin": 2432,
											"end": 2906,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 2500,
											"end": 2506,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 2508,
											"end": 2514,
											"name": "DUP1",
											"source": 7
										},
										{
											"begin": 2557,
											"end": 2559,
											"name": "PUSH",
											"source": 7,
											"value": "40"
										},
										{
											"begin": 2545,
											"end": 2554,
											"name": "DUP4",
											"source": 7
										},
										{
											"begin": 2536,
											"end": 2543,
											"name": "DUP6",
											"source": 7
										},
										{
											"begin": 2532,
											"end": 2555,
											"name": "SUB",
											"source": 7
										},
										{
											"begin": 2528,
											"end": 2560,
											"name": "SLT",
											"source": 7
										},
										{
											"begin": 2525,
											"end": 2644,
											"name": "ISZERO",
											"source": 7
										},
										{
											"begin": 2525,
											"end": 2644,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "328"
										},
										{
											"begin": 2525,
											"end": 2644,
											"name": "JUMPI",
											"source": 7
										},
										{
											"begin": 2563,
											"end": 2642,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "329"
										},
										{
											"begin": 2563,
											"end": 2642,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "246"
										},
										{
											"begin": 2563,
											"end": 2642,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 2563,
											"end": 2642,
											"name": "tag",
											"source": 7,
											"value": "329"
										},
										{
											"begin": 2563,
											"end": 2642,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 2525,
											"end": 2644,
											"name": "tag",
											"source": 7,
											"value": "328"
										},
										{
											"begin": 2525,
											"end": 2644,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 2683,
											"end": 2684,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 2708,
											"end": 2761,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "330"
										},
										{
											"begin": 2753,
											"end": 2760,
											"name": "DUP6",
											"source": 7
										},
										{
											"begin": 2744,
											"end": 2750,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 2733,
											"end": 2742,
											"name": "DUP7",
											"source": 7
										},
										{
											"begin": 2729,
											"end": 2751,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 2708,
											"end": 2761,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "251"
										},
										{
											"begin": 2708,
											"end": 2761,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 2708,
											"end": 2761,
											"name": "tag",
											"source": 7,
											"value": "330"
										},
										{
											"begin": 2708,
											"end": 2761,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 2698,
											"end": 2761,
											"name": "SWAP3",
											"source": 7
										},
										{
											"begin": 2698,
											"end": 2761,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 2654,
											"end": 2771,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 2810,
											"end": 2812,
											"name": "PUSH",
											"source": 7,
											"value": "20"
										},
										{
											"begin": 2836,
											"end": 2889,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "331"
										},
										{
											"begin": 2881,
											"end": 2888,
											"name": "DUP6",
											"source": 7
										},
										{
											"begin": 2872,
											"end": 2878,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 2861,
											"end": 2870,
											"name": "DUP7",
											"source": 7
										},
										{
											"begin": 2857,
											"end": 2879,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 2836,
											"end": 2889,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "254"
										},
										{
											"begin": 2836,
											"end": 2889,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 2836,
											"end": 2889,
											"name": "tag",
											"source": 7,
											"value": "331"
										},
										{
											"begin": 2836,
											"end": 2889,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 2826,
											"end": 2889,
											"name": "SWAP2",
											"source": 7
										},
										{
											"begin": 2826,
											"end": 2889,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 2781,
											"end": 2899,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 2432,
											"end": 2906,
											"name": "SWAP3",
											"source": 7
										},
										{
											"begin": 2432,
											"end": 2906,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 2432,
											"end": 2906,
											"name": "SWAP3",
											"source": 7
										},
										{
											"begin": 2432,
											"end": 2906,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 2432,
											"end": 2906,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 2432,
											"end": 2906,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 2912,
											"end": 3002,
											"name": "tag",
											"source": 7,
											"value": "255"
										},
										{
											"begin": 2912,
											"end": 3002,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 2946,
											"end": 2953,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 2989,
											"end": 2994,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 2982,
											"end": 2995,
											"name": "ISZERO",
											"source": 7
										},
										{
											"begin": 2975,
											"end": 2996,
											"name": "ISZERO",
											"source": 7
										},
										{
											"begin": 2964,
											"end": 2996,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 2964,
											"end": 2996,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 2912,
											"end": 3002,
											"name": "SWAP2",
											"source": 7
										},
										{
											"begin": 2912,
											"end": 3002,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 2912,
											"end": 3002,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 2912,
											"end": 3002,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 3008,
											"end": 3117,
											"name": "tag",
											"source": 7,
											"value": "256"
										},
										{
											"begin": 3008,
											"end": 3117,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 3089,
											"end": 3110,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "334"
										},
										{
											"begin": 3104,
											"end": 3109,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 3089,
											"end": 3110,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "255"
										},
										{
											"begin": 3089,
											"end": 3110,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 3089,
											"end": 3110,
											"name": "tag",
											"source": 7,
											"value": "334"
										},
										{
											"begin": 3089,
											"end": 3110,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 3084,
											"end": 3087,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 3077,
											"end": 3111,
											"name": "MSTORE",
											"source": 7
										},
										{
											"begin": 3008,
											"end": 3117,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 3008,
											"end": 3117,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 3008,
											"end": 3117,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 3123,
											"end": 3333,
											"name": "tag",
											"source": 7,
											"value": "31"
										},
										{
											"begin": 3123,
											"end": 3333,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 3210,
											"end": 3214,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 3248,
											"end": 3250,
											"name": "PUSH",
											"source": 7,
											"value": "20"
										},
										{
											"begin": 3237,
											"end": 3246,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 3233,
											"end": 3251,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 3225,
											"end": 3251,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 3225,
											"end": 3251,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 3261,
											"end": 3326,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "336"
										},
										{
											"begin": 3323,
											"end": 3324,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 3312,
											"end": 3321,
											"name": "DUP4",
											"source": 7
										},
										{
											"begin": 3308,
											"end": 3325,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 3299,
											"end": 3305,
											"name": "DUP5",
											"source": 7
										},
										{
											"begin": 3261,
											"end": 3326,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "256"
										},
										{
											"begin": 3261,
											"end": 3326,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 3261,
											"end": 3326,
											"name": "tag",
											"source": 7,
											"value": "336"
										},
										{
											"begin": 3261,
											"end": 3326,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 3123,
											"end": 3333,
											"name": "SWAP3",
											"source": 7
										},
										{
											"begin": 3123,
											"end": 3333,
											"name": "SWAP2",
											"source": 7
										},
										{
											"begin": 3123,
											"end": 3333,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 3123,
											"end": 3333,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 3123,
											"end": 3333,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 3339,
											"end": 3457,
											"name": "tag",
											"source": 7,
											"value": "257"
										},
										{
											"begin": 3339,
											"end": 3457,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 3426,
											"end": 3450,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "338"
										},
										{
											"begin": 3444,
											"end": 3449,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 3426,
											"end": 3450,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "252"
										},
										{
											"begin": 3426,
											"end": 3450,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 3426,
											"end": 3450,
											"name": "tag",
											"source": 7,
											"value": "338"
										},
										{
											"begin": 3426,
											"end": 3450,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 3421,
											"end": 3424,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 3414,
											"end": 3451,
											"name": "MSTORE",
											"source": 7
										},
										{
											"begin": 3339,
											"end": 3457,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 3339,
											"end": 3457,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 3339,
											"end": 3457,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 3463,
											"end": 3685,
											"name": "tag",
											"source": 7,
											"value": "35"
										},
										{
											"begin": 3463,
											"end": 3685,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 3556,
											"end": 3560,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 3594,
											"end": 3596,
											"name": "PUSH",
											"source": 7,
											"value": "20"
										},
										{
											"begin": 3583,
											"end": 3592,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 3579,
											"end": 3597,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 3571,
											"end": 3597,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 3571,
											"end": 3597,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 3607,
											"end": 3678,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "340"
										},
										{
											"begin": 3675,
											"end": 3676,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 3664,
											"end": 3673,
											"name": "DUP4",
											"source": 7
										},
										{
											"begin": 3660,
											"end": 3677,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 3651,
											"end": 3657,
											"name": "DUP5",
											"source": 7
										},
										{
											"begin": 3607,
											"end": 3678,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "257"
										},
										{
											"begin": 3607,
											"end": 3678,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 3607,
											"end": 3678,
											"name": "tag",
											"source": 7,
											"value": "340"
										},
										{
											"begin": 3607,
											"end": 3678,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 3463,
											"end": 3685,
											"name": "SWAP3",
											"source": 7
										},
										{
											"begin": 3463,
											"end": 3685,
											"name": "SWAP2",
											"source": 7
										},
										{
											"begin": 3463,
											"end": 3685,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 3463,
											"end": 3685,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 3463,
											"end": 3685,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 3691,
											"end": 4310,
											"name": "tag",
											"source": 7,
											"value": "38"
										},
										{
											"begin": 3691,
											"end": 4310,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 3768,
											"end": 3774,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 3776,
											"end": 3782,
											"name": "DUP1",
											"source": 7
										},
										{
											"begin": 3784,
											"end": 3790,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 3833,
											"end": 3835,
											"name": "PUSH",
											"source": 7,
											"value": "60"
										},
										{
											"begin": 3821,
											"end": 3830,
											"name": "DUP5",
											"source": 7
										},
										{
											"begin": 3812,
											"end": 3819,
											"name": "DUP7",
											"source": 7
										},
										{
											"begin": 3808,
											"end": 3831,
											"name": "SUB",
											"source": 7
										},
										{
											"begin": 3804,
											"end": 3836,
											"name": "SLT",
											"source": 7
										},
										{
											"begin": 3801,
											"end": 3920,
											"name": "ISZERO",
											"source": 7
										},
										{
											"begin": 3801,
											"end": 3920,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "342"
										},
										{
											"begin": 3801,
											"end": 3920,
											"name": "JUMPI",
											"source": 7
										},
										{
											"begin": 3839,
											"end": 3918,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "343"
										},
										{
											"begin": 3839,
											"end": 3918,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "246"
										},
										{
											"begin": 3839,
											"end": 3918,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 3839,
											"end": 3918,
											"name": "tag",
											"source": 7,
											"value": "343"
										},
										{
											"begin": 3839,
											"end": 3918,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 3801,
											"end": 3920,
											"name": "tag",
											"source": 7,
											"value": "342"
										},
										{
											"begin": 3801,
											"end": 3920,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 3959,
											"end": 3960,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 3984,
											"end": 4037,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "344"
										},
										{
											"begin": 4029,
											"end": 4036,
											"name": "DUP7",
											"source": 7
										},
										{
											"begin": 4020,
											"end": 4026,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 4009,
											"end": 4018,
											"name": "DUP8",
											"source": 7
										},
										{
											"begin": 4005,
											"end": 4027,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 3984,
											"end": 4037,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "251"
										},
										{
											"begin": 3984,
											"end": 4037,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 3984,
											"end": 4037,
											"name": "tag",
											"source": 7,
											"value": "344"
										},
										{
											"begin": 3984,
											"end": 4037,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 3974,
											"end": 4037,
											"name": "SWAP4",
											"source": 7
										},
										{
											"begin": 3974,
											"end": 4037,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 3930,
											"end": 4047,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 4086,
											"end": 4088,
											"name": "PUSH",
											"source": 7,
											"value": "20"
										},
										{
											"begin": 4112,
											"end": 4165,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "345"
										},
										{
											"begin": 4157,
											"end": 4164,
											"name": "DUP7",
											"source": 7
										},
										{
											"begin": 4148,
											"end": 4154,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 4137,
											"end": 4146,
											"name": "DUP8",
											"source": 7
										},
										{
											"begin": 4133,
											"end": 4155,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 4112,
											"end": 4165,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "251"
										},
										{
											"begin": 4112,
											"end": 4165,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 4112,
											"end": 4165,
											"name": "tag",
											"source": 7,
											"value": "345"
										},
										{
											"begin": 4112,
											"end": 4165,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 4102,
											"end": 4165,
											"name": "SWAP3",
											"source": 7
										},
										{
											"begin": 4102,
											"end": 4165,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 4057,
											"end": 4175,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 4214,
											"end": 4216,
											"name": "PUSH",
											"source": 7,
											"value": "40"
										},
										{
											"begin": 4240,
											"end": 4293,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "346"
										},
										{
											"begin": 4285,
											"end": 4292,
											"name": "DUP7",
											"source": 7
										},
										{
											"begin": 4276,
											"end": 4282,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 4265,
											"end": 4274,
											"name": "DUP8",
											"source": 7
										},
										{
											"begin": 4261,
											"end": 4283,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 4240,
											"end": 4293,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "254"
										},
										{
											"begin": 4240,
											"end": 4293,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 4240,
											"end": 4293,
											"name": "tag",
											"source": 7,
											"value": "346"
										},
										{
											"begin": 4240,
											"end": 4293,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 4230,
											"end": 4293,
											"name": "SWAP2",
											"source": 7
										},
										{
											"begin": 4230,
											"end": 4293,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 4185,
											"end": 4303,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 3691,
											"end": 4310,
											"name": "SWAP3",
											"source": 7
										},
										{
											"begin": 3691,
											"end": 4310,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 3691,
											"end": 4310,
											"name": "SWAP3",
											"source": 7
										},
										{
											"begin": 3691,
											"end": 4310,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 3691,
											"end": 4310,
											"name": "SWAP3",
											"source": 7
										},
										{
											"begin": 3691,
											"end": 4310,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 4316,
											"end": 4402,
											"name": "tag",
											"source": 7,
											"value": "258"
										},
										{
											"begin": 4316,
											"end": 4402,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 4351,
											"end": 4358,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 4391,
											"end": 4395,
											"name": "PUSH",
											"source": 7,
											"value": "FF"
										},
										{
											"begin": 4384,
											"end": 4389,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 4380,
											"end": 4396,
											"name": "AND",
											"source": 7
										},
										{
											"begin": 4369,
											"end": 4396,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 4369,
											"end": 4396,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 4316,
											"end": 4402,
											"name": "SWAP2",
											"source": 7
										},
										{
											"begin": 4316,
											"end": 4402,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 4316,
											"end": 4402,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 4316,
											"end": 4402,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 4408,
											"end": 4520,
											"name": "tag",
											"source": 7,
											"value": "259"
										},
										{
											"begin": 4408,
											"end": 4520,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 4491,
											"end": 4513,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "349"
										},
										{
											"begin": 4507,
											"end": 4512,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 4491,
											"end": 4513,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "258"
										},
										{
											"begin": 4491,
											"end": 4513,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 4491,
											"end": 4513,
											"name": "tag",
											"source": 7,
											"value": "349"
										},
										{
											"begin": 4491,
											"end": 4513,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 4486,
											"end": 4489,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 4479,
											"end": 4514,
											"name": "MSTORE",
											"source": 7
										},
										{
											"begin": 4408,
											"end": 4520,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 4408,
											"end": 4520,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 4408,
											"end": 4520,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 4526,
											"end": 4740,
											"name": "tag",
											"source": 7,
											"value": "44"
										},
										{
											"begin": 4526,
											"end": 4740,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 4615,
											"end": 4619,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 4653,
											"end": 4655,
											"name": "PUSH",
											"source": 7,
											"value": "20"
										},
										{
											"begin": 4642,
											"end": 4651,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 4638,
											"end": 4656,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 4630,
											"end": 4656,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 4630,
											"end": 4656,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 4666,
											"end": 4733,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "351"
										},
										{
											"begin": 4730,
											"end": 4731,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 4719,
											"end": 4728,
											"name": "DUP4",
											"source": 7
										},
										{
											"begin": 4715,
											"end": 4732,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 4706,
											"end": 4712,
											"name": "DUP5",
											"source": 7
										},
										{
											"begin": 4666,
											"end": 4733,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "259"
										},
										{
											"begin": 4666,
											"end": 4733,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 4666,
											"end": 4733,
											"name": "tag",
											"source": 7,
											"value": "351"
										},
										{
											"begin": 4666,
											"end": 4733,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 4526,
											"end": 4740,
											"name": "SWAP3",
											"source": 7
										},
										{
											"begin": 4526,
											"end": 4740,
											"name": "SWAP2",
											"source": 7
										},
										{
											"begin": 4526,
											"end": 4740,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 4526,
											"end": 4740,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 4526,
											"end": 4740,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 4746,
											"end": 5075,
											"name": "tag",
											"source": 7,
											"value": "49"
										},
										{
											"begin": 4746,
											"end": 5075,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 4805,
											"end": 4811,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 4854,
											"end": 4856,
											"name": "PUSH",
											"source": 7,
											"value": "20"
										},
										{
											"begin": 4842,
											"end": 4851,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 4833,
											"end": 4840,
											"name": "DUP5",
											"source": 7
										},
										{
											"begin": 4829,
											"end": 4852,
											"name": "SUB",
											"source": 7
										},
										{
											"begin": 4825,
											"end": 4857,
											"name": "SLT",
											"source": 7
										},
										{
											"begin": 4822,
											"end": 4941,
											"name": "ISZERO",
											"source": 7
										},
										{
											"begin": 4822,
											"end": 4941,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "353"
										},
										{
											"begin": 4822,
											"end": 4941,
											"name": "JUMPI",
											"source": 7
										},
										{
											"begin": 4860,
											"end": 4939,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "354"
										},
										{
											"begin": 4860,
											"end": 4939,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "246"
										},
										{
											"begin": 4860,
											"end": 4939,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 4860,
											"end": 4939,
											"name": "tag",
											"source": 7,
											"value": "354"
										},
										{
											"begin": 4860,
											"end": 4939,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 4822,
											"end": 4941,
											"name": "tag",
											"source": 7,
											"value": "353"
										},
										{
											"begin": 4822,
											"end": 4941,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 4980,
											"end": 4981,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 5005,
											"end": 5058,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "355"
										},
										{
											"begin": 5050,
											"end": 5057,
											"name": "DUP5",
											"source": 7
										},
										{
											"begin": 5041,
											"end": 5047,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 5030,
											"end": 5039,
											"name": "DUP6",
											"source": 7
										},
										{
											"begin": 5026,
											"end": 5048,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 5005,
											"end": 5058,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "251"
										},
										{
											"begin": 5005,
											"end": 5058,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 5005,
											"end": 5058,
											"name": "tag",
											"source": 7,
											"value": "355"
										},
										{
											"begin": 5005,
											"end": 5058,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 4995,
											"end": 5058,
											"name": "SWAP2",
											"source": 7
										},
										{
											"begin": 4995,
											"end": 5058,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 4951,
											"end": 5068,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 4746,
											"end": 5075,
											"name": "SWAP3",
											"source": 7
										},
										{
											"begin": 4746,
											"end": 5075,
											"name": "SWAP2",
											"source": 7
										},
										{
											"begin": 4746,
											"end": 5075,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 4746,
											"end": 5075,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 4746,
											"end": 5075,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 5081,
											"end": 5198,
											"name": "tag",
											"source": 7,
											"value": "260"
										},
										{
											"begin": 5081,
											"end": 5198,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 5190,
											"end": 5191,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 5187,
											"end": 5188,
											"name": "DUP1",
											"source": 7
										},
										{
											"begin": 5180,
											"end": 5192,
											"name": "REVERT",
											"source": 7
										},
										{
											"begin": 5204,
											"end": 5321,
											"name": "tag",
											"source": 7,
											"value": "261"
										},
										{
											"begin": 5204,
											"end": 5321,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 5313,
											"end": 5314,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 5310,
											"end": 5311,
											"name": "DUP1",
											"source": 7
										},
										{
											"begin": 5303,
											"end": 5315,
											"name": "REVERT",
											"source": 7
										},
										{
											"begin": 5327,
											"end": 5444,
											"name": "tag",
											"source": 7,
											"value": "262"
										},
										{
											"begin": 5327,
											"end": 5444,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 5436,
											"end": 5437,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 5433,
											"end": 5434,
											"name": "DUP1",
											"source": 7
										},
										{
											"begin": 5426,
											"end": 5438,
											"name": "REVERT",
											"source": 7
										},
										{
											"begin": 5464,
											"end": 6017,
											"name": "tag",
											"source": 7,
											"value": "263"
										},
										{
											"begin": 5464,
											"end": 6017,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 5522,
											"end": 5530,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 5532,
											"end": 5538,
											"name": "DUP1",
											"source": 7
										},
										{
											"begin": 5582,
											"end": 5585,
											"name": "DUP4",
											"source": 7
										},
										{
											"begin": 5575,
											"end": 5579,
											"name": "PUSH",
											"source": 7,
											"value": "1F"
										},
										{
											"begin": 5567,
											"end": 5573,
											"name": "DUP5",
											"source": 7
										},
										{
											"begin": 5563,
											"end": 5580,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 5559,
											"end": 5586,
											"name": "SLT",
											"source": 7
										},
										{
											"begin": 5549,
											"end": 5671,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "360"
										},
										{
											"begin": 5549,
											"end": 5671,
											"name": "JUMPI",
											"source": 7
										},
										{
											"begin": 5590,
											"end": 5669,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "361"
										},
										{
											"begin": 5590,
											"end": 5669,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "260"
										},
										{
											"begin": 5590,
											"end": 5669,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 5590,
											"end": 5669,
											"name": "tag",
											"source": 7,
											"value": "361"
										},
										{
											"begin": 5590,
											"end": 5669,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 5549,
											"end": 5671,
											"name": "tag",
											"source": 7,
											"value": "360"
										},
										{
											"begin": 5549,
											"end": 5671,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 5703,
											"end": 5709,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 5690,
											"end": 5710,
											"name": "CALLDATALOAD",
											"source": 7
										},
										{
											"begin": 5680,
											"end": 5710,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 5680,
											"end": 5710,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 5733,
											"end": 5751,
											"name": "PUSH",
											"source": 7,
											"value": "FFFFFFFFFFFFFFFF"
										},
										{
											"begin": 5725,
											"end": 5731,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 5722,
											"end": 5752,
											"name": "GT",
											"source": 7
										},
										{
											"begin": 5719,
											"end": 5836,
											"name": "ISZERO",
											"source": 7
										},
										{
											"begin": 5719,
											"end": 5836,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "362"
										},
										{
											"begin": 5719,
											"end": 5836,
											"name": "JUMPI",
											"source": 7
										},
										{
											"begin": 5755,
											"end": 5834,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "363"
										},
										{
											"begin": 5755,
											"end": 5834,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "261"
										},
										{
											"begin": 5755,
											"end": 5834,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 5755,
											"end": 5834,
											"name": "tag",
											"source": 7,
											"value": "363"
										},
										{
											"begin": 5755,
											"end": 5834,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 5719,
											"end": 5836,
											"name": "tag",
											"source": 7,
											"value": "362"
										},
										{
											"begin": 5719,
											"end": 5836,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 5869,
											"end": 5873,
											"name": "PUSH",
											"source": 7,
											"value": "20"
										},
										{
											"begin": 5861,
											"end": 5867,
											"name": "DUP4",
											"source": 7
										},
										{
											"begin": 5857,
											"end": 5874,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 5845,
											"end": 5874,
											"name": "SWAP2",
											"source": 7
										},
										{
											"begin": 5845,
											"end": 5874,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 5923,
											"end": 5926,
											"name": "DUP4",
											"source": 7
										},
										{
											"begin": 5915,
											"end": 5919,
											"name": "PUSH",
											"source": 7,
											"value": "1"
										},
										{
											"begin": 5907,
											"end": 5913,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 5903,
											"end": 5920,
											"name": "MUL",
											"source": 7
										},
										{
											"begin": 5893,
											"end": 5901,
											"name": "DUP4",
											"source": 7
										},
										{
											"begin": 5889,
											"end": 5921,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 5886,
											"end": 5927,
											"name": "GT",
											"source": 7
										},
										{
											"begin": 5883,
											"end": 6011,
											"name": "ISZERO",
											"source": 7
										},
										{
											"begin": 5883,
											"end": 6011,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "364"
										},
										{
											"begin": 5883,
											"end": 6011,
											"name": "JUMPI",
											"source": 7
										},
										{
											"begin": 5930,
											"end": 6009,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "365"
										},
										{
											"begin": 5930,
											"end": 6009,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "262"
										},
										{
											"begin": 5930,
											"end": 6009,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 5930,
											"end": 6009,
											"name": "tag",
											"source": 7,
											"value": "365"
										},
										{
											"begin": 5930,
											"end": 6009,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 5883,
											"end": 6011,
											"name": "tag",
											"source": 7,
											"value": "364"
										},
										{
											"begin": 5883,
											"end": 6011,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 5464,
											"end": 6017,
											"name": "SWAP3",
											"source": 7
										},
										{
											"begin": 5464,
											"end": 6017,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 5464,
											"end": 6017,
											"name": "SWAP3",
											"source": 7
										},
										{
											"begin": 5464,
											"end": 6017,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 5464,
											"end": 6017,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 5464,
											"end": 6017,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 6023,
											"end": 6697,
											"name": "tag",
											"source": 7,
											"value": "61"
										},
										{
											"begin": 6023,
											"end": 6697,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 6103,
											"end": 6109,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 6111,
											"end": 6117,
											"name": "DUP1",
											"source": 7
										},
										{
											"begin": 6119,
											"end": 6125,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 6168,
											"end": 6170,
											"name": "PUSH",
											"source": 7,
											"value": "40"
										},
										{
											"begin": 6156,
											"end": 6165,
											"name": "DUP5",
											"source": 7
										},
										{
											"begin": 6147,
											"end": 6154,
											"name": "DUP7",
											"source": 7
										},
										{
											"begin": 6143,
											"end": 6166,
											"name": "SUB",
											"source": 7
										},
										{
											"begin": 6139,
											"end": 6171,
											"name": "SLT",
											"source": 7
										},
										{
											"begin": 6136,
											"end": 6255,
											"name": "ISZERO",
											"source": 7
										},
										{
											"begin": 6136,
											"end": 6255,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "367"
										},
										{
											"begin": 6136,
											"end": 6255,
											"name": "JUMPI",
											"source": 7
										},
										{
											"begin": 6174,
											"end": 6253,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "368"
										},
										{
											"begin": 6174,
											"end": 6253,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "246"
										},
										{
											"begin": 6174,
											"end": 6253,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 6174,
											"end": 6253,
											"name": "tag",
											"source": 7,
											"value": "368"
										},
										{
											"begin": 6174,
											"end": 6253,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 6136,
											"end": 6255,
											"name": "tag",
											"source": 7,
											"value": "367"
										},
										{
											"begin": 6136,
											"end": 6255,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 6322,
											"end": 6323,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 6311,
											"end": 6320,
											"name": "DUP5",
											"source": 7
										},
										{
											"begin": 6307,
											"end": 6324,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 6294,
											"end": 6325,
											"name": "CALLDATALOAD",
											"source": 7
										},
										{
											"begin": 6352,
											"end": 6370,
											"name": "PUSH",
											"source": 7,
											"value": "FFFFFFFFFFFFFFFF"
										},
										{
											"begin": 6344,
											"end": 6350,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 6341,
											"end": 6371,
											"name": "GT",
											"source": 7
										},
										{
											"begin": 6338,
											"end": 6455,
											"name": "ISZERO",
											"source": 7
										},
										{
											"begin": 6338,
											"end": 6455,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "369"
										},
										{
											"begin": 6338,
											"end": 6455,
											"name": "JUMPI",
											"source": 7
										},
										{
											"begin": 6374,
											"end": 6453,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "370"
										},
										{
											"begin": 6374,
											"end": 6453,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "247"
										},
										{
											"begin": 6374,
											"end": 6453,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 6374,
											"end": 6453,
											"name": "tag",
											"source": 7,
											"value": "370"
										},
										{
											"begin": 6374,
											"end": 6453,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 6338,
											"end": 6455,
											"name": "tag",
											"source": 7,
											"value": "369"
										},
										{
											"begin": 6338,
											"end": 6455,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 6487,
											"end": 6552,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "371"
										},
										{
											"begin": 6544,
											"end": 6551,
											"name": "DUP7",
											"source": 7
										},
										{
											"begin": 6535,
											"end": 6541,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 6524,
											"end": 6533,
											"name": "DUP8",
											"source": 7
										},
										{
											"begin": 6520,
											"end": 6542,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 6487,
											"end": 6552,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "263"
										},
										{
											"begin": 6487,
											"end": 6552,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 6487,
											"end": 6552,
											"name": "tag",
											"source": 7,
											"value": "371"
										},
										{
											"begin": 6487,
											"end": 6552,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 6469,
											"end": 6552,
											"name": "SWAP4",
											"source": 7
										},
										{
											"begin": 6469,
											"end": 6552,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 6469,
											"end": 6552,
											"name": "SWAP4",
											"source": 7
										},
										{
											"begin": 6469,
											"end": 6552,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 6265,
											"end": 6562,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 6601,
											"end": 6603,
											"name": "PUSH",
											"source": 7,
											"value": "20"
										},
										{
											"begin": 6627,
											"end": 6680,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "372"
										},
										{
											"begin": 6672,
											"end": 6679,
											"name": "DUP7",
											"source": 7
										},
										{
											"begin": 6663,
											"end": 6669,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 6652,
											"end": 6661,
											"name": "DUP8",
											"source": 7
										},
										{
											"begin": 6648,
											"end": 6670,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 6627,
											"end": 6680,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "254"
										},
										{
											"begin": 6627,
											"end": 6680,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 6627,
											"end": 6680,
											"name": "tag",
											"source": 7,
											"value": "372"
										},
										{
											"begin": 6627,
											"end": 6680,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 6617,
											"end": 6680,
											"name": "SWAP2",
											"source": 7
										},
										{
											"begin": 6617,
											"end": 6680,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 6572,
											"end": 6690,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 6023,
											"end": 6697,
											"name": "SWAP3",
											"source": 7
										},
										{
											"begin": 6023,
											"end": 6697,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 6023,
											"end": 6697,
											"name": "SWAP3",
											"source": 7
										},
										{
											"begin": 6023,
											"end": 6697,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 6023,
											"end": 6697,
											"name": "SWAP3",
											"source": 7
										},
										{
											"begin": 6023,
											"end": 6697,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 6703,
											"end": 6811,
											"name": "tag",
											"source": 7,
											"value": "264"
										},
										{
											"begin": 6703,
											"end": 6811,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 6785,
											"end": 6786,
											"name": "PUSH",
											"source": 7,
											"value": "3"
										},
										{
											"begin": 6778,
											"end": 6783,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 6775,
											"end": 6787,
											"name": "LT",
											"source": 7
										},
										{
											"begin": 6765,
											"end": 6805,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "374"
										},
										{
											"begin": 6765,
											"end": 6805,
											"name": "JUMPI",
											"source": 7
										},
										{
											"begin": 6801,
											"end": 6802,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 6798,
											"end": 6799,
											"name": "DUP1",
											"source": 7
										},
										{
											"begin": 6791,
											"end": 6803,
											"name": "REVERT",
											"source": 7
										},
										{
											"begin": 6765,
											"end": 6805,
											"name": "tag",
											"source": 7,
											"value": "374"
										},
										{
											"begin": 6765,
											"end": 6805,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 6703,
											"end": 6811,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 6703,
											"end": 6811,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 6817,
											"end": 6974,
											"name": "tag",
											"source": 7,
											"value": "265"
										},
										{
											"begin": 6817,
											"end": 6974,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 6872,
											"end": 6877,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 6910,
											"end": 6916,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 6897,
											"end": 6917,
											"name": "CALLDATALOAD",
											"source": 7
										},
										{
											"begin": 6888,
											"end": 6917,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 6888,
											"end": 6917,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 6926,
											"end": 6968,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "376"
										},
										{
											"begin": 6962,
											"end": 6967,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 6926,
											"end": 6968,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "264"
										},
										{
											"begin": 6926,
											"end": 6968,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 6926,
											"end": 6968,
											"name": "tag",
											"source": 7,
											"value": "376"
										},
										{
											"begin": 6926,
											"end": 6968,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 6817,
											"end": 6974,
											"name": "SWAP3",
											"source": 7
										},
										{
											"begin": 6817,
											"end": 6974,
											"name": "SWAP2",
											"source": 7
										},
										{
											"begin": 6817,
											"end": 6974,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 6817,
											"end": 6974,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 6817,
											"end": 6974,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 6980,
											"end": 7472,
											"name": "tag",
											"source": 7,
											"value": "66"
										},
										{
											"begin": 6980,
											"end": 7472,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 7057,
											"end": 7063,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 7065,
											"end": 7071,
											"name": "DUP1",
											"source": 7
										},
										{
											"begin": 7114,
											"end": 7116,
											"name": "PUSH",
											"source": 7,
											"value": "40"
										},
										{
											"begin": 7102,
											"end": 7111,
											"name": "DUP4",
											"source": 7
										},
										{
											"begin": 7093,
											"end": 7100,
											"name": "DUP6",
											"source": 7
										},
										{
											"begin": 7089,
											"end": 7112,
											"name": "SUB",
											"source": 7
										},
										{
											"begin": 7085,
											"end": 7117,
											"name": "SLT",
											"source": 7
										},
										{
											"begin": 7082,
											"end": 7201,
											"name": "ISZERO",
											"source": 7
										},
										{
											"begin": 7082,
											"end": 7201,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "378"
										},
										{
											"begin": 7082,
											"end": 7201,
											"name": "JUMPI",
											"source": 7
										},
										{
											"begin": 7120,
											"end": 7199,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "379"
										},
										{
											"begin": 7120,
											"end": 7199,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "246"
										},
										{
											"begin": 7120,
											"end": 7199,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 7120,
											"end": 7199,
											"name": "tag",
											"source": 7,
											"value": "379"
										},
										{
											"begin": 7120,
											"end": 7199,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 7082,
											"end": 7201,
											"name": "tag",
											"source": 7,
											"value": "378"
										},
										{
											"begin": 7082,
											"end": 7201,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 7240,
											"end": 7241,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 7265,
											"end": 7318,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "380"
										},
										{
											"begin": 7310,
											"end": 7317,
											"name": "DUP6",
											"source": 7
										},
										{
											"begin": 7301,
											"end": 7307,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 7290,
											"end": 7299,
											"name": "DUP7",
											"source": 7
										},
										{
											"begin": 7286,
											"end": 7308,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 7265,
											"end": 7318,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "254"
										},
										{
											"begin": 7265,
											"end": 7318,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 7265,
											"end": 7318,
											"name": "tag",
											"source": 7,
											"value": "380"
										},
										{
											"begin": 7265,
											"end": 7318,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 7255,
											"end": 7318,
											"name": "SWAP3",
											"source": 7
										},
										{
											"begin": 7255,
											"end": 7318,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 7211,
											"end": 7328,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 7367,
											"end": 7369,
											"name": "PUSH",
											"source": 7,
											"value": "20"
										},
										{
											"begin": 7393,
											"end": 7455,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "381"
										},
										{
											"begin": 7447,
											"end": 7454,
											"name": "DUP6",
											"source": 7
										},
										{
											"begin": 7438,
											"end": 7444,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 7427,
											"end": 7436,
											"name": "DUP7",
											"source": 7
										},
										{
											"begin": 7423,
											"end": 7445,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 7393,
											"end": 7455,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "265"
										},
										{
											"begin": 7393,
											"end": 7455,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 7393,
											"end": 7455,
											"name": "tag",
											"source": 7,
											"value": "381"
										},
										{
											"begin": 7393,
											"end": 7455,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 7383,
											"end": 7455,
											"name": "SWAP2",
											"source": 7
										},
										{
											"begin": 7383,
											"end": 7455,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 7338,
											"end": 7465,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 6980,
											"end": 7472,
											"name": "SWAP3",
											"source": 7
										},
										{
											"begin": 6980,
											"end": 7472,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 6980,
											"end": 7472,
											"name": "SWAP3",
											"source": 7
										},
										{
											"begin": 6980,
											"end": 7472,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 6980,
											"end": 7472,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 6980,
											"end": 7472,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 7478,
											"end": 7807,
											"name": "tag",
											"source": 7,
											"value": "73"
										},
										{
											"begin": 7478,
											"end": 7807,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 7537,
											"end": 7543,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 7586,
											"end": 7588,
											"name": "PUSH",
											"source": 7,
											"value": "20"
										},
										{
											"begin": 7574,
											"end": 7583,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 7565,
											"end": 7572,
											"name": "DUP5",
											"source": 7
										},
										{
											"begin": 7561,
											"end": 7584,
											"name": "SUB",
											"source": 7
										},
										{
											"begin": 7557,
											"end": 7589,
											"name": "SLT",
											"source": 7
										},
										{
											"begin": 7554,
											"end": 7673,
											"name": "ISZERO",
											"source": 7
										},
										{
											"begin": 7554,
											"end": 7673,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "383"
										},
										{
											"begin": 7554,
											"end": 7673,
											"name": "JUMPI",
											"source": 7
										},
										{
											"begin": 7592,
											"end": 7671,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "384"
										},
										{
											"begin": 7592,
											"end": 7671,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "246"
										},
										{
											"begin": 7592,
											"end": 7671,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 7592,
											"end": 7671,
											"name": "tag",
											"source": 7,
											"value": "384"
										},
										{
											"begin": 7592,
											"end": 7671,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 7554,
											"end": 7673,
											"name": "tag",
											"source": 7,
											"value": "383"
										},
										{
											"begin": 7554,
											"end": 7673,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 7712,
											"end": 7713,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 7737,
											"end": 7790,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "385"
										},
										{
											"begin": 7782,
											"end": 7789,
											"name": "DUP5",
											"source": 7
										},
										{
											"begin": 7773,
											"end": 7779,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 7762,
											"end": 7771,
											"name": "DUP6",
											"source": 7
										},
										{
											"begin": 7758,
											"end": 7780,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 7737,
											"end": 7790,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "254"
										},
										{
											"begin": 7737,
											"end": 7790,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 7737,
											"end": 7790,
											"name": "tag",
											"source": 7,
											"value": "385"
										},
										{
											"begin": 7737,
											"end": 7790,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 7727,
											"end": 7790,
											"name": "SWAP2",
											"source": 7
										},
										{
											"begin": 7727,
											"end": 7790,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 7683,
											"end": 7800,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 7478,
											"end": 7807,
											"name": "SWAP3",
											"source": 7
										},
										{
											"begin": 7478,
											"end": 7807,
											"name": "SWAP2",
											"source": 7
										},
										{
											"begin": 7478,
											"end": 7807,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 7478,
											"end": 7807,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 7478,
											"end": 7807,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 7813,
											"end": 7927,
											"name": "tag",
											"source": 7,
											"value": "266"
										},
										{
											"begin": 7813,
											"end": 7927,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 7880,
											"end": 7886,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 7914,
											"end": 7919,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 7908,
											"end": 7920,
											"name": "MLOAD",
											"source": 7
										},
										{
											"begin": 7898,
											"end": 7920,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 7898,
											"end": 7920,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 7813,
											"end": 7927,
											"name": "SWAP2",
											"source": 7
										},
										{
											"begin": 7813,
											"end": 7927,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 7813,
											"end": 7927,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 7813,
											"end": 7927,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 7933,
											"end": 8107,
											"name": "tag",
											"source": 7,
											"value": "267"
										},
										{
											"begin": 7933,
											"end": 8107,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 8022,
											"end": 8033,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 8056,
											"end": 8062,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 8051,
											"end": 8054,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 8044,
											"end": 8063,
											"name": "MSTORE",
											"source": 7
										},
										{
											"begin": 8096,
											"end": 8100,
											"name": "PUSH",
											"source": 7,
											"value": "20"
										},
										{
											"begin": 8091,
											"end": 8094,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 8087,
											"end": 8101,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 8072,
											"end": 8101,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 8072,
											"end": 8101,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 7933,
											"end": 8107,
											"name": "SWAP3",
											"source": 7
										},
										{
											"begin": 7933,
											"end": 8107,
											"name": "SWAP2",
											"source": 7
										},
										{
											"begin": 7933,
											"end": 8107,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 7933,
											"end": 8107,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 7933,
											"end": 8107,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 8113,
											"end": 8245,
											"name": "tag",
											"source": 7,
											"value": "268"
										},
										{
											"begin": 8113,
											"end": 8245,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 8180,
											"end": 8184,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 8203,
											"end": 8206,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 8195,
											"end": 8206,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 8195,
											"end": 8206,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 8233,
											"end": 8237,
											"name": "PUSH",
											"source": 7,
											"value": "20"
										},
										{
											"begin": 8228,
											"end": 8231,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 8224,
											"end": 8238,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 8216,
											"end": 8238,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 8216,
											"end": 8238,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 8113,
											"end": 8245,
											"name": "SWAP2",
											"source": 7
										},
										{
											"begin": 8113,
											"end": 8245,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 8113,
											"end": 8245,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 8113,
											"end": 8245,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 8251,
											"end": 8359,
											"name": "tag",
											"source": 7,
											"value": "269"
										},
										{
											"begin": 8251,
											"end": 8359,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 8328,
											"end": 8352,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "390"
										},
										{
											"begin": 8346,
											"end": 8351,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 8328,
											"end": 8352,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "249"
										},
										{
											"begin": 8328,
											"end": 8352,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 8328,
											"end": 8352,
											"name": "tag",
											"source": 7,
											"value": "390"
										},
										{
											"begin": 8328,
											"end": 8352,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 8323,
											"end": 8326,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 8316,
											"end": 8353,
											"name": "MSTORE",
											"source": 7
										},
										{
											"begin": 8251,
											"end": 8359,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 8251,
											"end": 8359,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 8251,
											"end": 8359,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 8365,
											"end": 8544,
											"name": "tag",
											"source": 7,
											"value": "270"
										},
										{
											"begin": 8365,
											"end": 8544,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 8434,
											"end": 8444,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 8455,
											"end": 8501,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "392"
										},
										{
											"begin": 8497,
											"end": 8500,
											"name": "DUP4",
											"source": 7
										},
										{
											"begin": 8489,
											"end": 8495,
											"name": "DUP4",
											"source": 7
										},
										{
											"begin": 8455,
											"end": 8501,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "269"
										},
										{
											"begin": 8455,
											"end": 8501,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 8455,
											"end": 8501,
											"name": "tag",
											"source": 7,
											"value": "392"
										},
										{
											"begin": 8455,
											"end": 8501,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 8533,
											"end": 8537,
											"name": "PUSH",
											"source": 7,
											"value": "20"
										},
										{
											"begin": 8528,
											"end": 8531,
											"name": "DUP4",
											"source": 7
										},
										{
											"begin": 8524,
											"end": 8538,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 8510,
											"end": 8538,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 8510,
											"end": 8538,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 8365,
											"end": 8544,
											"name": "SWAP3",
											"source": 7
										},
										{
											"begin": 8365,
											"end": 8544,
											"name": "SWAP2",
											"source": 7
										},
										{
											"begin": 8365,
											"end": 8544,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 8365,
											"end": 8544,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 8365,
											"end": 8544,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 8550,
											"end": 8663,
											"name": "tag",
											"source": 7,
											"value": "271"
										},
										{
											"begin": 8550,
											"end": 8663,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 8620,
											"end": 8624,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 8652,
											"end": 8656,
											"name": "PUSH",
											"source": 7,
											"value": "20"
										},
										{
											"begin": 8647,
											"end": 8650,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 8643,
											"end": 8657,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 8635,
											"end": 8657,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 8635,
											"end": 8657,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 8550,
											"end": 8663,
											"name": "SWAP2",
											"source": 7
										},
										{
											"begin": 8550,
											"end": 8663,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 8550,
											"end": 8663,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 8550,
											"end": 8663,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 8699,
											"end": 9411,
											"name": "tag",
											"source": 7,
											"value": "272"
										},
										{
											"begin": 8699,
											"end": 9411,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 8808,
											"end": 8811,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 8837,
											"end": 8891,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "395"
										},
										{
											"begin": 8885,
											"end": 8890,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 8837,
											"end": 8891,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "266"
										},
										{
											"begin": 8837,
											"end": 8891,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 8837,
											"end": 8891,
											"name": "tag",
											"source": 7,
											"value": "395"
										},
										{
											"begin": 8837,
											"end": 8891,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 8907,
											"end": 8983,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "396"
										},
										{
											"begin": 8976,
											"end": 8982,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 8971,
											"end": 8974,
											"name": "DUP6",
											"source": 7
										},
										{
											"begin": 8907,
											"end": 8983,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "267"
										},
										{
											"begin": 8907,
											"end": 8983,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 8907,
											"end": 8983,
											"name": "tag",
											"source": 7,
											"value": "396"
										},
										{
											"begin": 8907,
											"end": 8983,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 8900,
											"end": 8983,
											"name": "SWAP4",
											"source": 7
										},
										{
											"begin": 8900,
											"end": 8983,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 9007,
											"end": 9063,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "397"
										},
										{
											"begin": 9057,
											"end": 9062,
											"name": "DUP4",
											"source": 7
										},
										{
											"begin": 9007,
											"end": 9063,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "268"
										},
										{
											"begin": 9007,
											"end": 9063,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 9007,
											"end": 9063,
											"name": "tag",
											"source": 7,
											"value": "397"
										},
										{
											"begin": 9007,
											"end": 9063,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 9086,
											"end": 9093,
											"name": "DUP1",
											"source": 7
										},
										{
											"begin": 9117,
											"end": 9118,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 9102,
											"end": 9386,
											"name": "tag",
											"source": 7,
											"value": "398"
										},
										{
											"begin": 9102,
											"end": 9386,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 9127,
											"end": 9133,
											"name": "DUP4",
											"source": 7
										},
										{
											"begin": 9124,
											"end": 9125,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 9121,
											"end": 9134,
											"name": "LT",
											"source": 7
										},
										{
											"begin": 9102,
											"end": 9386,
											"name": "ISZERO",
											"source": 7
										},
										{
											"begin": 9102,
											"end": 9386,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "400"
										},
										{
											"begin": 9102,
											"end": 9386,
											"name": "JUMPI",
											"source": 7
										},
										{
											"begin": 9203,
											"end": 9209,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 9197,
											"end": 9210,
											"name": "MLOAD",
											"source": 7
										},
										{
											"begin": 9230,
											"end": 9293,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "401"
										},
										{
											"begin": 9289,
											"end": 9292,
											"name": "DUP9",
											"source": 7
										},
										{
											"begin": 9274,
											"end": 9287,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 9230,
											"end": 9293,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "270"
										},
										{
											"begin": 9230,
											"end": 9293,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 9230,
											"end": 9293,
											"name": "tag",
											"source": 7,
											"value": "401"
										},
										{
											"begin": 9230,
											"end": 9293,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 9223,
											"end": 9293,
											"name": "SWAP8",
											"source": 7
										},
										{
											"begin": 9223,
											"end": 9293,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 9316,
											"end": 9376,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "402"
										},
										{
											"begin": 9369,
											"end": 9375,
											"name": "DUP4",
											"source": 7
										},
										{
											"begin": 9316,
											"end": 9376,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "271"
										},
										{
											"begin": 9316,
											"end": 9376,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 9316,
											"end": 9376,
											"name": "tag",
											"source": 7,
											"value": "402"
										},
										{
											"begin": 9316,
											"end": 9376,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 9306,
											"end": 9376,
											"name": "SWAP3",
											"source": 7
										},
										{
											"begin": 9306,
											"end": 9376,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 9162,
											"end": 9386,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 9149,
											"end": 9150,
											"name": "PUSH",
											"source": 7,
											"value": "1"
										},
										{
											"begin": 9146,
											"end": 9147,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 9142,
											"end": 9151,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 9137,
											"end": 9151,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 9137,
											"end": 9151,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 9102,
											"end": 9386,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "398"
										},
										{
											"begin": 9102,
											"end": 9386,
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 9102,
											"end": 9386,
											"name": "tag",
											"source": 7,
											"value": "400"
										},
										{
											"begin": 9102,
											"end": 9386,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 9106,
											"end": 9120,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 9402,
											"end": 9405,
											"name": "DUP6",
											"source": 7
										},
										{
											"begin": 9395,
											"end": 9405,
											"name": "SWAP4",
											"source": 7
										},
										{
											"begin": 9395,
											"end": 9405,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 8813,
											"end": 9411,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 8813,
											"end": 9411,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 8813,
											"end": 9411,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 8699,
											"end": 9411,
											"name": "SWAP3",
											"source": 7
										},
										{
											"begin": 8699,
											"end": 9411,
											"name": "SWAP2",
											"source": 7
										},
										{
											"begin": 8699,
											"end": 9411,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 8699,
											"end": 9411,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 8699,
											"end": 9411,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 9417,
											"end": 9576,
											"name": "tag",
											"source": 7,
											"value": "273"
										},
										{
											"begin": 9417,
											"end": 9576,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 9491,
											"end": 9502,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 9525,
											"end": 9531,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 9520,
											"end": 9523,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 9513,
											"end": 9532,
											"name": "MSTORE",
											"source": 7
										},
										{
											"begin": 9565,
											"end": 9569,
											"name": "PUSH",
											"source": 7,
											"value": "20"
										},
										{
											"begin": 9560,
											"end": 9563,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 9556,
											"end": 9570,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 9541,
											"end": 9570,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 9541,
											"end": 9570,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 9417,
											"end": 9576,
											"name": "SWAP3",
											"source": 7
										},
										{
											"begin": 9417,
											"end": 9576,
											"name": "SWAP2",
											"source": 7
										},
										{
											"begin": 9417,
											"end": 9576,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 9417,
											"end": 9576,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 9417,
											"end": 9576,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 9582,
											"end": 9939,
											"name": "tag",
											"source": 7,
											"value": "274"
										},
										{
											"begin": 9582,
											"end": 9939,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 9660,
											"end": 9663,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 9688,
											"end": 9727,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "405"
										},
										{
											"begin": 9721,
											"end": 9726,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 9688,
											"end": 9727,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "240"
										},
										{
											"begin": 9688,
											"end": 9727,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 9688,
											"end": 9727,
											"name": "tag",
											"source": 7,
											"value": "405"
										},
										{
											"begin": 9688,
											"end": 9727,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 9743,
											"end": 9804,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "406"
										},
										{
											"begin": 9797,
											"end": 9803,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 9792,
											"end": 9795,
											"name": "DUP6",
											"source": 7
										},
										{
											"begin": 9743,
											"end": 9804,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "273"
										},
										{
											"begin": 9743,
											"end": 9804,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 9743,
											"end": 9804,
											"name": "tag",
											"source": 7,
											"value": "406"
										},
										{
											"begin": 9743,
											"end": 9804,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 9736,
											"end": 9804,
											"name": "SWAP4",
											"source": 7
										},
										{
											"begin": 9736,
											"end": 9804,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 9813,
											"end": 9878,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "407"
										},
										{
											"begin": 9871,
											"end": 9877,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 9866,
											"end": 9869,
											"name": "DUP6",
											"source": 7
										},
										{
											"begin": 9859,
											"end": 9863,
											"name": "PUSH",
											"source": 7,
											"value": "20"
										},
										{
											"begin": 9852,
											"end": 9857,
											"name": "DUP7",
											"source": 7
										},
										{
											"begin": 9848,
											"end": 9864,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 9813,
											"end": 9878,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "242"
										},
										{
											"begin": 9813,
											"end": 9878,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 9813,
											"end": 9878,
											"name": "tag",
											"source": 7,
											"value": "407"
										},
										{
											"begin": 9813,
											"end": 9878,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 9903,
											"end": 9932,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "408"
										},
										{
											"begin": 9925,
											"end": 9931,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 9903,
											"end": 9932,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "243"
										},
										{
											"begin": 9903,
											"end": 9932,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 9903,
											"end": 9932,
											"name": "tag",
											"source": 7,
											"value": "408"
										},
										{
											"begin": 9903,
											"end": 9932,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 9898,
											"end": 9901,
											"name": "DUP5",
											"source": 7
										},
										{
											"begin": 9894,
											"end": 9933,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 9887,
											"end": 9933,
											"name": "SWAP2",
											"source": 7
										},
										{
											"begin": 9887,
											"end": 9933,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 9664,
											"end": 9939,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 9582,
											"end": 9939,
											"name": "SWAP3",
											"source": 7
										},
										{
											"begin": 9582,
											"end": 9939,
											"name": "SWAP2",
											"source": 7
										},
										{
											"begin": 9582,
											"end": 9939,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 9582,
											"end": 9939,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 9582,
											"end": 9939,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 9945,
											"end": 10053,
											"name": "tag",
											"source": 7,
											"value": "275"
										},
										{
											"begin": 9945,
											"end": 10053,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 10022,
											"end": 10046,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "410"
										},
										{
											"begin": 10040,
											"end": 10045,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 10022,
											"end": 10046,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "252"
										},
										{
											"begin": 10022,
											"end": 10046,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 10022,
											"end": 10046,
											"name": "tag",
											"source": 7,
											"value": "410"
										},
										{
											"begin": 10022,
											"end": 10046,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 10017,
											"end": 10020,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 10010,
											"end": 10047,
											"name": "MSTORE",
											"source": 7
										},
										{
											"begin": 9945,
											"end": 10053,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 9945,
											"end": 10053,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 9945,
											"end": 10053,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 10059,
											"end": 10158,
											"name": "tag",
											"source": 7,
											"value": "276"
										},
										{
											"begin": 10059,
											"end": 10158,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 10130,
											"end": 10151,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "412"
										},
										{
											"begin": 10145,
											"end": 10150,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 10130,
											"end": 10151,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "255"
										},
										{
											"begin": 10130,
											"end": 10151,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 10130,
											"end": 10151,
											"name": "tag",
											"source": 7,
											"value": "412"
										},
										{
											"begin": 10130,
											"end": 10151,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 10125,
											"end": 10128,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 10118,
											"end": 10152,
											"name": "MSTORE",
											"source": 7
										},
										{
											"begin": 10059,
											"end": 10158,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 10059,
											"end": 10158,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 10059,
											"end": 10158,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 10250,
											"end": 12224,
											"name": "tag",
											"source": 7,
											"value": "277"
										},
										{
											"begin": 10250,
											"end": 12224,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 10385,
											"end": 10388,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 10421,
											"end": 10427,
											"name": "PUSH",
											"source": 7,
											"value": "120"
										},
										{
											"begin": 10416,
											"end": 10419,
											"name": "DUP4",
											"source": 7
										},
										{
											"begin": 10412,
											"end": 10428,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 10512,
											"end": 10516,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 10505,
											"end": 10510,
											"name": "DUP4",
											"source": 7
										},
										{
											"begin": 10501,
											"end": 10517,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 10495,
											"end": 10518,
											"name": "MLOAD",
											"source": 7
										},
										{
											"begin": 10565,
											"end": 10568,
											"name": "DUP5",
											"source": 7
										},
										{
											"begin": 10559,
											"end": 10563,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 10555,
											"end": 10569,
											"name": "SUB",
											"source": 7
										},
										{
											"begin": 10548,
											"end": 10552,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 10543,
											"end": 10546,
											"name": "DUP7",
											"source": 7
										},
										{
											"begin": 10539,
											"end": 10553,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 10532,
											"end": 10570,
											"name": "MSTORE",
											"source": 7
										},
										{
											"begin": 10591,
											"end": 10694,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "414"
										},
										{
											"begin": 10689,
											"end": 10693,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 10675,
											"end": 10687,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 10591,
											"end": 10694,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "272"
										},
										{
											"begin": 10591,
											"end": 10694,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 10591,
											"end": 10694,
											"name": "tag",
											"source": 7,
											"value": "414"
										},
										{
											"begin": 10591,
											"end": 10694,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 10583,
											"end": 10694,
											"name": "SWAP2",
											"source": 7
										},
										{
											"begin": 10583,
											"end": 10694,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 10438,
											"end": 10705,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 10792,
											"end": 10796,
											"name": "PUSH",
											"source": 7,
											"value": "20"
										},
										{
											"begin": 10785,
											"end": 10790,
											"name": "DUP4",
											"source": 7
										},
										{
											"begin": 10781,
											"end": 10797,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 10775,
											"end": 10798,
											"name": "MLOAD",
											"source": 7
										},
										{
											"begin": 10845,
											"end": 10848,
											"name": "DUP5",
											"source": 7
										},
										{
											"begin": 10839,
											"end": 10843,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 10835,
											"end": 10849,
											"name": "SUB",
											"source": 7
										},
										{
											"begin": 10828,
											"end": 10832,
											"name": "PUSH",
											"source": 7,
											"value": "20"
										},
										{
											"begin": 10823,
											"end": 10826,
											"name": "DUP7",
											"source": 7
										},
										{
											"begin": 10819,
											"end": 10833,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 10812,
											"end": 10850,
											"name": "MSTORE",
											"source": 7
										},
										{
											"begin": 10871,
											"end": 10944,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "415"
										},
										{
											"begin": 10939,
											"end": 10943,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 10925,
											"end": 10937,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 10871,
											"end": 10944,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "274"
										},
										{
											"begin": 10871,
											"end": 10944,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 10871,
											"end": 10944,
											"name": "tag",
											"source": 7,
											"value": "415"
										},
										{
											"begin": 10871,
											"end": 10944,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 10863,
											"end": 10944,
											"name": "SWAP2",
											"source": 7
										},
										{
											"begin": 10863,
											"end": 10944,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 10715,
											"end": 10955,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 11039,
											"end": 11043,
											"name": "PUSH",
											"source": 7,
											"value": "40"
										},
										{
											"begin": 11032,
											"end": 11037,
											"name": "DUP4",
											"source": 7
										},
										{
											"begin": 11028,
											"end": 11044,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 11022,
											"end": 11045,
											"name": "MLOAD",
											"source": 7
										},
										{
											"begin": 11058,
											"end": 11121,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "416"
										},
										{
											"begin": 11115,
											"end": 11119,
											"name": "PUSH",
											"source": 7,
											"value": "40"
										},
										{
											"begin": 11110,
											"end": 11113,
											"name": "DUP7",
											"source": 7
										},
										{
											"begin": 11106,
											"end": 11120,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 11092,
											"end": 11104,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 11058,
											"end": 11121,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "275"
										},
										{
											"begin": 11058,
											"end": 11121,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 11058,
											"end": 11121,
											"name": "tag",
											"source": 7,
											"value": "416"
										},
										{
											"begin": 11058,
											"end": 11121,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 10965,
											"end": 11131,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 11219,
											"end": 11223,
											"name": "PUSH",
											"source": 7,
											"value": "60"
										},
										{
											"begin": 11212,
											"end": 11217,
											"name": "DUP4",
											"source": 7
										},
										{
											"begin": 11208,
											"end": 11224,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 11202,
											"end": 11225,
											"name": "MLOAD",
											"source": 7
										},
										{
											"begin": 11238,
											"end": 11301,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "417"
										},
										{
											"begin": 11295,
											"end": 11299,
											"name": "PUSH",
											"source": 7,
											"value": "60"
										},
										{
											"begin": 11290,
											"end": 11293,
											"name": "DUP7",
											"source": 7
										},
										{
											"begin": 11286,
											"end": 11300,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 11272,
											"end": 11284,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 11238,
											"end": 11301,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "275"
										},
										{
											"begin": 11238,
											"end": 11301,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 11238,
											"end": 11301,
											"name": "tag",
											"source": 7,
											"value": "417"
										},
										{
											"begin": 11238,
											"end": 11301,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 11141,
											"end": 11311,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 11397,
											"end": 11401,
											"name": "PUSH",
											"source": 7,
											"value": "80"
										},
										{
											"begin": 11390,
											"end": 11395,
											"name": "DUP4",
											"source": 7
										},
										{
											"begin": 11386,
											"end": 11402,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 11380,
											"end": 11403,
											"name": "MLOAD",
											"source": 7
										},
										{
											"begin": 11416,
											"end": 11479,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "418"
										},
										{
											"begin": 11473,
											"end": 11477,
											"name": "PUSH",
											"source": 7,
											"value": "80"
										},
										{
											"begin": 11468,
											"end": 11471,
											"name": "DUP7",
											"source": 7
										},
										{
											"begin": 11464,
											"end": 11478,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 11450,
											"end": 11462,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 11416,
											"end": 11479,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "275"
										},
										{
											"begin": 11416,
											"end": 11479,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 11416,
											"end": 11479,
											"name": "tag",
											"source": 7,
											"value": "418"
										},
										{
											"begin": 11416,
											"end": 11479,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 11321,
											"end": 11489,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 11579,
											"end": 11583,
											"name": "PUSH",
											"source": 7,
											"value": "A0"
										},
										{
											"begin": 11572,
											"end": 11577,
											"name": "DUP4",
											"source": 7
										},
										{
											"begin": 11568,
											"end": 11584,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 11562,
											"end": 11585,
											"name": "MLOAD",
											"source": 7
										},
										{
											"begin": 11598,
											"end": 11661,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "419"
										},
										{
											"begin": 11655,
											"end": 11659,
											"name": "PUSH",
											"source": 7,
											"value": "A0"
										},
										{
											"begin": 11650,
											"end": 11653,
											"name": "DUP7",
											"source": 7
										},
										{
											"begin": 11646,
											"end": 11660,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 11632,
											"end": 11644,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 11598,
											"end": 11661,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "275"
										},
										{
											"begin": 11598,
											"end": 11661,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 11598,
											"end": 11661,
											"name": "tag",
											"source": 7,
											"value": "419"
										},
										{
											"begin": 11598,
											"end": 11661,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 11499,
											"end": 11671,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 11761,
											"end": 11765,
											"name": "PUSH",
											"source": 7,
											"value": "C0"
										},
										{
											"begin": 11754,
											"end": 11759,
											"name": "DUP4",
											"source": 7
										},
										{
											"begin": 11750,
											"end": 11766,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 11744,
											"end": 11767,
											"name": "MLOAD",
											"source": 7
										},
										{
											"begin": 11780,
											"end": 11843,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "420"
										},
										{
											"begin": 11837,
											"end": 11841,
											"name": "PUSH",
											"source": 7,
											"value": "C0"
										},
										{
											"begin": 11832,
											"end": 11835,
											"name": "DUP7",
											"source": 7
										},
										{
											"begin": 11828,
											"end": 11842,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 11814,
											"end": 11826,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 11780,
											"end": 11843,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "275"
										},
										{
											"begin": 11780,
											"end": 11843,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 11780,
											"end": 11843,
											"name": "tag",
											"source": 7,
											"value": "420"
										},
										{
											"begin": 11780,
											"end": 11843,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 11681,
											"end": 11853,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 11937,
											"end": 11941,
											"name": "PUSH",
											"source": 7,
											"value": "E0"
										},
										{
											"begin": 11930,
											"end": 11935,
											"name": "DUP4",
											"source": 7
										},
										{
											"begin": 11926,
											"end": 11942,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 11920,
											"end": 11943,
											"name": "MLOAD",
											"source": 7
										},
										{
											"begin": 11956,
											"end": 12013,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "421"
										},
										{
											"begin": 12007,
											"end": 12011,
											"name": "PUSH",
											"source": 7,
											"value": "E0"
										},
										{
											"begin": 12002,
											"end": 12005,
											"name": "DUP7",
											"source": 7
										},
										{
											"begin": 11998,
											"end": 12012,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 11984,
											"end": 11996,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 11956,
											"end": 12013,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "276"
										},
										{
											"begin": 11956,
											"end": 12013,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 11956,
											"end": 12013,
											"name": "tag",
											"source": 7,
											"value": "421"
										},
										{
											"begin": 11956,
											"end": 12013,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 11863,
											"end": 12023,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 12107,
											"end": 12113,
											"name": "PUSH",
											"source": 7,
											"value": "100"
										},
										{
											"begin": 12100,
											"end": 12105,
											"name": "DUP4",
											"source": 7
										},
										{
											"begin": 12096,
											"end": 12114,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 12090,
											"end": 12115,
											"name": "MLOAD",
											"source": 7
										},
										{
											"begin": 12128,
											"end": 12187,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "422"
										},
										{
											"begin": 12179,
											"end": 12185,
											"name": "PUSH",
											"source": 7,
											"value": "100"
										},
										{
											"begin": 12174,
											"end": 12177,
											"name": "DUP7",
											"source": 7
										},
										{
											"begin": 12170,
											"end": 12186,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 12156,
											"end": 12168,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 12128,
											"end": 12187,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "276"
										},
										{
											"begin": 12128,
											"end": 12187,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 12128,
											"end": 12187,
											"name": "tag",
											"source": 7,
											"value": "422"
										},
										{
											"begin": 12128,
											"end": 12187,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 12033,
											"end": 12197,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 12214,
											"end": 12218,
											"name": "DUP1",
											"source": 7
										},
										{
											"begin": 12207,
											"end": 12218,
											"name": "SWAP2",
											"source": 7
										},
										{
											"begin": 12207,
											"end": 12218,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 10390,
											"end": 12224,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 10250,
											"end": 12224,
											"name": "SWAP3",
											"source": 7
										},
										{
											"begin": 10250,
											"end": 12224,
											"name": "SWAP2",
											"source": 7
										},
										{
											"begin": 10250,
											"end": 12224,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 10250,
											"end": 12224,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 10250,
											"end": 12224,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 12230,
											"end": 12635,
											"name": "tag",
											"source": 7,
											"value": "76"
										},
										{
											"begin": 12230,
											"end": 12635,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 12389,
											"end": 12393,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 12427,
											"end": 12429,
											"name": "PUSH",
											"source": 7,
											"value": "20"
										},
										{
											"begin": 12416,
											"end": 12425,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 12412,
											"end": 12430,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 12404,
											"end": 12430,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 12404,
											"end": 12430,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 12476,
											"end": 12485,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 12470,
											"end": 12474,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 12466,
											"end": 12486,
											"name": "SUB",
											"source": 7
										},
										{
											"begin": 12462,
											"end": 12463,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 12451,
											"end": 12460,
											"name": "DUP4",
											"source": 7
										},
										{
											"begin": 12447,
											"end": 12464,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 12440,
											"end": 12487,
											"name": "MSTORE",
											"source": 7
										},
										{
											"begin": 12504,
											"end": 12628,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "424"
										},
										{
											"begin": 12623,
											"end": 12627,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 12614,
											"end": 12620,
											"name": "DUP5",
											"source": 7
										},
										{
											"begin": 12504,
											"end": 12628,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "277"
										},
										{
											"begin": 12504,
											"end": 12628,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 12504,
											"end": 12628,
											"name": "tag",
											"source": 7,
											"value": "424"
										},
										{
											"begin": 12504,
											"end": 12628,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 12496,
											"end": 12628,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 12496,
											"end": 12628,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 12230,
											"end": 12635,
											"name": "SWAP3",
											"source": 7
										},
										{
											"begin": 12230,
											"end": 12635,
											"name": "SWAP2",
											"source": 7
										},
										{
											"begin": 12230,
											"end": 12635,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 12230,
											"end": 12635,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 12230,
											"end": 12635,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 12641,
											"end": 13115,
											"name": "tag",
											"source": 7,
											"value": "86"
										},
										{
											"begin": 12641,
											"end": 13115,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 12709,
											"end": 12715,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 12717,
											"end": 12723,
											"name": "DUP1",
											"source": 7
										},
										{
											"begin": 12766,
											"end": 12768,
											"name": "PUSH",
											"source": 7,
											"value": "40"
										},
										{
											"begin": 12754,
											"end": 12763,
											"name": "DUP4",
											"source": 7
										},
										{
											"begin": 12745,
											"end": 12752,
											"name": "DUP6",
											"source": 7
										},
										{
											"begin": 12741,
											"end": 12764,
											"name": "SUB",
											"source": 7
										},
										{
											"begin": 12737,
											"end": 12769,
											"name": "SLT",
											"source": 7
										},
										{
											"begin": 12734,
											"end": 12853,
											"name": "ISZERO",
											"source": 7
										},
										{
											"begin": 12734,
											"end": 12853,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "426"
										},
										{
											"begin": 12734,
											"end": 12853,
											"name": "JUMPI",
											"source": 7
										},
										{
											"begin": 12772,
											"end": 12851,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "427"
										},
										{
											"begin": 12772,
											"end": 12851,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "246"
										},
										{
											"begin": 12772,
											"end": 12851,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 12772,
											"end": 12851,
											"name": "tag",
											"source": 7,
											"value": "427"
										},
										{
											"begin": 12772,
											"end": 12851,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 12734,
											"end": 12853,
											"name": "tag",
											"source": 7,
											"value": "426"
										},
										{
											"begin": 12734,
											"end": 12853,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 12892,
											"end": 12893,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 12917,
											"end": 12970,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "428"
										},
										{
											"begin": 12962,
											"end": 12969,
											"name": "DUP6",
											"source": 7
										},
										{
											"begin": 12953,
											"end": 12959,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 12942,
											"end": 12951,
											"name": "DUP7",
											"source": 7
										},
										{
											"begin": 12938,
											"end": 12960,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 12917,
											"end": 12970,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "251"
										},
										{
											"begin": 12917,
											"end": 12970,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 12917,
											"end": 12970,
											"name": "tag",
											"source": 7,
											"value": "428"
										},
										{
											"begin": 12917,
											"end": 12970,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 12907,
											"end": 12970,
											"name": "SWAP3",
											"source": 7
										},
										{
											"begin": 12907,
											"end": 12970,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 12863,
											"end": 12980,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 13019,
											"end": 13021,
											"name": "PUSH",
											"source": 7,
											"value": "20"
										},
										{
											"begin": 13045,
											"end": 13098,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "429"
										},
										{
											"begin": 13090,
											"end": 13097,
											"name": "DUP6",
											"source": 7
										},
										{
											"begin": 13081,
											"end": 13087,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 13070,
											"end": 13079,
											"name": "DUP7",
											"source": 7
										},
										{
											"begin": 13066,
											"end": 13088,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 13045,
											"end": 13098,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "251"
										},
										{
											"begin": 13045,
											"end": 13098,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 13045,
											"end": 13098,
											"name": "tag",
											"source": 7,
											"value": "429"
										},
										{
											"begin": 13045,
											"end": 13098,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 13035,
											"end": 13098,
											"name": "SWAP2",
											"source": 7
										},
										{
											"begin": 13035,
											"end": 13098,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 12990,
											"end": 13108,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 12641,
											"end": 13115,
											"name": "SWAP3",
											"source": 7
										},
										{
											"begin": 12641,
											"end": 13115,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 12641,
											"end": 13115,
											"name": "SWAP3",
											"source": 7
										},
										{
											"begin": 12641,
											"end": 13115,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 12641,
											"end": 13115,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 12641,
											"end": 13115,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 13121,
											"end": 13301,
											"name": "tag",
											"source": 7,
											"value": "278"
										},
										{
											"begin": 13121,
											"end": 13301,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 13169,
											"end": 13246,
											"name": "PUSH",
											"source": 7,
											"value": "4E487B7100000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 13166,
											"end": 13167,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 13159,
											"end": 13247,
											"name": "MSTORE",
											"source": 7
										},
										{
											"begin": 13266,
											"end": 13270,
											"name": "PUSH",
											"source": 7,
											"value": "22"
										},
										{
											"begin": 13263,
											"end": 13264,
											"name": "PUSH",
											"source": 7,
											"value": "4"
										},
										{
											"begin": 13256,
											"end": 13271,
											"name": "MSTORE",
											"source": 7
										},
										{
											"begin": 13290,
											"end": 13294,
											"name": "PUSH",
											"source": 7,
											"value": "24"
										},
										{
											"begin": 13287,
											"end": 13288,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 13280,
											"end": 13295,
											"name": "REVERT",
											"source": 7
										},
										{
											"begin": 13307,
											"end": 13627,
											"name": "tag",
											"source": 7,
											"value": "91"
										},
										{
											"begin": 13307,
											"end": 13627,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 13351,
											"end": 13357,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 13388,
											"end": 13389,
											"name": "PUSH",
											"source": 7,
											"value": "2"
										},
										{
											"begin": 13382,
											"end": 13386,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 13378,
											"end": 13390,
											"name": "DIV",
											"source": 7
										},
										{
											"begin": 13368,
											"end": 13390,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 13368,
											"end": 13390,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 13435,
											"end": 13436,
											"name": "PUSH",
											"source": 7,
											"value": "1"
										},
										{
											"begin": 13429,
											"end": 13433,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 13425,
											"end": 13437,
											"name": "AND",
											"source": 7
										},
										{
											"begin": 13456,
											"end": 13474,
											"name": "DUP1",
											"source": 7
										},
										{
											"begin": 13446,
											"end": 13527,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "432"
										},
										{
											"begin": 13446,
											"end": 13527,
											"name": "JUMPI",
											"source": 7
										},
										{
											"begin": 13512,
											"end": 13516,
											"name": "PUSH",
											"source": 7,
											"value": "7F"
										},
										{
											"begin": 13504,
											"end": 13510,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 13500,
											"end": 13517,
											"name": "AND",
											"source": 7
										},
										{
											"begin": 13490,
											"end": 13517,
											"name": "SWAP2",
											"source": 7
										},
										{
											"begin": 13490,
											"end": 13517,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 13446,
											"end": 13527,
											"name": "tag",
											"source": 7,
											"value": "432"
										},
										{
											"begin": 13446,
											"end": 13527,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 13574,
											"end": 13576,
											"name": "PUSH",
											"source": 7,
											"value": "20"
										},
										{
											"begin": 13566,
											"end": 13572,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 13563,
											"end": 13577,
											"name": "LT",
											"source": 7
										},
										{
											"begin": 13543,
											"end": 13561,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 13540,
											"end": 13578,
											"name": "SUB",
											"source": 7
										},
										{
											"begin": 13537,
											"end": 13621,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "433"
										},
										{
											"begin": 13537,
											"end": 13621,
											"name": "JUMPI",
											"source": 7
										},
										{
											"begin": 13593,
											"end": 13611,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "434"
										},
										{
											"begin": 13593,
											"end": 13611,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "278"
										},
										{
											"begin": 13593,
											"end": 13611,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 13593,
											"end": 13611,
											"name": "tag",
											"source": 7,
											"value": "434"
										},
										{
											"begin": 13593,
											"end": 13611,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 13537,
											"end": 13621,
											"name": "tag",
											"source": 7,
											"value": "433"
										},
										{
											"begin": 13537,
											"end": 13621,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 13358,
											"end": 13627,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 13307,
											"end": 13627,
											"name": "SWAP2",
											"source": 7
										},
										{
											"begin": 13307,
											"end": 13627,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 13307,
											"end": 13627,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 13307,
											"end": 13627,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 13633,
											"end": 13813,
											"name": "tag",
											"source": 7,
											"value": "279"
										},
										{
											"begin": 13633,
											"end": 13813,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 13681,
											"end": 13758,
											"name": "PUSH",
											"source": 7,
											"value": "4E487B7100000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 13678,
											"end": 13679,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 13671,
											"end": 13759,
											"name": "MSTORE",
											"source": 7
										},
										{
											"begin": 13778,
											"end": 13782,
											"name": "PUSH",
											"source": 7,
											"value": "11"
										},
										{
											"begin": 13775,
											"end": 13776,
											"name": "PUSH",
											"source": 7,
											"value": "4"
										},
										{
											"begin": 13768,
											"end": 13783,
											"name": "MSTORE",
											"source": 7
										},
										{
											"begin": 13802,
											"end": 13806,
											"name": "PUSH",
											"source": 7,
											"value": "24"
										},
										{
											"begin": 13799,
											"end": 13800,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 13792,
											"end": 13807,
											"name": "REVERT",
											"source": 7
										},
										{
											"begin": 13819,
											"end": 14010,
											"name": "tag",
											"source": 7,
											"value": "112"
										},
										{
											"begin": 13819,
											"end": 14010,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 13859,
											"end": 13862,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 13878,
											"end": 13898,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "437"
										},
										{
											"begin": 13896,
											"end": 13897,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 13878,
											"end": 13898,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "252"
										},
										{
											"begin": 13878,
											"end": 13898,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 13878,
											"end": 13898,
											"name": "tag",
											"source": 7,
											"value": "437"
										},
										{
											"begin": 13878,
											"end": 13898,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 13873,
											"end": 13898,
											"name": "SWAP2",
											"source": 7
										},
										{
											"begin": 13873,
											"end": 13898,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 13912,
											"end": 13932,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "438"
										},
										{
											"begin": 13930,
											"end": 13931,
											"name": "DUP4",
											"source": 7
										},
										{
											"begin": 13912,
											"end": 13932,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "252"
										},
										{
											"begin": 13912,
											"end": 13932,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 13912,
											"end": 13932,
											"name": "tag",
											"source": 7,
											"value": "438"
										},
										{
											"begin": 13912,
											"end": 13932,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 13907,
											"end": 13932,
											"name": "SWAP3",
											"source": 7
										},
										{
											"begin": 13907,
											"end": 13932,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 13955,
											"end": 13956,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 13952,
											"end": 13953,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 13948,
											"end": 13957,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 13941,
											"end": 13957,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 13941,
											"end": 13957,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 13976,
											"end": 13979,
											"name": "DUP1",
											"source": 7
										},
										{
											"begin": 13973,
											"end": 13974,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 13970,
											"end": 13980,
											"name": "GT",
											"source": 7
										},
										{
											"begin": 13967,
											"end": 14003,
											"name": "ISZERO",
											"source": 7
										},
										{
											"begin": 13967,
											"end": 14003,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "439"
										},
										{
											"begin": 13967,
											"end": 14003,
											"name": "JUMPI",
											"source": 7
										},
										{
											"begin": 13983,
											"end": 14001,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "440"
										},
										{
											"begin": 13983,
											"end": 14001,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "279"
										},
										{
											"begin": 13983,
											"end": 14001,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 13983,
											"end": 14001,
											"name": "tag",
											"source": 7,
											"value": "440"
										},
										{
											"begin": 13983,
											"end": 14001,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 13967,
											"end": 14003,
											"name": "tag",
											"source": 7,
											"value": "439"
										},
										{
											"begin": 13967,
											"end": 14003,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 13819,
											"end": 14010,
											"name": "SWAP3",
											"source": 7
										},
										{
											"begin": 13819,
											"end": 14010,
											"name": "SWAP2",
											"source": 7
										},
										{
											"begin": 13819,
											"end": 14010,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 13819,
											"end": 14010,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 13819,
											"end": 14010,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 14016,
											"end": 14113,
											"name": "tag",
											"source": 7,
											"value": "280"
										},
										{
											"begin": 14016,
											"end": 14113,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 14075,
											"end": 14081,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 14103,
											"end": 14106,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 14093,
											"end": 14106,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 14093,
											"end": 14106,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 14016,
											"end": 14113,
											"name": "SWAP3",
											"source": 7
										},
										{
											"begin": 14016,
											"end": 14113,
											"name": "SWAP2",
											"source": 7
										},
										{
											"begin": 14016,
											"end": 14113,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 14016,
											"end": 14113,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 14016,
											"end": 14113,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 14119,
											"end": 14299,
											"name": "tag",
											"source": 7,
											"value": "281"
										},
										{
											"begin": 14119,
											"end": 14299,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 14167,
											"end": 14244,
											"name": "PUSH",
											"source": 7,
											"value": "4E487B7100000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 14164,
											"end": 14165,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 14157,
											"end": 14245,
											"name": "MSTORE",
											"source": 7
										},
										{
											"begin": 14264,
											"end": 14268,
											"name": "PUSH",
											"source": 7,
											"value": "41"
										},
										{
											"begin": 14261,
											"end": 14262,
											"name": "PUSH",
											"source": 7,
											"value": "4"
										},
										{
											"begin": 14254,
											"end": 14269,
											"name": "MSTORE",
											"source": 7
										},
										{
											"begin": 14288,
											"end": 14292,
											"name": "PUSH",
											"source": 7,
											"value": "24"
										},
										{
											"begin": 14285,
											"end": 14286,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 14278,
											"end": 14293,
											"name": "REVERT",
											"source": 7
										},
										{
											"begin": 14305,
											"end": 14446,
											"name": "tag",
											"source": 7,
											"value": "282"
										},
										{
											"begin": 14305,
											"end": 14446,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 14354,
											"end": 14358,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 14377,
											"end": 14380,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 14369,
											"end": 14380,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 14369,
											"end": 14380,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 14400,
											"end": 14403,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 14397,
											"end": 14398,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 14390,
											"end": 14404,
											"name": "MSTORE",
											"source": 7
										},
										{
											"begin": 14434,
											"end": 14438,
											"name": "PUSH",
											"source": 7,
											"value": "20"
										},
										{
											"begin": 14431,
											"end": 14432,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 14421,
											"end": 14439,
											"name": "KECCAK256",
											"source": 7
										},
										{
											"begin": 14413,
											"end": 14439,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 14413,
											"end": 14439,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 14305,
											"end": 14446,
											"name": "SWAP2",
											"source": 7
										},
										{
											"begin": 14305,
											"end": 14446,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 14305,
											"end": 14446,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 14305,
											"end": 14446,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 14452,
											"end": 14545,
											"name": "tag",
											"source": 7,
											"value": "283"
										},
										{
											"begin": 14452,
											"end": 14545,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 14489,
											"end": 14495,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 14536,
											"end": 14538,
											"name": "PUSH",
											"source": 7,
											"value": "20"
										},
										{
											"begin": 14531,
											"end": 14533,
											"name": "PUSH",
											"source": 7,
											"value": "1F"
										},
										{
											"begin": 14524,
											"end": 14529,
											"name": "DUP4",
											"source": 7
										},
										{
											"begin": 14520,
											"end": 14534,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 14516,
											"end": 14539,
											"name": "DIV",
											"source": 7
										},
										{
											"begin": 14506,
											"end": 14539,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 14506,
											"end": 14539,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 14452,
											"end": 14545,
											"name": "SWAP2",
											"source": 7
										},
										{
											"begin": 14452,
											"end": 14545,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 14452,
											"end": 14545,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 14452,
											"end": 14545,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 14551,
											"end": 14658,
											"name": "tag",
											"source": 7,
											"value": "284"
										},
										{
											"begin": 14551,
											"end": 14658,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 14595,
											"end": 14603,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 14645,
											"end": 14650,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 14639,
											"end": 14643,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 14635,
											"end": 14651,
											"name": "SHL",
											"source": 7
										},
										{
											"begin": 14614,
											"end": 14651,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 14614,
											"end": 14651,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 14551,
											"end": 14658,
											"name": "SWAP3",
											"source": 7
										},
										{
											"begin": 14551,
											"end": 14658,
											"name": "SWAP2",
											"source": 7
										},
										{
											"begin": 14551,
											"end": 14658,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 14551,
											"end": 14658,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 14551,
											"end": 14658,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 14664,
											"end": 15057,
											"name": "tag",
											"source": 7,
											"value": "285"
										},
										{
											"begin": 14664,
											"end": 15057,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 14733,
											"end": 14739,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 14783,
											"end": 14784,
											"name": "PUSH",
											"source": 7,
											"value": "8"
										},
										{
											"begin": 14771,
											"end": 14781,
											"name": "DUP4",
											"source": 7
										},
										{
											"begin": 14767,
											"end": 14785,
											"name": "MUL",
											"source": 7
										},
										{
											"begin": 14806,
											"end": 14903,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "447"
										},
										{
											"begin": 14836,
											"end": 14902,
											"name": "PUSH",
											"source": 7,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 14825,
											"end": 14834,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 14806,
											"end": 14903,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "284"
										},
										{
											"begin": 14806,
											"end": 14903,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 14806,
											"end": 14903,
											"name": "tag",
											"source": 7,
											"value": "447"
										},
										{
											"begin": 14806,
											"end": 14903,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 14924,
											"end": 14963,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "448"
										},
										{
											"begin": 14954,
											"end": 14962,
											"name": "DUP7",
											"source": 7
										},
										{
											"begin": 14943,
											"end": 14952,
											"name": "DUP4",
											"source": 7
										},
										{
											"begin": 14924,
											"end": 14963,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "284"
										},
										{
											"begin": 14924,
											"end": 14963,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 14924,
											"end": 14963,
											"name": "tag",
											"source": 7,
											"value": "448"
										},
										{
											"begin": 14924,
											"end": 14963,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 14912,
											"end": 14963,
											"name": "SWAP6",
											"source": 7
										},
										{
											"begin": 14912,
											"end": 14963,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 14996,
											"end": 15000,
											"name": "DUP1",
											"source": 7
										},
										{
											"begin": 14992,
											"end": 15001,
											"name": "NOT",
											"source": 7
										},
										{
											"begin": 14985,
											"end": 14990,
											"name": "DUP5",
											"source": 7
										},
										{
											"begin": 14981,
											"end": 15002,
											"name": "AND",
											"source": 7
										},
										{
											"begin": 14972,
											"end": 15002,
											"name": "SWAP4",
											"source": 7
										},
										{
											"begin": 14972,
											"end": 15002,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 15045,
											"end": 15049,
											"name": "DUP1",
											"source": 7
										},
										{
											"begin": 15035,
											"end": 15043,
											"name": "DUP7",
											"source": 7
										},
										{
											"begin": 15031,
											"end": 15050,
											"name": "AND",
											"source": 7
										},
										{
											"begin": 15024,
											"end": 15029,
											"name": "DUP5",
											"source": 7
										},
										{
											"begin": 15021,
											"end": 15051,
											"name": "OR",
											"source": 7
										},
										{
											"begin": 15011,
											"end": 15051,
											"name": "SWAP3",
											"source": 7
										},
										{
											"begin": 15011,
											"end": 15051,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 14740,
											"end": 15057,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 14740,
											"end": 15057,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 14664,
											"end": 15057,
											"name": "SWAP4",
											"source": 7
										},
										{
											"begin": 14664,
											"end": 15057,
											"name": "SWAP3",
											"source": 7
										},
										{
											"begin": 14664,
											"end": 15057,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 14664,
											"end": 15057,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 14664,
											"end": 15057,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 14664,
											"end": 15057,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 15063,
											"end": 15123,
											"name": "tag",
											"source": 7,
											"value": "286"
										},
										{
											"begin": 15063,
											"end": 15123,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 15091,
											"end": 15094,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 15112,
											"end": 15117,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 15105,
											"end": 15117,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 15105,
											"end": 15117,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 15063,
											"end": 15123,
											"name": "SWAP2",
											"source": 7
										},
										{
											"begin": 15063,
											"end": 15123,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 15063,
											"end": 15123,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 15063,
											"end": 15123,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 15129,
											"end": 15271,
											"name": "tag",
											"source": 7,
											"value": "287"
										},
										{
											"begin": 15129,
											"end": 15271,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 15179,
											"end": 15188,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 15212,
											"end": 15265,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "451"
										},
										{
											"begin": 15230,
											"end": 15264,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "452"
										},
										{
											"begin": 15239,
											"end": 15263,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "453"
										},
										{
											"begin": 15257,
											"end": 15262,
											"name": "DUP5",
											"source": 7
										},
										{
											"begin": 15239,
											"end": 15263,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "252"
										},
										{
											"begin": 15239,
											"end": 15263,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 15239,
											"end": 15263,
											"name": "tag",
											"source": 7,
											"value": "453"
										},
										{
											"begin": 15239,
											"end": 15263,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 15230,
											"end": 15264,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "286"
										},
										{
											"begin": 15230,
											"end": 15264,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 15230,
											"end": 15264,
											"name": "tag",
											"source": 7,
											"value": "452"
										},
										{
											"begin": 15230,
											"end": 15264,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 15212,
											"end": 15265,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "252"
										},
										{
											"begin": 15212,
											"end": 15265,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 15212,
											"end": 15265,
											"name": "tag",
											"source": 7,
											"value": "451"
										},
										{
											"begin": 15212,
											"end": 15265,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 15199,
											"end": 15265,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 15199,
											"end": 15265,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 15129,
											"end": 15271,
											"name": "SWAP2",
											"source": 7
										},
										{
											"begin": 15129,
											"end": 15271,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 15129,
											"end": 15271,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 15129,
											"end": 15271,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 15277,
											"end": 15352,
											"name": "tag",
											"source": 7,
											"value": "288"
										},
										{
											"begin": 15277,
											"end": 15352,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 15320,
											"end": 15323,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 15341,
											"end": 15346,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 15334,
											"end": 15346,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 15334,
											"end": 15346,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 15277,
											"end": 15352,
											"name": "SWAP2",
											"source": 7
										},
										{
											"begin": 15277,
											"end": 15352,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 15277,
											"end": 15352,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 15277,
											"end": 15352,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 15358,
											"end": 15627,
											"name": "tag",
											"source": 7,
											"value": "289"
										},
										{
											"begin": 15358,
											"end": 15627,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 15468,
											"end": 15507,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "456"
										},
										{
											"begin": 15499,
											"end": 15506,
											"name": "DUP4",
											"source": 7
										},
										{
											"begin": 15468,
											"end": 15507,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "287"
										},
										{
											"begin": 15468,
											"end": 15507,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 15468,
											"end": 15507,
											"name": "tag",
											"source": 7,
											"value": "456"
										},
										{
											"begin": 15468,
											"end": 15507,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 15529,
											"end": 15620,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "457"
										},
										{
											"begin": 15578,
											"end": 15619,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "458"
										},
										{
											"begin": 15602,
											"end": 15618,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 15578,
											"end": 15619,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "288"
										},
										{
											"begin": 15578,
											"end": 15619,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 15578,
											"end": 15619,
											"name": "tag",
											"source": 7,
											"value": "458"
										},
										{
											"begin": 15578,
											"end": 15619,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 15570,
											"end": 15576,
											"name": "DUP5",
											"source": 7
										},
										{
											"begin": 15563,
											"end": 15567,
											"name": "DUP5",
											"source": 7
										},
										{
											"begin": 15557,
											"end": 15568,
											"name": "SLOAD",
											"source": 7
										},
										{
											"begin": 15529,
											"end": 15620,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "285"
										},
										{
											"begin": 15529,
											"end": 15620,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 15529,
											"end": 15620,
											"name": "tag",
											"source": 7,
											"value": "457"
										},
										{
											"begin": 15529,
											"end": 15620,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 15523,
											"end": 15527,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 15516,
											"end": 15621,
											"name": "SSTORE",
											"source": 7
										},
										{
											"begin": 15434,
											"end": 15627,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 15358,
											"end": 15627,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 15358,
											"end": 15627,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 15358,
											"end": 15627,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 15358,
											"end": 15627,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 15633,
											"end": 15706,
											"name": "tag",
											"source": 7,
											"value": "290"
										},
										{
											"begin": 15633,
											"end": 15706,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 15678,
											"end": 15681,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 15633,
											"end": 15706,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 15633,
											"end": 15706,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 15712,
											"end": 15901,
											"name": "tag",
											"source": 7,
											"value": "291"
										},
										{
											"begin": 15712,
											"end": 15901,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 15789,
											"end": 15821,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "461"
										},
										{
											"begin": 15789,
											"end": 15821,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "290"
										},
										{
											"begin": 15789,
											"end": 15821,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 15789,
											"end": 15821,
											"name": "tag",
											"source": 7,
											"value": "461"
										},
										{
											"begin": 15789,
											"end": 15821,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 15830,
											"end": 15895,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "462"
										},
										{
											"begin": 15888,
											"end": 15894,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 15880,
											"end": 15886,
											"name": "DUP5",
											"source": 7
										},
										{
											"begin": 15874,
											"end": 15878,
											"name": "DUP5",
											"source": 7
										},
										{
											"begin": 15830,
											"end": 15895,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "289"
										},
										{
											"begin": 15830,
											"end": 15895,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 15830,
											"end": 15895,
											"name": "tag",
											"source": 7,
											"value": "462"
										},
										{
											"begin": 15830,
											"end": 15895,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 15765,
											"end": 15901,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 15712,
											"end": 15901,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 15712,
											"end": 15901,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 15712,
											"end": 15901,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 15907,
											"end": 16093,
											"name": "tag",
											"source": 7,
											"value": "292"
										},
										{
											"begin": 15907,
											"end": 16093,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 15967,
											"end": 16087,
											"name": "tag",
											"source": 7,
											"value": "464"
										},
										{
											"begin": 15967,
											"end": 16087,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 15984,
											"end": 15987,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 15977,
											"end": 15982,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 15974,
											"end": 15988,
											"name": "LT",
											"source": 7
										},
										{
											"begin": 15967,
											"end": 16087,
											"name": "ISZERO",
											"source": 7
										},
										{
											"begin": 15967,
											"end": 16087,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "466"
										},
										{
											"begin": 15967,
											"end": 16087,
											"name": "JUMPI",
											"source": 7
										},
										{
											"begin": 16038,
											"end": 16077,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "467"
										},
										{
											"begin": 16075,
											"end": 16076,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 16068,
											"end": 16073,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 16038,
											"end": 16077,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "291"
										},
										{
											"begin": 16038,
											"end": 16077,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 16038,
											"end": 16077,
											"name": "tag",
											"source": 7,
											"value": "467"
										},
										{
											"begin": 16038,
											"end": 16077,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 16011,
											"end": 16012,
											"name": "PUSH",
											"source": 7,
											"value": "1"
										},
										{
											"begin": 16004,
											"end": 16009,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 16000,
											"end": 16013,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 15991,
											"end": 16013,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 15991,
											"end": 16013,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 15967,
											"end": 16087,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "464"
										},
										{
											"begin": 15967,
											"end": 16087,
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 15967,
											"end": 16087,
											"name": "tag",
											"source": 7,
											"value": "466"
										},
										{
											"begin": 15967,
											"end": 16087,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 15907,
											"end": 16093,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 15907,
											"end": 16093,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 15907,
											"end": 16093,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 16099,
											"end": 16642,
											"name": "tag",
											"source": 7,
											"value": "293"
										},
										{
											"begin": 16099,
											"end": 16642,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 16200,
											"end": 16202,
											"name": "PUSH",
											"source": 7,
											"value": "1F"
										},
										{
											"begin": 16195,
											"end": 16198,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 16192,
											"end": 16203,
											"name": "GT",
											"source": 7
										},
										{
											"begin": 16189,
											"end": 16635,
											"name": "ISZERO",
											"source": 7
										},
										{
											"begin": 16189,
											"end": 16635,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "469"
										},
										{
											"begin": 16189,
											"end": 16635,
											"name": "JUMPI",
											"source": 7
										},
										{
											"begin": 16234,
											"end": 16272,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "470"
										},
										{
											"begin": 16266,
											"end": 16271,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 16234,
											"end": 16272,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "282"
										},
										{
											"begin": 16234,
											"end": 16272,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 16234,
											"end": 16272,
											"name": "tag",
											"source": 7,
											"value": "470"
										},
										{
											"begin": 16234,
											"end": 16272,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 16318,
											"end": 16347,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "471"
										},
										{
											"begin": 16336,
											"end": 16346,
											"name": "DUP5",
											"source": 7
										},
										{
											"begin": 16318,
											"end": 16347,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "283"
										},
										{
											"begin": 16318,
											"end": 16347,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 16318,
											"end": 16347,
											"name": "tag",
											"source": 7,
											"value": "471"
										},
										{
											"begin": 16318,
											"end": 16347,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 16308,
											"end": 16316,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 16304,
											"end": 16348,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 16501,
											"end": 16503,
											"name": "PUSH",
											"source": 7,
											"value": "20"
										},
										{
											"begin": 16489,
											"end": 16499,
											"name": "DUP6",
											"source": 7
										},
										{
											"begin": 16486,
											"end": 16504,
											"name": "LT",
											"source": 7
										},
										{
											"begin": 16483,
											"end": 16532,
											"name": "ISZERO",
											"source": 7
										},
										{
											"begin": 16483,
											"end": 16532,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "472"
										},
										{
											"begin": 16483,
											"end": 16532,
											"name": "JUMPI",
											"source": 7
										},
										{
											"begin": 16522,
											"end": 16530,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 16507,
											"end": 16530,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 16507,
											"end": 16530,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 16483,
											"end": 16532,
											"name": "tag",
											"source": 7,
											"value": "472"
										},
										{
											"begin": 16483,
											"end": 16532,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 16545,
											"end": 16625,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "473"
										},
										{
											"begin": 16601,
											"end": 16623,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "474"
										},
										{
											"begin": 16619,
											"end": 16622,
											"name": "DUP6",
											"source": 7
										},
										{
											"begin": 16601,
											"end": 16623,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "283"
										},
										{
											"begin": 16601,
											"end": 16623,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 16601,
											"end": 16623,
											"name": "tag",
											"source": 7,
											"value": "474"
										},
										{
											"begin": 16601,
											"end": 16623,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 16591,
											"end": 16599,
											"name": "DUP4",
											"source": 7
										},
										{
											"begin": 16587,
											"end": 16624,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 16574,
											"end": 16585,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 16545,
											"end": 16625,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "292"
										},
										{
											"begin": 16545,
											"end": 16625,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 16545,
											"end": 16625,
											"name": "tag",
											"source": 7,
											"value": "473"
										},
										{
											"begin": 16545,
											"end": 16625,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 16204,
											"end": 16635,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 16204,
											"end": 16635,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 16189,
											"end": 16635,
											"name": "tag",
											"source": 7,
											"value": "469"
										},
										{
											"begin": 16189,
											"end": 16635,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 16099,
											"end": 16642,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 16099,
											"end": 16642,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 16099,
											"end": 16642,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 16099,
											"end": 16642,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 16648,
											"end": 16765,
											"name": "tag",
											"source": 7,
											"value": "294"
										},
										{
											"begin": 16648,
											"end": 16765,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 16702,
											"end": 16710,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 16752,
											"end": 16757,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 16746,
											"end": 16750,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 16742,
											"end": 16758,
											"name": "SHR",
											"source": 7
										},
										{
											"begin": 16721,
											"end": 16758,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 16721,
											"end": 16758,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 16648,
											"end": 16765,
											"name": "SWAP3",
											"source": 7
										},
										{
											"begin": 16648,
											"end": 16765,
											"name": "SWAP2",
											"source": 7
										},
										{
											"begin": 16648,
											"end": 16765,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 16648,
											"end": 16765,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 16648,
											"end": 16765,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 16771,
											"end": 16940,
											"name": "tag",
											"source": 7,
											"value": "295"
										},
										{
											"begin": 16771,
											"end": 16940,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 16815,
											"end": 16821,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 16848,
											"end": 16899,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "477"
										},
										{
											"begin": 16896,
											"end": 16897,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 16892,
											"end": 16898,
											"name": "NOT",
											"source": 7
										},
										{
											"begin": 16884,
											"end": 16889,
											"name": "DUP5",
											"source": 7
										},
										{
											"begin": 16881,
											"end": 16882,
											"name": "PUSH",
											"source": 7,
											"value": "8"
										},
										{
											"begin": 16877,
											"end": 16890,
											"name": "MUL",
											"source": 7
										},
										{
											"begin": 16848,
											"end": 16899,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "294"
										},
										{
											"begin": 16848,
											"end": 16899,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 16848,
											"end": 16899,
											"name": "tag",
											"source": 7,
											"value": "477"
										},
										{
											"begin": 16848,
											"end": 16899,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 16844,
											"end": 16900,
											"name": "NOT",
											"source": 7
										},
										{
											"begin": 16929,
											"end": 16933,
											"name": "DUP1",
											"source": 7
										},
										{
											"begin": 16923,
											"end": 16927,
											"name": "DUP4",
											"source": 7
										},
										{
											"begin": 16919,
											"end": 16934,
											"name": "AND",
											"source": 7
										},
										{
											"begin": 16909,
											"end": 16934,
											"name": "SWAP2",
											"source": 7
										},
										{
											"begin": 16909,
											"end": 16934,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 16822,
											"end": 16940,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 16771,
											"end": 16940,
											"name": "SWAP3",
											"source": 7
										},
										{
											"begin": 16771,
											"end": 16940,
											"name": "SWAP2",
											"source": 7
										},
										{
											"begin": 16771,
											"end": 16940,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 16771,
											"end": 16940,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 16771,
											"end": 16940,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 16945,
											"end": 17240,
											"name": "tag",
											"source": 7,
											"value": "296"
										},
										{
											"begin": 16945,
											"end": 17240,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 17021,
											"end": 17025,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 17167,
											"end": 17196,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "479"
										},
										{
											"begin": 17192,
											"end": 17195,
											"name": "DUP4",
											"source": 7
										},
										{
											"begin": 17186,
											"end": 17190,
											"name": "DUP4",
											"source": 7
										},
										{
											"begin": 17167,
											"end": 17196,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "295"
										},
										{
											"begin": 17167,
											"end": 17196,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 17167,
											"end": 17196,
											"name": "tag",
											"source": 7,
											"value": "479"
										},
										{
											"begin": 17167,
											"end": 17196,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 17159,
											"end": 17196,
											"name": "SWAP2",
											"source": 7
										},
										{
											"begin": 17159,
											"end": 17196,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 17229,
											"end": 17232,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 17226,
											"end": 17227,
											"name": "PUSH",
											"source": 7,
											"value": "2"
										},
										{
											"begin": 17222,
											"end": 17233,
											"name": "MUL",
											"source": 7
										},
										{
											"begin": 17216,
											"end": 17220,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 17213,
											"end": 17234,
											"name": "OR",
											"source": 7
										},
										{
											"begin": 17205,
											"end": 17234,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 17205,
											"end": 17234,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 16945,
											"end": 17240,
											"name": "SWAP3",
											"source": 7
										},
										{
											"begin": 16945,
											"end": 17240,
											"name": "SWAP2",
											"source": 7
										},
										{
											"begin": 16945,
											"end": 17240,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 16945,
											"end": 17240,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 16945,
											"end": 17240,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 17245,
											"end": 18648,
											"name": "tag",
											"source": 7,
											"value": "125"
										},
										{
											"begin": 17245,
											"end": 18648,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 17369,
											"end": 17413,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "481"
										},
										{
											"begin": 17409,
											"end": 17412,
											"name": "DUP4",
											"source": 7
										},
										{
											"begin": 17404,
											"end": 17407,
											"name": "DUP4",
											"source": 7
										},
										{
											"begin": 17369,
											"end": 17413,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "280"
										},
										{
											"begin": 17369,
											"end": 17413,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 17369,
											"end": 17413,
											"name": "tag",
											"source": 7,
											"value": "481"
										},
										{
											"begin": 17369,
											"end": 17413,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 17478,
											"end": 17496,
											"name": "PUSH",
											"source": 7,
											"value": "FFFFFFFFFFFFFFFF"
										},
										{
											"begin": 17470,
											"end": 17476,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 17467,
											"end": 17497,
											"name": "GT",
											"source": 7
										},
										{
											"begin": 17464,
											"end": 17520,
											"name": "ISZERO",
											"source": 7
										},
										{
											"begin": 17464,
											"end": 17520,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "482"
										},
										{
											"begin": 17464,
											"end": 17520,
											"name": "JUMPI",
											"source": 7
										},
										{
											"begin": 17500,
											"end": 17518,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "483"
										},
										{
											"begin": 17500,
											"end": 17518,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "281"
										},
										{
											"begin": 17500,
											"end": 17518,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 17500,
											"end": 17518,
											"name": "tag",
											"source": 7,
											"value": "483"
										},
										{
											"begin": 17500,
											"end": 17518,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 17464,
											"end": 17520,
											"name": "tag",
											"source": 7,
											"value": "482"
										},
										{
											"begin": 17464,
											"end": 17520,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 17544,
											"end": 17582,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "484"
										},
										{
											"begin": 17576,
											"end": 17580,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 17570,
											"end": 17581,
											"name": "SLOAD",
											"source": 7
										},
										{
											"begin": 17544,
											"end": 17582,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "91"
										},
										{
											"begin": 17544,
											"end": 17582,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 17544,
											"end": 17582,
											"name": "tag",
											"source": 7,
											"value": "484"
										},
										{
											"begin": 17544,
											"end": 17582,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 17629,
											"end": 17696,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "485"
										},
										{
											"begin": 17689,
											"end": 17695,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 17681,
											"end": 17687,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 17675,
											"end": 17679,
											"name": "DUP6",
											"source": 7
										},
										{
											"begin": 17629,
											"end": 17696,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "293"
										},
										{
											"begin": 17629,
											"end": 17696,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 17629,
											"end": 17696,
											"name": "tag",
											"source": 7,
											"value": "485"
										},
										{
											"begin": 17629,
											"end": 17696,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 17723,
											"end": 17724,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 17752,
											"end": 17754,
											"name": "PUSH",
											"source": 7,
											"value": "1F"
										},
										{
											"begin": 17744,
											"end": 17750,
											"name": "DUP4",
											"source": 7
										},
										{
											"begin": 17741,
											"end": 17755,
											"name": "GT",
											"source": 7
										},
										{
											"begin": 17769,
											"end": 17770,
											"name": "PUSH",
											"source": 7,
											"value": "1"
										},
										{
											"begin": 17764,
											"end": 18396,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 17764,
											"end": 18396,
											"name": "EQ",
											"source": 7
										},
										{
											"begin": 17764,
											"end": 18396,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "487"
										},
										{
											"begin": 17764,
											"end": 18396,
											"name": "JUMPI",
											"source": 7
										},
										{
											"begin": 18440,
											"end": 18441,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 18457,
											"end": 18463,
											"name": "DUP5",
											"source": 7
										},
										{
											"begin": 18454,
											"end": 18538,
											"name": "ISZERO",
											"source": 7
										},
										{
											"begin": 18454,
											"end": 18538,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "488"
										},
										{
											"begin": 18454,
											"end": 18538,
											"name": "JUMPI",
											"source": 7
										},
										{
											"begin": 18513,
											"end": 18522,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 18508,
											"end": 18511,
											"name": "DUP8",
											"source": 7
										},
										{
											"begin": 18504,
											"end": 18523,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 18491,
											"end": 18524,
											"name": "CALLDATALOAD",
											"source": 7
										},
										{
											"begin": 18482,
											"end": 18524,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 18482,
											"end": 18524,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 18454,
											"end": 18538,
											"name": "tag",
											"source": 7,
											"value": "488"
										},
										{
											"begin": 18454,
											"end": 18538,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 18564,
											"end": 18631,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "489"
										},
										{
											"begin": 18624,
											"end": 18630,
											"name": "DUP6",
											"source": 7
										},
										{
											"begin": 18617,
											"end": 18622,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 18564,
											"end": 18631,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "296"
										},
										{
											"begin": 18564,
											"end": 18631,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 18564,
											"end": 18631,
											"name": "tag",
											"source": 7,
											"value": "489"
										},
										{
											"begin": 18564,
											"end": 18631,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 18558,
											"end": 18562,
											"name": "DUP7",
											"source": 7
										},
										{
											"begin": 18551,
											"end": 18632,
											"name": "SSTORE",
											"source": 7
										},
										{
											"begin": 18413,
											"end": 18642,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 17734,
											"end": 18642,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "486"
										},
										{
											"begin": 17734,
											"end": 18642,
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 17764,
											"end": 18396,
											"name": "tag",
											"source": 7,
											"value": "487"
										},
										{
											"begin": 17764,
											"end": 18396,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 17816,
											"end": 17820,
											"name": "PUSH",
											"source": 7,
											"value": "1F"
										},
										{
											"begin": 17812,
											"end": 17821,
											"name": "NOT",
											"source": 7
										},
										{
											"begin": 17804,
											"end": 17810,
											"name": "DUP5",
											"source": 7
										},
										{
											"begin": 17800,
											"end": 17822,
											"name": "AND",
											"source": 7
										},
										{
											"begin": 17850,
											"end": 17887,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "490"
										},
										{
											"begin": 17882,
											"end": 17886,
											"name": "DUP7",
											"source": 7
										},
										{
											"begin": 17850,
											"end": 17887,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "282"
										},
										{
											"begin": 17850,
											"end": 17887,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 17850,
											"end": 17887,
											"name": "tag",
											"source": 7,
											"value": "490"
										},
										{
											"begin": 17850,
											"end": 17887,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 17909,
											"end": 17910,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 17923,
											"end": 18138,
											"name": "tag",
											"source": 7,
											"value": "491"
										},
										{
											"begin": 17923,
											"end": 18138,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 17937,
											"end": 17944,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 17934,
											"end": 17935,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 17931,
											"end": 17945,
											"name": "LT",
											"source": 7
										},
										{
											"begin": 17923,
											"end": 18138,
											"name": "ISZERO",
											"source": 7
										},
										{
											"begin": 17923,
											"end": 18138,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "493"
										},
										{
											"begin": 17923,
											"end": 18138,
											"name": "JUMPI",
											"source": 7
										},
										{
											"begin": 18023,
											"end": 18032,
											"name": "DUP5",
											"source": 7
										},
										{
											"begin": 18018,
											"end": 18021,
											"name": "DUP10",
											"source": 7
										},
										{
											"begin": 18014,
											"end": 18033,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 18001,
											"end": 18034,
											"name": "CALLDATALOAD",
											"source": 7
										},
										{
											"begin": 17993,
											"end": 17999,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 17986,
											"end": 18035,
											"name": "SSTORE",
											"source": 7
										},
										{
											"begin": 18074,
											"end": 18075,
											"name": "PUSH",
											"source": 7,
											"value": "1"
										},
										{
											"begin": 18066,
											"end": 18072,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 18062,
											"end": 18076,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 18052,
											"end": 18076,
											"name": "SWAP2",
											"source": 7
										},
										{
											"begin": 18052,
											"end": 18076,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 18121,
											"end": 18123,
											"name": "PUSH",
											"source": 7,
											"value": "20"
										},
										{
											"begin": 18110,
											"end": 18119,
											"name": "DUP6",
											"source": 7
										},
										{
											"begin": 18106,
											"end": 18124,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 18093,
											"end": 18124,
											"name": "SWAP5",
											"source": 7
										},
										{
											"begin": 18093,
											"end": 18124,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 17960,
											"end": 17964,
											"name": "PUSH",
											"source": 7,
											"value": "20"
										},
										{
											"begin": 17957,
											"end": 17958,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 17953,
											"end": 17965,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 17948,
											"end": 17965,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 17948,
											"end": 17965,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 17923,
											"end": 18138,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "491"
										},
										{
											"begin": 17923,
											"end": 18138,
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 17923,
											"end": 18138,
											"name": "tag",
											"source": 7,
											"value": "493"
										},
										{
											"begin": 17923,
											"end": 18138,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 18166,
											"end": 18172,
											"name": "DUP7",
											"source": 7
										},
										{
											"begin": 18157,
											"end": 18164,
											"name": "DUP4",
											"source": 7
										},
										{
											"begin": 18154,
											"end": 18173,
											"name": "LT",
											"source": 7
										},
										{
											"begin": 18151,
											"end": 18337,
											"name": "ISZERO",
											"source": 7
										},
										{
											"begin": 18151,
											"end": 18337,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "494"
										},
										{
											"begin": 18151,
											"end": 18337,
											"name": "JUMPI",
											"source": 7
										},
										{
											"begin": 18231,
											"end": 18240,
											"name": "DUP5",
											"source": 7
										},
										{
											"begin": 18226,
											"end": 18229,
											"name": "DUP10",
											"source": 7
										},
										{
											"begin": 18222,
											"end": 18241,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 18209,
											"end": 18242,
											"name": "CALLDATALOAD",
											"source": 7
										},
										{
											"begin": 18274,
											"end": 18322,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "495"
										},
										{
											"begin": 18316,
											"end": 18320,
											"name": "PUSH",
											"source": 7,
											"value": "1F"
										},
										{
											"begin": 18308,
											"end": 18314,
											"name": "DUP10",
											"source": 7
										},
										{
											"begin": 18304,
											"end": 18321,
											"name": "AND",
											"source": 7
										},
										{
											"begin": 18293,
											"end": 18302,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 18274,
											"end": 18322,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "295"
										},
										{
											"begin": 18274,
											"end": 18322,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 18274,
											"end": 18322,
											"name": "tag",
											"source": 7,
											"value": "495"
										},
										{
											"begin": 18274,
											"end": 18322,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 18266,
											"end": 18272,
											"name": "DUP4",
											"source": 7
										},
										{
											"begin": 18259,
											"end": 18323,
											"name": "SSTORE",
											"source": 7
										},
										{
											"begin": 18174,
											"end": 18337,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 18151,
											"end": 18337,
											"name": "tag",
											"source": 7,
											"value": "494"
										},
										{
											"begin": 18151,
											"end": 18337,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 18383,
											"end": 18384,
											"name": "PUSH",
											"source": 7,
											"value": "1"
										},
										{
											"begin": 18379,
											"end": 18380,
											"name": "PUSH",
											"source": 7,
											"value": "2"
										},
										{
											"begin": 18371,
											"end": 18377,
											"name": "DUP9",
											"source": 7
										},
										{
											"begin": 18367,
											"end": 18381,
											"name": "MUL",
											"source": 7
										},
										{
											"begin": 18363,
											"end": 18385,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 18357,
											"end": 18361,
											"name": "DUP9",
											"source": 7
										},
										{
											"begin": 18350,
											"end": 18386,
											"name": "SSTORE",
											"source": 7
										},
										{
											"begin": 17771,
											"end": 18396,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 17771,
											"end": 18396,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 17771,
											"end": 18396,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 17734,
											"end": 18642,
											"name": "tag",
											"source": 7,
											"value": "486"
										},
										{
											"begin": 17734,
											"end": 18642,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 17734,
											"end": 18642,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 17344,
											"end": 18648,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 17344,
											"end": 18648,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 17344,
											"end": 18648,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 17245,
											"end": 18648,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 17245,
											"end": 18648,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 17245,
											"end": 18648,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 17245,
											"end": 18648,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 18654,
											"end": 18848,
											"name": "tag",
											"source": 7,
											"value": "127"
										},
										{
											"begin": 18654,
											"end": 18848,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 18694,
											"end": 18698,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 18714,
											"end": 18734,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "497"
										},
										{
											"begin": 18732,
											"end": 18733,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 18714,
											"end": 18734,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "252"
										},
										{
											"begin": 18714,
											"end": 18734,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 18714,
											"end": 18734,
											"name": "tag",
											"source": 7,
											"value": "497"
										},
										{
											"begin": 18714,
											"end": 18734,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 18709,
											"end": 18734,
											"name": "SWAP2",
											"source": 7
										},
										{
											"begin": 18709,
											"end": 18734,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 18748,
											"end": 18768,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "498"
										},
										{
											"begin": 18766,
											"end": 18767,
											"name": "DUP4",
											"source": 7
										},
										{
											"begin": 18748,
											"end": 18768,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "252"
										},
										{
											"begin": 18748,
											"end": 18768,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 18748,
											"end": 18768,
											"name": "tag",
											"source": 7,
											"value": "498"
										},
										{
											"begin": 18748,
											"end": 18768,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 18743,
											"end": 18768,
											"name": "SWAP3",
											"source": 7
										},
										{
											"begin": 18743,
											"end": 18768,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 18792,
											"end": 18793,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 18789,
											"end": 18790,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 18785,
											"end": 18794,
											"name": "SUB",
											"source": 7
										},
										{
											"begin": 18777,
											"end": 18794,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 18777,
											"end": 18794,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 18816,
											"end": 18817,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 18810,
											"end": 18814,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 18807,
											"end": 18818,
											"name": "GT",
											"source": 7
										},
										{
											"begin": 18804,
											"end": 18841,
											"name": "ISZERO",
											"source": 7
										},
										{
											"begin": 18804,
											"end": 18841,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "499"
										},
										{
											"begin": 18804,
											"end": 18841,
											"name": "JUMPI",
											"source": 7
										},
										{
											"begin": 18821,
											"end": 18839,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "500"
										},
										{
											"begin": 18821,
											"end": 18839,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "279"
										},
										{
											"begin": 18821,
											"end": 18839,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 18821,
											"end": 18839,
											"name": "tag",
											"source": 7,
											"value": "500"
										},
										{
											"begin": 18821,
											"end": 18839,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 18804,
											"end": 18841,
											"name": "tag",
											"source": 7,
											"value": "499"
										},
										{
											"begin": 18804,
											"end": 18841,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 18654,
											"end": 18848,
											"name": "SWAP3",
											"source": 7
										},
										{
											"begin": 18654,
											"end": 18848,
											"name": "SWAP2",
											"source": 7
										},
										{
											"begin": 18654,
											"end": 18848,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 18654,
											"end": 18848,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 18654,
											"end": 18848,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 18854,
											"end": 19034,
											"name": "tag",
											"source": 7,
											"value": "131"
										},
										{
											"begin": 18854,
											"end": 19034,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 18902,
											"end": 18979,
											"name": "PUSH",
											"source": 7,
											"value": "4E487B7100000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 18899,
											"end": 18900,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 18892,
											"end": 18980,
											"name": "MSTORE",
											"source": 7
										},
										{
											"begin": 18999,
											"end": 19003,
											"name": "PUSH",
											"source": 7,
											"value": "32"
										},
										{
											"begin": 18996,
											"end": 18997,
											"name": "PUSH",
											"source": 7,
											"value": "4"
										},
										{
											"begin": 18989,
											"end": 19004,
											"name": "MSTORE",
											"source": 7
										},
										{
											"begin": 19023,
											"end": 19027,
											"name": "PUSH",
											"source": 7,
											"value": "24"
										},
										{
											"begin": 19020,
											"end": 19021,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 19013,
											"end": 19028,
											"name": "REVERT",
											"source": 7
										},
										{
											"begin": 19040,
											"end": 19220,
											"name": "tag",
											"source": 7,
											"value": "141"
										},
										{
											"begin": 19040,
											"end": 19220,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 19088,
											"end": 19165,
											"name": "PUSH",
											"source": 7,
											"value": "4E487B7100000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 19085,
											"end": 19086,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 19078,
											"end": 19166,
											"name": "MSTORE",
											"source": 7
										},
										{
											"begin": 19185,
											"end": 19189,
											"name": "PUSH",
											"source": 7,
											"value": "21"
										},
										{
											"begin": 19182,
											"end": 19183,
											"name": "PUSH",
											"source": 7,
											"value": "4"
										},
										{
											"begin": 19175,
											"end": 19190,
											"name": "MSTORE",
											"source": 7
										},
										{
											"begin": 19209,
											"end": 19213,
											"name": "PUSH",
											"source": 7,
											"value": "24"
										},
										{
											"begin": 19206,
											"end": 19207,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 19199,
											"end": 19214,
											"name": "REVERT",
											"source": 7
										},
										{
											"begin": 19226,
											"end": 19344,
											"name": "tag",
											"source": 7,
											"value": "297"
										},
										{
											"begin": 19226,
											"end": 19344,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 19313,
											"end": 19337,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "504"
										},
										{
											"begin": 19331,
											"end": 19336,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 19313,
											"end": 19337,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "249"
										},
										{
											"begin": 19313,
											"end": 19337,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 19313,
											"end": 19337,
											"name": "tag",
											"source": 7,
											"value": "504"
										},
										{
											"begin": 19313,
											"end": 19337,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 19308,
											"end": 19311,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 19301,
											"end": 19338,
											"name": "MSTORE",
											"source": 7
										},
										{
											"begin": 19226,
											"end": 19344,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 19226,
											"end": 19344,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 19226,
											"end": 19344,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 19350,
											"end": 19792,
											"name": "tag",
											"source": 7,
											"value": "192"
										},
										{
											"begin": 19350,
											"end": 19792,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 19499,
											"end": 19503,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 19537,
											"end": 19539,
											"name": "PUSH",
											"source": 7,
											"value": "60"
										},
										{
											"begin": 19526,
											"end": 19535,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 19522,
											"end": 19540,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 19514,
											"end": 19540,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 19514,
											"end": 19540,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 19550,
											"end": 19621,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "506"
										},
										{
											"begin": 19618,
											"end": 19619,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 19607,
											"end": 19616,
											"name": "DUP4",
											"source": 7
										},
										{
											"begin": 19603,
											"end": 19620,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 19594,
											"end": 19600,
											"name": "DUP7",
											"source": 7
										},
										{
											"begin": 19550,
											"end": 19621,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "297"
										},
										{
											"begin": 19550,
											"end": 19621,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 19550,
											"end": 19621,
											"name": "tag",
											"source": 7,
											"value": "506"
										},
										{
											"begin": 19550,
											"end": 19621,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 19631,
											"end": 19703,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "507"
										},
										{
											"begin": 19699,
											"end": 19701,
											"name": "PUSH",
											"source": 7,
											"value": "20"
										},
										{
											"begin": 19688,
											"end": 19697,
											"name": "DUP4",
											"source": 7
										},
										{
											"begin": 19684,
											"end": 19702,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 19675,
											"end": 19681,
											"name": "DUP6",
											"source": 7
										},
										{
											"begin": 19631,
											"end": 19703,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "257"
										},
										{
											"begin": 19631,
											"end": 19703,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 19631,
											"end": 19703,
											"name": "tag",
											"source": 7,
											"value": "507"
										},
										{
											"begin": 19631,
											"end": 19703,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 19713,
											"end": 19785,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "508"
										},
										{
											"begin": 19781,
											"end": 19783,
											"name": "PUSH",
											"source": 7,
											"value": "40"
										},
										{
											"begin": 19770,
											"end": 19779,
											"name": "DUP4",
											"source": 7
										},
										{
											"begin": 19766,
											"end": 19784,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 19757,
											"end": 19763,
											"name": "DUP5",
											"source": 7
										},
										{
											"begin": 19713,
											"end": 19785,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "257"
										},
										{
											"begin": 19713,
											"end": 19785,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 19713,
											"end": 19785,
											"name": "tag",
											"source": 7,
											"value": "508"
										},
										{
											"begin": 19713,
											"end": 19785,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 19350,
											"end": 19792,
											"name": "SWAP5",
											"source": 7
										},
										{
											"begin": 19350,
											"end": 19792,
											"name": "SWAP4",
											"source": 7
										},
										{
											"begin": 19350,
											"end": 19792,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 19350,
											"end": 19792,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 19350,
											"end": 19792,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 19350,
											"end": 19792,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 19350,
											"end": 19792,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 19798,
											"end": 20020,
											"name": "tag",
											"source": 7,
											"value": "197"
										},
										{
											"begin": 19798,
											"end": 20020,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 19891,
											"end": 19895,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 19929,
											"end": 19931,
											"name": "PUSH",
											"source": 7,
											"value": "20"
										},
										{
											"begin": 19918,
											"end": 19927,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 19914,
											"end": 19932,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 19906,
											"end": 19932,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 19906,
											"end": 19932,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 19942,
											"end": 20013,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "510"
										},
										{
											"begin": 20010,
											"end": 20011,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 19999,
											"end": 20008,
											"name": "DUP4",
											"source": 7
										},
										{
											"begin": 19995,
											"end": 20012,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 19986,
											"end": 19992,
											"name": "DUP5",
											"source": 7
										},
										{
											"begin": 19942,
											"end": 20013,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "297"
										},
										{
											"begin": 19942,
											"end": 20013,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 19942,
											"end": 20013,
											"name": "tag",
											"source": 7,
											"value": "510"
										},
										{
											"begin": 19942,
											"end": 20013,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 19798,
											"end": 20020,
											"name": "SWAP3",
											"source": 7
										},
										{
											"begin": 19798,
											"end": 20020,
											"name": "SWAP2",
											"source": 7
										},
										{
											"begin": 19798,
											"end": 20020,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 19798,
											"end": 20020,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 19798,
											"end": 20020,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 7
										}
									]
								}
							},
							"sourceList": [
								"@openzeppelin/contracts/interfaces/draft-IERC6093.sol",
								"@openzeppelin/contracts/token/ERC20/ERC20.sol",
								"@openzeppelin/contracts/token/ERC20/IERC20.sol",
								"@openzeppelin/contracts/token/ERC20/extensions/IERC20Metadata.sol",
								"@openzeppelin/contracts/utils/Context.sol",
								"@openzeppelin/contracts/utils/structs/EnumerableSet.sol",
								"ERC20.sol",
								"#utility.yul"
							]
						},
						"methodIdentifiers": {
							"allowance(address,address)": "dd62ed3e",
							"approve(address,uint256)": "095ea7b3",
							"balanceOf(address)": "70a08231",
							"claim()": "4e71d92d",
							"claimAmount()": "830953ab",
							"createIssue(string,uint256)": "8615d855",
							"decimals()": "313ce567",
							"getIssue(uint256)": "976b3113",
							"maxSupply()": "d5abeb01",
							"name()": "06fdde03",
							"symbol()": "95d89b41",
							"tokensClaimed(address)": "624601b6",
							"totalSupply()": "18160ddd",
							"transfer(address,uint256)": "a9059cbb",
							"transferFrom(address,address,uint256)": "23b872dd",
							"vote(uint256,uint8)": "943e8216"
						}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.26+commit.8a97fa7a\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"string\",\"name\":\"_name\",\"type\":\"string\"},{\"internalType\":\"string\",\"name\":\"_symbol\",\"type\":\"string\"}],\"stateMutability\":\"nonpayable\",\"type\":\"constructor\"},{\"inputs\":[],\"name\":\"AllTokensClaimed\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"AlreadyVoted\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"allowance\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"needed\",\"type\":\"uint256\"}],\"name\":\"ERC20InsufficientAllowance\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"balance\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"needed\",\"type\":\"uint256\"}],\"name\":\"ERC20InsufficientBalance\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"approver\",\"type\":\"address\"}],\"name\":\"ERC20InvalidApprover\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"receiver\",\"type\":\"address\"}],\"name\":\"ERC20InvalidReceiver\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"}],\"name\":\"ERC20InvalidSender\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"}],\"name\":\"ERC20InvalidSpender\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"NoTokensHeld\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"QuorumTooHigh\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"TokensClaimed\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"VotingClosed\",\"type\":\"error\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"Approval\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"Transfer\",\"type\":\"event\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"}],\"name\":\"allowance\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"approve\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"balanceOf\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"claim\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"claimAmount\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"string\",\"name\":\"_issueDesc\",\"type\":\"string\"},{\"internalType\":\"uint256\",\"name\":\"_quorum\",\"type\":\"uint256\"}],\"name\":\"createIssue\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"decimals\",\"outputs\":[{\"internalType\":\"uint8\",\"name\":\"\",\"type\":\"uint8\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"_issueId\",\"type\":\"uint256\"}],\"name\":\"getIssue\",\"outputs\":[{\"components\":[{\"internalType\":\"address[]\",\"name\":\"voters\",\"type\":\"address[]\"},{\"internalType\":\"string\",\"name\":\"issueDesc\",\"type\":\"string\"},{\"internalType\":\"uint256\",\"name\":\"quorum\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"totalVotes\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"votesFor\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"votesAgainst\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"votesAbstain\",\"type\":\"uint256\"},{\"internalType\":\"bool\",\"name\":\"passed\",\"type\":\"bool\"},{\"internalType\":\"bool\",\"name\":\"closed\",\"type\":\"bool\"}],\"internalType\":\"struct WeightedVoting.SerializedIssue\",\"name\":\"\",\"type\":\"tuple\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"maxSupply\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"name\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"symbol\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"name\":\"tokensClaimed\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"totalSupply\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"transfer\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"transferFrom\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"_issueId\",\"type\":\"uint256\"},{\"internalType\":\"enum WeightedVoting.Vote\",\"name\":\"_vote\",\"type\":\"uint8\"}],\"name\":\"vote\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"errors\":{\"ERC20InsufficientAllowance(address,uint256,uint256)\":[{\"details\":\"Indicates a failure with the `spender`\\u2019s `allowance`. Used in transfers.\",\"params\":{\"allowance\":\"Amount of tokens a `spender` is allowed to operate with.\",\"needed\":\"Minimum amount required to perform a transfer.\",\"spender\":\"Address that may be allowed to operate on tokens without being their owner.\"}}],\"ERC20InsufficientBalance(address,uint256,uint256)\":[{\"details\":\"Indicates an error related to the current `balance` of a `sender`. Used in transfers.\",\"params\":{\"balance\":\"Current balance for the interacting account.\",\"needed\":\"Minimum amount required to perform a transfer.\",\"sender\":\"Address whose tokens are being transferred.\"}}],\"ERC20InvalidApprover(address)\":[{\"details\":\"Indicates a failure with the `approver` of a token to be approved. Used in approvals.\",\"params\":{\"approver\":\"Address initiating an approval operation.\"}}],\"ERC20InvalidReceiver(address)\":[{\"details\":\"Indicates a failure with the token `receiver`. Used in transfers.\",\"params\":{\"receiver\":\"Address to which tokens are being transferred.\"}}],\"ERC20InvalidSender(address)\":[{\"details\":\"Indicates a failure with the token `sender`. Used in transfers.\",\"params\":{\"sender\":\"Address whose tokens are being transferred.\"}}],\"ERC20InvalidSpender(address)\":[{\"details\":\"Indicates a failure with the `spender` to be approved. Used in approvals.\",\"params\":{\"spender\":\"Address that may be allowed to operate on tokens without being their owner.\"}}]},\"events\":{\"Approval(address,address,uint256)\":{\"details\":\"Emitted when the allowance of a `spender` for an `owner` is set by a call to {approve}. `value` is the new allowance.\"},\"Transfer(address,address,uint256)\":{\"details\":\"Emitted when `value` tokens are moved from one account (`from`) to another (`to`). Note that `value` may be zero.\"}},\"kind\":\"dev\",\"methods\":{\"allowance(address,address)\":{\"details\":\"See {IERC20-allowance}.\"},\"approve(address,uint256)\":{\"details\":\"See {IERC20-approve}. NOTE: If `value` is the maximum `uint256`, the allowance is not updated on `transferFrom`. This is semantically equivalent to an infinite approval. Requirements: - `spender` cannot be the zero address.\"},\"balanceOf(address)\":{\"details\":\"See {IERC20-balanceOf}.\"},\"decimals()\":{\"details\":\"Returns the number of decimals used to get its user representation. For example, if `decimals` equals `2`, a balance of `505` tokens should be displayed to a user as `5.05` (`505 / 10 ** 2`). Tokens usually opt for a value of 18, imitating the relationship between Ether and Wei. This is the default value returned by this function, unless it's overridden. NOTE: This information is only used for _display_ purposes: it in no way affects any of the arithmetic of the contract, including {IERC20-balanceOf} and {IERC20-transfer}.\"},\"name()\":{\"details\":\"Returns the name of the token.\"},\"symbol()\":{\"details\":\"Returns the symbol of the token, usually a shorter version of the name.\"},\"totalSupply()\":{\"details\":\"See {IERC20-totalSupply}.\"},\"transfer(address,uint256)\":{\"details\":\"See {IERC20-transfer}. Requirements: - `to` cannot be the zero address. - the caller must have a balance of at least `value`.\"},\"transferFrom(address,address,uint256)\":{\"details\":\"See {IERC20-transferFrom}. Skips emitting an {Approval} event indicating an allowance update. This is not required by the ERC. See {xref-ERC20-_approve-address-address-uint256-bool-}[_approve]. NOTE: Does not update the allowance if the current allowance is the maximum `uint256`. Requirements: - `from` and `to` cannot be the zero address. - `from` must have a balance of at least `value`. - the caller must have allowance for ``from``'s tokens of at least `value`.\"}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"ERC20.sol\":\"WeightedVoting\"},\"evmVersion\":\"cancun\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/interfaces/draft-IERC6093.sol\":{\"keccak256\":\"0x880da465c203cec76b10d72dbd87c80f387df4102274f23eea1f9c9b0918792b\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://399594cd8bb0143bc9e55e0f1d071d0d8c850a394fb7a319d50edd55d9ed822b\",\"dweb:/ipfs/QmbPZzgtT6LEm9CMqWfagQFwETbV1ztpECBB1DtQHrKiRz\"]},\"@openzeppelin/contracts/token/ERC20/ERC20.sol\":{\"keccak256\":\"0x6ef9389a2c07bc40d8a7ba48914724ab2c108fac391ce12314f01321813e6368\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://b7a5cb39b1e6df68f4dd9a5e76e853d745a74ffb3dfd7df4ae4d2ace6992a171\",\"dweb:/ipfs/QmPbzKR19rdM8X3PLQjsmHRepUKhvoZnedSR63XyGtXZib\"]},\"@openzeppelin/contracts/token/ERC20/IERC20.sol\":{\"keccak256\":\"0xe06a3f08a987af6ad2e1c1e774405d4fe08f1694b67517438b467cecf0da0ef7\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://df6f0c459663c9858b6cba2cda1d14a7d05a985bed6d2de72bd8e78c25ee79db\",\"dweb:/ipfs/QmeTTxZ7qVk9rjEv2R4CpCwdf8UMCcRqDNMvzNxHc3Fnn9\"]},\"@openzeppelin/contracts/token/ERC20/extensions/IERC20Metadata.sol\":{\"keccak256\":\"0x70f2f713b13b7ce4610bcd0ac9fec0f3cc43693b043abcb8dc40a42a726eb330\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://c13d13304ac79a83ab1c30168967d19e2203342ebbd6a9bbce4db7550522dcbf\",\"dweb:/ipfs/QmeN5jKMN2vw5bhacr6tkg78afbTTZUeaacNHqjWt4Ew1r\"]},\"@openzeppelin/contracts/utils/Context.sol\":{\"keccak256\":\"0x493033a8d1b176a037b2cc6a04dad01a5c157722049bbecf632ca876224dd4b2\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://6a708e8a5bdb1011c2c381c9a5cfd8a9a956d7d0a9dc1bd8bcdaf52f76ef2f12\",\"dweb:/ipfs/Qmax9WHBnVsZP46ZxEMNRQpLQnrdE4dK8LehML1Py8FowF\"]},\"@openzeppelin/contracts/utils/structs/EnumerableSet.sol\":{\"keccak256\":\"0x9b161e97b8967d4bc0c08d25741889a30692cdda4b71910bf1b0e315f1962212\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://821500c39d095eaa25b06f46e65f1d0e97c4c96b39227f79077dee7d9e84051f\",\"dweb:/ipfs/QmSTeGorKzSWF6HAmxo32uCZiEuKNvreQdUiX1AaYtUMTz\"]},\"ERC20.sol\":{\"keccak256\":\"0x9c8af99d59e9ff54bb780da4ffbd8a5c273e94234c501cef45087052a3329ad7\",\"license\":\"UNLICENSED\",\"urls\":[\"bzz-raw://4848a9195d45f6158b1257e2b3f1b21f4372642578f8359e55262843480c4f9d\",\"dweb:/ipfs/QmNp3pexBW9x1ihsjkYPbx8QEKW9PWkZ5XZ6wGR4rhpgmm\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [
							{
								"astId": 159,
								"contract": "ERC20.sol:WeightedVoting",
								"label": "_balances",
								"offset": 0,
								"slot": "0",
								"type": "t_mapping(t_address,t_uint256)"
							},
							{
								"astId": 165,
								"contract": "ERC20.sol:WeightedVoting",
								"label": "_allowances",
								"offset": 0,
								"slot": "1",
								"type": "t_mapping(t_address,t_mapping(t_address,t_uint256))"
							},
							{
								"astId": 167,
								"contract": "ERC20.sol:WeightedVoting",
								"label": "_totalSupply",
								"offset": 0,
								"slot": "2",
								"type": "t_uint256"
							},
							{
								"astId": 169,
								"contract": "ERC20.sol:WeightedVoting",
								"label": "_name",
								"offset": 0,
								"slot": "3",
								"type": "t_string_storage"
							},
							{
								"astId": 171,
								"contract": "ERC20.sol:WeightedVoting",
								"label": "_symbol",
								"offset": 0,
								"slot": "4",
								"type": "t_string_storage"
							},
							{
								"astId": 1407,
								"contract": "ERC20.sol:WeightedVoting",
								"label": "salt",
								"offset": 0,
								"slot": "5",
								"type": "t_string_storage"
							},
							{
								"astId": 1471,
								"contract": "ERC20.sol:WeightedVoting",
								"label": "issues",
								"offset": 0,
								"slot": "6",
								"type": "t_array(t_struct(Issue)1443_storage)dyn_storage"
							},
							{
								"astId": 1475,
								"contract": "ERC20.sol:WeightedVoting",
								"label": "tokensClaimed",
								"offset": 0,
								"slot": "7",
								"type": "t_mapping(t_address,t_bool)"
							},
							{
								"astId": 1478,
								"contract": "ERC20.sol:WeightedVoting",
								"label": "maxSupply",
								"offset": 0,
								"slot": "8",
								"type": "t_uint256"
							},
							{
								"astId": 1481,
								"contract": "ERC20.sol:WeightedVoting",
								"label": "claimAmount",
								"offset": 0,
								"slot": "9",
								"type": "t_uint256"
							},
							{
								"astId": 1484,
								"contract": "ERC20.sol:WeightedVoting",
								"label": "saltt",
								"offset": 0,
								"slot": "10",
								"type": "t_string_storage"
							}
						],
						"types": {
							"t_address": {
								"encoding": "inplace",
								"label": "address",
								"numberOfBytes": "20"
							},
							"t_array(t_bytes32)dyn_storage": {
								"base": "t_bytes32",
								"encoding": "dynamic_array",
								"label": "bytes32[]",
								"numberOfBytes": "32"
							},
							"t_array(t_struct(Issue)1443_storage)dyn_storage": {
								"base": "t_struct(Issue)1443_storage",
								"encoding": "dynamic_array",
								"label": "struct WeightedVoting.Issue[]",
								"numberOfBytes": "32"
							},
							"t_bool": {
								"encoding": "inplace",
								"label": "bool",
								"numberOfBytes": "1"
							},
							"t_bytes32": {
								"encoding": "inplace",
								"label": "bytes32",
								"numberOfBytes": "32"
							},
							"t_mapping(t_address,t_bool)": {
								"encoding": "mapping",
								"key": "t_address",
								"label": "mapping(address => bool)",
								"numberOfBytes": "32",
								"value": "t_bool"
							},
							"t_mapping(t_address,t_mapping(t_address,t_uint256))": {
								"encoding": "mapping",
								"key": "t_address",
								"label": "mapping(address => mapping(address => uint256))",
								"numberOfBytes": "32",
								"value": "t_mapping(t_address,t_uint256)"
							},
							"t_mapping(t_address,t_uint256)": {
								"encoding": "mapping",
								"key": "t_address",
								"label": "mapping(address => uint256)",
								"numberOfBytes": "32",
								"value": "t_uint256"
							},
							"t_mapping(t_bytes32,t_uint256)": {
								"encoding": "mapping",
								"key": "t_bytes32",
								"label": "mapping(bytes32 => uint256)",
								"numberOfBytes": "32",
								"value": "t_uint256"
							},
							"t_string_storage": {
								"encoding": "bytes",
								"label": "string",
								"numberOfBytes": "32"
							},
							"t_struct(AddressSet)1111_storage": {
								"encoding": "inplace",
								"label": "struct EnumerableSet.AddressSet",
								"members": [
									{
										"astId": 1110,
										"contract": "ERC20.sol:WeightedVoting",
										"label": "_inner",
										"offset": 0,
										"slot": "0",
										"type": "t_struct(Set)796_storage"
									}
								],
								"numberOfBytes": "64"
							},
							"t_struct(Issue)1443_storage": {
								"encoding": "inplace",
								"label": "struct WeightedVoting.Issue",
								"members": [
									{
										"astId": 1426,
										"contract": "ERC20.sol:WeightedVoting",
										"label": "voters",
										"offset": 0,
										"slot": "0",
										"type": "t_struct(AddressSet)1111_storage"
									},
									{
										"astId": 1428,
										"contract": "ERC20.sol:WeightedVoting",
										"label": "issueDesc",
										"offset": 0,
										"slot": "2",
										"type": "t_string_storage"
									},
									{
										"astId": 1430,
										"contract": "ERC20.sol:WeightedVoting",
										"label": "quorum",
										"offset": 0,
										"slot": "3",
										"type": "t_uint256"
									},
									{
										"astId": 1432,
										"contract": "ERC20.sol:WeightedVoting",
										"label": "totalVotes",
										"offset": 0,
										"slot": "4",
										"type": "t_uint256"
									},
									{
										"astId": 1434,
										"contract": "ERC20.sol:WeightedVoting",
										"label": "votesFor",
										"offset": 0,
										"slot": "5",
										"type": "t_uint256"
									},
									{
										"astId": 1436,
										"contract": "ERC20.sol:WeightedVoting",
										"label": "votesAgainst",
										"offset": 0,
										"slot": "6",
										"type": "t_uint256"
									},
									{
										"astId": 1438,
										"contract": "ERC20.sol:WeightedVoting",
										"label": "votesAbstain",
										"offset": 0,
										"slot": "7",
										"type": "t_uint256"
									},
									{
										"astId": 1440,
										"contract": "ERC20.sol:WeightedVoting",
										"label": "passed",
										"offset": 0,
										"slot": "8",
										"type": "t_bool"
									},
									{
										"astId": 1442,
										"contract": "ERC20.sol:WeightedVoting",
										"label": "closed",
										"offset": 1,
										"slot": "8",
										"type": "t_bool"
									}
								],
								"numberOfBytes": "288"
							},
							"t_struct(Set)796_storage": {
								"encoding": "inplace",
								"label": "struct EnumerableSet.Set",
								"members": [
									{
										"astId": 791,
										"contract": "ERC20.sol:WeightedVoting",
										"label": "_values",
										"offset": 0,
										"slot": "0",
										"type": "t_array(t_bytes32)dyn_storage"
									},
									{
										"astId": 795,
										"contract": "ERC20.sol:WeightedVoting",
										"label": "_positions",
										"offset": 0,
										"slot": "1",
										"type": "t_mapping(t_bytes32,t_uint256)"
									}
								],
								"numberOfBytes": "64"
							},
							"t_uint256": {
								"encoding": "inplace",
								"label": "uint256",
								"numberOfBytes": "32"
							}
						}
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			}
		},
		"sources": {
			"@openzeppelin/contracts/interfaces/draft-IERC6093.sol": {
				"ast": {
					"absolutePath": "@openzeppelin/contracts/interfaces/draft-IERC6093.sol",
					"exportedSymbols": {
						"IERC1155Errors": [
							136
						],
						"IERC20Errors": [
							41
						],
						"IERC721Errors": [
							89
						]
					},
					"id": 137,
					"license": "MIT",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 1,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".20"
							],
							"nodeType": "PragmaDirective",
							"src": "112:24:0"
						},
						{
							"abstract": false,
							"baseContracts": [],
							"canonicalName": "IERC20Errors",
							"contractDependencies": [],
							"contractKind": "interface",
							"documentation": {
								"id": 2,
								"nodeType": "StructuredDocumentation",
								"src": "138:141:0",
								"text": " @dev Standard ERC-20 Errors\n Interface of the https://eips.ethereum.org/EIPS/eip-6093[ERC-6093] custom errors for ERC-20 tokens."
							},
							"fullyImplemented": true,
							"id": 41,
							"linearizedBaseContracts": [
								41
							],
							"name": "IERC20Errors",
							"nameLocation": "290:12:0",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"documentation": {
										"id": 3,
										"nodeType": "StructuredDocumentation",
										"src": "309:309:0",
										"text": " @dev Indicates an error related to the current `balance` of a `sender`. Used in transfers.\n @param sender Address whose tokens are being transferred.\n @param balance Current balance for the interacting account.\n @param needed Minimum amount required to perform a transfer."
									},
									"errorSelector": "e450d38c",
									"id": 11,
									"name": "ERC20InsufficientBalance",
									"nameLocation": "629:24:0",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 10,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 5,
												"mutability": "mutable",
												"name": "sender",
												"nameLocation": "662:6:0",
												"nodeType": "VariableDeclaration",
												"scope": 11,
												"src": "654:14:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 4,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "654:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 7,
												"mutability": "mutable",
												"name": "balance",
												"nameLocation": "678:7:0",
												"nodeType": "VariableDeclaration",
												"scope": 11,
												"src": "670:15:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 6,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "670:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 9,
												"mutability": "mutable",
												"name": "needed",
												"nameLocation": "695:6:0",
												"nodeType": "VariableDeclaration",
												"scope": 11,
												"src": "687:14:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 8,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "687:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "653:49:0"
									},
									"src": "623:80:0"
								},
								{
									"documentation": {
										"id": 12,
										"nodeType": "StructuredDocumentation",
										"src": "709:152:0",
										"text": " @dev Indicates a failure with the token `sender`. Used in transfers.\n @param sender Address whose tokens are being transferred."
									},
									"errorSelector": "96c6fd1e",
									"id": 16,
									"name": "ERC20InvalidSender",
									"nameLocation": "872:18:0",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 15,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 14,
												"mutability": "mutable",
												"name": "sender",
												"nameLocation": "899:6:0",
												"nodeType": "VariableDeclaration",
												"scope": 16,
												"src": "891:14:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 13,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "891:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "890:16:0"
									},
									"src": "866:41:0"
								},
								{
									"documentation": {
										"id": 17,
										"nodeType": "StructuredDocumentation",
										"src": "913:159:0",
										"text": " @dev Indicates a failure with the token `receiver`. Used in transfers.\n @param receiver Address to which tokens are being transferred."
									},
									"errorSelector": "ec442f05",
									"id": 21,
									"name": "ERC20InvalidReceiver",
									"nameLocation": "1083:20:0",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 20,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 19,
												"mutability": "mutable",
												"name": "receiver",
												"nameLocation": "1112:8:0",
												"nodeType": "VariableDeclaration",
												"scope": 21,
												"src": "1104:16:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 18,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1104:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1103:18:0"
									},
									"src": "1077:45:0"
								},
								{
									"documentation": {
										"id": 22,
										"nodeType": "StructuredDocumentation",
										"src": "1128:345:0",
										"text": " @dev Indicates a failure with the `spender`’s `allowance`. Used in transfers.\n @param spender Address that may be allowed to operate on tokens without being their owner.\n @param allowance Amount of tokens a `spender` is allowed to operate with.\n @param needed Minimum amount required to perform a transfer."
									},
									"errorSelector": "fb8f41b2",
									"id": 30,
									"name": "ERC20InsufficientAllowance",
									"nameLocation": "1484:26:0",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 29,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 24,
												"mutability": "mutable",
												"name": "spender",
												"nameLocation": "1519:7:0",
												"nodeType": "VariableDeclaration",
												"scope": 30,
												"src": "1511:15:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 23,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1511:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 26,
												"mutability": "mutable",
												"name": "allowance",
												"nameLocation": "1536:9:0",
												"nodeType": "VariableDeclaration",
												"scope": 30,
												"src": "1528:17:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 25,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1528:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 28,
												"mutability": "mutable",
												"name": "needed",
												"nameLocation": "1555:6:0",
												"nodeType": "VariableDeclaration",
												"scope": 30,
												"src": "1547:14:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 27,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1547:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1510:52:0"
									},
									"src": "1478:85:0"
								},
								{
									"documentation": {
										"id": 31,
										"nodeType": "StructuredDocumentation",
										"src": "1569:174:0",
										"text": " @dev Indicates a failure with the `approver` of a token to be approved. Used in approvals.\n @param approver Address initiating an approval operation."
									},
									"errorSelector": "e602df05",
									"id": 35,
									"name": "ERC20InvalidApprover",
									"nameLocation": "1754:20:0",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 34,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 33,
												"mutability": "mutable",
												"name": "approver",
												"nameLocation": "1783:8:0",
												"nodeType": "VariableDeclaration",
												"scope": 35,
												"src": "1775:16:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 32,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1775:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1774:18:0"
									},
									"src": "1748:45:0"
								},
								{
									"documentation": {
										"id": 36,
										"nodeType": "StructuredDocumentation",
										"src": "1799:195:0",
										"text": " @dev Indicates a failure with the `spender` to be approved. Used in approvals.\n @param spender Address that may be allowed to operate on tokens without being their owner."
									},
									"errorSelector": "94280d62",
									"id": 40,
									"name": "ERC20InvalidSpender",
									"nameLocation": "2005:19:0",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 39,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 38,
												"mutability": "mutable",
												"name": "spender",
												"nameLocation": "2033:7:0",
												"nodeType": "VariableDeclaration",
												"scope": 40,
												"src": "2025:15:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 37,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2025:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2024:17:0"
									},
									"src": "1999:43:0"
								}
							],
							"scope": 137,
							"src": "280:1764:0",
							"usedErrors": [
								11,
								16,
								21,
								30,
								35,
								40
							],
							"usedEvents": []
						},
						{
							"abstract": false,
							"baseContracts": [],
							"canonicalName": "IERC721Errors",
							"contractDependencies": [],
							"contractKind": "interface",
							"documentation": {
								"id": 42,
								"nodeType": "StructuredDocumentation",
								"src": "2046:143:0",
								"text": " @dev Standard ERC-721 Errors\n Interface of the https://eips.ethereum.org/EIPS/eip-6093[ERC-6093] custom errors for ERC-721 tokens."
							},
							"fullyImplemented": true,
							"id": 89,
							"linearizedBaseContracts": [
								89
							],
							"name": "IERC721Errors",
							"nameLocation": "2200:13:0",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"documentation": {
										"id": 43,
										"nodeType": "StructuredDocumentation",
										"src": "2220:219:0",
										"text": " @dev Indicates that an address can't be an owner. For example, `address(0)` is a forbidden owner in ERC-20.\n Used in balance queries.\n @param owner Address of the current owner of a token."
									},
									"errorSelector": "89c62b64",
									"id": 47,
									"name": "ERC721InvalidOwner",
									"nameLocation": "2450:18:0",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 46,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 45,
												"mutability": "mutable",
												"name": "owner",
												"nameLocation": "2477:5:0",
												"nodeType": "VariableDeclaration",
												"scope": 47,
												"src": "2469:13:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 44,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2469:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2468:15:0"
									},
									"src": "2444:40:0"
								},
								{
									"documentation": {
										"id": 48,
										"nodeType": "StructuredDocumentation",
										"src": "2490:132:0",
										"text": " @dev Indicates a `tokenId` whose `owner` is the zero address.\n @param tokenId Identifier number of a token."
									},
									"errorSelector": "7e273289",
									"id": 52,
									"name": "ERC721NonexistentToken",
									"nameLocation": "2633:22:0",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 51,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 50,
												"mutability": "mutable",
												"name": "tokenId",
												"nameLocation": "2664:7:0",
												"nodeType": "VariableDeclaration",
												"scope": 52,
												"src": "2656:15:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 49,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "2656:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2655:17:0"
									},
									"src": "2627:46:0"
								},
								{
									"documentation": {
										"id": 53,
										"nodeType": "StructuredDocumentation",
										"src": "2679:289:0",
										"text": " @dev Indicates an error related to the ownership over a particular token. Used in transfers.\n @param sender Address whose tokens are being transferred.\n @param tokenId Identifier number of a token.\n @param owner Address of the current owner of a token."
									},
									"errorSelector": "64283d7b",
									"id": 61,
									"name": "ERC721IncorrectOwner",
									"nameLocation": "2979:20:0",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 60,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 55,
												"mutability": "mutable",
												"name": "sender",
												"nameLocation": "3008:6:0",
												"nodeType": "VariableDeclaration",
												"scope": 61,
												"src": "3000:14:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 54,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "3000:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 57,
												"mutability": "mutable",
												"name": "tokenId",
												"nameLocation": "3024:7:0",
												"nodeType": "VariableDeclaration",
												"scope": 61,
												"src": "3016:15:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 56,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "3016:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 59,
												"mutability": "mutable",
												"name": "owner",
												"nameLocation": "3041:5:0",
												"nodeType": "VariableDeclaration",
												"scope": 61,
												"src": "3033:13:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 58,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "3033:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2999:48:0"
									},
									"src": "2973:75:0"
								},
								{
									"documentation": {
										"id": 62,
										"nodeType": "StructuredDocumentation",
										"src": "3054:152:0",
										"text": " @dev Indicates a failure with the token `sender`. Used in transfers.\n @param sender Address whose tokens are being transferred."
									},
									"errorSelector": "73c6ac6e",
									"id": 66,
									"name": "ERC721InvalidSender",
									"nameLocation": "3217:19:0",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 65,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 64,
												"mutability": "mutable",
												"name": "sender",
												"nameLocation": "3245:6:0",
												"nodeType": "VariableDeclaration",
												"scope": 66,
												"src": "3237:14:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 63,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "3237:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3236:16:0"
									},
									"src": "3211:42:0"
								},
								{
									"documentation": {
										"id": 67,
										"nodeType": "StructuredDocumentation",
										"src": "3259:159:0",
										"text": " @dev Indicates a failure with the token `receiver`. Used in transfers.\n @param receiver Address to which tokens are being transferred."
									},
									"errorSelector": "64a0ae92",
									"id": 71,
									"name": "ERC721InvalidReceiver",
									"nameLocation": "3429:21:0",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 70,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 69,
												"mutability": "mutable",
												"name": "receiver",
												"nameLocation": "3459:8:0",
												"nodeType": "VariableDeclaration",
												"scope": 71,
												"src": "3451:16:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 68,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "3451:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3450:18:0"
									},
									"src": "3423:46:0"
								},
								{
									"documentation": {
										"id": 72,
										"nodeType": "StructuredDocumentation",
										"src": "3475:247:0",
										"text": " @dev Indicates a failure with the `operator`’s approval. Used in transfers.\n @param operator Address that may be allowed to operate on tokens without being their owner.\n @param tokenId Identifier number of a token."
									},
									"errorSelector": "177e802f",
									"id": 78,
									"name": "ERC721InsufficientApproval",
									"nameLocation": "3733:26:0",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 77,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 74,
												"mutability": "mutable",
												"name": "operator",
												"nameLocation": "3768:8:0",
												"nodeType": "VariableDeclaration",
												"scope": 78,
												"src": "3760:16:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 73,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "3760:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 76,
												"mutability": "mutable",
												"name": "tokenId",
												"nameLocation": "3786:7:0",
												"nodeType": "VariableDeclaration",
												"scope": 78,
												"src": "3778:15:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 75,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "3778:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3759:35:0"
									},
									"src": "3727:68:0"
								},
								{
									"documentation": {
										"id": 79,
										"nodeType": "StructuredDocumentation",
										"src": "3801:174:0",
										"text": " @dev Indicates a failure with the `approver` of a token to be approved. Used in approvals.\n @param approver Address initiating an approval operation."
									},
									"errorSelector": "a9fbf51f",
									"id": 83,
									"name": "ERC721InvalidApprover",
									"nameLocation": "3986:21:0",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 82,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 81,
												"mutability": "mutable",
												"name": "approver",
												"nameLocation": "4016:8:0",
												"nodeType": "VariableDeclaration",
												"scope": 83,
												"src": "4008:16:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 80,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "4008:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "4007:18:0"
									},
									"src": "3980:46:0"
								},
								{
									"documentation": {
										"id": 84,
										"nodeType": "StructuredDocumentation",
										"src": "4032:197:0",
										"text": " @dev Indicates a failure with the `operator` to be approved. Used in approvals.\n @param operator Address that may be allowed to operate on tokens without being their owner."
									},
									"errorSelector": "5b08ba18",
									"id": 88,
									"name": "ERC721InvalidOperator",
									"nameLocation": "4240:21:0",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 87,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 86,
												"mutability": "mutable",
												"name": "operator",
												"nameLocation": "4270:8:0",
												"nodeType": "VariableDeclaration",
												"scope": 88,
												"src": "4262:16:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 85,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "4262:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "4261:18:0"
									},
									"src": "4234:46:0"
								}
							],
							"scope": 137,
							"src": "2190:2092:0",
							"usedErrors": [
								47,
								52,
								61,
								66,
								71,
								78,
								83,
								88
							],
							"usedEvents": []
						},
						{
							"abstract": false,
							"baseContracts": [],
							"canonicalName": "IERC1155Errors",
							"contractDependencies": [],
							"contractKind": "interface",
							"documentation": {
								"id": 90,
								"nodeType": "StructuredDocumentation",
								"src": "4284:145:0",
								"text": " @dev Standard ERC-1155 Errors\n Interface of the https://eips.ethereum.org/EIPS/eip-6093[ERC-6093] custom errors for ERC-1155 tokens."
							},
							"fullyImplemented": true,
							"id": 136,
							"linearizedBaseContracts": [
								136
							],
							"name": "IERC1155Errors",
							"nameLocation": "4440:14:0",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"documentation": {
										"id": 91,
										"nodeType": "StructuredDocumentation",
										"src": "4461:361:0",
										"text": " @dev Indicates an error related to the current `balance` of a `sender`. Used in transfers.\n @param sender Address whose tokens are being transferred.\n @param balance Current balance for the interacting account.\n @param needed Minimum amount required to perform a transfer.\n @param tokenId Identifier number of a token."
									},
									"errorSelector": "03dee4c5",
									"id": 101,
									"name": "ERC1155InsufficientBalance",
									"nameLocation": "4833:26:0",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 100,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 93,
												"mutability": "mutable",
												"name": "sender",
												"nameLocation": "4868:6:0",
												"nodeType": "VariableDeclaration",
												"scope": 101,
												"src": "4860:14:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 92,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "4860:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 95,
												"mutability": "mutable",
												"name": "balance",
												"nameLocation": "4884:7:0",
												"nodeType": "VariableDeclaration",
												"scope": 101,
												"src": "4876:15:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 94,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "4876:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 97,
												"mutability": "mutable",
												"name": "needed",
												"nameLocation": "4901:6:0",
												"nodeType": "VariableDeclaration",
												"scope": 101,
												"src": "4893:14:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 96,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "4893:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 99,
												"mutability": "mutable",
												"name": "tokenId",
												"nameLocation": "4917:7:0",
												"nodeType": "VariableDeclaration",
												"scope": 101,
												"src": "4909:15:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 98,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "4909:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "4859:66:0"
									},
									"src": "4827:99:0"
								},
								{
									"documentation": {
										"id": 102,
										"nodeType": "StructuredDocumentation",
										"src": "4932:152:0",
										"text": " @dev Indicates a failure with the token `sender`. Used in transfers.\n @param sender Address whose tokens are being transferred."
									},
									"errorSelector": "01a83514",
									"id": 106,
									"name": "ERC1155InvalidSender",
									"nameLocation": "5095:20:0",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 105,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 104,
												"mutability": "mutable",
												"name": "sender",
												"nameLocation": "5124:6:0",
												"nodeType": "VariableDeclaration",
												"scope": 106,
												"src": "5116:14:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 103,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "5116:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "5115:16:0"
									},
									"src": "5089:43:0"
								},
								{
									"documentation": {
										"id": 107,
										"nodeType": "StructuredDocumentation",
										"src": "5138:159:0",
										"text": " @dev Indicates a failure with the token `receiver`. Used in transfers.\n @param receiver Address to which tokens are being transferred."
									},
									"errorSelector": "57f447ce",
									"id": 111,
									"name": "ERC1155InvalidReceiver",
									"nameLocation": "5308:22:0",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 110,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 109,
												"mutability": "mutable",
												"name": "receiver",
												"nameLocation": "5339:8:0",
												"nodeType": "VariableDeclaration",
												"scope": 111,
												"src": "5331:16:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 108,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "5331:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "5330:18:0"
									},
									"src": "5302:47:0"
								},
								{
									"documentation": {
										"id": 112,
										"nodeType": "StructuredDocumentation",
										"src": "5355:256:0",
										"text": " @dev Indicates a failure with the `operator`’s approval. Used in transfers.\n @param operator Address that may be allowed to operate on tokens without being their owner.\n @param owner Address of the current owner of a token."
									},
									"errorSelector": "e237d922",
									"id": 118,
									"name": "ERC1155MissingApprovalForAll",
									"nameLocation": "5622:28:0",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 117,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 114,
												"mutability": "mutable",
												"name": "operator",
												"nameLocation": "5659:8:0",
												"nodeType": "VariableDeclaration",
												"scope": 118,
												"src": "5651:16:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 113,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "5651:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 116,
												"mutability": "mutable",
												"name": "owner",
												"nameLocation": "5677:5:0",
												"nodeType": "VariableDeclaration",
												"scope": 118,
												"src": "5669:13:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 115,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "5669:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "5650:33:0"
									},
									"src": "5616:68:0"
								},
								{
									"documentation": {
										"id": 119,
										"nodeType": "StructuredDocumentation",
										"src": "5690:174:0",
										"text": " @dev Indicates a failure with the `approver` of a token to be approved. Used in approvals.\n @param approver Address initiating an approval operation."
									},
									"errorSelector": "3e31884e",
									"id": 123,
									"name": "ERC1155InvalidApprover",
									"nameLocation": "5875:22:0",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 122,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 121,
												"mutability": "mutable",
												"name": "approver",
												"nameLocation": "5906:8:0",
												"nodeType": "VariableDeclaration",
												"scope": 123,
												"src": "5898:16:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 120,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "5898:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "5897:18:0"
									},
									"src": "5869:47:0"
								},
								{
									"documentation": {
										"id": 124,
										"nodeType": "StructuredDocumentation",
										"src": "5922:197:0",
										"text": " @dev Indicates a failure with the `operator` to be approved. Used in approvals.\n @param operator Address that may be allowed to operate on tokens without being their owner."
									},
									"errorSelector": "ced3e100",
									"id": 128,
									"name": "ERC1155InvalidOperator",
									"nameLocation": "6130:22:0",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 127,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 126,
												"mutability": "mutable",
												"name": "operator",
												"nameLocation": "6161:8:0",
												"nodeType": "VariableDeclaration",
												"scope": 128,
												"src": "6153:16:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 125,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "6153:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "6152:18:0"
									},
									"src": "6124:47:0"
								},
								{
									"documentation": {
										"id": 129,
										"nodeType": "StructuredDocumentation",
										"src": "6177:280:0",
										"text": " @dev Indicates an array length mismatch between ids and values in a safeBatchTransferFrom operation.\n Used in batch transfers.\n @param idsLength Length of the array of token identifiers\n @param valuesLength Length of the array of token amounts"
									},
									"errorSelector": "5b059991",
									"id": 135,
									"name": "ERC1155InvalidArrayLength",
									"nameLocation": "6468:25:0",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 134,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 131,
												"mutability": "mutable",
												"name": "idsLength",
												"nameLocation": "6502:9:0",
												"nodeType": "VariableDeclaration",
												"scope": 135,
												"src": "6494:17:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 130,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "6494:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 133,
												"mutability": "mutable",
												"name": "valuesLength",
												"nameLocation": "6521:12:0",
												"nodeType": "VariableDeclaration",
												"scope": 135,
												"src": "6513:20:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 132,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "6513:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "6493:41:0"
									},
									"src": "6462:73:0"
								}
							],
							"scope": 137,
							"src": "4430:2107:0",
							"usedErrors": [
								101,
								106,
								111,
								118,
								123,
								128,
								135
							],
							"usedEvents": []
						}
					],
					"src": "112:6426:0"
				},
				"id": 0
			},
			"@openzeppelin/contracts/token/ERC20/ERC20.sol": {
				"ast": {
					"absolutePath": "@openzeppelin/contracts/token/ERC20/ERC20.sol",
					"exportedSymbols": {
						"Context": [
							785
						],
						"ERC20": [
							651
						],
						"IERC20": [
							729
						],
						"IERC20Errors": [
							41
						],
						"IERC20Metadata": [
							755
						]
					},
					"id": 652,
					"license": "MIT",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 138,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".20"
							],
							"nodeType": "PragmaDirective",
							"src": "105:24:1"
						},
						{
							"absolutePath": "@openzeppelin/contracts/token/ERC20/IERC20.sol",
							"file": "./IERC20.sol",
							"id": 140,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 652,
							"sourceUnit": 730,
							"src": "131:36:1",
							"symbolAliases": [
								{
									"foreign": {
										"id": 139,
										"name": "IERC20",
										"nodeType": "Identifier",
										"overloadedDeclarations": [],
										"referencedDeclaration": 729,
										"src": "139:6:1",
										"typeDescriptions": {}
									},
									"nameLocation": "-1:-1:-1"
								}
							],
							"unitAlias": ""
						},
						{
							"absolutePath": "@openzeppelin/contracts/token/ERC20/extensions/IERC20Metadata.sol",
							"file": "./extensions/IERC20Metadata.sol",
							"id": 142,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 652,
							"sourceUnit": 756,
							"src": "168:63:1",
							"symbolAliases": [
								{
									"foreign": {
										"id": 141,
										"name": "IERC20Metadata",
										"nodeType": "Identifier",
										"overloadedDeclarations": [],
										"referencedDeclaration": 755,
										"src": "176:14:1",
										"typeDescriptions": {}
									},
									"nameLocation": "-1:-1:-1"
								}
							],
							"unitAlias": ""
						},
						{
							"absolutePath": "@openzeppelin/contracts/utils/Context.sol",
							"file": "../../utils/Context.sol",
							"id": 144,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 652,
							"sourceUnit": 786,
							"src": "232:48:1",
							"symbolAliases": [
								{
									"foreign": {
										"id": 143,
										"name": "Context",
										"nodeType": "Identifier",
										"overloadedDeclarations": [],
										"referencedDeclaration": 785,
										"src": "240:7:1",
										"typeDescriptions": {}
									},
									"nameLocation": "-1:-1:-1"
								}
							],
							"unitAlias": ""
						},
						{
							"absolutePath": "@openzeppelin/contracts/interfaces/draft-IERC6093.sol",
							"file": "../../interfaces/draft-IERC6093.sol",
							"id": 146,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 652,
							"sourceUnit": 137,
							"src": "281:65:1",
							"symbolAliases": [
								{
									"foreign": {
										"id": 145,
										"name": "IERC20Errors",
										"nodeType": "Identifier",
										"overloadedDeclarations": [],
										"referencedDeclaration": 41,
										"src": "289:12:1",
										"typeDescriptions": {}
									},
									"nameLocation": "-1:-1:-1"
								}
							],
							"unitAlias": ""
						},
						{
							"abstract": true,
							"baseContracts": [
								{
									"baseName": {
										"id": 148,
										"name": "Context",
										"nameLocations": [
											"1133:7:1"
										],
										"nodeType": "IdentifierPath",
										"referencedDeclaration": 785,
										"src": "1133:7:1"
									},
									"id": 149,
									"nodeType": "InheritanceSpecifier",
									"src": "1133:7:1"
								},
								{
									"baseName": {
										"id": 150,
										"name": "IERC20",
										"nameLocations": [
											"1142:6:1"
										],
										"nodeType": "IdentifierPath",
										"referencedDeclaration": 729,
										"src": "1142:6:1"
									},
									"id": 151,
									"nodeType": "InheritanceSpecifier",
									"src": "1142:6:1"
								},
								{
									"baseName": {
										"id": 152,
										"name": "IERC20Metadata",
										"nameLocations": [
											"1150:14:1"
										],
										"nodeType": "IdentifierPath",
										"referencedDeclaration": 755,
										"src": "1150:14:1"
									},
									"id": 153,
									"nodeType": "InheritanceSpecifier",
									"src": "1150:14:1"
								},
								{
									"baseName": {
										"id": 154,
										"name": "IERC20Errors",
										"nameLocations": [
											"1166:12:1"
										],
										"nodeType": "IdentifierPath",
										"referencedDeclaration": 41,
										"src": "1166:12:1"
									},
									"id": 155,
									"nodeType": "InheritanceSpecifier",
									"src": "1166:12:1"
								}
							],
							"canonicalName": "ERC20",
							"contractDependencies": [],
							"contractKind": "contract",
							"documentation": {
								"id": 147,
								"nodeType": "StructuredDocumentation",
								"src": "348:757:1",
								"text": " @dev Implementation of the {IERC20} interface.\n This implementation is agnostic to the way tokens are created. This means\n that a supply mechanism has to be added in a derived contract using {_mint}.\n TIP: For a detailed writeup see our guide\n https://forum.openzeppelin.com/t/how-to-implement-erc20-supply-mechanisms/226[How\n to implement supply mechanisms].\n The default value of {decimals} is 18. To change this, you should override\n this function so it returns a different value.\n We have followed general OpenZeppelin Contracts guidelines: functions revert\n instead returning `false` on failure. This behavior is nonetheless\n conventional and does not conflict with the expectations of ERC-20\n applications."
							},
							"fullyImplemented": true,
							"id": 651,
							"linearizedBaseContracts": [
								651,
								41,
								755,
								729,
								785
							],
							"name": "ERC20",
							"nameLocation": "1124:5:1",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"constant": false,
									"id": 159,
									"mutability": "mutable",
									"name": "_balances",
									"nameLocation": "1229:9:1",
									"nodeType": "VariableDeclaration",
									"scope": 651,
									"src": "1185:53:1",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
										"typeString": "mapping(address => uint256)"
									},
									"typeName": {
										"id": 158,
										"keyName": "account",
										"keyNameLocation": "1201:7:1",
										"keyType": {
											"id": 156,
											"name": "address",
											"nodeType": "ElementaryTypeName",
											"src": "1193:7:1",
											"typeDescriptions": {
												"typeIdentifier": "t_address",
												"typeString": "address"
											}
										},
										"nodeType": "Mapping",
										"src": "1185:35:1",
										"typeDescriptions": {
											"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
											"typeString": "mapping(address => uint256)"
										},
										"valueName": "",
										"valueNameLocation": "-1:-1:-1",
										"valueType": {
											"id": 157,
											"name": "uint256",
											"nodeType": "ElementaryTypeName",
											"src": "1212:7:1",
											"typeDescriptions": {
												"typeIdentifier": "t_uint256",
												"typeString": "uint256"
											}
										}
									},
									"visibility": "private"
								},
								{
									"constant": false,
									"id": 165,
									"mutability": "mutable",
									"name": "_allowances",
									"nameLocation": "1317:11:1",
									"nodeType": "VariableDeclaration",
									"scope": 651,
									"src": "1245:83:1",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_mapping$_t_address_$_t_mapping$_t_address_$_t_uint256_$_$",
										"typeString": "mapping(address => mapping(address => uint256))"
									},
									"typeName": {
										"id": 164,
										"keyName": "account",
										"keyNameLocation": "1261:7:1",
										"keyType": {
											"id": 160,
											"name": "address",
											"nodeType": "ElementaryTypeName",
											"src": "1253:7:1",
											"typeDescriptions": {
												"typeIdentifier": "t_address",
												"typeString": "address"
											}
										},
										"nodeType": "Mapping",
										"src": "1245:63:1",
										"typeDescriptions": {
											"typeIdentifier": "t_mapping$_t_address_$_t_mapping$_t_address_$_t_uint256_$_$",
											"typeString": "mapping(address => mapping(address => uint256))"
										},
										"valueName": "",
										"valueNameLocation": "-1:-1:-1",
										"valueType": {
											"id": 163,
											"keyName": "spender",
											"keyNameLocation": "1288:7:1",
											"keyType": {
												"id": 161,
												"name": "address",
												"nodeType": "ElementaryTypeName",
												"src": "1280:7:1",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												}
											},
											"nodeType": "Mapping",
											"src": "1272:35:1",
											"typeDescriptions": {
												"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
												"typeString": "mapping(address => uint256)"
											},
											"valueName": "",
											"valueNameLocation": "-1:-1:-1",
											"valueType": {
												"id": 162,
												"name": "uint256",
												"nodeType": "ElementaryTypeName",
												"src": "1299:7:1",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												}
											}
										}
									},
									"visibility": "private"
								},
								{
									"constant": false,
									"id": 167,
									"mutability": "mutable",
									"name": "_totalSupply",
									"nameLocation": "1351:12:1",
									"nodeType": "VariableDeclaration",
									"scope": 651,
									"src": "1335:28:1",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_uint256",
										"typeString": "uint256"
									},
									"typeName": {
										"id": 166,
										"name": "uint256",
										"nodeType": "ElementaryTypeName",
										"src": "1335:7:1",
										"typeDescriptions": {
											"typeIdentifier": "t_uint256",
											"typeString": "uint256"
										}
									},
									"visibility": "private"
								},
								{
									"constant": false,
									"id": 169,
									"mutability": "mutable",
									"name": "_name",
									"nameLocation": "1385:5:1",
									"nodeType": "VariableDeclaration",
									"scope": 651,
									"src": "1370:20:1",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_string_storage",
										"typeString": "string"
									},
									"typeName": {
										"id": 168,
										"name": "string",
										"nodeType": "ElementaryTypeName",
										"src": "1370:6:1",
										"typeDescriptions": {
											"typeIdentifier": "t_string_storage_ptr",
											"typeString": "string"
										}
									},
									"visibility": "private"
								},
								{
									"constant": false,
									"id": 171,
									"mutability": "mutable",
									"name": "_symbol",
									"nameLocation": "1411:7:1",
									"nodeType": "VariableDeclaration",
									"scope": 651,
									"src": "1396:22:1",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_string_storage",
										"typeString": "string"
									},
									"typeName": {
										"id": 170,
										"name": "string",
										"nodeType": "ElementaryTypeName",
										"src": "1396:6:1",
										"typeDescriptions": {
											"typeIdentifier": "t_string_storage_ptr",
											"typeString": "string"
										}
									},
									"visibility": "private"
								},
								{
									"body": {
										"id": 187,
										"nodeType": "Block",
										"src": "1657:57:1",
										"statements": [
											{
												"expression": {
													"id": 181,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 179,
														"name": "_name",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 169,
														"src": "1667:5:1",
														"typeDescriptions": {
															"typeIdentifier": "t_string_storage",
															"typeString": "string storage ref"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"id": 180,
														"name": "name_",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 174,
														"src": "1675:5:1",
														"typeDescriptions": {
															"typeIdentifier": "t_string_memory_ptr",
															"typeString": "string memory"
														}
													},
													"src": "1667:13:1",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage",
														"typeString": "string storage ref"
													}
												},
												"id": 182,
												"nodeType": "ExpressionStatement",
												"src": "1667:13:1"
											},
											{
												"expression": {
													"id": 185,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 183,
														"name": "_symbol",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 171,
														"src": "1690:7:1",
														"typeDescriptions": {
															"typeIdentifier": "t_string_storage",
															"typeString": "string storage ref"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"id": 184,
														"name": "symbol_",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 176,
														"src": "1700:7:1",
														"typeDescriptions": {
															"typeIdentifier": "t_string_memory_ptr",
															"typeString": "string memory"
														}
													},
													"src": "1690:17:1",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage",
														"typeString": "string storage ref"
													}
												},
												"id": 186,
												"nodeType": "ExpressionStatement",
												"src": "1690:17:1"
											}
										]
									},
									"documentation": {
										"id": 172,
										"nodeType": "StructuredDocumentation",
										"src": "1425:171:1",
										"text": " @dev Sets the values for {name} and {symbol}.\n All two of these values are immutable: they can only be set once during\n construction."
									},
									"id": 188,
									"implemented": true,
									"kind": "constructor",
									"modifiers": [],
									"name": "",
									"nameLocation": "-1:-1:-1",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 177,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 174,
												"mutability": "mutable",
												"name": "name_",
												"nameLocation": "1627:5:1",
												"nodeType": "VariableDeclaration",
												"scope": 188,
												"src": "1613:19:1",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_string_memory_ptr",
													"typeString": "string"
												},
												"typeName": {
													"id": 173,
													"name": "string",
													"nodeType": "ElementaryTypeName",
													"src": "1613:6:1",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage_ptr",
														"typeString": "string"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 176,
												"mutability": "mutable",
												"name": "symbol_",
												"nameLocation": "1648:7:1",
												"nodeType": "VariableDeclaration",
												"scope": 188,
												"src": "1634:21:1",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_string_memory_ptr",
													"typeString": "string"
												},
												"typeName": {
													"id": 175,
													"name": "string",
													"nodeType": "ElementaryTypeName",
													"src": "1634:6:1",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage_ptr",
														"typeString": "string"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1612:44:1"
									},
									"returnParameters": {
										"id": 178,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1657:0:1"
									},
									"scope": 651,
									"src": "1601:113:1",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"baseFunctions": [
										742
									],
									"body": {
										"id": 196,
										"nodeType": "Block",
										"src": "1839:29:1",
										"statements": [
											{
												"expression": {
													"id": 194,
													"name": "_name",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 169,
													"src": "1856:5:1",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage",
														"typeString": "string storage ref"
													}
												},
												"functionReturnParameters": 193,
												"id": 195,
												"nodeType": "Return",
												"src": "1849:12:1"
											}
										]
									},
									"documentation": {
										"id": 189,
										"nodeType": "StructuredDocumentation",
										"src": "1720:54:1",
										"text": " @dev Returns the name of the token."
									},
									"functionSelector": "06fdde03",
									"id": 197,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "name",
									"nameLocation": "1788:4:1",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 190,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1792:2:1"
									},
									"returnParameters": {
										"id": 193,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 192,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 197,
												"src": "1824:13:1",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_string_memory_ptr",
													"typeString": "string"
												},
												"typeName": {
													"id": 191,
													"name": "string",
													"nodeType": "ElementaryTypeName",
													"src": "1824:6:1",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage_ptr",
														"typeString": "string"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1823:15:1"
									},
									"scope": 651,
									"src": "1779:89:1",
									"stateMutability": "view",
									"virtual": true,
									"visibility": "public"
								},
								{
									"baseFunctions": [
										748
									],
									"body": {
										"id": 205,
										"nodeType": "Block",
										"src": "2043:31:1",
										"statements": [
											{
												"expression": {
													"id": 203,
													"name": "_symbol",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 171,
													"src": "2060:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage",
														"typeString": "string storage ref"
													}
												},
												"functionReturnParameters": 202,
												"id": 204,
												"nodeType": "Return",
												"src": "2053:14:1"
											}
										]
									},
									"documentation": {
										"id": 198,
										"nodeType": "StructuredDocumentation",
										"src": "1874:102:1",
										"text": " @dev Returns the symbol of the token, usually a shorter version of the\n name."
									},
									"functionSelector": "95d89b41",
									"id": 206,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "symbol",
									"nameLocation": "1990:6:1",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 199,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1996:2:1"
									},
									"returnParameters": {
										"id": 202,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 201,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 206,
												"src": "2028:13:1",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_string_memory_ptr",
													"typeString": "string"
												},
												"typeName": {
													"id": 200,
													"name": "string",
													"nodeType": "ElementaryTypeName",
													"src": "2028:6:1",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage_ptr",
														"typeString": "string"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2027:15:1"
									},
									"scope": 651,
									"src": "1981:93:1",
									"stateMutability": "view",
									"virtual": true,
									"visibility": "public"
								},
								{
									"baseFunctions": [
										754
									],
									"body": {
										"id": 214,
										"nodeType": "Block",
										"src": "2763:26:1",
										"statements": [
											{
												"expression": {
													"hexValue": "3138",
													"id": 212,
													"isConstant": false,
													"isLValue": false,
													"isPure": true,
													"kind": "number",
													"lValueRequested": false,
													"nodeType": "Literal",
													"src": "2780:2:1",
													"typeDescriptions": {
														"typeIdentifier": "t_rational_18_by_1",
														"typeString": "int_const 18"
													},
													"value": "18"
												},
												"functionReturnParameters": 211,
												"id": 213,
												"nodeType": "Return",
												"src": "2773:9:1"
											}
										]
									},
									"documentation": {
										"id": 207,
										"nodeType": "StructuredDocumentation",
										"src": "2080:622:1",
										"text": " @dev Returns the number of decimals used to get its user representation.\n For example, if `decimals` equals `2`, a balance of `505` tokens should\n be displayed to a user as `5.05` (`505 / 10 ** 2`).\n Tokens usually opt for a value of 18, imitating the relationship between\n Ether and Wei. This is the default value returned by this function, unless\n it's overridden.\n NOTE: This information is only used for _display_ purposes: it in\n no way affects any of the arithmetic of the contract, including\n {IERC20-balanceOf} and {IERC20-transfer}."
									},
									"functionSelector": "313ce567",
									"id": 215,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "decimals",
									"nameLocation": "2716:8:1",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 208,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "2724:2:1"
									},
									"returnParameters": {
										"id": 211,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 210,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 215,
												"src": "2756:5:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint8",
													"typeString": "uint8"
												},
												"typeName": {
													"id": 209,
													"name": "uint8",
													"nodeType": "ElementaryTypeName",
													"src": "2756:5:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint8",
														"typeString": "uint8"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2755:7:1"
									},
									"scope": 651,
									"src": "2707:82:1",
									"stateMutability": "view",
									"virtual": true,
									"visibility": "public"
								},
								{
									"baseFunctions": [
										678
									],
									"body": {
										"id": 223,
										"nodeType": "Block",
										"src": "2910:36:1",
										"statements": [
											{
												"expression": {
													"id": 221,
													"name": "_totalSupply",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 167,
													"src": "2927:12:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"functionReturnParameters": 220,
												"id": 222,
												"nodeType": "Return",
												"src": "2920:19:1"
											}
										]
									},
									"documentation": {
										"id": 216,
										"nodeType": "StructuredDocumentation",
										"src": "2795:49:1",
										"text": " @dev See {IERC20-totalSupply}."
									},
									"functionSelector": "18160ddd",
									"id": 224,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "totalSupply",
									"nameLocation": "2858:11:1",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 217,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "2869:2:1"
									},
									"returnParameters": {
										"id": 220,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 219,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 224,
												"src": "2901:7:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 218,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "2901:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2900:9:1"
									},
									"scope": 651,
									"src": "2849:97:1",
									"stateMutability": "view",
									"virtual": true,
									"visibility": "public"
								},
								{
									"baseFunctions": [
										686
									],
									"body": {
										"id": 236,
										"nodeType": "Block",
										"src": "3078:42:1",
										"statements": [
											{
												"expression": {
													"baseExpression": {
														"id": 232,
														"name": "_balances",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 159,
														"src": "3095:9:1",
														"typeDescriptions": {
															"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
															"typeString": "mapping(address => uint256)"
														}
													},
													"id": 234,
													"indexExpression": {
														"id": 233,
														"name": "account",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 227,
														"src": "3105:7:1",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"isConstant": false,
													"isLValue": true,
													"isPure": false,
													"lValueRequested": false,
													"nodeType": "IndexAccess",
													"src": "3095:18:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"functionReturnParameters": 231,
												"id": 235,
												"nodeType": "Return",
												"src": "3088:25:1"
											}
										]
									},
									"documentation": {
										"id": 225,
										"nodeType": "StructuredDocumentation",
										"src": "2952:47:1",
										"text": " @dev See {IERC20-balanceOf}."
									},
									"functionSelector": "70a08231",
									"id": 237,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "balanceOf",
									"nameLocation": "3013:9:1",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 228,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 227,
												"mutability": "mutable",
												"name": "account",
												"nameLocation": "3031:7:1",
												"nodeType": "VariableDeclaration",
												"scope": 237,
												"src": "3023:15:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 226,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "3023:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3022:17:1"
									},
									"returnParameters": {
										"id": 231,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 230,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 237,
												"src": "3069:7:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 229,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "3069:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3068:9:1"
									},
									"scope": 651,
									"src": "3004:116:1",
									"stateMutability": "view",
									"virtual": true,
									"visibility": "public"
								},
								{
									"baseFunctions": [
										696
									],
									"body": {
										"id": 260,
										"nodeType": "Block",
										"src": "3390:103:1",
										"statements": [
											{
												"assignments": [
													248
												],
												"declarations": [
													{
														"constant": false,
														"id": 248,
														"mutability": "mutable",
														"name": "owner",
														"nameLocation": "3408:5:1",
														"nodeType": "VariableDeclaration",
														"scope": 260,
														"src": "3400:13:1",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														},
														"typeName": {
															"id": 247,
															"name": "address",
															"nodeType": "ElementaryTypeName",
															"src": "3400:7:1",
															"stateMutability": "nonpayable",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 251,
												"initialValue": {
													"arguments": [],
													"expression": {
														"argumentTypes": [],
														"id": 249,
														"name": "_msgSender",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 767,
														"src": "3416:10:1",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_view$__$returns$_t_address_$",
															"typeString": "function () view returns (address)"
														}
													},
													"id": 250,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "3416:12:1",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "3400:28:1"
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 253,
															"name": "owner",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 248,
															"src": "3448:5:1",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 254,
															"name": "to",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 240,
															"src": "3455:2:1",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 255,
															"name": "value",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 242,
															"src": "3459:5:1",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 252,
														"name": "_transfer",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 381,
														"src": "3438:9:1",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$",
															"typeString": "function (address,address,uint256)"
														}
													},
													"id": 256,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "3438:27:1",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 257,
												"nodeType": "ExpressionStatement",
												"src": "3438:27:1"
											},
											{
												"expression": {
													"hexValue": "74727565",
													"id": 258,
													"isConstant": false,
													"isLValue": false,
													"isPure": true,
													"kind": "bool",
													"lValueRequested": false,
													"nodeType": "Literal",
													"src": "3482:4:1",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													},
													"value": "true"
												},
												"functionReturnParameters": 246,
												"id": 259,
												"nodeType": "Return",
												"src": "3475:11:1"
											}
										]
									},
									"documentation": {
										"id": 238,
										"nodeType": "StructuredDocumentation",
										"src": "3126:184:1",
										"text": " @dev See {IERC20-transfer}.\n Requirements:\n - `to` cannot be the zero address.\n - the caller must have a balance of at least `value`."
									},
									"functionSelector": "a9059cbb",
									"id": 261,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "transfer",
									"nameLocation": "3324:8:1",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 243,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 240,
												"mutability": "mutable",
												"name": "to",
												"nameLocation": "3341:2:1",
												"nodeType": "VariableDeclaration",
												"scope": 261,
												"src": "3333:10:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 239,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "3333:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 242,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "3353:5:1",
												"nodeType": "VariableDeclaration",
												"scope": 261,
												"src": "3345:13:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 241,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "3345:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3332:27:1"
									},
									"returnParameters": {
										"id": 246,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 245,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 261,
												"src": "3384:4:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 244,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "3384:4:1",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3383:6:1"
									},
									"scope": 651,
									"src": "3315:178:1",
									"stateMutability": "nonpayable",
									"virtual": true,
									"visibility": "public"
								},
								{
									"baseFunctions": [
										706
									],
									"body": {
										"id": 277,
										"nodeType": "Block",
										"src": "3640:51:1",
										"statements": [
											{
												"expression": {
													"baseExpression": {
														"baseExpression": {
															"id": 271,
															"name": "_allowances",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 165,
															"src": "3657:11:1",
															"typeDescriptions": {
																"typeIdentifier": "t_mapping$_t_address_$_t_mapping$_t_address_$_t_uint256_$_$",
																"typeString": "mapping(address => mapping(address => uint256))"
															}
														},
														"id": 273,
														"indexExpression": {
															"id": 272,
															"name": "owner",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 264,
															"src": "3669:5:1",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": false,
														"nodeType": "IndexAccess",
														"src": "3657:18:1",
														"typeDescriptions": {
															"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
															"typeString": "mapping(address => uint256)"
														}
													},
													"id": 275,
													"indexExpression": {
														"id": 274,
														"name": "spender",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 266,
														"src": "3676:7:1",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"isConstant": false,
													"isLValue": true,
													"isPure": false,
													"lValueRequested": false,
													"nodeType": "IndexAccess",
													"src": "3657:27:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"functionReturnParameters": 270,
												"id": 276,
												"nodeType": "Return",
												"src": "3650:34:1"
											}
										]
									},
									"documentation": {
										"id": 262,
										"nodeType": "StructuredDocumentation",
										"src": "3499:47:1",
										"text": " @dev See {IERC20-allowance}."
									},
									"functionSelector": "dd62ed3e",
									"id": 278,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "allowance",
									"nameLocation": "3560:9:1",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 267,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 264,
												"mutability": "mutable",
												"name": "owner",
												"nameLocation": "3578:5:1",
												"nodeType": "VariableDeclaration",
												"scope": 278,
												"src": "3570:13:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 263,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "3570:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 266,
												"mutability": "mutable",
												"name": "spender",
												"nameLocation": "3593:7:1",
												"nodeType": "VariableDeclaration",
												"scope": 278,
												"src": "3585:15:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 265,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "3585:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3569:32:1"
									},
									"returnParameters": {
										"id": 270,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 269,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 278,
												"src": "3631:7:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 268,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "3631:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3630:9:1"
									},
									"scope": 651,
									"src": "3551:140:1",
									"stateMutability": "view",
									"virtual": true,
									"visibility": "public"
								},
								{
									"baseFunctions": [
										716
									],
									"body": {
										"id": 301,
										"nodeType": "Block",
										"src": "4077:107:1",
										"statements": [
											{
												"assignments": [
													289
												],
												"declarations": [
													{
														"constant": false,
														"id": 289,
														"mutability": "mutable",
														"name": "owner",
														"nameLocation": "4095:5:1",
														"nodeType": "VariableDeclaration",
														"scope": 301,
														"src": "4087:13:1",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														},
														"typeName": {
															"id": 288,
															"name": "address",
															"nodeType": "ElementaryTypeName",
															"src": "4087:7:1",
															"stateMutability": "nonpayable",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 292,
												"initialValue": {
													"arguments": [],
													"expression": {
														"argumentTypes": [],
														"id": 290,
														"name": "_msgSender",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 767,
														"src": "4103:10:1",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_view$__$returns$_t_address_$",
															"typeString": "function () view returns (address)"
														}
													},
													"id": 291,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "4103:12:1",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "4087:28:1"
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 294,
															"name": "owner",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 289,
															"src": "4134:5:1",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 295,
															"name": "spender",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 281,
															"src": "4141:7:1",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 296,
															"name": "value",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 283,
															"src": "4150:5:1",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 293,
														"name": "_approve",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															542,
															602
														],
														"referencedDeclaration": 542,
														"src": "4125:8:1",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$",
															"typeString": "function (address,address,uint256)"
														}
													},
													"id": 297,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "4125:31:1",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 298,
												"nodeType": "ExpressionStatement",
												"src": "4125:31:1"
											},
											{
												"expression": {
													"hexValue": "74727565",
													"id": 299,
													"isConstant": false,
													"isLValue": false,
													"isPure": true,
													"kind": "bool",
													"lValueRequested": false,
													"nodeType": "Literal",
													"src": "4173:4:1",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													},
													"value": "true"
												},
												"functionReturnParameters": 287,
												"id": 300,
												"nodeType": "Return",
												"src": "4166:11:1"
											}
										]
									},
									"documentation": {
										"id": 279,
										"nodeType": "StructuredDocumentation",
										"src": "3697:296:1",
										"text": " @dev See {IERC20-approve}.\n NOTE: If `value` is the maximum `uint256`, the allowance is not updated on\n `transferFrom`. This is semantically equivalent to an infinite approval.\n Requirements:\n - `spender` cannot be the zero address."
									},
									"functionSelector": "095ea7b3",
									"id": 302,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "approve",
									"nameLocation": "4007:7:1",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 284,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 281,
												"mutability": "mutable",
												"name": "spender",
												"nameLocation": "4023:7:1",
												"nodeType": "VariableDeclaration",
												"scope": 302,
												"src": "4015:15:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 280,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "4015:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 283,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "4040:5:1",
												"nodeType": "VariableDeclaration",
												"scope": 302,
												"src": "4032:13:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 282,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "4032:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "4014:32:1"
									},
									"returnParameters": {
										"id": 287,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 286,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 302,
												"src": "4071:4:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 285,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "4071:4:1",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "4070:6:1"
									},
									"scope": 651,
									"src": "3998:186:1",
									"stateMutability": "nonpayable",
									"virtual": true,
									"visibility": "public"
								},
								{
									"baseFunctions": [
										728
									],
									"body": {
										"id": 333,
										"nodeType": "Block",
										"src": "4869:151:1",
										"statements": [
											{
												"assignments": [
													315
												],
												"declarations": [
													{
														"constant": false,
														"id": 315,
														"mutability": "mutable",
														"name": "spender",
														"nameLocation": "4887:7:1",
														"nodeType": "VariableDeclaration",
														"scope": 333,
														"src": "4879:15:1",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														},
														"typeName": {
															"id": 314,
															"name": "address",
															"nodeType": "ElementaryTypeName",
															"src": "4879:7:1",
															"stateMutability": "nonpayable",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 318,
												"initialValue": {
													"arguments": [],
													"expression": {
														"argumentTypes": [],
														"id": 316,
														"name": "_msgSender",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 767,
														"src": "4897:10:1",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_view$__$returns$_t_address_$",
															"typeString": "function () view returns (address)"
														}
													},
													"id": 317,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "4897:12:1",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "4879:30:1"
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 320,
															"name": "from",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 305,
															"src": "4935:4:1",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 321,
															"name": "spender",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 315,
															"src": "4941:7:1",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 322,
															"name": "value",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 309,
															"src": "4950:5:1",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 319,
														"name": "_spendAllowance",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 650,
														"src": "4919:15:1",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$",
															"typeString": "function (address,address,uint256)"
														}
													},
													"id": 323,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "4919:37:1",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 324,
												"nodeType": "ExpressionStatement",
												"src": "4919:37:1"
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 326,
															"name": "from",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 305,
															"src": "4976:4:1",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 327,
															"name": "to",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 307,
															"src": "4982:2:1",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 328,
															"name": "value",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 309,
															"src": "4986:5:1",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 325,
														"name": "_transfer",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 381,
														"src": "4966:9:1",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$",
															"typeString": "function (address,address,uint256)"
														}
													},
													"id": 329,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "4966:26:1",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 330,
												"nodeType": "ExpressionStatement",
												"src": "4966:26:1"
											},
											{
												"expression": {
													"hexValue": "74727565",
													"id": 331,
													"isConstant": false,
													"isLValue": false,
													"isPure": true,
													"kind": "bool",
													"lValueRequested": false,
													"nodeType": "Literal",
													"src": "5009:4:1",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													},
													"value": "true"
												},
												"functionReturnParameters": 313,
												"id": 332,
												"nodeType": "Return",
												"src": "5002:11:1"
											}
										]
									},
									"documentation": {
										"id": 303,
										"nodeType": "StructuredDocumentation",
										"src": "4190:581:1",
										"text": " @dev See {IERC20-transferFrom}.\n Skips emitting an {Approval} event indicating an allowance update. This is not\n required by the ERC. See {xref-ERC20-_approve-address-address-uint256-bool-}[_approve].\n NOTE: Does not update the allowance if the current allowance\n is the maximum `uint256`.\n Requirements:\n - `from` and `to` cannot be the zero address.\n - `from` must have a balance of at least `value`.\n - the caller must have allowance for ``from``'s tokens of at least\n `value`."
									},
									"functionSelector": "23b872dd",
									"id": 334,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "transferFrom",
									"nameLocation": "4785:12:1",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 310,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 305,
												"mutability": "mutable",
												"name": "from",
												"nameLocation": "4806:4:1",
												"nodeType": "VariableDeclaration",
												"scope": 334,
												"src": "4798:12:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 304,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "4798:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 307,
												"mutability": "mutable",
												"name": "to",
												"nameLocation": "4820:2:1",
												"nodeType": "VariableDeclaration",
												"scope": 334,
												"src": "4812:10:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 306,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "4812:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 309,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "4832:5:1",
												"nodeType": "VariableDeclaration",
												"scope": 334,
												"src": "4824:13:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 308,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "4824:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "4797:41:1"
									},
									"returnParameters": {
										"id": 313,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 312,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 334,
												"src": "4863:4:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 311,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "4863:4:1",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "4862:6:1"
									},
									"scope": 651,
									"src": "4776:244:1",
									"stateMutability": "nonpayable",
									"virtual": true,
									"visibility": "public"
								},
								{
									"body": {
										"id": 380,
										"nodeType": "Block",
										"src": "5462:231:1",
										"statements": [
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													},
													"id": 349,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 344,
														"name": "from",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 337,
														"src": "5476:4:1",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "==",
													"rightExpression": {
														"arguments": [
															{
																"hexValue": "30",
																"id": 347,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "5492:1:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																}
															],
															"id": 346,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"lValueRequested": false,
															"nodeType": "ElementaryTypeNameExpression",
															"src": "5484:7:1",
															"typeDescriptions": {
																"typeIdentifier": "t_type$_t_address_$",
																"typeString": "type(address)"
															},
															"typeName": {
																"id": 345,
																"name": "address",
																"nodeType": "ElementaryTypeName",
																"src": "5484:7:1",
																"typeDescriptions": {}
															}
														},
														"id": 348,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "typeConversion",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "5484:10:1",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"src": "5476:18:1",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 358,
												"nodeType": "IfStatement",
												"src": "5472:86:1",
												"trueBody": {
													"id": 357,
													"nodeType": "Block",
													"src": "5496:62:1",
													"statements": [
														{
															"errorCall": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"hexValue": "30",
																				"id": 353,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": true,
																				"kind": "number",
																				"lValueRequested": false,
																				"nodeType": "Literal",
																				"src": "5544:1:1",
																				"typeDescriptions": {
																					"typeIdentifier": "t_rational_0_by_1",
																					"typeString": "int_const 0"
																				},
																				"value": "0"
																			}
																		],
																		"expression": {
																			"argumentTypes": [
																				{
																					"typeIdentifier": "t_rational_0_by_1",
																					"typeString": "int_const 0"
																				}
																			],
																			"id": 352,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"lValueRequested": false,
																			"nodeType": "ElementaryTypeNameExpression",
																			"src": "5536:7:1",
																			"typeDescriptions": {
																				"typeIdentifier": "t_type$_t_address_$",
																				"typeString": "type(address)"
																			},
																			"typeName": {
																				"id": 351,
																				"name": "address",
																				"nodeType": "ElementaryTypeName",
																				"src": "5536:7:1",
																				"typeDescriptions": {}
																			}
																		},
																		"id": 354,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "typeConversion",
																		"lValueRequested": false,
																		"nameLocations": [],
																		"names": [],
																		"nodeType": "FunctionCall",
																		"src": "5536:10:1",
																		"tryCall": false,
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	],
																	"id": 350,
																	"name": "ERC20InvalidSender",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 16,
																	"src": "5517:18:1",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_error_pure$_t_address_$returns$_t_error_$",
																		"typeString": "function (address) pure returns (error)"
																	}
																},
																"id": 355,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "5517:30:1",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_error",
																	"typeString": "error"
																}
															},
															"id": 356,
															"nodeType": "RevertStatement",
															"src": "5510:37:1"
														}
													]
												}
											},
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													},
													"id": 364,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 359,
														"name": "to",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 339,
														"src": "5571:2:1",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "==",
													"rightExpression": {
														"arguments": [
															{
																"hexValue": "30",
																"id": 362,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "5585:1:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																}
															],
															"id": 361,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"lValueRequested": false,
															"nodeType": "ElementaryTypeNameExpression",
															"src": "5577:7:1",
															"typeDescriptions": {
																"typeIdentifier": "t_type$_t_address_$",
																"typeString": "type(address)"
															},
															"typeName": {
																"id": 360,
																"name": "address",
																"nodeType": "ElementaryTypeName",
																"src": "5577:7:1",
																"typeDescriptions": {}
															}
														},
														"id": 363,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "typeConversion",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "5577:10:1",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"src": "5571:16:1",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 373,
												"nodeType": "IfStatement",
												"src": "5567:86:1",
												"trueBody": {
													"id": 372,
													"nodeType": "Block",
													"src": "5589:64:1",
													"statements": [
														{
															"errorCall": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"hexValue": "30",
																				"id": 368,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": true,
																				"kind": "number",
																				"lValueRequested": false,
																				"nodeType": "Literal",
																				"src": "5639:1:1",
																				"typeDescriptions": {
																					"typeIdentifier": "t_rational_0_by_1",
																					"typeString": "int_const 0"
																				},
																				"value": "0"
																			}
																		],
																		"expression": {
																			"argumentTypes": [
																				{
																					"typeIdentifier": "t_rational_0_by_1",
																					"typeString": "int_const 0"
																				}
																			],
																			"id": 367,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"lValueRequested": false,
																			"nodeType": "ElementaryTypeNameExpression",
																			"src": "5631:7:1",
																			"typeDescriptions": {
																				"typeIdentifier": "t_type$_t_address_$",
																				"typeString": "type(address)"
																			},
																			"typeName": {
																				"id": 366,
																				"name": "address",
																				"nodeType": "ElementaryTypeName",
																				"src": "5631:7:1",
																				"typeDescriptions": {}
																			}
																		},
																		"id": 369,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "typeConversion",
																		"lValueRequested": false,
																		"nameLocations": [],
																		"names": [],
																		"nodeType": "FunctionCall",
																		"src": "5631:10:1",
																		"tryCall": false,
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	],
																	"id": 365,
																	"name": "ERC20InvalidReceiver",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 21,
																	"src": "5610:20:1",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_error_pure$_t_address_$returns$_t_error_$",
																		"typeString": "function (address) pure returns (error)"
																	}
																},
																"id": 370,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "5610:32:1",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_error",
																	"typeString": "error"
																}
															},
															"id": 371,
															"nodeType": "RevertStatement",
															"src": "5603:39:1"
														}
													]
												}
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 375,
															"name": "from",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 337,
															"src": "5670:4:1",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 376,
															"name": "to",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 339,
															"src": "5676:2:1",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 377,
															"name": "value",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 341,
															"src": "5680:5:1",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 374,
														"name": "_update",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 458,
														"src": "5662:7:1",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$",
															"typeString": "function (address,address,uint256)"
														}
													},
													"id": 378,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "5662:24:1",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 379,
												"nodeType": "ExpressionStatement",
												"src": "5662:24:1"
											}
										]
									},
									"documentation": {
										"id": 335,
										"nodeType": "StructuredDocumentation",
										"src": "5026:362:1",
										"text": " @dev Moves a `value` amount of tokens from `from` to `to`.\n This internal function is equivalent to {transfer}, and can be used to\n e.g. implement automatic token fees, slashing mechanisms, etc.\n Emits a {Transfer} event.\n NOTE: This function is not virtual, {_update} should be overridden instead."
									},
									"id": 381,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_transfer",
									"nameLocation": "5402:9:1",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 342,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 337,
												"mutability": "mutable",
												"name": "from",
												"nameLocation": "5420:4:1",
												"nodeType": "VariableDeclaration",
												"scope": 381,
												"src": "5412:12:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 336,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "5412:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 339,
												"mutability": "mutable",
												"name": "to",
												"nameLocation": "5434:2:1",
												"nodeType": "VariableDeclaration",
												"scope": 381,
												"src": "5426:10:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 338,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "5426:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 341,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "5446:5:1",
												"nodeType": "VariableDeclaration",
												"scope": 381,
												"src": "5438:13:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 340,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "5438:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "5411:41:1"
									},
									"returnParameters": {
										"id": 343,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "5462:0:1"
									},
									"scope": 651,
									"src": "5393:300:1",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 457,
										"nodeType": "Block",
										"src": "6083:1032:1",
										"statements": [
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													},
													"id": 396,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 391,
														"name": "from",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 384,
														"src": "6097:4:1",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "==",
													"rightExpression": {
														"arguments": [
															{
																"hexValue": "30",
																"id": 394,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "6113:1:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																}
															],
															"id": 393,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"lValueRequested": false,
															"nodeType": "ElementaryTypeNameExpression",
															"src": "6105:7:1",
															"typeDescriptions": {
																"typeIdentifier": "t_type$_t_address_$",
																"typeString": "type(address)"
															},
															"typeName": {
																"id": 392,
																"name": "address",
																"nodeType": "ElementaryTypeName",
																"src": "6105:7:1",
																"typeDescriptions": {}
															}
														},
														"id": 395,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "typeConversion",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "6105:10:1",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"src": "6097:18:1",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"falseBody": {
													"id": 428,
													"nodeType": "Block",
													"src": "6271:362:1",
													"statements": [
														{
															"assignments": [
																403
															],
															"declarations": [
																{
																	"constant": false,
																	"id": 403,
																	"mutability": "mutable",
																	"name": "fromBalance",
																	"nameLocation": "6293:11:1",
																	"nodeType": "VariableDeclaration",
																	"scope": 428,
																	"src": "6285:19:1",
																	"stateVariable": false,
																	"storageLocation": "default",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	},
																	"typeName": {
																		"id": 402,
																		"name": "uint256",
																		"nodeType": "ElementaryTypeName",
																		"src": "6285:7:1",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"visibility": "internal"
																}
															],
															"id": 407,
															"initialValue": {
																"baseExpression": {
																	"id": 404,
																	"name": "_balances",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 159,
																	"src": "6307:9:1",
																	"typeDescriptions": {
																		"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
																		"typeString": "mapping(address => uint256)"
																	}
																},
																"id": 406,
																"indexExpression": {
																	"id": 405,
																	"name": "from",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 384,
																	"src": "6317:4:1",
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																},
																"isConstant": false,
																"isLValue": true,
																"isPure": false,
																"lValueRequested": false,
																"nodeType": "IndexAccess",
																"src": "6307:15:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "VariableDeclarationStatement",
															"src": "6285:37:1"
														},
														{
															"condition": {
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 410,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"id": 408,
																	"name": "fromBalance",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 403,
																	"src": "6340:11:1",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": "<",
																"rightExpression": {
																	"id": 409,
																	"name": "value",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 388,
																	"src": "6354:5:1",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"src": "6340:19:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_bool",
																	"typeString": "bool"
																}
															},
															"id": 418,
															"nodeType": "IfStatement",
															"src": "6336:115:1",
															"trueBody": {
																"id": 417,
																"nodeType": "Block",
																"src": "6361:90:1",
																"statements": [
																	{
																		"errorCall": {
																			"arguments": [
																				{
																					"id": 412,
																					"name": "from",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 384,
																					"src": "6411:4:1",
																					"typeDescriptions": {
																						"typeIdentifier": "t_address",
																						"typeString": "address"
																					}
																				},
																				{
																					"id": 413,
																					"name": "fromBalance",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 403,
																					"src": "6417:11:1",
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				},
																				{
																					"id": 414,
																					"name": "value",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 388,
																					"src": "6430:5:1",
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				}
																			],
																			"expression": {
																				"argumentTypes": [
																					{
																						"typeIdentifier": "t_address",
																						"typeString": "address"
																					},
																					{
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					},
																					{
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				],
																				"id": 411,
																				"name": "ERC20InsufficientBalance",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 11,
																				"src": "6386:24:1",
																				"typeDescriptions": {
																					"typeIdentifier": "t_function_error_pure$_t_address_$_t_uint256_$_t_uint256_$returns$_t_error_$",
																					"typeString": "function (address,uint256,uint256) pure returns (error)"
																				}
																			},
																			"id": 415,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"kind": "functionCall",
																			"lValueRequested": false,
																			"nameLocations": [],
																			"names": [],
																			"nodeType": "FunctionCall",
																			"src": "6386:50:1",
																			"tryCall": false,
																			"typeDescriptions": {
																				"typeIdentifier": "t_error",
																				"typeString": "error"
																			}
																		},
																		"id": 416,
																		"nodeType": "RevertStatement",
																		"src": "6379:57:1"
																	}
																]
															}
														},
														{
															"id": 427,
															"nodeType": "UncheckedBlock",
															"src": "6464:159:1",
															"statements": [
																{
																	"expression": {
																		"id": 425,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftHandSide": {
																			"baseExpression": {
																				"id": 419,
																				"name": "_balances",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 159,
																				"src": "6571:9:1",
																				"typeDescriptions": {
																					"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
																					"typeString": "mapping(address => uint256)"
																				}
																			},
																			"id": 421,
																			"indexExpression": {
																				"id": 420,
																				"name": "from",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 384,
																				"src": "6581:4:1",
																				"typeDescriptions": {
																					"typeIdentifier": "t_address",
																					"typeString": "address"
																				}
																			},
																			"isConstant": false,
																			"isLValue": true,
																			"isPure": false,
																			"lValueRequested": true,
																			"nodeType": "IndexAccess",
																			"src": "6571:15:1",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "Assignment",
																		"operator": "=",
																		"rightHandSide": {
																			"commonType": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			},
																			"id": 424,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"lValueRequested": false,
																			"leftExpression": {
																				"id": 422,
																				"name": "fromBalance",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 403,
																				"src": "6589:11:1",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			},
																			"nodeType": "BinaryOperation",
																			"operator": "-",
																			"rightExpression": {
																				"id": 423,
																				"name": "value",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 388,
																				"src": "6603:5:1",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			},
																			"src": "6589:19:1",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"src": "6571:37:1",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"id": 426,
																	"nodeType": "ExpressionStatement",
																	"src": "6571:37:1"
																}
															]
														}
													]
												},
												"id": 429,
												"nodeType": "IfStatement",
												"src": "6093:540:1",
												"trueBody": {
													"id": 401,
													"nodeType": "Block",
													"src": "6117:148:1",
													"statements": [
														{
															"expression": {
																"id": 399,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftHandSide": {
																	"id": 397,
																	"name": "_totalSupply",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 167,
																	"src": "6233:12:1",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "Assignment",
																"operator": "+=",
																"rightHandSide": {
																	"id": 398,
																	"name": "value",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 388,
																	"src": "6249:5:1",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"src": "6233:21:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"id": 400,
															"nodeType": "ExpressionStatement",
															"src": "6233:21:1"
														}
													]
												}
											},
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													},
													"id": 435,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 430,
														"name": "to",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 386,
														"src": "6647:2:1",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "==",
													"rightExpression": {
														"arguments": [
															{
																"hexValue": "30",
																"id": 433,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "6661:1:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																}
															],
															"id": 432,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"lValueRequested": false,
															"nodeType": "ElementaryTypeNameExpression",
															"src": "6653:7:1",
															"typeDescriptions": {
																"typeIdentifier": "t_type$_t_address_$",
																"typeString": "type(address)"
															},
															"typeName": {
																"id": 431,
																"name": "address",
																"nodeType": "ElementaryTypeName",
																"src": "6653:7:1",
																"typeDescriptions": {}
															}
														},
														"id": 434,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "typeConversion",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "6653:10:1",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"src": "6647:16:1",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"falseBody": {
													"id": 449,
													"nodeType": "Block",
													"src": "6862:206:1",
													"statements": [
														{
															"id": 448,
															"nodeType": "UncheckedBlock",
															"src": "6876:182:1",
															"statements": [
																{
																	"expression": {
																		"id": 446,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftHandSide": {
																			"baseExpression": {
																				"id": 442,
																				"name": "_balances",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 159,
																				"src": "7021:9:1",
																				"typeDescriptions": {
																					"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
																					"typeString": "mapping(address => uint256)"
																				}
																			},
																			"id": 444,
																			"indexExpression": {
																				"id": 443,
																				"name": "to",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 386,
																				"src": "7031:2:1",
																				"typeDescriptions": {
																					"typeIdentifier": "t_address",
																					"typeString": "address"
																				}
																			},
																			"isConstant": false,
																			"isLValue": true,
																			"isPure": false,
																			"lValueRequested": true,
																			"nodeType": "IndexAccess",
																			"src": "7021:13:1",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "Assignment",
																		"operator": "+=",
																		"rightHandSide": {
																			"id": 445,
																			"name": "value",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 388,
																			"src": "7038:5:1",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"src": "7021:22:1",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"id": 447,
																	"nodeType": "ExpressionStatement",
																	"src": "7021:22:1"
																}
															]
														}
													]
												},
												"id": 450,
												"nodeType": "IfStatement",
												"src": "6643:425:1",
												"trueBody": {
													"id": 441,
													"nodeType": "Block",
													"src": "6665:191:1",
													"statements": [
														{
															"id": 440,
															"nodeType": "UncheckedBlock",
															"src": "6679:167:1",
															"statements": [
																{
																	"expression": {
																		"id": 438,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftHandSide": {
																			"id": 436,
																			"name": "_totalSupply",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 167,
																			"src": "6810:12:1",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "Assignment",
																		"operator": "-=",
																		"rightHandSide": {
																			"id": 437,
																			"name": "value",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 388,
																			"src": "6826:5:1",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"src": "6810:21:1",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"id": 439,
																	"nodeType": "ExpressionStatement",
																	"src": "6810:21:1"
																}
															]
														}
													]
												}
											},
											{
												"eventCall": {
													"arguments": [
														{
															"id": 452,
															"name": "from",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 384,
															"src": "7092:4:1",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 453,
															"name": "to",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 386,
															"src": "7098:2:1",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 454,
															"name": "value",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 388,
															"src": "7102:5:1",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 451,
														"name": "Transfer",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 663,
														"src": "7083:8:1",
														"typeDescriptions": {
															"typeIdentifier": "t_function_event_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$",
															"typeString": "function (address,address,uint256)"
														}
													},
													"id": 455,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "7083:25:1",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 456,
												"nodeType": "EmitStatement",
												"src": "7078:30:1"
											}
										]
									},
									"documentation": {
										"id": 382,
										"nodeType": "StructuredDocumentation",
										"src": "5699:304:1",
										"text": " @dev Transfers a `value` amount of tokens from `from` to `to`, or alternatively mints (or burns) if `from`\n (or `to`) is the zero address. All customizations to transfers, mints, and burns should be done by overriding\n this function.\n Emits a {Transfer} event."
									},
									"id": 458,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_update",
									"nameLocation": "6017:7:1",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 389,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 384,
												"mutability": "mutable",
												"name": "from",
												"nameLocation": "6033:4:1",
												"nodeType": "VariableDeclaration",
												"scope": 458,
												"src": "6025:12:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 383,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "6025:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 386,
												"mutability": "mutable",
												"name": "to",
												"nameLocation": "6047:2:1",
												"nodeType": "VariableDeclaration",
												"scope": 458,
												"src": "6039:10:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 385,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "6039:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 388,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "6059:5:1",
												"nodeType": "VariableDeclaration",
												"scope": 458,
												"src": "6051:13:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 387,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "6051:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "6024:41:1"
									},
									"returnParameters": {
										"id": 390,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "6083:0:1"
									},
									"scope": 651,
									"src": "6008:1107:1",
									"stateMutability": "nonpayable",
									"virtual": true,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 490,
										"nodeType": "Block",
										"src": "7514:152:1",
										"statements": [
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													},
													"id": 471,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 466,
														"name": "account",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 461,
														"src": "7528:7:1",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "==",
													"rightExpression": {
														"arguments": [
															{
																"hexValue": "30",
																"id": 469,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "7547:1:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																}
															],
															"id": 468,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"lValueRequested": false,
															"nodeType": "ElementaryTypeNameExpression",
															"src": "7539:7:1",
															"typeDescriptions": {
																"typeIdentifier": "t_type$_t_address_$",
																"typeString": "type(address)"
															},
															"typeName": {
																"id": 467,
																"name": "address",
																"nodeType": "ElementaryTypeName",
																"src": "7539:7:1",
																"typeDescriptions": {}
															}
														},
														"id": 470,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "typeConversion",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "7539:10:1",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"src": "7528:21:1",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 480,
												"nodeType": "IfStatement",
												"src": "7524:91:1",
												"trueBody": {
													"id": 479,
													"nodeType": "Block",
													"src": "7551:64:1",
													"statements": [
														{
															"errorCall": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"hexValue": "30",
																				"id": 475,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": true,
																				"kind": "number",
																				"lValueRequested": false,
																				"nodeType": "Literal",
																				"src": "7601:1:1",
																				"typeDescriptions": {
																					"typeIdentifier": "t_rational_0_by_1",
																					"typeString": "int_const 0"
																				},
																				"value": "0"
																			}
																		],
																		"expression": {
																			"argumentTypes": [
																				{
																					"typeIdentifier": "t_rational_0_by_1",
																					"typeString": "int_const 0"
																				}
																			],
																			"id": 474,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"lValueRequested": false,
																			"nodeType": "ElementaryTypeNameExpression",
																			"src": "7593:7:1",
																			"typeDescriptions": {
																				"typeIdentifier": "t_type$_t_address_$",
																				"typeString": "type(address)"
																			},
																			"typeName": {
																				"id": 473,
																				"name": "address",
																				"nodeType": "ElementaryTypeName",
																				"src": "7593:7:1",
																				"typeDescriptions": {}
																			}
																		},
																		"id": 476,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "typeConversion",
																		"lValueRequested": false,
																		"nameLocations": [],
																		"names": [],
																		"nodeType": "FunctionCall",
																		"src": "7593:10:1",
																		"tryCall": false,
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	],
																	"id": 472,
																	"name": "ERC20InvalidReceiver",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 21,
																	"src": "7572:20:1",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_error_pure$_t_address_$returns$_t_error_$",
																		"typeString": "function (address) pure returns (error)"
																	}
																},
																"id": 477,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "7572:32:1",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_error",
																	"typeString": "error"
																}
															},
															"id": 478,
															"nodeType": "RevertStatement",
															"src": "7565:39:1"
														}
													]
												}
											},
											{
												"expression": {
													"arguments": [
														{
															"arguments": [
																{
																	"hexValue": "30",
																	"id": 484,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "7640:1:1",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_0_by_1",
																		"typeString": "int_const 0"
																	},
																	"value": "0"
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_rational_0_by_1",
																		"typeString": "int_const 0"
																	}
																],
																"id": 483,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"nodeType": "ElementaryTypeNameExpression",
																"src": "7632:7:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_type$_t_address_$",
																	"typeString": "type(address)"
																},
																"typeName": {
																	"id": 482,
																	"name": "address",
																	"nodeType": "ElementaryTypeName",
																	"src": "7632:7:1",
																	"typeDescriptions": {}
																}
															},
															"id": 485,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "typeConversion",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "7632:10:1",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 486,
															"name": "account",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 461,
															"src": "7644:7:1",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 487,
															"name": "value",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 463,
															"src": "7653:5:1",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 481,
														"name": "_update",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 458,
														"src": "7624:7:1",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$",
															"typeString": "function (address,address,uint256)"
														}
													},
													"id": 488,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "7624:35:1",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 489,
												"nodeType": "ExpressionStatement",
												"src": "7624:35:1"
											}
										]
									},
									"documentation": {
										"id": 459,
										"nodeType": "StructuredDocumentation",
										"src": "7121:332:1",
										"text": " @dev Creates a `value` amount of tokens and assigns them to `account`, by transferring it from address(0).\n Relies on the `_update` mechanism\n Emits a {Transfer} event with `from` set to the zero address.\n NOTE: This function is not virtual, {_update} should be overridden instead."
									},
									"id": 491,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_mint",
									"nameLocation": "7467:5:1",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 464,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 461,
												"mutability": "mutable",
												"name": "account",
												"nameLocation": "7481:7:1",
												"nodeType": "VariableDeclaration",
												"scope": 491,
												"src": "7473:15:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 460,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "7473:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 463,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "7498:5:1",
												"nodeType": "VariableDeclaration",
												"scope": 491,
												"src": "7490:13:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 462,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "7490:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "7472:32:1"
									},
									"returnParameters": {
										"id": 465,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "7514:0:1"
									},
									"scope": 651,
									"src": "7458:208:1",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 523,
										"nodeType": "Block",
										"src": "8040:150:1",
										"statements": [
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													},
													"id": 504,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 499,
														"name": "account",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 494,
														"src": "8054:7:1",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "==",
													"rightExpression": {
														"arguments": [
															{
																"hexValue": "30",
																"id": 502,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "8073:1:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																}
															],
															"id": 501,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"lValueRequested": false,
															"nodeType": "ElementaryTypeNameExpression",
															"src": "8065:7:1",
															"typeDescriptions": {
																"typeIdentifier": "t_type$_t_address_$",
																"typeString": "type(address)"
															},
															"typeName": {
																"id": 500,
																"name": "address",
																"nodeType": "ElementaryTypeName",
																"src": "8065:7:1",
																"typeDescriptions": {}
															}
														},
														"id": 503,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "typeConversion",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "8065:10:1",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"src": "8054:21:1",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 513,
												"nodeType": "IfStatement",
												"src": "8050:89:1",
												"trueBody": {
													"id": 512,
													"nodeType": "Block",
													"src": "8077:62:1",
													"statements": [
														{
															"errorCall": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"hexValue": "30",
																				"id": 508,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": true,
																				"kind": "number",
																				"lValueRequested": false,
																				"nodeType": "Literal",
																				"src": "8125:1:1",
																				"typeDescriptions": {
																					"typeIdentifier": "t_rational_0_by_1",
																					"typeString": "int_const 0"
																				},
																				"value": "0"
																			}
																		],
																		"expression": {
																			"argumentTypes": [
																				{
																					"typeIdentifier": "t_rational_0_by_1",
																					"typeString": "int_const 0"
																				}
																			],
																			"id": 507,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"lValueRequested": false,
																			"nodeType": "ElementaryTypeNameExpression",
																			"src": "8117:7:1",
																			"typeDescriptions": {
																				"typeIdentifier": "t_type$_t_address_$",
																				"typeString": "type(address)"
																			},
																			"typeName": {
																				"id": 506,
																				"name": "address",
																				"nodeType": "ElementaryTypeName",
																				"src": "8117:7:1",
																				"typeDescriptions": {}
																			}
																		},
																		"id": 509,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "typeConversion",
																		"lValueRequested": false,
																		"nameLocations": [],
																		"names": [],
																		"nodeType": "FunctionCall",
																		"src": "8117:10:1",
																		"tryCall": false,
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	],
																	"id": 505,
																	"name": "ERC20InvalidSender",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 16,
																	"src": "8098:18:1",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_error_pure$_t_address_$returns$_t_error_$",
																		"typeString": "function (address) pure returns (error)"
																	}
																},
																"id": 510,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "8098:30:1",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_error",
																	"typeString": "error"
																}
															},
															"id": 511,
															"nodeType": "RevertStatement",
															"src": "8091:37:1"
														}
													]
												}
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 515,
															"name": "account",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 494,
															"src": "8156:7:1",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"arguments": [
																{
																	"hexValue": "30",
																	"id": 518,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "8173:1:1",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_0_by_1",
																		"typeString": "int_const 0"
																	},
																	"value": "0"
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_rational_0_by_1",
																		"typeString": "int_const 0"
																	}
																],
																"id": 517,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"nodeType": "ElementaryTypeNameExpression",
																"src": "8165:7:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_type$_t_address_$",
																	"typeString": "type(address)"
																},
																"typeName": {
																	"id": 516,
																	"name": "address",
																	"nodeType": "ElementaryTypeName",
																	"src": "8165:7:1",
																	"typeDescriptions": {}
																}
															},
															"id": 519,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "typeConversion",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "8165:10:1",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 520,
															"name": "value",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 496,
															"src": "8177:5:1",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 514,
														"name": "_update",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 458,
														"src": "8148:7:1",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$",
															"typeString": "function (address,address,uint256)"
														}
													},
													"id": 521,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "8148:35:1",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 522,
												"nodeType": "ExpressionStatement",
												"src": "8148:35:1"
											}
										]
									},
									"documentation": {
										"id": 492,
										"nodeType": "StructuredDocumentation",
										"src": "7672:307:1",
										"text": " @dev Destroys a `value` amount of tokens from `account`, lowering the total supply.\n Relies on the `_update` mechanism.\n Emits a {Transfer} event with `to` set to the zero address.\n NOTE: This function is not virtual, {_update} should be overridden instead"
									},
									"id": 524,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_burn",
									"nameLocation": "7993:5:1",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 497,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 494,
												"mutability": "mutable",
												"name": "account",
												"nameLocation": "8007:7:1",
												"nodeType": "VariableDeclaration",
												"scope": 524,
												"src": "7999:15:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 493,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "7999:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 496,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "8024:5:1",
												"nodeType": "VariableDeclaration",
												"scope": 524,
												"src": "8016:13:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 495,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "8016:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "7998:32:1"
									},
									"returnParameters": {
										"id": 498,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "8040:0:1"
									},
									"scope": 651,
									"src": "7984:206:1",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 541,
										"nodeType": "Block",
										"src": "8800:54:1",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"id": 535,
															"name": "owner",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 527,
															"src": "8819:5:1",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 536,
															"name": "spender",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 529,
															"src": "8826:7:1",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 537,
															"name": "value",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 531,
															"src": "8835:5:1",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														{
															"hexValue": "74727565",
															"id": 538,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "bool",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "8842:4:1",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															"value": "true"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														],
														"id": 534,
														"name": "_approve",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															542,
															602
														],
														"referencedDeclaration": 602,
														"src": "8810:8:1",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$_t_bool_$returns$__$",
															"typeString": "function (address,address,uint256,bool)"
														}
													},
													"id": 539,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "8810:37:1",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 540,
												"nodeType": "ExpressionStatement",
												"src": "8810:37:1"
											}
										]
									},
									"documentation": {
										"id": 525,
										"nodeType": "StructuredDocumentation",
										"src": "8196:525:1",
										"text": " @dev Sets `value` as the allowance of `spender` over the `owner` s tokens.\n This internal function is equivalent to `approve`, and can be used to\n e.g. set automatic allowances for certain subsystems, etc.\n Emits an {Approval} event.\n Requirements:\n - `owner` cannot be the zero address.\n - `spender` cannot be the zero address.\n Overrides to this logic should be done to the variant with an additional `bool emitEvent` argument."
									},
									"id": 542,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_approve",
									"nameLocation": "8735:8:1",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 532,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 527,
												"mutability": "mutable",
												"name": "owner",
												"nameLocation": "8752:5:1",
												"nodeType": "VariableDeclaration",
												"scope": 542,
												"src": "8744:13:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 526,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "8744:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 529,
												"mutability": "mutable",
												"name": "spender",
												"nameLocation": "8767:7:1",
												"nodeType": "VariableDeclaration",
												"scope": 542,
												"src": "8759:15:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 528,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "8759:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 531,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "8784:5:1",
												"nodeType": "VariableDeclaration",
												"scope": 542,
												"src": "8776:13:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 530,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "8776:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "8743:47:1"
									},
									"returnParameters": {
										"id": 533,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "8800:0:1"
									},
									"scope": 651,
									"src": "8726:128:1",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 601,
										"nodeType": "Block",
										"src": "9799:334:1",
										"statements": [
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													},
													"id": 559,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 554,
														"name": "owner",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 545,
														"src": "9813:5:1",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "==",
													"rightExpression": {
														"arguments": [
															{
																"hexValue": "30",
																"id": 557,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "9830:1:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																}
															],
															"id": 556,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"lValueRequested": false,
															"nodeType": "ElementaryTypeNameExpression",
															"src": "9822:7:1",
															"typeDescriptions": {
																"typeIdentifier": "t_type$_t_address_$",
																"typeString": "type(address)"
															},
															"typeName": {
																"id": 555,
																"name": "address",
																"nodeType": "ElementaryTypeName",
																"src": "9822:7:1",
																"typeDescriptions": {}
															}
														},
														"id": 558,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "typeConversion",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "9822:10:1",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"src": "9813:19:1",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 568,
												"nodeType": "IfStatement",
												"src": "9809:89:1",
												"trueBody": {
													"id": 567,
													"nodeType": "Block",
													"src": "9834:64:1",
													"statements": [
														{
															"errorCall": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"hexValue": "30",
																				"id": 563,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": true,
																				"kind": "number",
																				"lValueRequested": false,
																				"nodeType": "Literal",
																				"src": "9884:1:1",
																				"typeDescriptions": {
																					"typeIdentifier": "t_rational_0_by_1",
																					"typeString": "int_const 0"
																				},
																				"value": "0"
																			}
																		],
																		"expression": {
																			"argumentTypes": [
																				{
																					"typeIdentifier": "t_rational_0_by_1",
																					"typeString": "int_const 0"
																				}
																			],
																			"id": 562,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"lValueRequested": false,
																			"nodeType": "ElementaryTypeNameExpression",
																			"src": "9876:7:1",
																			"typeDescriptions": {
																				"typeIdentifier": "t_type$_t_address_$",
																				"typeString": "type(address)"
																			},
																			"typeName": {
																				"id": 561,
																				"name": "address",
																				"nodeType": "ElementaryTypeName",
																				"src": "9876:7:1",
																				"typeDescriptions": {}
																			}
																		},
																		"id": 564,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "typeConversion",
																		"lValueRequested": false,
																		"nameLocations": [],
																		"names": [],
																		"nodeType": "FunctionCall",
																		"src": "9876:10:1",
																		"tryCall": false,
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	],
																	"id": 560,
																	"name": "ERC20InvalidApprover",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 35,
																	"src": "9855:20:1",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_error_pure$_t_address_$returns$_t_error_$",
																		"typeString": "function (address) pure returns (error)"
																	}
																},
																"id": 565,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "9855:32:1",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_error",
																	"typeString": "error"
																}
															},
															"id": 566,
															"nodeType": "RevertStatement",
															"src": "9848:39:1"
														}
													]
												}
											},
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													},
													"id": 574,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 569,
														"name": "spender",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 547,
														"src": "9911:7:1",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "==",
													"rightExpression": {
														"arguments": [
															{
																"hexValue": "30",
																"id": 572,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "9930:1:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																}
															],
															"id": 571,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"lValueRequested": false,
															"nodeType": "ElementaryTypeNameExpression",
															"src": "9922:7:1",
															"typeDescriptions": {
																"typeIdentifier": "t_type$_t_address_$",
																"typeString": "type(address)"
															},
															"typeName": {
																"id": 570,
																"name": "address",
																"nodeType": "ElementaryTypeName",
																"src": "9922:7:1",
																"typeDescriptions": {}
															}
														},
														"id": 573,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "typeConversion",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "9922:10:1",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"src": "9911:21:1",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 583,
												"nodeType": "IfStatement",
												"src": "9907:90:1",
												"trueBody": {
													"id": 582,
													"nodeType": "Block",
													"src": "9934:63:1",
													"statements": [
														{
															"errorCall": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"hexValue": "30",
																				"id": 578,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": true,
																				"kind": "number",
																				"lValueRequested": false,
																				"nodeType": "Literal",
																				"src": "9983:1:1",
																				"typeDescriptions": {
																					"typeIdentifier": "t_rational_0_by_1",
																					"typeString": "int_const 0"
																				},
																				"value": "0"
																			}
																		],
																		"expression": {
																			"argumentTypes": [
																				{
																					"typeIdentifier": "t_rational_0_by_1",
																					"typeString": "int_const 0"
																				}
																			],
																			"id": 577,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"lValueRequested": false,
																			"nodeType": "ElementaryTypeNameExpression",
																			"src": "9975:7:1",
																			"typeDescriptions": {
																				"typeIdentifier": "t_type$_t_address_$",
																				"typeString": "type(address)"
																			},
																			"typeName": {
																				"id": 576,
																				"name": "address",
																				"nodeType": "ElementaryTypeName",
																				"src": "9975:7:1",
																				"typeDescriptions": {}
																			}
																		},
																		"id": 579,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "typeConversion",
																		"lValueRequested": false,
																		"nameLocations": [],
																		"names": [],
																		"nodeType": "FunctionCall",
																		"src": "9975:10:1",
																		"tryCall": false,
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	],
																	"id": 575,
																	"name": "ERC20InvalidSpender",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 40,
																	"src": "9955:19:1",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_error_pure$_t_address_$returns$_t_error_$",
																		"typeString": "function (address) pure returns (error)"
																	}
																},
																"id": 580,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "9955:31:1",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_error",
																	"typeString": "error"
																}
															},
															"id": 581,
															"nodeType": "RevertStatement",
															"src": "9948:38:1"
														}
													]
												}
											},
											{
												"expression": {
													"id": 590,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"baseExpression": {
															"baseExpression": {
																"id": 584,
																"name": "_allowances",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 165,
																"src": "10006:11:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_mapping$_t_address_$_t_mapping$_t_address_$_t_uint256_$_$",
																	"typeString": "mapping(address => mapping(address => uint256))"
																}
															},
															"id": 587,
															"indexExpression": {
																"id": 585,
																"name": "owner",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 545,
																"src": "10018:5:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"isConstant": false,
															"isLValue": true,
															"isPure": false,
															"lValueRequested": false,
															"nodeType": "IndexAccess",
															"src": "10006:18:1",
															"typeDescriptions": {
																"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
																"typeString": "mapping(address => uint256)"
															}
														},
														"id": 588,
														"indexExpression": {
															"id": 586,
															"name": "spender",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 547,
															"src": "10025:7:1",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": true,
														"nodeType": "IndexAccess",
														"src": "10006:27:1",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"id": 589,
														"name": "value",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 549,
														"src": "10036:5:1",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "10006:35:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"id": 591,
												"nodeType": "ExpressionStatement",
												"src": "10006:35:1"
											},
											{
												"condition": {
													"id": 592,
													"name": "emitEvent",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 551,
													"src": "10055:9:1",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 600,
												"nodeType": "IfStatement",
												"src": "10051:76:1",
												"trueBody": {
													"id": 599,
													"nodeType": "Block",
													"src": "10066:61:1",
													"statements": [
														{
															"eventCall": {
																"arguments": [
																	{
																		"id": 594,
																		"name": "owner",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 545,
																		"src": "10094:5:1",
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	},
																	{
																		"id": 595,
																		"name": "spender",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 547,
																		"src": "10101:7:1",
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	},
																	{
																		"id": 596,
																		"name": "value",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 549,
																		"src": "10110:5:1",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		},
																		{
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		},
																		{
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	],
																	"id": 593,
																	"name": "Approval",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 672,
																	"src": "10085:8:1",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_event_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$",
																		"typeString": "function (address,address,uint256)"
																	}
																},
																"id": 597,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "10085:31:1",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_tuple$__$",
																	"typeString": "tuple()"
																}
															},
															"id": 598,
															"nodeType": "EmitStatement",
															"src": "10080:36:1"
														}
													]
												}
											}
										]
									},
									"documentation": {
										"id": 543,
										"nodeType": "StructuredDocumentation",
										"src": "8860:836:1",
										"text": " @dev Variant of {_approve} with an optional flag to enable or disable the {Approval} event.\n By default (when calling {_approve}) the flag is set to true. On the other hand, approval changes made by\n `_spendAllowance` during the `transferFrom` operation set the flag to false. This saves gas by not emitting any\n `Approval` event during `transferFrom` operations.\n Anyone who wishes to continue emitting `Approval` events on the`transferFrom` operation can force the flag to\n true using the following override:\n ```solidity\n function _approve(address owner, address spender, uint256 value, bool) internal virtual override {\n     super._approve(owner, spender, value, true);\n }\n ```\n Requirements are the same as {_approve}."
									},
									"id": 602,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_approve",
									"nameLocation": "9710:8:1",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 552,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 545,
												"mutability": "mutable",
												"name": "owner",
												"nameLocation": "9727:5:1",
												"nodeType": "VariableDeclaration",
												"scope": 602,
												"src": "9719:13:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 544,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "9719:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 547,
												"mutability": "mutable",
												"name": "spender",
												"nameLocation": "9742:7:1",
												"nodeType": "VariableDeclaration",
												"scope": 602,
												"src": "9734:15:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 546,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "9734:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 549,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "9759:5:1",
												"nodeType": "VariableDeclaration",
												"scope": 602,
												"src": "9751:13:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 548,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "9751:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 551,
												"mutability": "mutable",
												"name": "emitEvent",
												"nameLocation": "9771:9:1",
												"nodeType": "VariableDeclaration",
												"scope": 602,
												"src": "9766:14:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 550,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "9766:4:1",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "9718:63:1"
									},
									"returnParameters": {
										"id": 553,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "9799:0:1"
									},
									"scope": 651,
									"src": "9701:432:1",
									"stateMutability": "nonpayable",
									"virtual": true,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 649,
										"nodeType": "Block",
										"src": "10504:387:1",
										"statements": [
											{
												"assignments": [
													613
												],
												"declarations": [
													{
														"constant": false,
														"id": 613,
														"mutability": "mutable",
														"name": "currentAllowance",
														"nameLocation": "10522:16:1",
														"nodeType": "VariableDeclaration",
														"scope": 649,
														"src": "10514:24:1",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"typeName": {
															"id": 612,
															"name": "uint256",
															"nodeType": "ElementaryTypeName",
															"src": "10514:7:1",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 618,
												"initialValue": {
													"arguments": [
														{
															"id": 615,
															"name": "owner",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 605,
															"src": "10551:5:1",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 616,
															"name": "spender",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 607,
															"src": "10558:7:1",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														],
														"id": 614,
														"name": "allowance",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 278,
														"src": "10541:9:1",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_view$_t_address_$_t_address_$returns$_t_uint256_$",
															"typeString": "function (address,address) view returns (uint256)"
														}
													},
													"id": 617,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "10541:25:1",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "10514:52:1"
											},
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 625,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 619,
														"name": "currentAllowance",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 613,
														"src": "10580:16:1",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "<",
													"rightExpression": {
														"expression": {
															"arguments": [
																{
																	"id": 622,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"lValueRequested": false,
																	"nodeType": "ElementaryTypeNameExpression",
																	"src": "10604:7:1",
																	"typeDescriptions": {
																		"typeIdentifier": "t_type$_t_uint256_$",
																		"typeString": "type(uint256)"
																	},
																	"typeName": {
																		"id": 621,
																		"name": "uint256",
																		"nodeType": "ElementaryTypeName",
																		"src": "10604:7:1",
																		"typeDescriptions": {}
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_type$_t_uint256_$",
																		"typeString": "type(uint256)"
																	}
																],
																"id": 620,
																"name": "type",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 4294967269,
																"src": "10599:4:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_metatype_pure$__$returns$__$",
																	"typeString": "function () pure"
																}
															},
															"id": 623,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "functionCall",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "10599:13:1",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_magic_meta_type_t_uint256",
																"typeString": "type(uint256)"
															}
														},
														"id": 624,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"lValueRequested": false,
														"memberLocation": "10613:3:1",
														"memberName": "max",
														"nodeType": "MemberAccess",
														"src": "10599:17:1",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "10580:36:1",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 648,
												"nodeType": "IfStatement",
												"src": "10576:309:1",
												"trueBody": {
													"id": 647,
													"nodeType": "Block",
													"src": "10618:267:1",
													"statements": [
														{
															"condition": {
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 628,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"id": 626,
																	"name": "currentAllowance",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 613,
																	"src": "10636:16:1",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": "<",
																"rightExpression": {
																	"id": 627,
																	"name": "value",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 609,
																	"src": "10655:5:1",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"src": "10636:24:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_bool",
																	"typeString": "bool"
																}
															},
															"id": 636,
															"nodeType": "IfStatement",
															"src": "10632:130:1",
															"trueBody": {
																"id": 635,
																"nodeType": "Block",
																"src": "10662:100:1",
																"statements": [
																	{
																		"errorCall": {
																			"arguments": [
																				{
																					"id": 630,
																					"name": "spender",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 607,
																					"src": "10714:7:1",
																					"typeDescriptions": {
																						"typeIdentifier": "t_address",
																						"typeString": "address"
																					}
																				},
																				{
																					"id": 631,
																					"name": "currentAllowance",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 613,
																					"src": "10723:16:1",
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				},
																				{
																					"id": 632,
																					"name": "value",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 609,
																					"src": "10741:5:1",
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				}
																			],
																			"expression": {
																				"argumentTypes": [
																					{
																						"typeIdentifier": "t_address",
																						"typeString": "address"
																					},
																					{
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					},
																					{
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				],
																				"id": 629,
																				"name": "ERC20InsufficientAllowance",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 30,
																				"src": "10687:26:1",
																				"typeDescriptions": {
																					"typeIdentifier": "t_function_error_pure$_t_address_$_t_uint256_$_t_uint256_$returns$_t_error_$",
																					"typeString": "function (address,uint256,uint256) pure returns (error)"
																				}
																			},
																			"id": 633,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"kind": "functionCall",
																			"lValueRequested": false,
																			"nameLocations": [],
																			"names": [],
																			"nodeType": "FunctionCall",
																			"src": "10687:60:1",
																			"tryCall": false,
																			"typeDescriptions": {
																				"typeIdentifier": "t_error",
																				"typeString": "error"
																			}
																		},
																		"id": 634,
																		"nodeType": "RevertStatement",
																		"src": "10680:67:1"
																	}
																]
															}
														},
														{
															"id": 646,
															"nodeType": "UncheckedBlock",
															"src": "10775:100:1",
															"statements": [
																{
																	"expression": {
																		"arguments": [
																			{
																				"id": 638,
																				"name": "owner",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 605,
																				"src": "10812:5:1",
																				"typeDescriptions": {
																					"typeIdentifier": "t_address",
																					"typeString": "address"
																				}
																			},
																			{
																				"id": 639,
																				"name": "spender",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 607,
																				"src": "10819:7:1",
																				"typeDescriptions": {
																					"typeIdentifier": "t_address",
																					"typeString": "address"
																				}
																			},
																			{
																				"commonType": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				},
																				"id": 642,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": false,
																				"lValueRequested": false,
																				"leftExpression": {
																					"id": 640,
																					"name": "currentAllowance",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 613,
																					"src": "10828:16:1",
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				},
																				"nodeType": "BinaryOperation",
																				"operator": "-",
																				"rightExpression": {
																					"id": 641,
																					"name": "value",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 609,
																					"src": "10847:5:1",
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				},
																				"src": "10828:24:1",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			},
																			{
																				"hexValue": "66616c7365",
																				"id": 643,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": true,
																				"kind": "bool",
																				"lValueRequested": false,
																				"nodeType": "Literal",
																				"src": "10854:5:1",
																				"typeDescriptions": {
																					"typeIdentifier": "t_bool",
																					"typeString": "bool"
																				},
																				"value": "false"
																			}
																		],
																		"expression": {
																			"argumentTypes": [
																				{
																					"typeIdentifier": "t_address",
																					"typeString": "address"
																				},
																				{
																					"typeIdentifier": "t_address",
																					"typeString": "address"
																				},
																				{
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				},
																				{
																					"typeIdentifier": "t_bool",
																					"typeString": "bool"
																				}
																			],
																			"id": 637,
																			"name": "_approve",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [
																				542,
																				602
																			],
																			"referencedDeclaration": 602,
																			"src": "10803:8:1",
																			"typeDescriptions": {
																				"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$_t_bool_$returns$__$",
																				"typeString": "function (address,address,uint256,bool)"
																			}
																		},
																		"id": 644,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"kind": "functionCall",
																		"lValueRequested": false,
																		"nameLocations": [],
																		"names": [],
																		"nodeType": "FunctionCall",
																		"src": "10803:57:1",
																		"tryCall": false,
																		"typeDescriptions": {
																			"typeIdentifier": "t_tuple$__$",
																			"typeString": "tuple()"
																		}
																	},
																	"id": 645,
																	"nodeType": "ExpressionStatement",
																	"src": "10803:57:1"
																}
															]
														}
													]
												}
											}
										]
									},
									"documentation": {
										"id": 603,
										"nodeType": "StructuredDocumentation",
										"src": "10139:271:1",
										"text": " @dev Updates `owner` s allowance for `spender` based on spent `value`.\n Does not update the allowance value in case of infinite allowance.\n Revert if not enough allowance is available.\n Does not emit an {Approval} event."
									},
									"id": 650,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_spendAllowance",
									"nameLocation": "10424:15:1",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 610,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 605,
												"mutability": "mutable",
												"name": "owner",
												"nameLocation": "10448:5:1",
												"nodeType": "VariableDeclaration",
												"scope": 650,
												"src": "10440:13:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 604,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "10440:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 607,
												"mutability": "mutable",
												"name": "spender",
												"nameLocation": "10463:7:1",
												"nodeType": "VariableDeclaration",
												"scope": 650,
												"src": "10455:15:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 606,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "10455:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 609,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "10480:5:1",
												"nodeType": "VariableDeclaration",
												"scope": 650,
												"src": "10472:13:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 608,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "10472:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "10439:47:1"
									},
									"returnParameters": {
										"id": 611,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "10504:0:1"
									},
									"scope": 651,
									"src": "10415:476:1",
									"stateMutability": "nonpayable",
									"virtual": true,
									"visibility": "internal"
								}
							],
							"scope": 652,
							"src": "1106:9787:1",
							"usedErrors": [
								11,
								16,
								21,
								30,
								35,
								40
							],
							"usedEvents": [
								663,
								672
							]
						}
					],
					"src": "105:10789:1"
				},
				"id": 1
			},
			"@openzeppelin/contracts/token/ERC20/IERC20.sol": {
				"ast": {
					"absolutePath": "@openzeppelin/contracts/token/ERC20/IERC20.sol",
					"exportedSymbols": {
						"IERC20": [
							729
						]
					},
					"id": 730,
					"license": "MIT",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 653,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".20"
							],
							"nodeType": "PragmaDirective",
							"src": "106:24:2"
						},
						{
							"abstract": false,
							"baseContracts": [],
							"canonicalName": "IERC20",
							"contractDependencies": [],
							"contractKind": "interface",
							"documentation": {
								"id": 654,
								"nodeType": "StructuredDocumentation",
								"src": "132:71:2",
								"text": " @dev Interface of the ERC-20 standard as defined in the ERC."
							},
							"fullyImplemented": false,
							"id": 729,
							"linearizedBaseContracts": [
								729
							],
							"name": "IERC20",
							"nameLocation": "214:6:2",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"anonymous": false,
									"documentation": {
										"id": 655,
										"nodeType": "StructuredDocumentation",
										"src": "227:158:2",
										"text": " @dev Emitted when `value` tokens are moved from one account (`from`) to\n another (`to`).\n Note that `value` may be zero."
									},
									"eventSelector": "ddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef",
									"id": 663,
									"name": "Transfer",
									"nameLocation": "396:8:2",
									"nodeType": "EventDefinition",
									"parameters": {
										"id": 662,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 657,
												"indexed": true,
												"mutability": "mutable",
												"name": "from",
												"nameLocation": "421:4:2",
												"nodeType": "VariableDeclaration",
												"scope": 663,
												"src": "405:20:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 656,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "405:7:2",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 659,
												"indexed": true,
												"mutability": "mutable",
												"name": "to",
												"nameLocation": "443:2:2",
												"nodeType": "VariableDeclaration",
												"scope": 663,
												"src": "427:18:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 658,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "427:7:2",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 661,
												"indexed": false,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "455:5:2",
												"nodeType": "VariableDeclaration",
												"scope": 663,
												"src": "447:13:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 660,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "447:7:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "404:57:2"
									},
									"src": "390:72:2"
								},
								{
									"anonymous": false,
									"documentation": {
										"id": 664,
										"nodeType": "StructuredDocumentation",
										"src": "468:148:2",
										"text": " @dev Emitted when the allowance of a `spender` for an `owner` is set by\n a call to {approve}. `value` is the new allowance."
									},
									"eventSelector": "8c5be1e5ebec7d5bd14f71427d1e84f3dd0314c0f7b2291e5b200ac8c7c3b925",
									"id": 672,
									"name": "Approval",
									"nameLocation": "627:8:2",
									"nodeType": "EventDefinition",
									"parameters": {
										"id": 671,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 666,
												"indexed": true,
												"mutability": "mutable",
												"name": "owner",
												"nameLocation": "652:5:2",
												"nodeType": "VariableDeclaration",
												"scope": 672,
												"src": "636:21:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 665,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "636:7:2",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 668,
												"indexed": true,
												"mutability": "mutable",
												"name": "spender",
												"nameLocation": "675:7:2",
												"nodeType": "VariableDeclaration",
												"scope": 672,
												"src": "659:23:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 667,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "659:7:2",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 670,
												"indexed": false,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "692:5:2",
												"nodeType": "VariableDeclaration",
												"scope": 672,
												"src": "684:13:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 669,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "684:7:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "635:63:2"
									},
									"src": "621:78:2"
								},
								{
									"documentation": {
										"id": 673,
										"nodeType": "StructuredDocumentation",
										"src": "705:65:2",
										"text": " @dev Returns the value of tokens in existence."
									},
									"functionSelector": "18160ddd",
									"id": 678,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "totalSupply",
									"nameLocation": "784:11:2",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 674,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "795:2:2"
									},
									"returnParameters": {
										"id": 677,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 676,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 678,
												"src": "821:7:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 675,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "821:7:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "820:9:2"
									},
									"scope": 729,
									"src": "775:55:2",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 679,
										"nodeType": "StructuredDocumentation",
										"src": "836:71:2",
										"text": " @dev Returns the value of tokens owned by `account`."
									},
									"functionSelector": "70a08231",
									"id": 686,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "balanceOf",
									"nameLocation": "921:9:2",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 682,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 681,
												"mutability": "mutable",
												"name": "account",
												"nameLocation": "939:7:2",
												"nodeType": "VariableDeclaration",
												"scope": 686,
												"src": "931:15:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 680,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "931:7:2",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "930:17:2"
									},
									"returnParameters": {
										"id": 685,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 684,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 686,
												"src": "971:7:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 683,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "971:7:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "970:9:2"
									},
									"scope": 729,
									"src": "912:68:2",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 687,
										"nodeType": "StructuredDocumentation",
										"src": "986:213:2",
										"text": " @dev Moves a `value` amount of tokens from the caller's account to `to`.\n Returns a boolean value indicating whether the operation succeeded.\n Emits a {Transfer} event."
									},
									"functionSelector": "a9059cbb",
									"id": 696,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "transfer",
									"nameLocation": "1213:8:2",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 692,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 689,
												"mutability": "mutable",
												"name": "to",
												"nameLocation": "1230:2:2",
												"nodeType": "VariableDeclaration",
												"scope": 696,
												"src": "1222:10:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 688,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1222:7:2",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 691,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "1242:5:2",
												"nodeType": "VariableDeclaration",
												"scope": 696,
												"src": "1234:13:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 690,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1234:7:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1221:27:2"
									},
									"returnParameters": {
										"id": 695,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 694,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 696,
												"src": "1267:4:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 693,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "1267:4:2",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1266:6:2"
									},
									"scope": 729,
									"src": "1204:69:2",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 697,
										"nodeType": "StructuredDocumentation",
										"src": "1279:264:2",
										"text": " @dev Returns the remaining number of tokens that `spender` will be\n allowed to spend on behalf of `owner` through {transferFrom}. This is\n zero by default.\n This value changes when {approve} or {transferFrom} are called."
									},
									"functionSelector": "dd62ed3e",
									"id": 706,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "allowance",
									"nameLocation": "1557:9:2",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 702,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 699,
												"mutability": "mutable",
												"name": "owner",
												"nameLocation": "1575:5:2",
												"nodeType": "VariableDeclaration",
												"scope": 706,
												"src": "1567:13:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 698,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1567:7:2",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 701,
												"mutability": "mutable",
												"name": "spender",
												"nameLocation": "1590:7:2",
												"nodeType": "VariableDeclaration",
												"scope": 706,
												"src": "1582:15:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 700,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1582:7:2",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1566:32:2"
									},
									"returnParameters": {
										"id": 705,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 704,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 706,
												"src": "1622:7:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 703,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1622:7:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1621:9:2"
									},
									"scope": 729,
									"src": "1548:83:2",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 707,
										"nodeType": "StructuredDocumentation",
										"src": "1637:667:2",
										"text": " @dev Sets a `value` amount of tokens as the allowance of `spender` over the\n caller's tokens.\n Returns a boolean value indicating whether the operation succeeded.\n IMPORTANT: Beware that changing an allowance with this method brings the risk\n that someone may use both the old and the new allowance by unfortunate\n transaction ordering. One possible solution to mitigate this race\n condition is to first reduce the spender's allowance to 0 and set the\n desired value afterwards:\n https://github.com/ethereum/EIPs/issues/20#issuecomment-263524729\n Emits an {Approval} event."
									},
									"functionSelector": "095ea7b3",
									"id": 716,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "approve",
									"nameLocation": "2318:7:2",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 712,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 709,
												"mutability": "mutable",
												"name": "spender",
												"nameLocation": "2334:7:2",
												"nodeType": "VariableDeclaration",
												"scope": 716,
												"src": "2326:15:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 708,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2326:7:2",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 711,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "2351:5:2",
												"nodeType": "VariableDeclaration",
												"scope": 716,
												"src": "2343:13:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 710,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "2343:7:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2325:32:2"
									},
									"returnParameters": {
										"id": 715,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 714,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 716,
												"src": "2376:4:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 713,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "2376:4:2",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2375:6:2"
									},
									"scope": 729,
									"src": "2309:73:2",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 717,
										"nodeType": "StructuredDocumentation",
										"src": "2388:297:2",
										"text": " @dev Moves a `value` amount of tokens from `from` to `to` using the\n allowance mechanism. `value` is then deducted from the caller's\n allowance.\n Returns a boolean value indicating whether the operation succeeded.\n Emits a {Transfer} event."
									},
									"functionSelector": "23b872dd",
									"id": 728,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "transferFrom",
									"nameLocation": "2699:12:2",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 724,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 719,
												"mutability": "mutable",
												"name": "from",
												"nameLocation": "2720:4:2",
												"nodeType": "VariableDeclaration",
												"scope": 728,
												"src": "2712:12:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 718,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2712:7:2",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 721,
												"mutability": "mutable",
												"name": "to",
												"nameLocation": "2734:2:2",
												"nodeType": "VariableDeclaration",
												"scope": 728,
												"src": "2726:10:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 720,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2726:7:2",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 723,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "2746:5:2",
												"nodeType": "VariableDeclaration",
												"scope": 728,
												"src": "2738:13:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 722,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "2738:7:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2711:41:2"
									},
									"returnParameters": {
										"id": 727,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 726,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 728,
												"src": "2771:4:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 725,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "2771:4:2",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2770:6:2"
									},
									"scope": 729,
									"src": "2690:87:2",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								}
							],
							"scope": 730,
							"src": "204:2575:2",
							"usedErrors": [],
							"usedEvents": [
								663,
								672
							]
						}
					],
					"src": "106:2674:2"
				},
				"id": 2
			},
			"@openzeppelin/contracts/token/ERC20/extensions/IERC20Metadata.sol": {
				"ast": {
					"absolutePath": "@openzeppelin/contracts/token/ERC20/extensions/IERC20Metadata.sol",
					"exportedSymbols": {
						"IERC20": [
							729
						],
						"IERC20Metadata": [
							755
						]
					},
					"id": 756,
					"license": "MIT",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 731,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".20"
							],
							"nodeType": "PragmaDirective",
							"src": "125:24:3"
						},
						{
							"absolutePath": "@openzeppelin/contracts/token/ERC20/IERC20.sol",
							"file": "../IERC20.sol",
							"id": 733,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 756,
							"sourceUnit": 730,
							"src": "151:37:3",
							"symbolAliases": [
								{
									"foreign": {
										"id": 732,
										"name": "IERC20",
										"nodeType": "Identifier",
										"overloadedDeclarations": [],
										"referencedDeclaration": 729,
										"src": "159:6:3",
										"typeDescriptions": {}
									},
									"nameLocation": "-1:-1:-1"
								}
							],
							"unitAlias": ""
						},
						{
							"abstract": false,
							"baseContracts": [
								{
									"baseName": {
										"id": 735,
										"name": "IERC20",
										"nameLocations": [
											"306:6:3"
										],
										"nodeType": "IdentifierPath",
										"referencedDeclaration": 729,
										"src": "306:6:3"
									},
									"id": 736,
									"nodeType": "InheritanceSpecifier",
									"src": "306:6:3"
								}
							],
							"canonicalName": "IERC20Metadata",
							"contractDependencies": [],
							"contractKind": "interface",
							"documentation": {
								"id": 734,
								"nodeType": "StructuredDocumentation",
								"src": "190:87:3",
								"text": " @dev Interface for the optional metadata functions from the ERC-20 standard."
							},
							"fullyImplemented": false,
							"id": 755,
							"linearizedBaseContracts": [
								755,
								729
							],
							"name": "IERC20Metadata",
							"nameLocation": "288:14:3",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"documentation": {
										"id": 737,
										"nodeType": "StructuredDocumentation",
										"src": "319:54:3",
										"text": " @dev Returns the name of the token."
									},
									"functionSelector": "06fdde03",
									"id": 742,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "name",
									"nameLocation": "387:4:3",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 738,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "391:2:3"
									},
									"returnParameters": {
										"id": 741,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 740,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 742,
												"src": "417:13:3",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_string_memory_ptr",
													"typeString": "string"
												},
												"typeName": {
													"id": 739,
													"name": "string",
													"nodeType": "ElementaryTypeName",
													"src": "417:6:3",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage_ptr",
														"typeString": "string"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "416:15:3"
									},
									"scope": 755,
									"src": "378:54:3",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 743,
										"nodeType": "StructuredDocumentation",
										"src": "438:56:3",
										"text": " @dev Returns the symbol of the token."
									},
									"functionSelector": "95d89b41",
									"id": 748,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "symbol",
									"nameLocation": "508:6:3",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 744,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "514:2:3"
									},
									"returnParameters": {
										"id": 747,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 746,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 748,
												"src": "540:13:3",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_string_memory_ptr",
													"typeString": "string"
												},
												"typeName": {
													"id": 745,
													"name": "string",
													"nodeType": "ElementaryTypeName",
													"src": "540:6:3",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage_ptr",
														"typeString": "string"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "539:15:3"
									},
									"scope": 755,
									"src": "499:56:3",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 749,
										"nodeType": "StructuredDocumentation",
										"src": "561:65:3",
										"text": " @dev Returns the decimals places of the token."
									},
									"functionSelector": "313ce567",
									"id": 754,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "decimals",
									"nameLocation": "640:8:3",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 750,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "648:2:3"
									},
									"returnParameters": {
										"id": 753,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 752,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 754,
												"src": "674:5:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint8",
													"typeString": "uint8"
												},
												"typeName": {
													"id": 751,
													"name": "uint8",
													"nodeType": "ElementaryTypeName",
													"src": "674:5:3",
													"typeDescriptions": {
														"typeIdentifier": "t_uint8",
														"typeString": "uint8"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "673:7:3"
									},
									"scope": 755,
									"src": "631:50:3",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								}
							],
							"scope": 756,
							"src": "278:405:3",
							"usedErrors": [],
							"usedEvents": [
								663,
								672
							]
						}
					],
					"src": "125:559:3"
				},
				"id": 3
			},
			"@openzeppelin/contracts/utils/Context.sol": {
				"ast": {
					"absolutePath": "@openzeppelin/contracts/utils/Context.sol",
					"exportedSymbols": {
						"Context": [
							785
						]
					},
					"id": 786,
					"license": "MIT",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 757,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".20"
							],
							"nodeType": "PragmaDirective",
							"src": "101:24:4"
						},
						{
							"abstract": true,
							"baseContracts": [],
							"canonicalName": "Context",
							"contractDependencies": [],
							"contractKind": "contract",
							"documentation": {
								"id": 758,
								"nodeType": "StructuredDocumentation",
								"src": "127:496:4",
								"text": " @dev Provides information about the current execution context, including the\n sender of the transaction and its data. While these are generally available\n via msg.sender and msg.data, they should not be accessed in such a direct\n manner, since when dealing with meta-transactions the account sending and\n paying for execution may not be the actual sender (as far as an application\n is concerned).\n This contract is only required for intermediate, library-like contracts."
							},
							"fullyImplemented": true,
							"id": 785,
							"linearizedBaseContracts": [
								785
							],
							"name": "Context",
							"nameLocation": "642:7:4",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"body": {
										"id": 766,
										"nodeType": "Block",
										"src": "718:34:4",
										"statements": [
											{
												"expression": {
													"expression": {
														"id": 763,
														"name": "msg",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 4294967281,
														"src": "735:3:4",
														"typeDescriptions": {
															"typeIdentifier": "t_magic_message",
															"typeString": "msg"
														}
													},
													"id": 764,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"memberLocation": "739:6:4",
													"memberName": "sender",
													"nodeType": "MemberAccess",
													"src": "735:10:4",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"functionReturnParameters": 762,
												"id": 765,
												"nodeType": "Return",
												"src": "728:17:4"
											}
										]
									},
									"id": 767,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_msgSender",
									"nameLocation": "665:10:4",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 759,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "675:2:4"
									},
									"returnParameters": {
										"id": 762,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 761,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 767,
												"src": "709:7:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 760,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "709:7:4",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "708:9:4"
									},
									"scope": 785,
									"src": "656:96:4",
									"stateMutability": "view",
									"virtual": true,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 775,
										"nodeType": "Block",
										"src": "825:32:4",
										"statements": [
											{
												"expression": {
													"expression": {
														"id": 772,
														"name": "msg",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 4294967281,
														"src": "842:3:4",
														"typeDescriptions": {
															"typeIdentifier": "t_magic_message",
															"typeString": "msg"
														}
													},
													"id": 773,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"memberLocation": "846:4:4",
													"memberName": "data",
													"nodeType": "MemberAccess",
													"src": "842:8:4",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_calldata_ptr",
														"typeString": "bytes calldata"
													}
												},
												"functionReturnParameters": 771,
												"id": 774,
												"nodeType": "Return",
												"src": "835:15:4"
											}
										]
									},
									"id": 776,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_msgData",
									"nameLocation": "767:8:4",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 768,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "775:2:4"
									},
									"returnParameters": {
										"id": 771,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 770,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 776,
												"src": "809:14:4",
												"stateVariable": false,
												"storageLocation": "calldata",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_calldata_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 769,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "809:5:4",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "808:16:4"
									},
									"scope": 785,
									"src": "758:99:4",
									"stateMutability": "view",
									"virtual": true,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 783,
										"nodeType": "Block",
										"src": "935:25:4",
										"statements": [
											{
												"expression": {
													"hexValue": "30",
													"id": 781,
													"isConstant": false,
													"isLValue": false,
													"isPure": true,
													"kind": "number",
													"lValueRequested": false,
													"nodeType": "Literal",
													"src": "952:1:4",
													"typeDescriptions": {
														"typeIdentifier": "t_rational_0_by_1",
														"typeString": "int_const 0"
													},
													"value": "0"
												},
												"functionReturnParameters": 780,
												"id": 782,
												"nodeType": "Return",
												"src": "945:8:4"
											}
										]
									},
									"id": 784,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_contextSuffixLength",
									"nameLocation": "872:20:4",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 777,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "892:2:4"
									},
									"returnParameters": {
										"id": 780,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 779,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 784,
												"src": "926:7:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 778,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "926:7:4",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "925:9:4"
									},
									"scope": 785,
									"src": "863:97:4",
									"stateMutability": "view",
									"virtual": true,
									"visibility": "internal"
								}
							],
							"scope": 786,
							"src": "624:338:4",
							"usedErrors": [],
							"usedEvents": []
						}
					],
					"src": "101:862:4"
				},
				"id": 4
			},
			"@openzeppelin/contracts/utils/structs/EnumerableSet.sol": {
				"ast": {
					"absolutePath": "@openzeppelin/contracts/utils/structs/EnumerableSet.sol",
					"exportedSymbols": {
						"EnumerableSet": [
							1398
						]
					},
					"id": 1399,
					"license": "MIT",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 787,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".20"
							],
							"nodeType": "PragmaDirective",
							"src": "205:24:5"
						},
						{
							"abstract": false,
							"baseContracts": [],
							"canonicalName": "EnumerableSet",
							"contractDependencies": [],
							"contractKind": "library",
							"documentation": {
								"id": 788,
								"nodeType": "StructuredDocumentation",
								"src": "231:1098:5",
								"text": " @dev Library for managing\n https://en.wikipedia.org/wiki/Set_(abstract_data_type)[sets] of primitive\n types.\n Sets have the following properties:\n - Elements are added, removed, and checked for existence in constant time\n (O(1)).\n - Elements are enumerated in O(n). No guarantees are made on the ordering.\n ```solidity\n contract Example {\n     // Add the library methods\n     using EnumerableSet for EnumerableSet.AddressSet;\n     // Declare a set state variable\n     EnumerableSet.AddressSet private mySet;\n }\n ```\n As of v3.3.0, sets of type `bytes32` (`Bytes32Set`), `address` (`AddressSet`)\n and `uint256` (`UintSet`) are supported.\n [WARNING]\n ====\n Trying to delete such a structure from storage will likely result in data corruption, rendering the structure\n unusable.\n See https://github.com/ethereum/solidity/pull/11843[ethereum/solidity#11843] for more info.\n In order to clean an EnumerableSet, you can either remove all elements one by one or create a fresh instance using an\n array of EnumerableSet.\n ===="
							},
							"fullyImplemented": true,
							"id": 1398,
							"linearizedBaseContracts": [
								1398
							],
							"name": "EnumerableSet",
							"nameLocation": "1338:13:5",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"canonicalName": "EnumerableSet.Set",
									"id": 796,
									"members": [
										{
											"constant": false,
											"id": 791,
											"mutability": "mutable",
											"name": "_values",
											"nameLocation": "1862:7:5",
											"nodeType": "VariableDeclaration",
											"scope": 796,
											"src": "1852:17:5",
											"stateVariable": false,
											"storageLocation": "default",
											"typeDescriptions": {
												"typeIdentifier": "t_array$_t_bytes32_$dyn_storage_ptr",
												"typeString": "bytes32[]"
											},
											"typeName": {
												"baseType": {
													"id": 789,
													"name": "bytes32",
													"nodeType": "ElementaryTypeName",
													"src": "1852:7:5",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes32",
														"typeString": "bytes32"
													}
												},
												"id": 790,
												"nodeType": "ArrayTypeName",
												"src": "1852:9:5",
												"typeDescriptions": {
													"typeIdentifier": "t_array$_t_bytes32_$dyn_storage_ptr",
													"typeString": "bytes32[]"
												}
											},
											"visibility": "internal"
										},
										{
											"constant": false,
											"id": 795,
											"mutability": "mutable",
											"name": "_positions",
											"nameLocation": "2054:10:5",
											"nodeType": "VariableDeclaration",
											"scope": 796,
											"src": "2020:44:5",
											"stateVariable": false,
											"storageLocation": "default",
											"typeDescriptions": {
												"typeIdentifier": "t_mapping$_t_bytes32_$_t_uint256_$",
												"typeString": "mapping(bytes32 => uint256)"
											},
											"typeName": {
												"id": 794,
												"keyName": "value",
												"keyNameLocation": "2036:5:5",
												"keyType": {
													"id": 792,
													"name": "bytes32",
													"nodeType": "ElementaryTypeName",
													"src": "2028:7:5",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes32",
														"typeString": "bytes32"
													}
												},
												"nodeType": "Mapping",
												"src": "2020:33:5",
												"typeDescriptions": {
													"typeIdentifier": "t_mapping$_t_bytes32_$_t_uint256_$",
													"typeString": "mapping(bytes32 => uint256)"
												},
												"valueName": "",
												"valueNameLocation": "-1:-1:-1",
												"valueType": {
													"id": 793,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "2045:7:5",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												}
											},
											"visibility": "internal"
										}
									],
									"name": "Set",
									"nameLocation": "1805:3:5",
									"nodeType": "StructDefinition",
									"scope": 1398,
									"src": "1798:273:5",
									"visibility": "public"
								},
								{
									"body": {
										"id": 837,
										"nodeType": "Block",
										"src": "2310:337:5",
										"statements": [
											{
												"condition": {
													"id": 811,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"nodeType": "UnaryOperation",
													"operator": "!",
													"prefix": true,
													"src": "2324:22:5",
													"subExpression": {
														"arguments": [
															{
																"id": 808,
																"name": "set",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 800,
																"src": "2335:3:5",
																"typeDescriptions": {
																	"typeIdentifier": "t_struct$_Set_$796_storage_ptr",
																	"typeString": "struct EnumerableSet.Set storage pointer"
																}
															},
															{
																"id": 809,
																"name": "value",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 802,
																"src": "2340:5:5",
																"typeDescriptions": {
																	"typeIdentifier": "t_bytes32",
																	"typeString": "bytes32"
																}
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_struct$_Set_$796_storage_ptr",
																	"typeString": "struct EnumerableSet.Set storage pointer"
																},
																{
																	"typeIdentifier": "t_bytes32",
																	"typeString": "bytes32"
																}
															],
															"id": 807,
															"name": "_contains",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 941,
															"src": "2325:9:5",
															"typeDescriptions": {
																"typeIdentifier": "t_function_internal_view$_t_struct$_Set_$796_storage_ptr_$_t_bytes32_$returns$_t_bool_$",
																"typeString": "function (struct EnumerableSet.Set storage pointer,bytes32) view returns (bool)"
															}
														},
														"id": 810,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"kind": "functionCall",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "2325:21:5",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"falseBody": {
													"id": 835,
													"nodeType": "Block",
													"src": "2604:37:5",
													"statements": [
														{
															"expression": {
																"hexValue": "66616c7365",
																"id": 833,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "bool",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "2625:5:5",
																"typeDescriptions": {
																	"typeIdentifier": "t_bool",
																	"typeString": "bool"
																},
																"value": "false"
															},
															"functionReturnParameters": 806,
															"id": 834,
															"nodeType": "Return",
															"src": "2618:12:5"
														}
													]
												},
												"id": 836,
												"nodeType": "IfStatement",
												"src": "2320:321:5",
												"trueBody": {
													"id": 832,
													"nodeType": "Block",
													"src": "2348:250:5",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"id": 817,
																		"name": "value",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 802,
																		"src": "2379:5:5",
																		"typeDescriptions": {
																			"typeIdentifier": "t_bytes32",
																			"typeString": "bytes32"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_bytes32",
																			"typeString": "bytes32"
																		}
																	],
																	"expression": {
																		"expression": {
																			"id": 812,
																			"name": "set",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 800,
																			"src": "2362:3:5",
																			"typeDescriptions": {
																				"typeIdentifier": "t_struct$_Set_$796_storage_ptr",
																				"typeString": "struct EnumerableSet.Set storage pointer"
																			}
																		},
																		"id": 815,
																		"isConstant": false,
																		"isLValue": true,
																		"isPure": false,
																		"lValueRequested": false,
																		"memberLocation": "2366:7:5",
																		"memberName": "_values",
																		"nodeType": "MemberAccess",
																		"referencedDeclaration": 791,
																		"src": "2362:11:5",
																		"typeDescriptions": {
																			"typeIdentifier": "t_array$_t_bytes32_$dyn_storage",
																			"typeString": "bytes32[] storage ref"
																		}
																	},
																	"id": 816,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"memberLocation": "2374:4:5",
																	"memberName": "push",
																	"nodeType": "MemberAccess",
																	"src": "2362:16:5",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_arraypush_nonpayable$_t_array$_t_bytes32_$dyn_storage_ptr_$_t_bytes32_$returns$__$attached_to$_t_array$_t_bytes32_$dyn_storage_ptr_$",
																		"typeString": "function (bytes32[] storage pointer,bytes32)"
																	}
																},
																"id": 818,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "2362:23:5",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_tuple$__$",
																	"typeString": "tuple()"
																}
															},
															"id": 819,
															"nodeType": "ExpressionStatement",
															"src": "2362:23:5"
														},
														{
															"expression": {
																"id": 828,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftHandSide": {
																	"baseExpression": {
																		"expression": {
																			"id": 820,
																			"name": "set",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 800,
																			"src": "2520:3:5",
																			"typeDescriptions": {
																				"typeIdentifier": "t_struct$_Set_$796_storage_ptr",
																				"typeString": "struct EnumerableSet.Set storage pointer"
																			}
																		},
																		"id": 823,
																		"isConstant": false,
																		"isLValue": true,
																		"isPure": false,
																		"lValueRequested": false,
																		"memberLocation": "2524:10:5",
																		"memberName": "_positions",
																		"nodeType": "MemberAccess",
																		"referencedDeclaration": 795,
																		"src": "2520:14:5",
																		"typeDescriptions": {
																			"typeIdentifier": "t_mapping$_t_bytes32_$_t_uint256_$",
																			"typeString": "mapping(bytes32 => uint256)"
																		}
																	},
																	"id": 824,
																	"indexExpression": {
																		"id": 822,
																		"name": "value",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 802,
																		"src": "2535:5:5",
																		"typeDescriptions": {
																			"typeIdentifier": "t_bytes32",
																			"typeString": "bytes32"
																		}
																	},
																	"isConstant": false,
																	"isLValue": true,
																	"isPure": false,
																	"lValueRequested": true,
																	"nodeType": "IndexAccess",
																	"src": "2520:21:5",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "Assignment",
																"operator": "=",
																"rightHandSide": {
																	"expression": {
																		"expression": {
																			"id": 825,
																			"name": "set",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 800,
																			"src": "2544:3:5",
																			"typeDescriptions": {
																				"typeIdentifier": "t_struct$_Set_$796_storage_ptr",
																				"typeString": "struct EnumerableSet.Set storage pointer"
																			}
																		},
																		"id": 826,
																		"isConstant": false,
																		"isLValue": true,
																		"isPure": false,
																		"lValueRequested": false,
																		"memberLocation": "2548:7:5",
																		"memberName": "_values",
																		"nodeType": "MemberAccess",
																		"referencedDeclaration": 791,
																		"src": "2544:11:5",
																		"typeDescriptions": {
																			"typeIdentifier": "t_array$_t_bytes32_$dyn_storage",
																			"typeString": "bytes32[] storage ref"
																		}
																	},
																	"id": 827,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"memberLocation": "2556:6:5",
																	"memberName": "length",
																	"nodeType": "MemberAccess",
																	"src": "2544:18:5",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"src": "2520:42:5",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"id": 829,
															"nodeType": "ExpressionStatement",
															"src": "2520:42:5"
														},
														{
															"expression": {
																"hexValue": "74727565",
																"id": 830,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "bool",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "2583:4:5",
																"typeDescriptions": {
																	"typeIdentifier": "t_bool",
																	"typeString": "bool"
																},
																"value": "true"
															},
															"functionReturnParameters": 806,
															"id": 831,
															"nodeType": "Return",
															"src": "2576:11:5"
														}
													]
												}
											}
										]
									},
									"documentation": {
										"id": 797,
										"nodeType": "StructuredDocumentation",
										"src": "2077:159:5",
										"text": " @dev Add a value to a set. O(1).\n Returns true if the value was added to the set, that is if it was not\n already present."
									},
									"id": 838,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_add",
									"nameLocation": "2250:4:5",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 803,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 800,
												"mutability": "mutable",
												"name": "set",
												"nameLocation": "2267:3:5",
												"nodeType": "VariableDeclaration",
												"scope": 838,
												"src": "2255:15:5",
												"stateVariable": false,
												"storageLocation": "storage",
												"typeDescriptions": {
													"typeIdentifier": "t_struct$_Set_$796_storage_ptr",
													"typeString": "struct EnumerableSet.Set"
												},
												"typeName": {
													"id": 799,
													"nodeType": "UserDefinedTypeName",
													"pathNode": {
														"id": 798,
														"name": "Set",
														"nameLocations": [
															"2255:3:5"
														],
														"nodeType": "IdentifierPath",
														"referencedDeclaration": 796,
														"src": "2255:3:5"
													},
													"referencedDeclaration": 796,
													"src": "2255:3:5",
													"typeDescriptions": {
														"typeIdentifier": "t_struct$_Set_$796_storage_ptr",
														"typeString": "struct EnumerableSet.Set"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 802,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "2280:5:5",
												"nodeType": "VariableDeclaration",
												"scope": 838,
												"src": "2272:13:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes32",
													"typeString": "bytes32"
												},
												"typeName": {
													"id": 801,
													"name": "bytes32",
													"nodeType": "ElementaryTypeName",
													"src": "2272:7:5",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes32",
														"typeString": "bytes32"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2254:32:5"
									},
									"returnParameters": {
										"id": 806,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 805,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 838,
												"src": "2304:4:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 804,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "2304:4:5",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2303:6:5"
									},
									"scope": 1398,
									"src": "2241:406:5",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "private"
								},
								{
									"body": {
										"id": 921,
										"nodeType": "Block",
										"src": "2887:1296:5",
										"statements": [
											{
												"assignments": [
													850
												],
												"declarations": [
													{
														"constant": false,
														"id": 850,
														"mutability": "mutable",
														"name": "position",
														"nameLocation": "2999:8:5",
														"nodeType": "VariableDeclaration",
														"scope": 921,
														"src": "2991:16:5",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"typeName": {
															"id": 849,
															"name": "uint256",
															"nodeType": "ElementaryTypeName",
															"src": "2991:7:5",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 855,
												"initialValue": {
													"baseExpression": {
														"expression": {
															"id": 851,
															"name": "set",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 842,
															"src": "3010:3:5",
															"typeDescriptions": {
																"typeIdentifier": "t_struct$_Set_$796_storage_ptr",
																"typeString": "struct EnumerableSet.Set storage pointer"
															}
														},
														"id": 852,
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": false,
														"memberLocation": "3014:10:5",
														"memberName": "_positions",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 795,
														"src": "3010:14:5",
														"typeDescriptions": {
															"typeIdentifier": "t_mapping$_t_bytes32_$_t_uint256_$",
															"typeString": "mapping(bytes32 => uint256)"
														}
													},
													"id": 854,
													"indexExpression": {
														"id": 853,
														"name": "value",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 844,
														"src": "3025:5:5",
														"typeDescriptions": {
															"typeIdentifier": "t_bytes32",
															"typeString": "bytes32"
														}
													},
													"isConstant": false,
													"isLValue": true,
													"isPure": false,
													"lValueRequested": false,
													"nodeType": "IndexAccess",
													"src": "3010:21:5",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "2991:40:5"
											},
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 858,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 856,
														"name": "position",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 850,
														"src": "3046:8:5",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "!=",
													"rightExpression": {
														"hexValue": "30",
														"id": 857,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "number",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "3058:1:5",
														"typeDescriptions": {
															"typeIdentifier": "t_rational_0_by_1",
															"typeString": "int_const 0"
														},
														"value": "0"
													},
													"src": "3046:13:5",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"falseBody": {
													"id": 919,
													"nodeType": "Block",
													"src": "4140:37:5",
													"statements": [
														{
															"expression": {
																"hexValue": "66616c7365",
																"id": 917,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "bool",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "4161:5:5",
																"typeDescriptions": {
																	"typeIdentifier": "t_bool",
																	"typeString": "bool"
																},
																"value": "false"
															},
															"functionReturnParameters": 848,
															"id": 918,
															"nodeType": "Return",
															"src": "4154:12:5"
														}
													]
												},
												"id": 920,
												"nodeType": "IfStatement",
												"src": "3042:1135:5",
												"trueBody": {
													"id": 916,
													"nodeType": "Block",
													"src": "3061:1073:5",
													"statements": [
														{
															"assignments": [
																860
															],
															"declarations": [
																{
																	"constant": false,
																	"id": 860,
																	"mutability": "mutable",
																	"name": "valueIndex",
																	"nameLocation": "3421:10:5",
																	"nodeType": "VariableDeclaration",
																	"scope": 916,
																	"src": "3413:18:5",
																	"stateVariable": false,
																	"storageLocation": "default",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	},
																	"typeName": {
																		"id": 859,
																		"name": "uint256",
																		"nodeType": "ElementaryTypeName",
																		"src": "3413:7:5",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"visibility": "internal"
																}
															],
															"id": 864,
															"initialValue": {
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 863,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"id": 861,
																	"name": "position",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 850,
																	"src": "3434:8:5",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": "-",
																"rightExpression": {
																	"hexValue": "31",
																	"id": 862,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "3445:1:5",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_1_by_1",
																		"typeString": "int_const 1"
																	},
																	"value": "1"
																},
																"src": "3434:12:5",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "VariableDeclarationStatement",
															"src": "3413:33:5"
														},
														{
															"assignments": [
																866
															],
															"declarations": [
																{
																	"constant": false,
																	"id": 866,
																	"mutability": "mutable",
																	"name": "lastIndex",
																	"nameLocation": "3468:9:5",
																	"nodeType": "VariableDeclaration",
																	"scope": 916,
																	"src": "3460:17:5",
																	"stateVariable": false,
																	"storageLocation": "default",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	},
																	"typeName": {
																		"id": 865,
																		"name": "uint256",
																		"nodeType": "ElementaryTypeName",
																		"src": "3460:7:5",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"visibility": "internal"
																}
															],
															"id": 872,
															"initialValue": {
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 871,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"expression": {
																		"expression": {
																			"id": 867,
																			"name": "set",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 842,
																			"src": "3480:3:5",
																			"typeDescriptions": {
																				"typeIdentifier": "t_struct$_Set_$796_storage_ptr",
																				"typeString": "struct EnumerableSet.Set storage pointer"
																			}
																		},
																		"id": 868,
																		"isConstant": false,
																		"isLValue": true,
																		"isPure": false,
																		"lValueRequested": false,
																		"memberLocation": "3484:7:5",
																		"memberName": "_values",
																		"nodeType": "MemberAccess",
																		"referencedDeclaration": 791,
																		"src": "3480:11:5",
																		"typeDescriptions": {
																			"typeIdentifier": "t_array$_t_bytes32_$dyn_storage",
																			"typeString": "bytes32[] storage ref"
																		}
																	},
																	"id": 869,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"memberLocation": "3492:6:5",
																	"memberName": "length",
																	"nodeType": "MemberAccess",
																	"src": "3480:18:5",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": "-",
																"rightExpression": {
																	"hexValue": "31",
																	"id": 870,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "3501:1:5",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_1_by_1",
																		"typeString": "int_const 1"
																	},
																	"value": "1"
																},
																"src": "3480:22:5",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "VariableDeclarationStatement",
															"src": "3460:42:5"
														},
														{
															"condition": {
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 875,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"id": 873,
																	"name": "valueIndex",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 860,
																	"src": "3521:10:5",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": "!=",
																"rightExpression": {
																	"id": 874,
																	"name": "lastIndex",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 866,
																	"src": "3535:9:5",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"src": "3521:23:5",
																"typeDescriptions": {
																	"typeIdentifier": "t_bool",
																	"typeString": "bool"
																}
															},
															"id": 900,
															"nodeType": "IfStatement",
															"src": "3517:378:5",
															"trueBody": {
																"id": 899,
																"nodeType": "Block",
																"src": "3546:349:5",
																"statements": [
																	{
																		"assignments": [
																			877
																		],
																		"declarations": [
																			{
																				"constant": false,
																				"id": 877,
																				"mutability": "mutable",
																				"name": "lastValue",
																				"nameLocation": "3572:9:5",
																				"nodeType": "VariableDeclaration",
																				"scope": 899,
																				"src": "3564:17:5",
																				"stateVariable": false,
																				"storageLocation": "default",
																				"typeDescriptions": {
																					"typeIdentifier": "t_bytes32",
																					"typeString": "bytes32"
																				},
																				"typeName": {
																					"id": 876,
																					"name": "bytes32",
																					"nodeType": "ElementaryTypeName",
																					"src": "3564:7:5",
																					"typeDescriptions": {
																						"typeIdentifier": "t_bytes32",
																						"typeString": "bytes32"
																					}
																				},
																				"visibility": "internal"
																			}
																		],
																		"id": 882,
																		"initialValue": {
																			"baseExpression": {
																				"expression": {
																					"id": 878,
																					"name": "set",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 842,
																					"src": "3584:3:5",
																					"typeDescriptions": {
																						"typeIdentifier": "t_struct$_Set_$796_storage_ptr",
																						"typeString": "struct EnumerableSet.Set storage pointer"
																					}
																				},
																				"id": 879,
																				"isConstant": false,
																				"isLValue": true,
																				"isPure": false,
																				"lValueRequested": false,
																				"memberLocation": "3588:7:5",
																				"memberName": "_values",
																				"nodeType": "MemberAccess",
																				"referencedDeclaration": 791,
																				"src": "3584:11:5",
																				"typeDescriptions": {
																					"typeIdentifier": "t_array$_t_bytes32_$dyn_storage",
																					"typeString": "bytes32[] storage ref"
																				}
																			},
																			"id": 881,
																			"indexExpression": {
																				"id": 880,
																				"name": "lastIndex",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 866,
																				"src": "3596:9:5",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			},
																			"isConstant": false,
																			"isLValue": true,
																			"isPure": false,
																			"lValueRequested": false,
																			"nodeType": "IndexAccess",
																			"src": "3584:22:5",
																			"typeDescriptions": {
																				"typeIdentifier": "t_bytes32",
																				"typeString": "bytes32"
																			}
																		},
																		"nodeType": "VariableDeclarationStatement",
																		"src": "3564:42:5"
																	},
																	{
																		"expression": {
																			"id": 889,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"lValueRequested": false,
																			"leftHandSide": {
																				"baseExpression": {
																					"expression": {
																						"id": 883,
																						"name": "set",
																						"nodeType": "Identifier",
																						"overloadedDeclarations": [],
																						"referencedDeclaration": 842,
																						"src": "3705:3:5",
																						"typeDescriptions": {
																							"typeIdentifier": "t_struct$_Set_$796_storage_ptr",
																							"typeString": "struct EnumerableSet.Set storage pointer"
																						}
																					},
																					"id": 886,
																					"isConstant": false,
																					"isLValue": true,
																					"isPure": false,
																					"lValueRequested": false,
																					"memberLocation": "3709:7:5",
																					"memberName": "_values",
																					"nodeType": "MemberAccess",
																					"referencedDeclaration": 791,
																					"src": "3705:11:5",
																					"typeDescriptions": {
																						"typeIdentifier": "t_array$_t_bytes32_$dyn_storage",
																						"typeString": "bytes32[] storage ref"
																					}
																				},
																				"id": 887,
																				"indexExpression": {
																					"id": 885,
																					"name": "valueIndex",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 860,
																					"src": "3717:10:5",
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				},
																				"isConstant": false,
																				"isLValue": true,
																				"isPure": false,
																				"lValueRequested": true,
																				"nodeType": "IndexAccess",
																				"src": "3705:23:5",
																				"typeDescriptions": {
																					"typeIdentifier": "t_bytes32",
																					"typeString": "bytes32"
																				}
																			},
																			"nodeType": "Assignment",
																			"operator": "=",
																			"rightHandSide": {
																				"id": 888,
																				"name": "lastValue",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 877,
																				"src": "3731:9:5",
																				"typeDescriptions": {
																					"typeIdentifier": "t_bytes32",
																					"typeString": "bytes32"
																				}
																			},
																			"src": "3705:35:5",
																			"typeDescriptions": {
																				"typeIdentifier": "t_bytes32",
																				"typeString": "bytes32"
																			}
																		},
																		"id": 890,
																		"nodeType": "ExpressionStatement",
																		"src": "3705:35:5"
																	},
																	{
																		"expression": {
																			"id": 897,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"lValueRequested": false,
																			"leftHandSide": {
																				"baseExpression": {
																					"expression": {
																						"id": 891,
																						"name": "set",
																						"nodeType": "Identifier",
																						"overloadedDeclarations": [],
																						"referencedDeclaration": 842,
																						"src": "3844:3:5",
																						"typeDescriptions": {
																							"typeIdentifier": "t_struct$_Set_$796_storage_ptr",
																							"typeString": "struct EnumerableSet.Set storage pointer"
																						}
																					},
																					"id": 894,
																					"isConstant": false,
																					"isLValue": true,
																					"isPure": false,
																					"lValueRequested": false,
																					"memberLocation": "3848:10:5",
																					"memberName": "_positions",
																					"nodeType": "MemberAccess",
																					"referencedDeclaration": 795,
																					"src": "3844:14:5",
																					"typeDescriptions": {
																						"typeIdentifier": "t_mapping$_t_bytes32_$_t_uint256_$",
																						"typeString": "mapping(bytes32 => uint256)"
																					}
																				},
																				"id": 895,
																				"indexExpression": {
																					"id": 893,
																					"name": "lastValue",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 877,
																					"src": "3859:9:5",
																					"typeDescriptions": {
																						"typeIdentifier": "t_bytes32",
																						"typeString": "bytes32"
																					}
																				},
																				"isConstant": false,
																				"isLValue": true,
																				"isPure": false,
																				"lValueRequested": true,
																				"nodeType": "IndexAccess",
																				"src": "3844:25:5",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			},
																			"nodeType": "Assignment",
																			"operator": "=",
																			"rightHandSide": {
																				"id": 896,
																				"name": "position",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 850,
																				"src": "3872:8:5",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			},
																			"src": "3844:36:5",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"id": 898,
																		"nodeType": "ExpressionStatement",
																		"src": "3844:36:5"
																	}
																]
															}
														},
														{
															"expression": {
																"arguments": [],
																"expression": {
																	"argumentTypes": [],
																	"expression": {
																		"expression": {
																			"id": 901,
																			"name": "set",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 842,
																			"src": "3973:3:5",
																			"typeDescriptions": {
																				"typeIdentifier": "t_struct$_Set_$796_storage_ptr",
																				"typeString": "struct EnumerableSet.Set storage pointer"
																			}
																		},
																		"id": 904,
																		"isConstant": false,
																		"isLValue": true,
																		"isPure": false,
																		"lValueRequested": false,
																		"memberLocation": "3977:7:5",
																		"memberName": "_values",
																		"nodeType": "MemberAccess",
																		"referencedDeclaration": 791,
																		"src": "3973:11:5",
																		"typeDescriptions": {
																			"typeIdentifier": "t_array$_t_bytes32_$dyn_storage",
																			"typeString": "bytes32[] storage ref"
																		}
																	},
																	"id": 905,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"memberLocation": "3985:3:5",
																	"memberName": "pop",
																	"nodeType": "MemberAccess",
																	"src": "3973:15:5",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_arraypop_nonpayable$_t_array$_t_bytes32_$dyn_storage_ptr_$returns$__$attached_to$_t_array$_t_bytes32_$dyn_storage_ptr_$",
																		"typeString": "function (bytes32[] storage pointer)"
																	}
																},
																"id": 906,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "3973:17:5",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_tuple$__$",
																	"typeString": "tuple()"
																}
															},
															"id": 907,
															"nodeType": "ExpressionStatement",
															"src": "3973:17:5"
														},
														{
															"expression": {
																"id": 912,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"nodeType": "UnaryOperation",
																"operator": "delete",
																"prefix": true,
																"src": "4069:28:5",
																"subExpression": {
																	"baseExpression": {
																		"expression": {
																			"id": 908,
																			"name": "set",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 842,
																			"src": "4076:3:5",
																			"typeDescriptions": {
																				"typeIdentifier": "t_struct$_Set_$796_storage_ptr",
																				"typeString": "struct EnumerableSet.Set storage pointer"
																			}
																		},
																		"id": 909,
																		"isConstant": false,
																		"isLValue": true,
																		"isPure": false,
																		"lValueRequested": false,
																		"memberLocation": "4080:10:5",
																		"memberName": "_positions",
																		"nodeType": "MemberAccess",
																		"referencedDeclaration": 795,
																		"src": "4076:14:5",
																		"typeDescriptions": {
																			"typeIdentifier": "t_mapping$_t_bytes32_$_t_uint256_$",
																			"typeString": "mapping(bytes32 => uint256)"
																		}
																	},
																	"id": 911,
																	"indexExpression": {
																		"id": 910,
																		"name": "value",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 844,
																		"src": "4091:5:5",
																		"typeDescriptions": {
																			"typeIdentifier": "t_bytes32",
																			"typeString": "bytes32"
																		}
																	},
																	"isConstant": false,
																	"isLValue": true,
																	"isPure": false,
																	"lValueRequested": true,
																	"nodeType": "IndexAccess",
																	"src": "4076:21:5",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"typeDescriptions": {
																	"typeIdentifier": "t_tuple$__$",
																	"typeString": "tuple()"
																}
															},
															"id": 913,
															"nodeType": "ExpressionStatement",
															"src": "4069:28:5"
														},
														{
															"expression": {
																"hexValue": "74727565",
																"id": 914,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "bool",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "4119:4:5",
																"typeDescriptions": {
																	"typeIdentifier": "t_bool",
																	"typeString": "bool"
																},
																"value": "true"
															},
															"functionReturnParameters": 848,
															"id": 915,
															"nodeType": "Return",
															"src": "4112:11:5"
														}
													]
												}
											}
										]
									},
									"documentation": {
										"id": 839,
										"nodeType": "StructuredDocumentation",
										"src": "2653:157:5",
										"text": " @dev Removes a value from a set. O(1).\n Returns true if the value was removed from the set, that is if it was\n present."
									},
									"id": 922,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_remove",
									"nameLocation": "2824:7:5",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 845,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 842,
												"mutability": "mutable",
												"name": "set",
												"nameLocation": "2844:3:5",
												"nodeType": "VariableDeclaration",
												"scope": 922,
												"src": "2832:15:5",
												"stateVariable": false,
												"storageLocation": "storage",
												"typeDescriptions": {
													"typeIdentifier": "t_struct$_Set_$796_storage_ptr",
													"typeString": "struct EnumerableSet.Set"
												},
												"typeName": {
													"id": 841,
													"nodeType": "UserDefinedTypeName",
													"pathNode": {
														"id": 840,
														"name": "Set",
														"nameLocations": [
															"2832:3:5"
														],
														"nodeType": "IdentifierPath",
														"referencedDeclaration": 796,
														"src": "2832:3:5"
													},
													"referencedDeclaration": 796,
													"src": "2832:3:5",
													"typeDescriptions": {
														"typeIdentifier": "t_struct$_Set_$796_storage_ptr",
														"typeString": "struct EnumerableSet.Set"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 844,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "2857:5:5",
												"nodeType": "VariableDeclaration",
												"scope": 922,
												"src": "2849:13:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes32",
													"typeString": "bytes32"
												},
												"typeName": {
													"id": 843,
													"name": "bytes32",
													"nodeType": "ElementaryTypeName",
													"src": "2849:7:5",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes32",
														"typeString": "bytes32"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2831:32:5"
									},
									"returnParameters": {
										"id": 848,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 847,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 922,
												"src": "2881:4:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 846,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "2881:4:5",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2880:6:5"
									},
									"scope": 1398,
									"src": "2815:1368:5",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "private"
								},
								{
									"body": {
										"id": 940,
										"nodeType": "Block",
										"src": "4343:50:5",
										"statements": [
											{
												"expression": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 938,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"baseExpression": {
															"expression": {
																"id": 933,
																"name": "set",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 926,
																"src": "4360:3:5",
																"typeDescriptions": {
																	"typeIdentifier": "t_struct$_Set_$796_storage_ptr",
																	"typeString": "struct EnumerableSet.Set storage pointer"
																}
															},
															"id": 934,
															"isConstant": false,
															"isLValue": true,
															"isPure": false,
															"lValueRequested": false,
															"memberLocation": "4364:10:5",
															"memberName": "_positions",
															"nodeType": "MemberAccess",
															"referencedDeclaration": 795,
															"src": "4360:14:5",
															"typeDescriptions": {
																"typeIdentifier": "t_mapping$_t_bytes32_$_t_uint256_$",
																"typeString": "mapping(bytes32 => uint256)"
															}
														},
														"id": 936,
														"indexExpression": {
															"id": 935,
															"name": "value",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 928,
															"src": "4375:5:5",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes32",
																"typeString": "bytes32"
															}
														},
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": false,
														"nodeType": "IndexAccess",
														"src": "4360:21:5",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "!=",
													"rightExpression": {
														"hexValue": "30",
														"id": 937,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "number",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "4385:1:5",
														"typeDescriptions": {
															"typeIdentifier": "t_rational_0_by_1",
															"typeString": "int_const 0"
														},
														"value": "0"
													},
													"src": "4360:26:5",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"functionReturnParameters": 932,
												"id": 939,
												"nodeType": "Return",
												"src": "4353:33:5"
											}
										]
									},
									"documentation": {
										"id": 923,
										"nodeType": "StructuredDocumentation",
										"src": "4189:70:5",
										"text": " @dev Returns true if the value is in the set. O(1)."
									},
									"id": 941,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_contains",
									"nameLocation": "4273:9:5",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 929,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 926,
												"mutability": "mutable",
												"name": "set",
												"nameLocation": "4295:3:5",
												"nodeType": "VariableDeclaration",
												"scope": 941,
												"src": "4283:15:5",
												"stateVariable": false,
												"storageLocation": "storage",
												"typeDescriptions": {
													"typeIdentifier": "t_struct$_Set_$796_storage_ptr",
													"typeString": "struct EnumerableSet.Set"
												},
												"typeName": {
													"id": 925,
													"nodeType": "UserDefinedTypeName",
													"pathNode": {
														"id": 924,
														"name": "Set",
														"nameLocations": [
															"4283:3:5"
														],
														"nodeType": "IdentifierPath",
														"referencedDeclaration": 796,
														"src": "4283:3:5"
													},
													"referencedDeclaration": 796,
													"src": "4283:3:5",
													"typeDescriptions": {
														"typeIdentifier": "t_struct$_Set_$796_storage_ptr",
														"typeString": "struct EnumerableSet.Set"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 928,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "4308:5:5",
												"nodeType": "VariableDeclaration",
												"scope": 941,
												"src": "4300:13:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes32",
													"typeString": "bytes32"
												},
												"typeName": {
													"id": 927,
													"name": "bytes32",
													"nodeType": "ElementaryTypeName",
													"src": "4300:7:5",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes32",
														"typeString": "bytes32"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "4282:32:5"
									},
									"returnParameters": {
										"id": 932,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 931,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 941,
												"src": "4337:4:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 930,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "4337:4:5",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "4336:6:5"
									},
									"scope": 1398,
									"src": "4264:129:5",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "private"
								},
								{
									"body": {
										"id": 954,
										"nodeType": "Block",
										"src": "4539:42:5",
										"statements": [
											{
												"expression": {
													"expression": {
														"expression": {
															"id": 950,
															"name": "set",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 945,
															"src": "4556:3:5",
															"typeDescriptions": {
																"typeIdentifier": "t_struct$_Set_$796_storage_ptr",
																"typeString": "struct EnumerableSet.Set storage pointer"
															}
														},
														"id": 951,
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": false,
														"memberLocation": "4560:7:5",
														"memberName": "_values",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 791,
														"src": "4556:11:5",
														"typeDescriptions": {
															"typeIdentifier": "t_array$_t_bytes32_$dyn_storage",
															"typeString": "bytes32[] storage ref"
														}
													},
													"id": 952,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"memberLocation": "4568:6:5",
													"memberName": "length",
													"nodeType": "MemberAccess",
													"src": "4556:18:5",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"functionReturnParameters": 949,
												"id": 953,
												"nodeType": "Return",
												"src": "4549:25:5"
											}
										]
									},
									"documentation": {
										"id": 942,
										"nodeType": "StructuredDocumentation",
										"src": "4399:70:5",
										"text": " @dev Returns the number of values on the set. O(1)."
									},
									"id": 955,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_length",
									"nameLocation": "4483:7:5",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 946,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 945,
												"mutability": "mutable",
												"name": "set",
												"nameLocation": "4503:3:5",
												"nodeType": "VariableDeclaration",
												"scope": 955,
												"src": "4491:15:5",
												"stateVariable": false,
												"storageLocation": "storage",
												"typeDescriptions": {
													"typeIdentifier": "t_struct$_Set_$796_storage_ptr",
													"typeString": "struct EnumerableSet.Set"
												},
												"typeName": {
													"id": 944,
													"nodeType": "UserDefinedTypeName",
													"pathNode": {
														"id": 943,
														"name": "Set",
														"nameLocations": [
															"4491:3:5"
														],
														"nodeType": "IdentifierPath",
														"referencedDeclaration": 796,
														"src": "4491:3:5"
													},
													"referencedDeclaration": 796,
													"src": "4491:3:5",
													"typeDescriptions": {
														"typeIdentifier": "t_struct$_Set_$796_storage_ptr",
														"typeString": "struct EnumerableSet.Set"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "4490:17:5"
									},
									"returnParameters": {
										"id": 949,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 948,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 955,
												"src": "4530:7:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 947,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "4530:7:5",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "4529:9:5"
									},
									"scope": 1398,
									"src": "4474:107:5",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "private"
								},
								{
									"body": {
										"id": 971,
										"nodeType": "Block",
										"src": "4999:42:5",
										"statements": [
											{
												"expression": {
													"baseExpression": {
														"expression": {
															"id": 966,
															"name": "set",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 959,
															"src": "5016:3:5",
															"typeDescriptions": {
																"typeIdentifier": "t_struct$_Set_$796_storage_ptr",
																"typeString": "struct EnumerableSet.Set storage pointer"
															}
														},
														"id": 967,
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": false,
														"memberLocation": "5020:7:5",
														"memberName": "_values",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 791,
														"src": "5016:11:5",
														"typeDescriptions": {
															"typeIdentifier": "t_array$_t_bytes32_$dyn_storage",
															"typeString": "bytes32[] storage ref"
														}
													},
													"id": 969,
													"indexExpression": {
														"id": 968,
														"name": "index",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 961,
														"src": "5028:5:5",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"isConstant": false,
													"isLValue": true,
													"isPure": false,
													"lValueRequested": false,
													"nodeType": "IndexAccess",
													"src": "5016:18:5",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes32",
														"typeString": "bytes32"
													}
												},
												"functionReturnParameters": 965,
												"id": 970,
												"nodeType": "Return",
												"src": "5009:25:5"
											}
										]
									},
									"documentation": {
										"id": 956,
										"nodeType": "StructuredDocumentation",
										"src": "4587:331:5",
										"text": " @dev Returns the value stored at position `index` in the set. O(1).\n Note that there are no guarantees on the ordering of values inside the\n array, and it may change when more values are added or removed.\n Requirements:\n - `index` must be strictly less than {length}."
									},
									"id": 972,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_at",
									"nameLocation": "4932:3:5",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 962,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 959,
												"mutability": "mutable",
												"name": "set",
												"nameLocation": "4948:3:5",
												"nodeType": "VariableDeclaration",
												"scope": 972,
												"src": "4936:15:5",
												"stateVariable": false,
												"storageLocation": "storage",
												"typeDescriptions": {
													"typeIdentifier": "t_struct$_Set_$796_storage_ptr",
													"typeString": "struct EnumerableSet.Set"
												},
												"typeName": {
													"id": 958,
													"nodeType": "UserDefinedTypeName",
													"pathNode": {
														"id": 957,
														"name": "Set",
														"nameLocations": [
															"4936:3:5"
														],
														"nodeType": "IdentifierPath",
														"referencedDeclaration": 796,
														"src": "4936:3:5"
													},
													"referencedDeclaration": 796,
													"src": "4936:3:5",
													"typeDescriptions": {
														"typeIdentifier": "t_struct$_Set_$796_storage_ptr",
														"typeString": "struct EnumerableSet.Set"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 961,
												"mutability": "mutable",
												"name": "index",
												"nameLocation": "4961:5:5",
												"nodeType": "VariableDeclaration",
												"scope": 972,
												"src": "4953:13:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 960,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "4953:7:5",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "4935:32:5"
									},
									"returnParameters": {
										"id": 965,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 964,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 972,
												"src": "4990:7:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes32",
													"typeString": "bytes32"
												},
												"typeName": {
													"id": 963,
													"name": "bytes32",
													"nodeType": "ElementaryTypeName",
													"src": "4990:7:5",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes32",
														"typeString": "bytes32"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "4989:9:5"
									},
									"scope": 1398,
									"src": "4923:118:5",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "private"
								},
								{
									"body": {
										"id": 985,
										"nodeType": "Block",
										"src": "5655:35:5",
										"statements": [
											{
												"expression": {
													"expression": {
														"id": 982,
														"name": "set",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 976,
														"src": "5672:3:5",
														"typeDescriptions": {
															"typeIdentifier": "t_struct$_Set_$796_storage_ptr",
															"typeString": "struct EnumerableSet.Set storage pointer"
														}
													},
													"id": 983,
													"isConstant": false,
													"isLValue": true,
													"isPure": false,
													"lValueRequested": false,
													"memberLocation": "5676:7:5",
													"memberName": "_values",
													"nodeType": "MemberAccess",
													"referencedDeclaration": 791,
													"src": "5672:11:5",
													"typeDescriptions": {
														"typeIdentifier": "t_array$_t_bytes32_$dyn_storage",
														"typeString": "bytes32[] storage ref"
													}
												},
												"functionReturnParameters": 981,
												"id": 984,
												"nodeType": "Return",
												"src": "5665:18:5"
											}
										]
									},
									"documentation": {
										"id": 973,
										"nodeType": "StructuredDocumentation",
										"src": "5047:529:5",
										"text": " @dev Return the entire set in an array\n WARNING: This operation will copy the entire storage to memory, which can be quite expensive. This is designed\n to mostly be used by view accessors that are queried without any gas fees. Developers should keep in mind that\n this function has an unbounded cost, and using it as part of a state-changing function may render the function\n uncallable if the set grows to a point where copying to memory consumes too much gas to fit in a block."
									},
									"id": 986,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_values",
									"nameLocation": "5590:7:5",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 977,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 976,
												"mutability": "mutable",
												"name": "set",
												"nameLocation": "5610:3:5",
												"nodeType": "VariableDeclaration",
												"scope": 986,
												"src": "5598:15:5",
												"stateVariable": false,
												"storageLocation": "storage",
												"typeDescriptions": {
													"typeIdentifier": "t_struct$_Set_$796_storage_ptr",
													"typeString": "struct EnumerableSet.Set"
												},
												"typeName": {
													"id": 975,
													"nodeType": "UserDefinedTypeName",
													"pathNode": {
														"id": 974,
														"name": "Set",
														"nameLocations": [
															"5598:3:5"
														],
														"nodeType": "IdentifierPath",
														"referencedDeclaration": 796,
														"src": "5598:3:5"
													},
													"referencedDeclaration": 796,
													"src": "5598:3:5",
													"typeDescriptions": {
														"typeIdentifier": "t_struct$_Set_$796_storage_ptr",
														"typeString": "struct EnumerableSet.Set"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "5597:17:5"
									},
									"returnParameters": {
										"id": 981,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 980,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 986,
												"src": "5637:16:5",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_array$_t_bytes32_$dyn_memory_ptr",
													"typeString": "bytes32[]"
												},
												"typeName": {
													"baseType": {
														"id": 978,
														"name": "bytes32",
														"nodeType": "ElementaryTypeName",
														"src": "5637:7:5",
														"typeDescriptions": {
															"typeIdentifier": "t_bytes32",
															"typeString": "bytes32"
														}
													},
													"id": 979,
													"nodeType": "ArrayTypeName",
													"src": "5637:9:5",
													"typeDescriptions": {
														"typeIdentifier": "t_array$_t_bytes32_$dyn_storage_ptr",
														"typeString": "bytes32[]"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "5636:18:5"
									},
									"scope": 1398,
									"src": "5581:109:5",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "private"
								},
								{
									"canonicalName": "EnumerableSet.Bytes32Set",
									"id": 990,
									"members": [
										{
											"constant": false,
											"id": 989,
											"mutability": "mutable",
											"name": "_inner",
											"nameLocation": "5747:6:5",
											"nodeType": "VariableDeclaration",
											"scope": 990,
											"src": "5743:10:5",
											"stateVariable": false,
											"storageLocation": "default",
											"typeDescriptions": {
												"typeIdentifier": "t_struct$_Set_$796_storage_ptr",
												"typeString": "struct EnumerableSet.Set"
											},
											"typeName": {
												"id": 988,
												"nodeType": "UserDefinedTypeName",
												"pathNode": {
													"id": 987,
													"name": "Set",
													"nameLocations": [
														"5743:3:5"
													],
													"nodeType": "IdentifierPath",
													"referencedDeclaration": 796,
													"src": "5743:3:5"
												},
												"referencedDeclaration": 796,
												"src": "5743:3:5",
												"typeDescriptions": {
													"typeIdentifier": "t_struct$_Set_$796_storage_ptr",
													"typeString": "struct EnumerableSet.Set"
												}
											},
											"visibility": "internal"
										}
									],
									"name": "Bytes32Set",
									"nameLocation": "5722:10:5",
									"nodeType": "StructDefinition",
									"scope": 1398,
									"src": "5715:45:5",
									"visibility": "public"
								},
								{
									"body": {
										"id": 1007,
										"nodeType": "Block",
										"src": "6006:47:5",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"expression": {
																"id": 1002,
																"name": "set",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 994,
																"src": "6028:3:5",
																"typeDescriptions": {
																	"typeIdentifier": "t_struct$_Bytes32Set_$990_storage_ptr",
																	"typeString": "struct EnumerableSet.Bytes32Set storage pointer"
																}
															},
															"id": 1003,
															"isConstant": false,
															"isLValue": true,
															"isPure": false,
															"lValueRequested": false,
															"memberLocation": "6032:6:5",
															"memberName": "_inner",
															"nodeType": "MemberAccess",
															"referencedDeclaration": 989,
															"src": "6028:10:5",
															"typeDescriptions": {
																"typeIdentifier": "t_struct$_Set_$796_storage",
																"typeString": "struct EnumerableSet.Set storage ref"
															}
														},
														{
															"id": 1004,
															"name": "value",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 996,
															"src": "6040:5:5",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes32",
																"typeString": "bytes32"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_struct$_Set_$796_storage",
																"typeString": "struct EnumerableSet.Set storage ref"
															},
															{
																"typeIdentifier": "t_bytes32",
																"typeString": "bytes32"
															}
														],
														"id": 1001,
														"name": "_add",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 838,
														"src": "6023:4:5",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_struct$_Set_$796_storage_ptr_$_t_bytes32_$returns$_t_bool_$",
															"typeString": "function (struct EnumerableSet.Set storage pointer,bytes32) returns (bool)"
														}
													},
													"id": 1005,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "6023:23:5",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"functionReturnParameters": 1000,
												"id": 1006,
												"nodeType": "Return",
												"src": "6016:30:5"
											}
										]
									},
									"documentation": {
										"id": 991,
										"nodeType": "StructuredDocumentation",
										"src": "5766:159:5",
										"text": " @dev Add a value to a set. O(1).\n Returns true if the value was added to the set, that is if it was not\n already present."
									},
									"id": 1008,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "add",
									"nameLocation": "5939:3:5",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 997,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 994,
												"mutability": "mutable",
												"name": "set",
												"nameLocation": "5962:3:5",
												"nodeType": "VariableDeclaration",
												"scope": 1008,
												"src": "5943:22:5",
												"stateVariable": false,
												"storageLocation": "storage",
												"typeDescriptions": {
													"typeIdentifier": "t_struct$_Bytes32Set_$990_storage_ptr",
													"typeString": "struct EnumerableSet.Bytes32Set"
												},
												"typeName": {
													"id": 993,
													"nodeType": "UserDefinedTypeName",
													"pathNode": {
														"id": 992,
														"name": "Bytes32Set",
														"nameLocations": [
															"5943:10:5"
														],
														"nodeType": "IdentifierPath",
														"referencedDeclaration": 990,
														"src": "5943:10:5"
													},
													"referencedDeclaration": 990,
													"src": "5943:10:5",
													"typeDescriptions": {
														"typeIdentifier": "t_struct$_Bytes32Set_$990_storage_ptr",
														"typeString": "struct EnumerableSet.Bytes32Set"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 996,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "5975:5:5",
												"nodeType": "VariableDeclaration",
												"scope": 1008,
												"src": "5967:13:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes32",
													"typeString": "bytes32"
												},
												"typeName": {
													"id": 995,
													"name": "bytes32",
													"nodeType": "ElementaryTypeName",
													"src": "5967:7:5",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes32",
														"typeString": "bytes32"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "5942:39:5"
									},
									"returnParameters": {
										"id": 1000,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 999,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1008,
												"src": "6000:4:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 998,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "6000:4:5",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "5999:6:5"
									},
									"scope": 1398,
									"src": "5930:123:5",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 1025,
										"nodeType": "Block",
										"src": "6300:50:5",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"expression": {
																"id": 1020,
																"name": "set",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1012,
																"src": "6325:3:5",
																"typeDescriptions": {
																	"typeIdentifier": "t_struct$_Bytes32Set_$990_storage_ptr",
																	"typeString": "struct EnumerableSet.Bytes32Set storage pointer"
																}
															},
															"id": 1021,
															"isConstant": false,
															"isLValue": true,
															"isPure": false,
															"lValueRequested": false,
															"memberLocation": "6329:6:5",
															"memberName": "_inner",
															"nodeType": "MemberAccess",
															"referencedDeclaration": 989,
															"src": "6325:10:5",
															"typeDescriptions": {
																"typeIdentifier": "t_struct$_Set_$796_storage",
																"typeString": "struct EnumerableSet.Set storage ref"
															}
														},
														{
															"id": 1022,
															"name": "value",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1014,
															"src": "6337:5:5",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes32",
																"typeString": "bytes32"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_struct$_Set_$796_storage",
																"typeString": "struct EnumerableSet.Set storage ref"
															},
															{
																"typeIdentifier": "t_bytes32",
																"typeString": "bytes32"
															}
														],
														"id": 1019,
														"name": "_remove",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 922,
														"src": "6317:7:5",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_struct$_Set_$796_storage_ptr_$_t_bytes32_$returns$_t_bool_$",
															"typeString": "function (struct EnumerableSet.Set storage pointer,bytes32) returns (bool)"
														}
													},
													"id": 1023,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "6317:26:5",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"functionReturnParameters": 1018,
												"id": 1024,
												"nodeType": "Return",
												"src": "6310:33:5"
											}
										]
									},
									"documentation": {
										"id": 1009,
										"nodeType": "StructuredDocumentation",
										"src": "6059:157:5",
										"text": " @dev Removes a value from a set. O(1).\n Returns true if the value was removed from the set, that is if it was\n present."
									},
									"id": 1026,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "remove",
									"nameLocation": "6230:6:5",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1015,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1012,
												"mutability": "mutable",
												"name": "set",
												"nameLocation": "6256:3:5",
												"nodeType": "VariableDeclaration",
												"scope": 1026,
												"src": "6237:22:5",
												"stateVariable": false,
												"storageLocation": "storage",
												"typeDescriptions": {
													"typeIdentifier": "t_struct$_Bytes32Set_$990_storage_ptr",
													"typeString": "struct EnumerableSet.Bytes32Set"
												},
												"typeName": {
													"id": 1011,
													"nodeType": "UserDefinedTypeName",
													"pathNode": {
														"id": 1010,
														"name": "Bytes32Set",
														"nameLocations": [
															"6237:10:5"
														],
														"nodeType": "IdentifierPath",
														"referencedDeclaration": 990,
														"src": "6237:10:5"
													},
													"referencedDeclaration": 990,
													"src": "6237:10:5",
													"typeDescriptions": {
														"typeIdentifier": "t_struct$_Bytes32Set_$990_storage_ptr",
														"typeString": "struct EnumerableSet.Bytes32Set"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1014,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "6269:5:5",
												"nodeType": "VariableDeclaration",
												"scope": 1026,
												"src": "6261:13:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes32",
													"typeString": "bytes32"
												},
												"typeName": {
													"id": 1013,
													"name": "bytes32",
													"nodeType": "ElementaryTypeName",
													"src": "6261:7:5",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes32",
														"typeString": "bytes32"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "6236:39:5"
									},
									"returnParameters": {
										"id": 1018,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1017,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1026,
												"src": "6294:4:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 1016,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "6294:4:5",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "6293:6:5"
									},
									"scope": 1398,
									"src": "6221:129:5",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 1043,
										"nodeType": "Block",
										"src": "6517:52:5",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"expression": {
																"id": 1038,
																"name": "set",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1030,
																"src": "6544:3:5",
																"typeDescriptions": {
																	"typeIdentifier": "t_struct$_Bytes32Set_$990_storage_ptr",
																	"typeString": "struct EnumerableSet.Bytes32Set storage pointer"
																}
															},
															"id": 1039,
															"isConstant": false,
															"isLValue": true,
															"isPure": false,
															"lValueRequested": false,
															"memberLocation": "6548:6:5",
															"memberName": "_inner",
															"nodeType": "MemberAccess",
															"referencedDeclaration": 989,
															"src": "6544:10:5",
															"typeDescriptions": {
																"typeIdentifier": "t_struct$_Set_$796_storage",
																"typeString": "struct EnumerableSet.Set storage ref"
															}
														},
														{
															"id": 1040,
															"name": "value",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1032,
															"src": "6556:5:5",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes32",
																"typeString": "bytes32"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_struct$_Set_$796_storage",
																"typeString": "struct EnumerableSet.Set storage ref"
															},
															{
																"typeIdentifier": "t_bytes32",
																"typeString": "bytes32"
															}
														],
														"id": 1037,
														"name": "_contains",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 941,
														"src": "6534:9:5",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_view$_t_struct$_Set_$796_storage_ptr_$_t_bytes32_$returns$_t_bool_$",
															"typeString": "function (struct EnumerableSet.Set storage pointer,bytes32) view returns (bool)"
														}
													},
													"id": 1041,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "6534:28:5",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"functionReturnParameters": 1036,
												"id": 1042,
												"nodeType": "Return",
												"src": "6527:35:5"
											}
										]
									},
									"documentation": {
										"id": 1027,
										"nodeType": "StructuredDocumentation",
										"src": "6356:70:5",
										"text": " @dev Returns true if the value is in the set. O(1)."
									},
									"id": 1044,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "contains",
									"nameLocation": "6440:8:5",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1033,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1030,
												"mutability": "mutable",
												"name": "set",
												"nameLocation": "6468:3:5",
												"nodeType": "VariableDeclaration",
												"scope": 1044,
												"src": "6449:22:5",
												"stateVariable": false,
												"storageLocation": "storage",
												"typeDescriptions": {
													"typeIdentifier": "t_struct$_Bytes32Set_$990_storage_ptr",
													"typeString": "struct EnumerableSet.Bytes32Set"
												},
												"typeName": {
													"id": 1029,
													"nodeType": "UserDefinedTypeName",
													"pathNode": {
														"id": 1028,
														"name": "Bytes32Set",
														"nameLocations": [
															"6449:10:5"
														],
														"nodeType": "IdentifierPath",
														"referencedDeclaration": 990,
														"src": "6449:10:5"
													},
													"referencedDeclaration": 990,
													"src": "6449:10:5",
													"typeDescriptions": {
														"typeIdentifier": "t_struct$_Bytes32Set_$990_storage_ptr",
														"typeString": "struct EnumerableSet.Bytes32Set"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1032,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "6481:5:5",
												"nodeType": "VariableDeclaration",
												"scope": 1044,
												"src": "6473:13:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes32",
													"typeString": "bytes32"
												},
												"typeName": {
													"id": 1031,
													"name": "bytes32",
													"nodeType": "ElementaryTypeName",
													"src": "6473:7:5",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes32",
														"typeString": "bytes32"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "6448:39:5"
									},
									"returnParameters": {
										"id": 1036,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1035,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1044,
												"src": "6511:4:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 1034,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "6511:4:5",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "6510:6:5"
									},
									"scope": 1398,
									"src": "6431:138:5",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 1058,
										"nodeType": "Block",
										"src": "6722:43:5",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"expression": {
																"id": 1054,
																"name": "set",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1048,
																"src": "6747:3:5",
																"typeDescriptions": {
																	"typeIdentifier": "t_struct$_Bytes32Set_$990_storage_ptr",
																	"typeString": "struct EnumerableSet.Bytes32Set storage pointer"
																}
															},
															"id": 1055,
															"isConstant": false,
															"isLValue": true,
															"isPure": false,
															"lValueRequested": false,
															"memberLocation": "6751:6:5",
															"memberName": "_inner",
															"nodeType": "MemberAccess",
															"referencedDeclaration": 989,
															"src": "6747:10:5",
															"typeDescriptions": {
																"typeIdentifier": "t_struct$_Set_$796_storage",
																"typeString": "struct EnumerableSet.Set storage ref"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_struct$_Set_$796_storage",
																"typeString": "struct EnumerableSet.Set storage ref"
															}
														],
														"id": 1053,
														"name": "_length",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 955,
														"src": "6739:7:5",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_view$_t_struct$_Set_$796_storage_ptr_$returns$_t_uint256_$",
															"typeString": "function (struct EnumerableSet.Set storage pointer) view returns (uint256)"
														}
													},
													"id": 1056,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "6739:19:5",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"functionReturnParameters": 1052,
												"id": 1057,
												"nodeType": "Return",
												"src": "6732:26:5"
											}
										]
									},
									"documentation": {
										"id": 1045,
										"nodeType": "StructuredDocumentation",
										"src": "6575:70:5",
										"text": " @dev Returns the number of values in the set. O(1)."
									},
									"id": 1059,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "length",
									"nameLocation": "6659:6:5",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1049,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1048,
												"mutability": "mutable",
												"name": "set",
												"nameLocation": "6685:3:5",
												"nodeType": "VariableDeclaration",
												"scope": 1059,
												"src": "6666:22:5",
												"stateVariable": false,
												"storageLocation": "storage",
												"typeDescriptions": {
													"typeIdentifier": "t_struct$_Bytes32Set_$990_storage_ptr",
													"typeString": "struct EnumerableSet.Bytes32Set"
												},
												"typeName": {
													"id": 1047,
													"nodeType": "UserDefinedTypeName",
													"pathNode": {
														"id": 1046,
														"name": "Bytes32Set",
														"nameLocations": [
															"6666:10:5"
														],
														"nodeType": "IdentifierPath",
														"referencedDeclaration": 990,
														"src": "6666:10:5"
													},
													"referencedDeclaration": 990,
													"src": "6666:10:5",
													"typeDescriptions": {
														"typeIdentifier": "t_struct$_Bytes32Set_$990_storage_ptr",
														"typeString": "struct EnumerableSet.Bytes32Set"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "6665:24:5"
									},
									"returnParameters": {
										"id": 1052,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1051,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1059,
												"src": "6713:7:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1050,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "6713:7:5",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "6712:9:5"
									},
									"scope": 1398,
									"src": "6650:115:5",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 1076,
										"nodeType": "Block",
										"src": "7190:46:5",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"expression": {
																"id": 1071,
																"name": "set",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1063,
																"src": "7211:3:5",
																"typeDescriptions": {
																	"typeIdentifier": "t_struct$_Bytes32Set_$990_storage_ptr",
																	"typeString": "struct EnumerableSet.Bytes32Set storage pointer"
																}
															},
															"id": 1072,
															"isConstant": false,
															"isLValue": true,
															"isPure": false,
															"lValueRequested": false,
															"memberLocation": "7215:6:5",
															"memberName": "_inner",
															"nodeType": "MemberAccess",
															"referencedDeclaration": 989,
															"src": "7211:10:5",
															"typeDescriptions": {
																"typeIdentifier": "t_struct$_Set_$796_storage",
																"typeString": "struct EnumerableSet.Set storage ref"
															}
														},
														{
															"id": 1073,
															"name": "index",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1065,
															"src": "7223:5:5",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_struct$_Set_$796_storage",
																"typeString": "struct EnumerableSet.Set storage ref"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 1070,
														"name": "_at",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 972,
														"src": "7207:3:5",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_view$_t_struct$_Set_$796_storage_ptr_$_t_uint256_$returns$_t_bytes32_$",
															"typeString": "function (struct EnumerableSet.Set storage pointer,uint256) view returns (bytes32)"
														}
													},
													"id": 1074,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "7207:22:5",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_bytes32",
														"typeString": "bytes32"
													}
												},
												"functionReturnParameters": 1069,
												"id": 1075,
												"nodeType": "Return",
												"src": "7200:29:5"
											}
										]
									},
									"documentation": {
										"id": 1060,
										"nodeType": "StructuredDocumentation",
										"src": "6771:331:5",
										"text": " @dev Returns the value stored at position `index` in the set. O(1).\n Note that there are no guarantees on the ordering of values inside the\n array, and it may change when more values are added or removed.\n Requirements:\n - `index` must be strictly less than {length}."
									},
									"id": 1077,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "at",
									"nameLocation": "7116:2:5",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1066,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1063,
												"mutability": "mutable",
												"name": "set",
												"nameLocation": "7138:3:5",
												"nodeType": "VariableDeclaration",
												"scope": 1077,
												"src": "7119:22:5",
												"stateVariable": false,
												"storageLocation": "storage",
												"typeDescriptions": {
													"typeIdentifier": "t_struct$_Bytes32Set_$990_storage_ptr",
													"typeString": "struct EnumerableSet.Bytes32Set"
												},
												"typeName": {
													"id": 1062,
													"nodeType": "UserDefinedTypeName",
													"pathNode": {
														"id": 1061,
														"name": "Bytes32Set",
														"nameLocations": [
															"7119:10:5"
														],
														"nodeType": "IdentifierPath",
														"referencedDeclaration": 990,
														"src": "7119:10:5"
													},
													"referencedDeclaration": 990,
													"src": "7119:10:5",
													"typeDescriptions": {
														"typeIdentifier": "t_struct$_Bytes32Set_$990_storage_ptr",
														"typeString": "struct EnumerableSet.Bytes32Set"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1065,
												"mutability": "mutable",
												"name": "index",
												"nameLocation": "7151:5:5",
												"nodeType": "VariableDeclaration",
												"scope": 1077,
												"src": "7143:13:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1064,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "7143:7:5",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "7118:39:5"
									},
									"returnParameters": {
										"id": 1069,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1068,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1077,
												"src": "7181:7:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes32",
													"typeString": "bytes32"
												},
												"typeName": {
													"id": 1067,
													"name": "bytes32",
													"nodeType": "ElementaryTypeName",
													"src": "7181:7:5",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes32",
														"typeString": "bytes32"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "7180:9:5"
									},
									"scope": 1398,
									"src": "7107:129:5",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 1106,
										"nodeType": "Block",
										"src": "7857:192:5",
										"statements": [
											{
												"assignments": [
													1091
												],
												"declarations": [
													{
														"constant": false,
														"id": 1091,
														"mutability": "mutable",
														"name": "store",
														"nameLocation": "7884:5:5",
														"nodeType": "VariableDeclaration",
														"scope": 1106,
														"src": "7867:22:5",
														"stateVariable": false,
														"storageLocation": "memory",
														"typeDescriptions": {
															"typeIdentifier": "t_array$_t_bytes32_$dyn_memory_ptr",
															"typeString": "bytes32[]"
														},
														"typeName": {
															"baseType": {
																"id": 1089,
																"name": "bytes32",
																"nodeType": "ElementaryTypeName",
																"src": "7867:7:5",
																"typeDescriptions": {
																	"typeIdentifier": "t_bytes32",
																	"typeString": "bytes32"
																}
															},
															"id": 1090,
															"nodeType": "ArrayTypeName",
															"src": "7867:9:5",
															"typeDescriptions": {
																"typeIdentifier": "t_array$_t_bytes32_$dyn_storage_ptr",
																"typeString": "bytes32[]"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 1096,
												"initialValue": {
													"arguments": [
														{
															"expression": {
																"id": 1093,
																"name": "set",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1081,
																"src": "7900:3:5",
																"typeDescriptions": {
																	"typeIdentifier": "t_struct$_Bytes32Set_$990_storage_ptr",
																	"typeString": "struct EnumerableSet.Bytes32Set storage pointer"
																}
															},
															"id": 1094,
															"isConstant": false,
															"isLValue": true,
															"isPure": false,
															"lValueRequested": false,
															"memberLocation": "7904:6:5",
															"memberName": "_inner",
															"nodeType": "MemberAccess",
															"referencedDeclaration": 989,
															"src": "7900:10:5",
															"typeDescriptions": {
																"typeIdentifier": "t_struct$_Set_$796_storage",
																"typeString": "struct EnumerableSet.Set storage ref"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_struct$_Set_$796_storage",
																"typeString": "struct EnumerableSet.Set storage ref"
															}
														],
														"id": 1092,
														"name": "_values",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 986,
														"src": "7892:7:5",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_view$_t_struct$_Set_$796_storage_ptr_$returns$_t_array$_t_bytes32_$dyn_memory_ptr_$",
															"typeString": "function (struct EnumerableSet.Set storage pointer) view returns (bytes32[] memory)"
														}
													},
													"id": 1095,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "7892:19:5",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_array$_t_bytes32_$dyn_memory_ptr",
														"typeString": "bytes32[] memory"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "7867:44:5"
											},
											{
												"assignments": [
													1101
												],
												"declarations": [
													{
														"constant": false,
														"id": 1101,
														"mutability": "mutable",
														"name": "result",
														"nameLocation": "7938:6:5",
														"nodeType": "VariableDeclaration",
														"scope": 1106,
														"src": "7921:23:5",
														"stateVariable": false,
														"storageLocation": "memory",
														"typeDescriptions": {
															"typeIdentifier": "t_array$_t_bytes32_$dyn_memory_ptr",
															"typeString": "bytes32[]"
														},
														"typeName": {
															"baseType": {
																"id": 1099,
																"name": "bytes32",
																"nodeType": "ElementaryTypeName",
																"src": "7921:7:5",
																"typeDescriptions": {
																	"typeIdentifier": "t_bytes32",
																	"typeString": "bytes32"
																}
															},
															"id": 1100,
															"nodeType": "ArrayTypeName",
															"src": "7921:9:5",
															"typeDescriptions": {
																"typeIdentifier": "t_array$_t_bytes32_$dyn_storage_ptr",
																"typeString": "bytes32[]"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 1102,
												"nodeType": "VariableDeclarationStatement",
												"src": "7921:23:5"
											},
											{
												"AST": {
													"nativeSrc": "7980:39:5",
													"nodeType": "YulBlock",
													"src": "7980:39:5",
													"statements": [
														{
															"nativeSrc": "7994:15:5",
															"nodeType": "YulAssignment",
															"src": "7994:15:5",
															"value": {
																"name": "store",
																"nativeSrc": "8004:5:5",
																"nodeType": "YulIdentifier",
																"src": "8004:5:5"
															},
															"variableNames": [
																{
																	"name": "result",
																	"nativeSrc": "7994:6:5",
																	"nodeType": "YulIdentifier",
																	"src": "7994:6:5"
																}
															]
														}
													]
												},
												"evmVersion": "cancun",
												"externalReferences": [
													{
														"declaration": 1101,
														"isOffset": false,
														"isSlot": false,
														"src": "7994:6:5",
														"valueSize": 1
													},
													{
														"declaration": 1091,
														"isOffset": false,
														"isSlot": false,
														"src": "8004:5:5",
														"valueSize": 1
													}
												],
												"flags": [
													"memory-safe"
												],
												"id": 1103,
												"nodeType": "InlineAssembly",
												"src": "7955:64:5"
											},
											{
												"expression": {
													"id": 1104,
													"name": "result",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 1101,
													"src": "8036:6:5",
													"typeDescriptions": {
														"typeIdentifier": "t_array$_t_bytes32_$dyn_memory_ptr",
														"typeString": "bytes32[] memory"
													}
												},
												"functionReturnParameters": 1086,
												"id": 1105,
												"nodeType": "Return",
												"src": "8029:13:5"
											}
										]
									},
									"documentation": {
										"id": 1078,
										"nodeType": "StructuredDocumentation",
										"src": "7242:529:5",
										"text": " @dev Return the entire set in an array\n WARNING: This operation will copy the entire storage to memory, which can be quite expensive. This is designed\n to mostly be used by view accessors that are queried without any gas fees. Developers should keep in mind that\n this function has an unbounded cost, and using it as part of a state-changing function may render the function\n uncallable if the set grows to a point where copying to memory consumes too much gas to fit in a block."
									},
									"id": 1107,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "values",
									"nameLocation": "7785:6:5",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1082,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1081,
												"mutability": "mutable",
												"name": "set",
												"nameLocation": "7811:3:5",
												"nodeType": "VariableDeclaration",
												"scope": 1107,
												"src": "7792:22:5",
												"stateVariable": false,
												"storageLocation": "storage",
												"typeDescriptions": {
													"typeIdentifier": "t_struct$_Bytes32Set_$990_storage_ptr",
													"typeString": "struct EnumerableSet.Bytes32Set"
												},
												"typeName": {
													"id": 1080,
													"nodeType": "UserDefinedTypeName",
													"pathNode": {
														"id": 1079,
														"name": "Bytes32Set",
														"nameLocations": [
															"7792:10:5"
														],
														"nodeType": "IdentifierPath",
														"referencedDeclaration": 990,
														"src": "7792:10:5"
													},
													"referencedDeclaration": 990,
													"src": "7792:10:5",
													"typeDescriptions": {
														"typeIdentifier": "t_struct$_Bytes32Set_$990_storage_ptr",
														"typeString": "struct EnumerableSet.Bytes32Set"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "7791:24:5"
									},
									"returnParameters": {
										"id": 1086,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1085,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1107,
												"src": "7839:16:5",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_array$_t_bytes32_$dyn_memory_ptr",
													"typeString": "bytes32[]"
												},
												"typeName": {
													"baseType": {
														"id": 1083,
														"name": "bytes32",
														"nodeType": "ElementaryTypeName",
														"src": "7839:7:5",
														"typeDescriptions": {
															"typeIdentifier": "t_bytes32",
															"typeString": "bytes32"
														}
													},
													"id": 1084,
													"nodeType": "ArrayTypeName",
													"src": "7839:9:5",
													"typeDescriptions": {
														"typeIdentifier": "t_array$_t_bytes32_$dyn_storage_ptr",
														"typeString": "bytes32[]"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "7838:18:5"
									},
									"scope": 1398,
									"src": "7776:273:5",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"canonicalName": "EnumerableSet.AddressSet",
									"id": 1111,
									"members": [
										{
											"constant": false,
											"id": 1110,
											"mutability": "mutable",
											"name": "_inner",
											"nameLocation": "8106:6:5",
											"nodeType": "VariableDeclaration",
											"scope": 1111,
											"src": "8102:10:5",
											"stateVariable": false,
											"storageLocation": "default",
											"typeDescriptions": {
												"typeIdentifier": "t_struct$_Set_$796_storage_ptr",
												"typeString": "struct EnumerableSet.Set"
											},
											"typeName": {
												"id": 1109,
												"nodeType": "UserDefinedTypeName",
												"pathNode": {
													"id": 1108,
													"name": "Set",
													"nameLocations": [
														"8102:3:5"
													],
													"nodeType": "IdentifierPath",
													"referencedDeclaration": 796,
													"src": "8102:3:5"
												},
												"referencedDeclaration": 796,
												"src": "8102:3:5",
												"typeDescriptions": {
													"typeIdentifier": "t_struct$_Set_$796_storage_ptr",
													"typeString": "struct EnumerableSet.Set"
												}
											},
											"visibility": "internal"
										}
									],
									"name": "AddressSet",
									"nameLocation": "8081:10:5",
									"nodeType": "StructDefinition",
									"scope": 1398,
									"src": "8074:45:5",
									"visibility": "public"
								},
								{
									"body": {
										"id": 1137,
										"nodeType": "Block",
										"src": "8365:74:5",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"expression": {
																"id": 1123,
																"name": "set",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1115,
																"src": "8387:3:5",
																"typeDescriptions": {
																	"typeIdentifier": "t_struct$_AddressSet_$1111_storage_ptr",
																	"typeString": "struct EnumerableSet.AddressSet storage pointer"
																}
															},
															"id": 1124,
															"isConstant": false,
															"isLValue": true,
															"isPure": false,
															"lValueRequested": false,
															"memberLocation": "8391:6:5",
															"memberName": "_inner",
															"nodeType": "MemberAccess",
															"referencedDeclaration": 1110,
															"src": "8387:10:5",
															"typeDescriptions": {
																"typeIdentifier": "t_struct$_Set_$796_storage",
																"typeString": "struct EnumerableSet.Set storage ref"
															}
														},
														{
															"arguments": [
																{
																	"arguments": [
																		{
																			"arguments": [
																				{
																					"id": 1131,
																					"name": "value",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 1117,
																					"src": "8423:5:5",
																					"typeDescriptions": {
																						"typeIdentifier": "t_address",
																						"typeString": "address"
																					}
																				}
																			],
																			"expression": {
																				"argumentTypes": [
																					{
																						"typeIdentifier": "t_address",
																						"typeString": "address"
																					}
																				],
																				"id": 1130,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": true,
																				"lValueRequested": false,
																				"nodeType": "ElementaryTypeNameExpression",
																				"src": "8415:7:5",
																				"typeDescriptions": {
																					"typeIdentifier": "t_type$_t_uint160_$",
																					"typeString": "type(uint160)"
																				},
																				"typeName": {
																					"id": 1129,
																					"name": "uint160",
																					"nodeType": "ElementaryTypeName",
																					"src": "8415:7:5",
																					"typeDescriptions": {}
																				}
																			},
																			"id": 1132,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"kind": "typeConversion",
																			"lValueRequested": false,
																			"nameLocations": [],
																			"names": [],
																			"nodeType": "FunctionCall",
																			"src": "8415:14:5",
																			"tryCall": false,
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint160",
																				"typeString": "uint160"
																			}
																		}
																	],
																	"expression": {
																		"argumentTypes": [
																			{
																				"typeIdentifier": "t_uint160",
																				"typeString": "uint160"
																			}
																		],
																		"id": 1128,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"lValueRequested": false,
																		"nodeType": "ElementaryTypeNameExpression",
																		"src": "8407:7:5",
																		"typeDescriptions": {
																			"typeIdentifier": "t_type$_t_uint256_$",
																			"typeString": "type(uint256)"
																		},
																		"typeName": {
																			"id": 1127,
																			"name": "uint256",
																			"nodeType": "ElementaryTypeName",
																			"src": "8407:7:5",
																			"typeDescriptions": {}
																		}
																	},
																	"id": 1133,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"kind": "typeConversion",
																	"lValueRequested": false,
																	"nameLocations": [],
																	"names": [],
																	"nodeType": "FunctionCall",
																	"src": "8407:23:5",
																	"tryCall": false,
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																],
																"id": 1126,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"nodeType": "ElementaryTypeNameExpression",
																"src": "8399:7:5",
																"typeDescriptions": {
																	"typeIdentifier": "t_type$_t_bytes32_$",
																	"typeString": "type(bytes32)"
																},
																"typeName": {
																	"id": 1125,
																	"name": "bytes32",
																	"nodeType": "ElementaryTypeName",
																	"src": "8399:7:5",
																	"typeDescriptions": {}
																}
															},
															"id": 1134,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "typeConversion",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "8399:32:5",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_bytes32",
																"typeString": "bytes32"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_struct$_Set_$796_storage",
																"typeString": "struct EnumerableSet.Set storage ref"
															},
															{
																"typeIdentifier": "t_bytes32",
																"typeString": "bytes32"
															}
														],
														"id": 1122,
														"name": "_add",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 838,
														"src": "8382:4:5",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_struct$_Set_$796_storage_ptr_$_t_bytes32_$returns$_t_bool_$",
															"typeString": "function (struct EnumerableSet.Set storage pointer,bytes32) returns (bool)"
														}
													},
													"id": 1135,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "8382:50:5",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"functionReturnParameters": 1121,
												"id": 1136,
												"nodeType": "Return",
												"src": "8375:57:5"
											}
										]
									},
									"documentation": {
										"id": 1112,
										"nodeType": "StructuredDocumentation",
										"src": "8125:159:5",
										"text": " @dev Add a value to a set. O(1).\n Returns true if the value was added to the set, that is if it was not\n already present."
									},
									"id": 1138,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "add",
									"nameLocation": "8298:3:5",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1118,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1115,
												"mutability": "mutable",
												"name": "set",
												"nameLocation": "8321:3:5",
												"nodeType": "VariableDeclaration",
												"scope": 1138,
												"src": "8302:22:5",
												"stateVariable": false,
												"storageLocation": "storage",
												"typeDescriptions": {
													"typeIdentifier": "t_struct$_AddressSet_$1111_storage_ptr",
													"typeString": "struct EnumerableSet.AddressSet"
												},
												"typeName": {
													"id": 1114,
													"nodeType": "UserDefinedTypeName",
													"pathNode": {
														"id": 1113,
														"name": "AddressSet",
														"nameLocations": [
															"8302:10:5"
														],
														"nodeType": "IdentifierPath",
														"referencedDeclaration": 1111,
														"src": "8302:10:5"
													},
													"referencedDeclaration": 1111,
													"src": "8302:10:5",
													"typeDescriptions": {
														"typeIdentifier": "t_struct$_AddressSet_$1111_storage_ptr",
														"typeString": "struct EnumerableSet.AddressSet"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1117,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "8334:5:5",
												"nodeType": "VariableDeclaration",
												"scope": 1138,
												"src": "8326:13:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1116,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "8326:7:5",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "8301:39:5"
									},
									"returnParameters": {
										"id": 1121,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1120,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1138,
												"src": "8359:4:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 1119,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "8359:4:5",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "8358:6:5"
									},
									"scope": 1398,
									"src": "8289:150:5",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 1164,
										"nodeType": "Block",
										"src": "8686:77:5",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"expression": {
																"id": 1150,
																"name": "set",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1142,
																"src": "8711:3:5",
																"typeDescriptions": {
																	"typeIdentifier": "t_struct$_AddressSet_$1111_storage_ptr",
																	"typeString": "struct EnumerableSet.AddressSet storage pointer"
																}
															},
															"id": 1151,
															"isConstant": false,
															"isLValue": true,
															"isPure": false,
															"lValueRequested": false,
															"memberLocation": "8715:6:5",
															"memberName": "_inner",
															"nodeType": "MemberAccess",
															"referencedDeclaration": 1110,
															"src": "8711:10:5",
															"typeDescriptions": {
																"typeIdentifier": "t_struct$_Set_$796_storage",
																"typeString": "struct EnumerableSet.Set storage ref"
															}
														},
														{
															"arguments": [
																{
																	"arguments": [
																		{
																			"arguments": [
																				{
																					"id": 1158,
																					"name": "value",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 1144,
																					"src": "8747:5:5",
																					"typeDescriptions": {
																						"typeIdentifier": "t_address",
																						"typeString": "address"
																					}
																				}
																			],
																			"expression": {
																				"argumentTypes": [
																					{
																						"typeIdentifier": "t_address",
																						"typeString": "address"
																					}
																				],
																				"id": 1157,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": true,
																				"lValueRequested": false,
																				"nodeType": "ElementaryTypeNameExpression",
																				"src": "8739:7:5",
																				"typeDescriptions": {
																					"typeIdentifier": "t_type$_t_uint160_$",
																					"typeString": "type(uint160)"
																				},
																				"typeName": {
																					"id": 1156,
																					"name": "uint160",
																					"nodeType": "ElementaryTypeName",
																					"src": "8739:7:5",
																					"typeDescriptions": {}
																				}
																			},
																			"id": 1159,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"kind": "typeConversion",
																			"lValueRequested": false,
																			"nameLocations": [],
																			"names": [],
																			"nodeType": "FunctionCall",
																			"src": "8739:14:5",
																			"tryCall": false,
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint160",
																				"typeString": "uint160"
																			}
																		}
																	],
																	"expression": {
																		"argumentTypes": [
																			{
																				"typeIdentifier": "t_uint160",
																				"typeString": "uint160"
																			}
																		],
																		"id": 1155,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"lValueRequested": false,
																		"nodeType": "ElementaryTypeNameExpression",
																		"src": "8731:7:5",
																		"typeDescriptions": {
																			"typeIdentifier": "t_type$_t_uint256_$",
																			"typeString": "type(uint256)"
																		},
																		"typeName": {
																			"id": 1154,
																			"name": "uint256",
																			"nodeType": "ElementaryTypeName",
																			"src": "8731:7:5",
																			"typeDescriptions": {}
																		}
																	},
																	"id": 1160,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"kind": "typeConversion",
																	"lValueRequested": false,
																	"nameLocations": [],
																	"names": [],
																	"nodeType": "FunctionCall",
																	"src": "8731:23:5",
																	"tryCall": false,
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																],
																"id": 1153,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"nodeType": "ElementaryTypeNameExpression",
																"src": "8723:7:5",
																"typeDescriptions": {
																	"typeIdentifier": "t_type$_t_bytes32_$",
																	"typeString": "type(bytes32)"
																},
																"typeName": {
																	"id": 1152,
																	"name": "bytes32",
																	"nodeType": "ElementaryTypeName",
																	"src": "8723:7:5",
																	"typeDescriptions": {}
																}
															},
															"id": 1161,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "typeConversion",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "8723:32:5",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_bytes32",
																"typeString": "bytes32"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_struct$_Set_$796_storage",
																"typeString": "struct EnumerableSet.Set storage ref"
															},
															{
																"typeIdentifier": "t_bytes32",
																"typeString": "bytes32"
															}
														],
														"id": 1149,
														"name": "_remove",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 922,
														"src": "8703:7:5",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_struct$_Set_$796_storage_ptr_$_t_bytes32_$returns$_t_bool_$",
															"typeString": "function (struct EnumerableSet.Set storage pointer,bytes32) returns (bool)"
														}
													},
													"id": 1162,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "8703:53:5",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"functionReturnParameters": 1148,
												"id": 1163,
												"nodeType": "Return",
												"src": "8696:60:5"
											}
										]
									},
									"documentation": {
										"id": 1139,
										"nodeType": "StructuredDocumentation",
										"src": "8445:157:5",
										"text": " @dev Removes a value from a set. O(1).\n Returns true if the value was removed from the set, that is if it was\n present."
									},
									"id": 1165,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "remove",
									"nameLocation": "8616:6:5",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1145,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1142,
												"mutability": "mutable",
												"name": "set",
												"nameLocation": "8642:3:5",
												"nodeType": "VariableDeclaration",
												"scope": 1165,
												"src": "8623:22:5",
												"stateVariable": false,
												"storageLocation": "storage",
												"typeDescriptions": {
													"typeIdentifier": "t_struct$_AddressSet_$1111_storage_ptr",
													"typeString": "struct EnumerableSet.AddressSet"
												},
												"typeName": {
													"id": 1141,
													"nodeType": "UserDefinedTypeName",
													"pathNode": {
														"id": 1140,
														"name": "AddressSet",
														"nameLocations": [
															"8623:10:5"
														],
														"nodeType": "IdentifierPath",
														"referencedDeclaration": 1111,
														"src": "8623:10:5"
													},
													"referencedDeclaration": 1111,
													"src": "8623:10:5",
													"typeDescriptions": {
														"typeIdentifier": "t_struct$_AddressSet_$1111_storage_ptr",
														"typeString": "struct EnumerableSet.AddressSet"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1144,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "8655:5:5",
												"nodeType": "VariableDeclaration",
												"scope": 1165,
												"src": "8647:13:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1143,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "8647:7:5",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "8622:39:5"
									},
									"returnParameters": {
										"id": 1148,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1147,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1165,
												"src": "8680:4:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 1146,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "8680:4:5",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "8679:6:5"
									},
									"scope": 1398,
									"src": "8607:156:5",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 1191,
										"nodeType": "Block",
										"src": "8930:79:5",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"expression": {
																"id": 1177,
																"name": "set",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1169,
																"src": "8957:3:5",
																"typeDescriptions": {
																	"typeIdentifier": "t_struct$_AddressSet_$1111_storage_ptr",
																	"typeString": "struct EnumerableSet.AddressSet storage pointer"
																}
															},
															"id": 1178,
															"isConstant": false,
															"isLValue": true,
															"isPure": false,
															"lValueRequested": false,
															"memberLocation": "8961:6:5",
															"memberName": "_inner",
															"nodeType": "MemberAccess",
															"referencedDeclaration": 1110,
															"src": "8957:10:5",
															"typeDescriptions": {
																"typeIdentifier": "t_struct$_Set_$796_storage",
																"typeString": "struct EnumerableSet.Set storage ref"
															}
														},
														{
															"arguments": [
																{
																	"arguments": [
																		{
																			"arguments": [
																				{
																					"id": 1185,
																					"name": "value",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 1171,
																					"src": "8993:5:5",
																					"typeDescriptions": {
																						"typeIdentifier": "t_address",
																						"typeString": "address"
																					}
																				}
																			],
																			"expression": {
																				"argumentTypes": [
																					{
																						"typeIdentifier": "t_address",
																						"typeString": "address"
																					}
																				],
																				"id": 1184,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": true,
																				"lValueRequested": false,
																				"nodeType": "ElementaryTypeNameExpression",
																				"src": "8985:7:5",
																				"typeDescriptions": {
																					"typeIdentifier": "t_type$_t_uint160_$",
																					"typeString": "type(uint160)"
																				},
																				"typeName": {
																					"id": 1183,
																					"name": "uint160",
																					"nodeType": "ElementaryTypeName",
																					"src": "8985:7:5",
																					"typeDescriptions": {}
																				}
																			},
																			"id": 1186,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"kind": "typeConversion",
																			"lValueRequested": false,
																			"nameLocations": [],
																			"names": [],
																			"nodeType": "FunctionCall",
																			"src": "8985:14:5",
																			"tryCall": false,
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint160",
																				"typeString": "uint160"
																			}
																		}
																	],
																	"expression": {
																		"argumentTypes": [
																			{
																				"typeIdentifier": "t_uint160",
																				"typeString": "uint160"
																			}
																		],
																		"id": 1182,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"lValueRequested": false,
																		"nodeType": "ElementaryTypeNameExpression",
																		"src": "8977:7:5",
																		"typeDescriptions": {
																			"typeIdentifier": "t_type$_t_uint256_$",
																			"typeString": "type(uint256)"
																		},
																		"typeName": {
																			"id": 1181,
																			"name": "uint256",
																			"nodeType": "ElementaryTypeName",
																			"src": "8977:7:5",
																			"typeDescriptions": {}
																		}
																	},
																	"id": 1187,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"kind": "typeConversion",
																	"lValueRequested": false,
																	"nameLocations": [],
																	"names": [],
																	"nodeType": "FunctionCall",
																	"src": "8977:23:5",
																	"tryCall": false,
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																],
																"id": 1180,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"nodeType": "ElementaryTypeNameExpression",
																"src": "8969:7:5",
																"typeDescriptions": {
																	"typeIdentifier": "t_type$_t_bytes32_$",
																	"typeString": "type(bytes32)"
																},
																"typeName": {
																	"id": 1179,
																	"name": "bytes32",
																	"nodeType": "ElementaryTypeName",
																	"src": "8969:7:5",
																	"typeDescriptions": {}
																}
															},
															"id": 1188,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "typeConversion",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "8969:32:5",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_bytes32",
																"typeString": "bytes32"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_struct$_Set_$796_storage",
																"typeString": "struct EnumerableSet.Set storage ref"
															},
															{
																"typeIdentifier": "t_bytes32",
																"typeString": "bytes32"
															}
														],
														"id": 1176,
														"name": "_contains",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 941,
														"src": "8947:9:5",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_view$_t_struct$_Set_$796_storage_ptr_$_t_bytes32_$returns$_t_bool_$",
															"typeString": "function (struct EnumerableSet.Set storage pointer,bytes32) view returns (bool)"
														}
													},
													"id": 1189,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "8947:55:5",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"functionReturnParameters": 1175,
												"id": 1190,
												"nodeType": "Return",
												"src": "8940:62:5"
											}
										]
									},
									"documentation": {
										"id": 1166,
										"nodeType": "StructuredDocumentation",
										"src": "8769:70:5",
										"text": " @dev Returns true if the value is in the set. O(1)."
									},
									"id": 1192,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "contains",
									"nameLocation": "8853:8:5",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1172,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1169,
												"mutability": "mutable",
												"name": "set",
												"nameLocation": "8881:3:5",
												"nodeType": "VariableDeclaration",
												"scope": 1192,
												"src": "8862:22:5",
												"stateVariable": false,
												"storageLocation": "storage",
												"typeDescriptions": {
													"typeIdentifier": "t_struct$_AddressSet_$1111_storage_ptr",
													"typeString": "struct EnumerableSet.AddressSet"
												},
												"typeName": {
													"id": 1168,
													"nodeType": "UserDefinedTypeName",
													"pathNode": {
														"id": 1167,
														"name": "AddressSet",
														"nameLocations": [
															"8862:10:5"
														],
														"nodeType": "IdentifierPath",
														"referencedDeclaration": 1111,
														"src": "8862:10:5"
													},
													"referencedDeclaration": 1111,
													"src": "8862:10:5",
													"typeDescriptions": {
														"typeIdentifier": "t_struct$_AddressSet_$1111_storage_ptr",
														"typeString": "struct EnumerableSet.AddressSet"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1171,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "8894:5:5",
												"nodeType": "VariableDeclaration",
												"scope": 1192,
												"src": "8886:13:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1170,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "8886:7:5",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "8861:39:5"
									},
									"returnParameters": {
										"id": 1175,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1174,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1192,
												"src": "8924:4:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 1173,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "8924:4:5",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "8923:6:5"
									},
									"scope": 1398,
									"src": "8844:165:5",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 1206,
										"nodeType": "Block",
										"src": "9162:43:5",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"expression": {
																"id": 1202,
																"name": "set",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1196,
																"src": "9187:3:5",
																"typeDescriptions": {
																	"typeIdentifier": "t_struct$_AddressSet_$1111_storage_ptr",
																	"typeString": "struct EnumerableSet.AddressSet storage pointer"
																}
															},
															"id": 1203,
															"isConstant": false,
															"isLValue": true,
															"isPure": false,
															"lValueRequested": false,
															"memberLocation": "9191:6:5",
															"memberName": "_inner",
															"nodeType": "MemberAccess",
															"referencedDeclaration": 1110,
															"src": "9187:10:5",
															"typeDescriptions": {
																"typeIdentifier": "t_struct$_Set_$796_storage",
																"typeString": "struct EnumerableSet.Set storage ref"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_struct$_Set_$796_storage",
																"typeString": "struct EnumerableSet.Set storage ref"
															}
														],
														"id": 1201,
														"name": "_length",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 955,
														"src": "9179:7:5",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_view$_t_struct$_Set_$796_storage_ptr_$returns$_t_uint256_$",
															"typeString": "function (struct EnumerableSet.Set storage pointer) view returns (uint256)"
														}
													},
													"id": 1204,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "9179:19:5",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"functionReturnParameters": 1200,
												"id": 1205,
												"nodeType": "Return",
												"src": "9172:26:5"
											}
										]
									},
									"documentation": {
										"id": 1193,
										"nodeType": "StructuredDocumentation",
										"src": "9015:70:5",
										"text": " @dev Returns the number of values in the set. O(1)."
									},
									"id": 1207,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "length",
									"nameLocation": "9099:6:5",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1197,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1196,
												"mutability": "mutable",
												"name": "set",
												"nameLocation": "9125:3:5",
												"nodeType": "VariableDeclaration",
												"scope": 1207,
												"src": "9106:22:5",
												"stateVariable": false,
												"storageLocation": "storage",
												"typeDescriptions": {
													"typeIdentifier": "t_struct$_AddressSet_$1111_storage_ptr",
													"typeString": "struct EnumerableSet.AddressSet"
												},
												"typeName": {
													"id": 1195,
													"nodeType": "UserDefinedTypeName",
													"pathNode": {
														"id": 1194,
														"name": "AddressSet",
														"nameLocations": [
															"9106:10:5"
														],
														"nodeType": "IdentifierPath",
														"referencedDeclaration": 1111,
														"src": "9106:10:5"
													},
													"referencedDeclaration": 1111,
													"src": "9106:10:5",
													"typeDescriptions": {
														"typeIdentifier": "t_struct$_AddressSet_$1111_storage_ptr",
														"typeString": "struct EnumerableSet.AddressSet"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "9105:24:5"
									},
									"returnParameters": {
										"id": 1200,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1199,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1207,
												"src": "9153:7:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1198,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "9153:7:5",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "9152:9:5"
									},
									"scope": 1398,
									"src": "9090:115:5",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 1233,
										"nodeType": "Block",
										"src": "9630:73:5",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"arguments": [
																{
																	"arguments": [
																		{
																			"arguments": [
																				{
																					"expression": {
																						"id": 1225,
																						"name": "set",
																						"nodeType": "Identifier",
																						"overloadedDeclarations": [],
																						"referencedDeclaration": 1211,
																						"src": "9675:3:5",
																						"typeDescriptions": {
																							"typeIdentifier": "t_struct$_AddressSet_$1111_storage_ptr",
																							"typeString": "struct EnumerableSet.AddressSet storage pointer"
																						}
																					},
																					"id": 1226,
																					"isConstant": false,
																					"isLValue": true,
																					"isPure": false,
																					"lValueRequested": false,
																					"memberLocation": "9679:6:5",
																					"memberName": "_inner",
																					"nodeType": "MemberAccess",
																					"referencedDeclaration": 1110,
																					"src": "9675:10:5",
																					"typeDescriptions": {
																						"typeIdentifier": "t_struct$_Set_$796_storage",
																						"typeString": "struct EnumerableSet.Set storage ref"
																					}
																				},
																				{
																					"id": 1227,
																					"name": "index",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 1213,
																					"src": "9687:5:5",
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				}
																			],
																			"expression": {
																				"argumentTypes": [
																					{
																						"typeIdentifier": "t_struct$_Set_$796_storage",
																						"typeString": "struct EnumerableSet.Set storage ref"
																					},
																					{
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				],
																				"id": 1224,
																				"name": "_at",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 972,
																				"src": "9671:3:5",
																				"typeDescriptions": {
																					"typeIdentifier": "t_function_internal_view$_t_struct$_Set_$796_storage_ptr_$_t_uint256_$returns$_t_bytes32_$",
																					"typeString": "function (struct EnumerableSet.Set storage pointer,uint256) view returns (bytes32)"
																				}
																			},
																			"id": 1228,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"kind": "functionCall",
																			"lValueRequested": false,
																			"nameLocations": [],
																			"names": [],
																			"nodeType": "FunctionCall",
																			"src": "9671:22:5",
																			"tryCall": false,
																			"typeDescriptions": {
																				"typeIdentifier": "t_bytes32",
																				"typeString": "bytes32"
																			}
																		}
																	],
																	"expression": {
																		"argumentTypes": [
																			{
																				"typeIdentifier": "t_bytes32",
																				"typeString": "bytes32"
																			}
																		],
																		"id": 1223,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"lValueRequested": false,
																		"nodeType": "ElementaryTypeNameExpression",
																		"src": "9663:7:5",
																		"typeDescriptions": {
																			"typeIdentifier": "t_type$_t_uint256_$",
																			"typeString": "type(uint256)"
																		},
																		"typeName": {
																			"id": 1222,
																			"name": "uint256",
																			"nodeType": "ElementaryTypeName",
																			"src": "9663:7:5",
																			"typeDescriptions": {}
																		}
																	},
																	"id": 1229,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"kind": "typeConversion",
																	"lValueRequested": false,
																	"nameLocations": [],
																	"names": [],
																	"nodeType": "FunctionCall",
																	"src": "9663:31:5",
																	"tryCall": false,
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																],
																"id": 1221,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"nodeType": "ElementaryTypeNameExpression",
																"src": "9655:7:5",
																"typeDescriptions": {
																	"typeIdentifier": "t_type$_t_uint160_$",
																	"typeString": "type(uint160)"
																},
																"typeName": {
																	"id": 1220,
																	"name": "uint160",
																	"nodeType": "ElementaryTypeName",
																	"src": "9655:7:5",
																	"typeDescriptions": {}
																}
															},
															"id": 1230,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "typeConversion",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "9655:40:5",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_uint160",
																"typeString": "uint160"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_uint160",
																"typeString": "uint160"
															}
														],
														"id": 1219,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"lValueRequested": false,
														"nodeType": "ElementaryTypeNameExpression",
														"src": "9647:7:5",
														"typeDescriptions": {
															"typeIdentifier": "t_type$_t_address_$",
															"typeString": "type(address)"
														},
														"typeName": {
															"id": 1218,
															"name": "address",
															"nodeType": "ElementaryTypeName",
															"src": "9647:7:5",
															"typeDescriptions": {}
														}
													},
													"id": 1231,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "typeConversion",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "9647:49:5",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"functionReturnParameters": 1217,
												"id": 1232,
												"nodeType": "Return",
												"src": "9640:56:5"
											}
										]
									},
									"documentation": {
										"id": 1208,
										"nodeType": "StructuredDocumentation",
										"src": "9211:331:5",
										"text": " @dev Returns the value stored at position `index` in the set. O(1).\n Note that there are no guarantees on the ordering of values inside the\n array, and it may change when more values are added or removed.\n Requirements:\n - `index` must be strictly less than {length}."
									},
									"id": 1234,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "at",
									"nameLocation": "9556:2:5",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1214,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1211,
												"mutability": "mutable",
												"name": "set",
												"nameLocation": "9578:3:5",
												"nodeType": "VariableDeclaration",
												"scope": 1234,
												"src": "9559:22:5",
												"stateVariable": false,
												"storageLocation": "storage",
												"typeDescriptions": {
													"typeIdentifier": "t_struct$_AddressSet_$1111_storage_ptr",
													"typeString": "struct EnumerableSet.AddressSet"
												},
												"typeName": {
													"id": 1210,
													"nodeType": "UserDefinedTypeName",
													"pathNode": {
														"id": 1209,
														"name": "AddressSet",
														"nameLocations": [
															"9559:10:5"
														],
														"nodeType": "IdentifierPath",
														"referencedDeclaration": 1111,
														"src": "9559:10:5"
													},
													"referencedDeclaration": 1111,
													"src": "9559:10:5",
													"typeDescriptions": {
														"typeIdentifier": "t_struct$_AddressSet_$1111_storage_ptr",
														"typeString": "struct EnumerableSet.AddressSet"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1213,
												"mutability": "mutable",
												"name": "index",
												"nameLocation": "9591:5:5",
												"nodeType": "VariableDeclaration",
												"scope": 1234,
												"src": "9583:13:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1212,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "9583:7:5",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "9558:39:5"
									},
									"returnParameters": {
										"id": 1217,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1216,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1234,
												"src": "9621:7:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1215,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "9621:7:5",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "9620:9:5"
									},
									"scope": 1398,
									"src": "9547:156:5",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 1263,
										"nodeType": "Block",
										"src": "10324:192:5",
										"statements": [
											{
												"assignments": [
													1248
												],
												"declarations": [
													{
														"constant": false,
														"id": 1248,
														"mutability": "mutable",
														"name": "store",
														"nameLocation": "10351:5:5",
														"nodeType": "VariableDeclaration",
														"scope": 1263,
														"src": "10334:22:5",
														"stateVariable": false,
														"storageLocation": "memory",
														"typeDescriptions": {
															"typeIdentifier": "t_array$_t_bytes32_$dyn_memory_ptr",
															"typeString": "bytes32[]"
														},
														"typeName": {
															"baseType": {
																"id": 1246,
																"name": "bytes32",
																"nodeType": "ElementaryTypeName",
																"src": "10334:7:5",
																"typeDescriptions": {
																	"typeIdentifier": "t_bytes32",
																	"typeString": "bytes32"
																}
															},
															"id": 1247,
															"nodeType": "ArrayTypeName",
															"src": "10334:9:5",
															"typeDescriptions": {
																"typeIdentifier": "t_array$_t_bytes32_$dyn_storage_ptr",
																"typeString": "bytes32[]"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 1253,
												"initialValue": {
													"arguments": [
														{
															"expression": {
																"id": 1250,
																"name": "set",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1238,
																"src": "10367:3:5",
																"typeDescriptions": {
																	"typeIdentifier": "t_struct$_AddressSet_$1111_storage_ptr",
																	"typeString": "struct EnumerableSet.AddressSet storage pointer"
																}
															},
															"id": 1251,
															"isConstant": false,
															"isLValue": true,
															"isPure": false,
															"lValueRequested": false,
															"memberLocation": "10371:6:5",
															"memberName": "_inner",
															"nodeType": "MemberAccess",
															"referencedDeclaration": 1110,
															"src": "10367:10:5",
															"typeDescriptions": {
																"typeIdentifier": "t_struct$_Set_$796_storage",
																"typeString": "struct EnumerableSet.Set storage ref"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_struct$_Set_$796_storage",
																"typeString": "struct EnumerableSet.Set storage ref"
															}
														],
														"id": 1249,
														"name": "_values",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 986,
														"src": "10359:7:5",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_view$_t_struct$_Set_$796_storage_ptr_$returns$_t_array$_t_bytes32_$dyn_memory_ptr_$",
															"typeString": "function (struct EnumerableSet.Set storage pointer) view returns (bytes32[] memory)"
														}
													},
													"id": 1252,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "10359:19:5",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_array$_t_bytes32_$dyn_memory_ptr",
														"typeString": "bytes32[] memory"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "10334:44:5"
											},
											{
												"assignments": [
													1258
												],
												"declarations": [
													{
														"constant": false,
														"id": 1258,
														"mutability": "mutable",
														"name": "result",
														"nameLocation": "10405:6:5",
														"nodeType": "VariableDeclaration",
														"scope": 1263,
														"src": "10388:23:5",
														"stateVariable": false,
														"storageLocation": "memory",
														"typeDescriptions": {
															"typeIdentifier": "t_array$_t_address_$dyn_memory_ptr",
															"typeString": "address[]"
														},
														"typeName": {
															"baseType": {
																"id": 1256,
																"name": "address",
																"nodeType": "ElementaryTypeName",
																"src": "10388:7:5",
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"id": 1257,
															"nodeType": "ArrayTypeName",
															"src": "10388:9:5",
															"typeDescriptions": {
																"typeIdentifier": "t_array$_t_address_$dyn_storage_ptr",
																"typeString": "address[]"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 1259,
												"nodeType": "VariableDeclarationStatement",
												"src": "10388:23:5"
											},
											{
												"AST": {
													"nativeSrc": "10447:39:5",
													"nodeType": "YulBlock",
													"src": "10447:39:5",
													"statements": [
														{
															"nativeSrc": "10461:15:5",
															"nodeType": "YulAssignment",
															"src": "10461:15:5",
															"value": {
																"name": "store",
																"nativeSrc": "10471:5:5",
																"nodeType": "YulIdentifier",
																"src": "10471:5:5"
															},
															"variableNames": [
																{
																	"name": "result",
																	"nativeSrc": "10461:6:5",
																	"nodeType": "YulIdentifier",
																	"src": "10461:6:5"
																}
															]
														}
													]
												},
												"evmVersion": "cancun",
												"externalReferences": [
													{
														"declaration": 1258,
														"isOffset": false,
														"isSlot": false,
														"src": "10461:6:5",
														"valueSize": 1
													},
													{
														"declaration": 1248,
														"isOffset": false,
														"isSlot": false,
														"src": "10471:5:5",
														"valueSize": 1
													}
												],
												"flags": [
													"memory-safe"
												],
												"id": 1260,
												"nodeType": "InlineAssembly",
												"src": "10422:64:5"
											},
											{
												"expression": {
													"id": 1261,
													"name": "result",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 1258,
													"src": "10503:6:5",
													"typeDescriptions": {
														"typeIdentifier": "t_array$_t_address_$dyn_memory_ptr",
														"typeString": "address[] memory"
													}
												},
												"functionReturnParameters": 1243,
												"id": 1262,
												"nodeType": "Return",
												"src": "10496:13:5"
											}
										]
									},
									"documentation": {
										"id": 1235,
										"nodeType": "StructuredDocumentation",
										"src": "9709:529:5",
										"text": " @dev Return the entire set in an array\n WARNING: This operation will copy the entire storage to memory, which can be quite expensive. This is designed\n to mostly be used by view accessors that are queried without any gas fees. Developers should keep in mind that\n this function has an unbounded cost, and using it as part of a state-changing function may render the function\n uncallable if the set grows to a point where copying to memory consumes too much gas to fit in a block."
									},
									"id": 1264,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "values",
									"nameLocation": "10252:6:5",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1239,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1238,
												"mutability": "mutable",
												"name": "set",
												"nameLocation": "10278:3:5",
												"nodeType": "VariableDeclaration",
												"scope": 1264,
												"src": "10259:22:5",
												"stateVariable": false,
												"storageLocation": "storage",
												"typeDescriptions": {
													"typeIdentifier": "t_struct$_AddressSet_$1111_storage_ptr",
													"typeString": "struct EnumerableSet.AddressSet"
												},
												"typeName": {
													"id": 1237,
													"nodeType": "UserDefinedTypeName",
													"pathNode": {
														"id": 1236,
														"name": "AddressSet",
														"nameLocations": [
															"10259:10:5"
														],
														"nodeType": "IdentifierPath",
														"referencedDeclaration": 1111,
														"src": "10259:10:5"
													},
													"referencedDeclaration": 1111,
													"src": "10259:10:5",
													"typeDescriptions": {
														"typeIdentifier": "t_struct$_AddressSet_$1111_storage_ptr",
														"typeString": "struct EnumerableSet.AddressSet"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "10258:24:5"
									},
									"returnParameters": {
										"id": 1243,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1242,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1264,
												"src": "10306:16:5",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_array$_t_address_$dyn_memory_ptr",
													"typeString": "address[]"
												},
												"typeName": {
													"baseType": {
														"id": 1240,
														"name": "address",
														"nodeType": "ElementaryTypeName",
														"src": "10306:7:5",
														"stateMutability": "nonpayable",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"id": 1241,
													"nodeType": "ArrayTypeName",
													"src": "10306:9:5",
													"typeDescriptions": {
														"typeIdentifier": "t_array$_t_address_$dyn_storage_ptr",
														"typeString": "address[]"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "10305:18:5"
									},
									"scope": 1398,
									"src": "10243:273:5",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"canonicalName": "EnumerableSet.UintSet",
									"id": 1268,
									"members": [
										{
											"constant": false,
											"id": 1267,
											"mutability": "mutable",
											"name": "_inner",
											"nameLocation": "10567:6:5",
											"nodeType": "VariableDeclaration",
											"scope": 1268,
											"src": "10563:10:5",
											"stateVariable": false,
											"storageLocation": "default",
											"typeDescriptions": {
												"typeIdentifier": "t_struct$_Set_$796_storage_ptr",
												"typeString": "struct EnumerableSet.Set"
											},
											"typeName": {
												"id": 1266,
												"nodeType": "UserDefinedTypeName",
												"pathNode": {
													"id": 1265,
													"name": "Set",
													"nameLocations": [
														"10563:3:5"
													],
													"nodeType": "IdentifierPath",
													"referencedDeclaration": 796,
													"src": "10563:3:5"
												},
												"referencedDeclaration": 796,
												"src": "10563:3:5",
												"typeDescriptions": {
													"typeIdentifier": "t_struct$_Set_$796_storage_ptr",
													"typeString": "struct EnumerableSet.Set"
												}
											},
											"visibility": "internal"
										}
									],
									"name": "UintSet",
									"nameLocation": "10545:7:5",
									"nodeType": "StructDefinition",
									"scope": 1398,
									"src": "10538:42:5",
									"visibility": "public"
								},
								{
									"body": {
										"id": 1288,
										"nodeType": "Block",
										"src": "10823:56:5",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"expression": {
																"id": 1280,
																"name": "set",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1272,
																"src": "10845:3:5",
																"typeDescriptions": {
																	"typeIdentifier": "t_struct$_UintSet_$1268_storage_ptr",
																	"typeString": "struct EnumerableSet.UintSet storage pointer"
																}
															},
															"id": 1281,
															"isConstant": false,
															"isLValue": true,
															"isPure": false,
															"lValueRequested": false,
															"memberLocation": "10849:6:5",
															"memberName": "_inner",
															"nodeType": "MemberAccess",
															"referencedDeclaration": 1267,
															"src": "10845:10:5",
															"typeDescriptions": {
																"typeIdentifier": "t_struct$_Set_$796_storage",
																"typeString": "struct EnumerableSet.Set storage ref"
															}
														},
														{
															"arguments": [
																{
																	"id": 1284,
																	"name": "value",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1274,
																	"src": "10865:5:5",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																],
																"id": 1283,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"nodeType": "ElementaryTypeNameExpression",
																"src": "10857:7:5",
																"typeDescriptions": {
																	"typeIdentifier": "t_type$_t_bytes32_$",
																	"typeString": "type(bytes32)"
																},
																"typeName": {
																	"id": 1282,
																	"name": "bytes32",
																	"nodeType": "ElementaryTypeName",
																	"src": "10857:7:5",
																	"typeDescriptions": {}
																}
															},
															"id": 1285,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "typeConversion",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "10857:14:5",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_bytes32",
																"typeString": "bytes32"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_struct$_Set_$796_storage",
																"typeString": "struct EnumerableSet.Set storage ref"
															},
															{
																"typeIdentifier": "t_bytes32",
																"typeString": "bytes32"
															}
														],
														"id": 1279,
														"name": "_add",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 838,
														"src": "10840:4:5",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_struct$_Set_$796_storage_ptr_$_t_bytes32_$returns$_t_bool_$",
															"typeString": "function (struct EnumerableSet.Set storage pointer,bytes32) returns (bool)"
														}
													},
													"id": 1286,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "10840:32:5",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"functionReturnParameters": 1278,
												"id": 1287,
												"nodeType": "Return",
												"src": "10833:39:5"
											}
										]
									},
									"documentation": {
										"id": 1269,
										"nodeType": "StructuredDocumentation",
										"src": "10586:159:5",
										"text": " @dev Add a value to a set. O(1).\n Returns true if the value was added to the set, that is if it was not\n already present."
									},
									"id": 1289,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "add",
									"nameLocation": "10759:3:5",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1275,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1272,
												"mutability": "mutable",
												"name": "set",
												"nameLocation": "10779:3:5",
												"nodeType": "VariableDeclaration",
												"scope": 1289,
												"src": "10763:19:5",
												"stateVariable": false,
												"storageLocation": "storage",
												"typeDescriptions": {
													"typeIdentifier": "t_struct$_UintSet_$1268_storage_ptr",
													"typeString": "struct EnumerableSet.UintSet"
												},
												"typeName": {
													"id": 1271,
													"nodeType": "UserDefinedTypeName",
													"pathNode": {
														"id": 1270,
														"name": "UintSet",
														"nameLocations": [
															"10763:7:5"
														],
														"nodeType": "IdentifierPath",
														"referencedDeclaration": 1268,
														"src": "10763:7:5"
													},
													"referencedDeclaration": 1268,
													"src": "10763:7:5",
													"typeDescriptions": {
														"typeIdentifier": "t_struct$_UintSet_$1268_storage_ptr",
														"typeString": "struct EnumerableSet.UintSet"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1274,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "10792:5:5",
												"nodeType": "VariableDeclaration",
												"scope": 1289,
												"src": "10784:13:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1273,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "10784:7:5",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "10762:36:5"
									},
									"returnParameters": {
										"id": 1278,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1277,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1289,
												"src": "10817:4:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 1276,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "10817:4:5",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "10816:6:5"
									},
									"scope": 1398,
									"src": "10750:129:5",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 1309,
										"nodeType": "Block",
										"src": "11123:59:5",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"expression": {
																"id": 1301,
																"name": "set",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1293,
																"src": "11148:3:5",
																"typeDescriptions": {
																	"typeIdentifier": "t_struct$_UintSet_$1268_storage_ptr",
																	"typeString": "struct EnumerableSet.UintSet storage pointer"
																}
															},
															"id": 1302,
															"isConstant": false,
															"isLValue": true,
															"isPure": false,
															"lValueRequested": false,
															"memberLocation": "11152:6:5",
															"memberName": "_inner",
															"nodeType": "MemberAccess",
															"referencedDeclaration": 1267,
															"src": "11148:10:5",
															"typeDescriptions": {
																"typeIdentifier": "t_struct$_Set_$796_storage",
																"typeString": "struct EnumerableSet.Set storage ref"
															}
														},
														{
															"arguments": [
																{
																	"id": 1305,
																	"name": "value",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1295,
																	"src": "11168:5:5",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																],
																"id": 1304,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"nodeType": "ElementaryTypeNameExpression",
																"src": "11160:7:5",
																"typeDescriptions": {
																	"typeIdentifier": "t_type$_t_bytes32_$",
																	"typeString": "type(bytes32)"
																},
																"typeName": {
																	"id": 1303,
																	"name": "bytes32",
																	"nodeType": "ElementaryTypeName",
																	"src": "11160:7:5",
																	"typeDescriptions": {}
																}
															},
															"id": 1306,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "typeConversion",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "11160:14:5",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_bytes32",
																"typeString": "bytes32"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_struct$_Set_$796_storage",
																"typeString": "struct EnumerableSet.Set storage ref"
															},
															{
																"typeIdentifier": "t_bytes32",
																"typeString": "bytes32"
															}
														],
														"id": 1300,
														"name": "_remove",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 922,
														"src": "11140:7:5",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_struct$_Set_$796_storage_ptr_$_t_bytes32_$returns$_t_bool_$",
															"typeString": "function (struct EnumerableSet.Set storage pointer,bytes32) returns (bool)"
														}
													},
													"id": 1307,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "11140:35:5",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"functionReturnParameters": 1299,
												"id": 1308,
												"nodeType": "Return",
												"src": "11133:42:5"
											}
										]
									},
									"documentation": {
										"id": 1290,
										"nodeType": "StructuredDocumentation",
										"src": "10885:157:5",
										"text": " @dev Removes a value from a set. O(1).\n Returns true if the value was removed from the set, that is if it was\n present."
									},
									"id": 1310,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "remove",
									"nameLocation": "11056:6:5",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1296,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1293,
												"mutability": "mutable",
												"name": "set",
												"nameLocation": "11079:3:5",
												"nodeType": "VariableDeclaration",
												"scope": 1310,
												"src": "11063:19:5",
												"stateVariable": false,
												"storageLocation": "storage",
												"typeDescriptions": {
													"typeIdentifier": "t_struct$_UintSet_$1268_storage_ptr",
													"typeString": "struct EnumerableSet.UintSet"
												},
												"typeName": {
													"id": 1292,
													"nodeType": "UserDefinedTypeName",
													"pathNode": {
														"id": 1291,
														"name": "UintSet",
														"nameLocations": [
															"11063:7:5"
														],
														"nodeType": "IdentifierPath",
														"referencedDeclaration": 1268,
														"src": "11063:7:5"
													},
													"referencedDeclaration": 1268,
													"src": "11063:7:5",
													"typeDescriptions": {
														"typeIdentifier": "t_struct$_UintSet_$1268_storage_ptr",
														"typeString": "struct EnumerableSet.UintSet"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1295,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "11092:5:5",
												"nodeType": "VariableDeclaration",
												"scope": 1310,
												"src": "11084:13:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1294,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "11084:7:5",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "11062:36:5"
									},
									"returnParameters": {
										"id": 1299,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1298,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1310,
												"src": "11117:4:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 1297,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "11117:4:5",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "11116:6:5"
									},
									"scope": 1398,
									"src": "11047:135:5",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 1330,
										"nodeType": "Block",
										"src": "11346:61:5",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"expression": {
																"id": 1322,
																"name": "set",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1314,
																"src": "11373:3:5",
																"typeDescriptions": {
																	"typeIdentifier": "t_struct$_UintSet_$1268_storage_ptr",
																	"typeString": "struct EnumerableSet.UintSet storage pointer"
																}
															},
															"id": 1323,
															"isConstant": false,
															"isLValue": true,
															"isPure": false,
															"lValueRequested": false,
															"memberLocation": "11377:6:5",
															"memberName": "_inner",
															"nodeType": "MemberAccess",
															"referencedDeclaration": 1267,
															"src": "11373:10:5",
															"typeDescriptions": {
																"typeIdentifier": "t_struct$_Set_$796_storage",
																"typeString": "struct EnumerableSet.Set storage ref"
															}
														},
														{
															"arguments": [
																{
																	"id": 1326,
																	"name": "value",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1316,
																	"src": "11393:5:5",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																],
																"id": 1325,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"nodeType": "ElementaryTypeNameExpression",
																"src": "11385:7:5",
																"typeDescriptions": {
																	"typeIdentifier": "t_type$_t_bytes32_$",
																	"typeString": "type(bytes32)"
																},
																"typeName": {
																	"id": 1324,
																	"name": "bytes32",
																	"nodeType": "ElementaryTypeName",
																	"src": "11385:7:5",
																	"typeDescriptions": {}
																}
															},
															"id": 1327,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "typeConversion",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "11385:14:5",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_bytes32",
																"typeString": "bytes32"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_struct$_Set_$796_storage",
																"typeString": "struct EnumerableSet.Set storage ref"
															},
															{
																"typeIdentifier": "t_bytes32",
																"typeString": "bytes32"
															}
														],
														"id": 1321,
														"name": "_contains",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 941,
														"src": "11363:9:5",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_view$_t_struct$_Set_$796_storage_ptr_$_t_bytes32_$returns$_t_bool_$",
															"typeString": "function (struct EnumerableSet.Set storage pointer,bytes32) view returns (bool)"
														}
													},
													"id": 1328,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "11363:37:5",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"functionReturnParameters": 1320,
												"id": 1329,
												"nodeType": "Return",
												"src": "11356:44:5"
											}
										]
									},
									"documentation": {
										"id": 1311,
										"nodeType": "StructuredDocumentation",
										"src": "11188:70:5",
										"text": " @dev Returns true if the value is in the set. O(1)."
									},
									"id": 1331,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "contains",
									"nameLocation": "11272:8:5",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1317,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1314,
												"mutability": "mutable",
												"name": "set",
												"nameLocation": "11297:3:5",
												"nodeType": "VariableDeclaration",
												"scope": 1331,
												"src": "11281:19:5",
												"stateVariable": false,
												"storageLocation": "storage",
												"typeDescriptions": {
													"typeIdentifier": "t_struct$_UintSet_$1268_storage_ptr",
													"typeString": "struct EnumerableSet.UintSet"
												},
												"typeName": {
													"id": 1313,
													"nodeType": "UserDefinedTypeName",
													"pathNode": {
														"id": 1312,
														"name": "UintSet",
														"nameLocations": [
															"11281:7:5"
														],
														"nodeType": "IdentifierPath",
														"referencedDeclaration": 1268,
														"src": "11281:7:5"
													},
													"referencedDeclaration": 1268,
													"src": "11281:7:5",
													"typeDescriptions": {
														"typeIdentifier": "t_struct$_UintSet_$1268_storage_ptr",
														"typeString": "struct EnumerableSet.UintSet"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1316,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "11310:5:5",
												"nodeType": "VariableDeclaration",
												"scope": 1331,
												"src": "11302:13:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1315,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "11302:7:5",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "11280:36:5"
									},
									"returnParameters": {
										"id": 1320,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1319,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1331,
												"src": "11340:4:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 1318,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "11340:4:5",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "11339:6:5"
									},
									"scope": 1398,
									"src": "11263:144:5",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 1345,
										"nodeType": "Block",
										"src": "11557:43:5",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"expression": {
																"id": 1341,
																"name": "set",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1335,
																"src": "11582:3:5",
																"typeDescriptions": {
																	"typeIdentifier": "t_struct$_UintSet_$1268_storage_ptr",
																	"typeString": "struct EnumerableSet.UintSet storage pointer"
																}
															},
															"id": 1342,
															"isConstant": false,
															"isLValue": true,
															"isPure": false,
															"lValueRequested": false,
															"memberLocation": "11586:6:5",
															"memberName": "_inner",
															"nodeType": "MemberAccess",
															"referencedDeclaration": 1267,
															"src": "11582:10:5",
															"typeDescriptions": {
																"typeIdentifier": "t_struct$_Set_$796_storage",
																"typeString": "struct EnumerableSet.Set storage ref"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_struct$_Set_$796_storage",
																"typeString": "struct EnumerableSet.Set storage ref"
															}
														],
														"id": 1340,
														"name": "_length",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 955,
														"src": "11574:7:5",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_view$_t_struct$_Set_$796_storage_ptr_$returns$_t_uint256_$",
															"typeString": "function (struct EnumerableSet.Set storage pointer) view returns (uint256)"
														}
													},
													"id": 1343,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "11574:19:5",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"functionReturnParameters": 1339,
												"id": 1344,
												"nodeType": "Return",
												"src": "11567:26:5"
											}
										]
									},
									"documentation": {
										"id": 1332,
										"nodeType": "StructuredDocumentation",
										"src": "11413:70:5",
										"text": " @dev Returns the number of values in the set. O(1)."
									},
									"id": 1346,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "length",
									"nameLocation": "11497:6:5",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1336,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1335,
												"mutability": "mutable",
												"name": "set",
												"nameLocation": "11520:3:5",
												"nodeType": "VariableDeclaration",
												"scope": 1346,
												"src": "11504:19:5",
												"stateVariable": false,
												"storageLocation": "storage",
												"typeDescriptions": {
													"typeIdentifier": "t_struct$_UintSet_$1268_storage_ptr",
													"typeString": "struct EnumerableSet.UintSet"
												},
												"typeName": {
													"id": 1334,
													"nodeType": "UserDefinedTypeName",
													"pathNode": {
														"id": 1333,
														"name": "UintSet",
														"nameLocations": [
															"11504:7:5"
														],
														"nodeType": "IdentifierPath",
														"referencedDeclaration": 1268,
														"src": "11504:7:5"
													},
													"referencedDeclaration": 1268,
													"src": "11504:7:5",
													"typeDescriptions": {
														"typeIdentifier": "t_struct$_UintSet_$1268_storage_ptr",
														"typeString": "struct EnumerableSet.UintSet"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "11503:21:5"
									},
									"returnParameters": {
										"id": 1339,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1338,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1346,
												"src": "11548:7:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1337,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "11548:7:5",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "11547:9:5"
									},
									"scope": 1398,
									"src": "11488:112:5",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 1366,
										"nodeType": "Block",
										"src": "12022:55:5",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"arguments": [
																{
																	"expression": {
																		"id": 1360,
																		"name": "set",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1350,
																		"src": "12051:3:5",
																		"typeDescriptions": {
																			"typeIdentifier": "t_struct$_UintSet_$1268_storage_ptr",
																			"typeString": "struct EnumerableSet.UintSet storage pointer"
																		}
																	},
																	"id": 1361,
																	"isConstant": false,
																	"isLValue": true,
																	"isPure": false,
																	"lValueRequested": false,
																	"memberLocation": "12055:6:5",
																	"memberName": "_inner",
																	"nodeType": "MemberAccess",
																	"referencedDeclaration": 1267,
																	"src": "12051:10:5",
																	"typeDescriptions": {
																		"typeIdentifier": "t_struct$_Set_$796_storage",
																		"typeString": "struct EnumerableSet.Set storage ref"
																	}
																},
																{
																	"id": 1362,
																	"name": "index",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1352,
																	"src": "12063:5:5",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_struct$_Set_$796_storage",
																		"typeString": "struct EnumerableSet.Set storage ref"
																	},
																	{
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																],
																"id": 1359,
																"name": "_at",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 972,
																"src": "12047:3:5",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_internal_view$_t_struct$_Set_$796_storage_ptr_$_t_uint256_$returns$_t_bytes32_$",
																	"typeString": "function (struct EnumerableSet.Set storage pointer,uint256) view returns (bytes32)"
																}
															},
															"id": 1363,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "12047:22:5",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_bytes32",
																"typeString": "bytes32"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bytes32",
																"typeString": "bytes32"
															}
														],
														"id": 1358,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"lValueRequested": false,
														"nodeType": "ElementaryTypeNameExpression",
														"src": "12039:7:5",
														"typeDescriptions": {
															"typeIdentifier": "t_type$_t_uint256_$",
															"typeString": "type(uint256)"
														},
														"typeName": {
															"id": 1357,
															"name": "uint256",
															"nodeType": "ElementaryTypeName",
															"src": "12039:7:5",
															"typeDescriptions": {}
														}
													},
													"id": 1364,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "typeConversion",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "12039:31:5",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"functionReturnParameters": 1356,
												"id": 1365,
												"nodeType": "Return",
												"src": "12032:38:5"
											}
										]
									},
									"documentation": {
										"id": 1347,
										"nodeType": "StructuredDocumentation",
										"src": "11606:331:5",
										"text": " @dev Returns the value stored at position `index` in the set. O(1).\n Note that there are no guarantees on the ordering of values inside the\n array, and it may change when more values are added or removed.\n Requirements:\n - `index` must be strictly less than {length}."
									},
									"id": 1367,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "at",
									"nameLocation": "11951:2:5",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1353,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1350,
												"mutability": "mutable",
												"name": "set",
												"nameLocation": "11970:3:5",
												"nodeType": "VariableDeclaration",
												"scope": 1367,
												"src": "11954:19:5",
												"stateVariable": false,
												"storageLocation": "storage",
												"typeDescriptions": {
													"typeIdentifier": "t_struct$_UintSet_$1268_storage_ptr",
													"typeString": "struct EnumerableSet.UintSet"
												},
												"typeName": {
													"id": 1349,
													"nodeType": "UserDefinedTypeName",
													"pathNode": {
														"id": 1348,
														"name": "UintSet",
														"nameLocations": [
															"11954:7:5"
														],
														"nodeType": "IdentifierPath",
														"referencedDeclaration": 1268,
														"src": "11954:7:5"
													},
													"referencedDeclaration": 1268,
													"src": "11954:7:5",
													"typeDescriptions": {
														"typeIdentifier": "t_struct$_UintSet_$1268_storage_ptr",
														"typeString": "struct EnumerableSet.UintSet"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1352,
												"mutability": "mutable",
												"name": "index",
												"nameLocation": "11983:5:5",
												"nodeType": "VariableDeclaration",
												"scope": 1367,
												"src": "11975:13:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1351,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "11975:7:5",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "11953:36:5"
									},
									"returnParameters": {
										"id": 1356,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1355,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1367,
												"src": "12013:7:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1354,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "12013:7:5",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "12012:9:5"
									},
									"scope": 1398,
									"src": "11942:135:5",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 1396,
										"nodeType": "Block",
										"src": "12695:192:5",
										"statements": [
											{
												"assignments": [
													1381
												],
												"declarations": [
													{
														"constant": false,
														"id": 1381,
														"mutability": "mutable",
														"name": "store",
														"nameLocation": "12722:5:5",
														"nodeType": "VariableDeclaration",
														"scope": 1396,
														"src": "12705:22:5",
														"stateVariable": false,
														"storageLocation": "memory",
														"typeDescriptions": {
															"typeIdentifier": "t_array$_t_bytes32_$dyn_memory_ptr",
															"typeString": "bytes32[]"
														},
														"typeName": {
															"baseType": {
																"id": 1379,
																"name": "bytes32",
																"nodeType": "ElementaryTypeName",
																"src": "12705:7:5",
																"typeDescriptions": {
																	"typeIdentifier": "t_bytes32",
																	"typeString": "bytes32"
																}
															},
															"id": 1380,
															"nodeType": "ArrayTypeName",
															"src": "12705:9:5",
															"typeDescriptions": {
																"typeIdentifier": "t_array$_t_bytes32_$dyn_storage_ptr",
																"typeString": "bytes32[]"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 1386,
												"initialValue": {
													"arguments": [
														{
															"expression": {
																"id": 1383,
																"name": "set",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1371,
																"src": "12738:3:5",
																"typeDescriptions": {
																	"typeIdentifier": "t_struct$_UintSet_$1268_storage_ptr",
																	"typeString": "struct EnumerableSet.UintSet storage pointer"
																}
															},
															"id": 1384,
															"isConstant": false,
															"isLValue": true,
															"isPure": false,
															"lValueRequested": false,
															"memberLocation": "12742:6:5",
															"memberName": "_inner",
															"nodeType": "MemberAccess",
															"referencedDeclaration": 1267,
															"src": "12738:10:5",
															"typeDescriptions": {
																"typeIdentifier": "t_struct$_Set_$796_storage",
																"typeString": "struct EnumerableSet.Set storage ref"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_struct$_Set_$796_storage",
																"typeString": "struct EnumerableSet.Set storage ref"
															}
														],
														"id": 1382,
														"name": "_values",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 986,
														"src": "12730:7:5",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_view$_t_struct$_Set_$796_storage_ptr_$returns$_t_array$_t_bytes32_$dyn_memory_ptr_$",
															"typeString": "function (struct EnumerableSet.Set storage pointer) view returns (bytes32[] memory)"
														}
													},
													"id": 1385,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "12730:19:5",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_array$_t_bytes32_$dyn_memory_ptr",
														"typeString": "bytes32[] memory"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "12705:44:5"
											},
											{
												"assignments": [
													1391
												],
												"declarations": [
													{
														"constant": false,
														"id": 1391,
														"mutability": "mutable",
														"name": "result",
														"nameLocation": "12776:6:5",
														"nodeType": "VariableDeclaration",
														"scope": 1396,
														"src": "12759:23:5",
														"stateVariable": false,
														"storageLocation": "memory",
														"typeDescriptions": {
															"typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
															"typeString": "uint256[]"
														},
														"typeName": {
															"baseType": {
																"id": 1389,
																"name": "uint256",
																"nodeType": "ElementaryTypeName",
																"src": "12759:7:5",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"id": 1390,
															"nodeType": "ArrayTypeName",
															"src": "12759:9:5",
															"typeDescriptions": {
																"typeIdentifier": "t_array$_t_uint256_$dyn_storage_ptr",
																"typeString": "uint256[]"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 1392,
												"nodeType": "VariableDeclarationStatement",
												"src": "12759:23:5"
											},
											{
												"AST": {
													"nativeSrc": "12818:39:5",
													"nodeType": "YulBlock",
													"src": "12818:39:5",
													"statements": [
														{
															"nativeSrc": "12832:15:5",
															"nodeType": "YulAssignment",
															"src": "12832:15:5",
															"value": {
																"name": "store",
																"nativeSrc": "12842:5:5",
																"nodeType": "YulIdentifier",
																"src": "12842:5:5"
															},
															"variableNames": [
																{
																	"name": "result",
																	"nativeSrc": "12832:6:5",
																	"nodeType": "YulIdentifier",
																	"src": "12832:6:5"
																}
															]
														}
													]
												},
												"evmVersion": "cancun",
												"externalReferences": [
													{
														"declaration": 1391,
														"isOffset": false,
														"isSlot": false,
														"src": "12832:6:5",
														"valueSize": 1
													},
													{
														"declaration": 1381,
														"isOffset": false,
														"isSlot": false,
														"src": "12842:5:5",
														"valueSize": 1
													}
												],
												"flags": [
													"memory-safe"
												],
												"id": 1393,
												"nodeType": "InlineAssembly",
												"src": "12793:64:5"
											},
											{
												"expression": {
													"id": 1394,
													"name": "result",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 1391,
													"src": "12874:6:5",
													"typeDescriptions": {
														"typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
														"typeString": "uint256[] memory"
													}
												},
												"functionReturnParameters": 1376,
												"id": 1395,
												"nodeType": "Return",
												"src": "12867:13:5"
											}
										]
									},
									"documentation": {
										"id": 1368,
										"nodeType": "StructuredDocumentation",
										"src": "12083:529:5",
										"text": " @dev Return the entire set in an array\n WARNING: This operation will copy the entire storage to memory, which can be quite expensive. This is designed\n to mostly be used by view accessors that are queried without any gas fees. Developers should keep in mind that\n this function has an unbounded cost, and using it as part of a state-changing function may render the function\n uncallable if the set grows to a point where copying to memory consumes too much gas to fit in a block."
									},
									"id": 1397,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "values",
									"nameLocation": "12626:6:5",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1372,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1371,
												"mutability": "mutable",
												"name": "set",
												"nameLocation": "12649:3:5",
												"nodeType": "VariableDeclaration",
												"scope": 1397,
												"src": "12633:19:5",
												"stateVariable": false,
												"storageLocation": "storage",
												"typeDescriptions": {
													"typeIdentifier": "t_struct$_UintSet_$1268_storage_ptr",
													"typeString": "struct EnumerableSet.UintSet"
												},
												"typeName": {
													"id": 1370,
													"nodeType": "UserDefinedTypeName",
													"pathNode": {
														"id": 1369,
														"name": "UintSet",
														"nameLocations": [
															"12633:7:5"
														],
														"nodeType": "IdentifierPath",
														"referencedDeclaration": 1268,
														"src": "12633:7:5"
													},
													"referencedDeclaration": 1268,
													"src": "12633:7:5",
													"typeDescriptions": {
														"typeIdentifier": "t_struct$_UintSet_$1268_storage_ptr",
														"typeString": "struct EnumerableSet.UintSet"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "12632:21:5"
									},
									"returnParameters": {
										"id": 1376,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1375,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1397,
												"src": "12677:16:5",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
													"typeString": "uint256[]"
												},
												"typeName": {
													"baseType": {
														"id": 1373,
														"name": "uint256",
														"nodeType": "ElementaryTypeName",
														"src": "12677:7:5",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"id": 1374,
													"nodeType": "ArrayTypeName",
													"src": "12677:9:5",
													"typeDescriptions": {
														"typeIdentifier": "t_array$_t_uint256_$dyn_storage_ptr",
														"typeString": "uint256[]"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "12676:18:5"
									},
									"scope": 1398,
									"src": "12617:270:5",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "internal"
								}
							],
							"scope": 1399,
							"src": "1330:11559:5",
							"usedErrors": [],
							"usedEvents": []
						}
					],
					"src": "205:12685:5"
				},
				"id": 5
			},
			"ERC20.sol": {
				"ast": {
					"absolutePath": "ERC20.sol",
					"exportedSymbols": {
						"Context": [
							785
						],
						"ERC20": [
							651
						],
						"EnumerableSet": [
							1398
						],
						"IERC20": [
							729
						],
						"IERC20Errors": [
							41
						],
						"IERC20Metadata": [
							755
						],
						"WeightedVoting": [
							1753
						]
					},
					"id": 1754,
					"license": "UNLICENSED",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 1400,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".17"
							],
							"nodeType": "PragmaDirective",
							"src": "39:24:6"
						},
						{
							"absolutePath": "@openzeppelin/contracts/token/ERC20/ERC20.sol",
							"file": "@openzeppelin/contracts/token/ERC20/ERC20.sol",
							"id": 1401,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 1754,
							"sourceUnit": 652,
							"src": "145:55:6",
							"symbolAliases": [],
							"unitAlias": ""
						},
						{
							"absolutePath": "@openzeppelin/contracts/utils/structs/EnumerableSet.sol",
							"file": "@openzeppelin/contracts/utils/structs/EnumerableSet.sol",
							"id": 1402,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 1754,
							"sourceUnit": 1399,
							"src": "201:65:6",
							"symbolAliases": [],
							"unitAlias": ""
						},
						{
							"abstract": false,
							"baseContracts": [
								{
									"baseName": {
										"id": 1403,
										"name": "ERC20",
										"nameLocations": [
											"345:5:6"
										],
										"nodeType": "IdentifierPath",
										"referencedDeclaration": 651,
										"src": "345:5:6"
									},
									"id": 1404,
									"nodeType": "InheritanceSpecifier",
									"src": "345:5:6"
								}
							],
							"canonicalName": "WeightedVoting",
							"contractDependencies": [],
							"contractKind": "contract",
							"fullyImplemented": true,
							"id": 1753,
							"linearizedBaseContracts": [
								1753,
								651,
								41,
								755,
								729,
								785
							],
							"name": "WeightedVoting",
							"nameLocation": "327:14:6",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"constant": false,
									"id": 1407,
									"mutability": "mutable",
									"name": "salt",
									"nameLocation": "372:4:6",
									"nodeType": "VariableDeclaration",
									"scope": 1753,
									"src": "357:29:6",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_string_storage",
										"typeString": "string"
									},
									"typeName": {
										"id": 1405,
										"name": "string",
										"nodeType": "ElementaryTypeName",
										"src": "357:6:6",
										"typeDescriptions": {
											"typeIdentifier": "t_string_storage_ptr",
											"typeString": "string"
										}
									},
									"value": {
										"hexValue": "76616c7565",
										"id": 1406,
										"isConstant": false,
										"isLValue": false,
										"isPure": true,
										"kind": "string",
										"lValueRequested": false,
										"nodeType": "Literal",
										"src": "379:7:6",
										"typeDescriptions": {
											"typeIdentifier": "t_stringliteral_81afeeaff0ed5cee7d05a21078399c2f56226b0cd5657062500cef4c4e736f85",
											"typeString": "literal_string \"value\""
										},
										"value": "value"
									},
									"visibility": "private"
								},
								{
									"global": false,
									"id": 1411,
									"libraryName": {
										"id": 1408,
										"name": "EnumerableSet",
										"nameLocations": [
											"440:13:6"
										],
										"nodeType": "IdentifierPath",
										"referencedDeclaration": 1398,
										"src": "440:13:6"
									},
									"nodeType": "UsingForDirective",
									"src": "434:49:6",
									"typeName": {
										"id": 1410,
										"nodeType": "UserDefinedTypeName",
										"pathNode": {
											"id": 1409,
											"name": "EnumerableSet.AddressSet",
											"nameLocations": [
												"458:13:6",
												"472:10:6"
											],
											"nodeType": "IdentifierPath",
											"referencedDeclaration": 1111,
											"src": "458:24:6"
										},
										"referencedDeclaration": 1111,
										"src": "458:24:6",
										"typeDescriptions": {
											"typeIdentifier": "t_struct$_AddressSet_$1111_storage_ptr",
											"typeString": "struct EnumerableSet.AddressSet"
										}
									}
								},
								{
									"errorSelector": "0b1327a6",
									"id": 1413,
									"name": "TokensClaimed",
									"nameLocation": "573:13:6",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 1412,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "586:2:6"
									},
									"src": "567:22:6"
								},
								{
									"errorSelector": "cbe24831",
									"id": 1415,
									"name": "AllTokensClaimed",
									"nameLocation": "646:16:6",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 1414,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "662:2:6"
									},
									"src": "640:25:6"
								},
								{
									"errorSelector": "8439960d",
									"id": 1417,
									"name": "NoTokensHeld",
									"nameLocation": "745:12:6",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 1416,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "757:2:6"
									},
									"src": "739:21:6"
								},
								{
									"errorSelector": "0d927300",
									"id": 1419,
									"name": "QuorumTooHigh",
									"nameLocation": "839:13:6",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 1418,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "852:2:6"
									},
									"src": "833:22:6"
								},
								{
									"errorSelector": "7c9a1cf9",
									"id": 1421,
									"name": "AlreadyVoted",
									"nameLocation": "921:12:6",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 1420,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "933:2:6"
									},
									"src": "915:21:6"
								},
								{
									"errorSelector": "66b6cb4a",
									"id": 1423,
									"name": "VotingClosed",
									"nameLocation": "994:12:6",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 1422,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1006:2:6"
									},
									"src": "988:21:6"
								},
								{
									"canonicalName": "WeightedVoting.Issue",
									"id": 1443,
									"members": [
										{
											"constant": false,
											"id": 1426,
											"mutability": "mutable",
											"name": "voters",
											"nameLocation": "1149:6:6",
											"nodeType": "VariableDeclaration",
											"scope": 1443,
											"src": "1124:31:6",
											"stateVariable": false,
											"storageLocation": "default",
											"typeDescriptions": {
												"typeIdentifier": "t_struct$_AddressSet_$1111_storage_ptr",
												"typeString": "struct EnumerableSet.AddressSet"
											},
											"typeName": {
												"id": 1425,
												"nodeType": "UserDefinedTypeName",
												"pathNode": {
													"id": 1424,
													"name": "EnumerableSet.AddressSet",
													"nameLocations": [
														"1124:13:6",
														"1138:10:6"
													],
													"nodeType": "IdentifierPath",
													"referencedDeclaration": 1111,
													"src": "1124:24:6"
												},
												"referencedDeclaration": 1111,
												"src": "1124:24:6",
												"typeDescriptions": {
													"typeIdentifier": "t_struct$_AddressSet_$1111_storage_ptr",
													"typeString": "struct EnumerableSet.AddressSet"
												}
											},
											"visibility": "internal"
										},
										{
											"constant": false,
											"id": 1428,
											"mutability": "mutable",
											"name": "issueDesc",
											"nameLocation": "1189:9:6",
											"nodeType": "VariableDeclaration",
											"scope": 1443,
											"src": "1182:16:6",
											"stateVariable": false,
											"storageLocation": "default",
											"typeDescriptions": {
												"typeIdentifier": "t_string_storage_ptr",
												"typeString": "string"
											},
											"typeName": {
												"id": 1427,
												"name": "string",
												"nodeType": "ElementaryTypeName",
												"src": "1182:6:6",
												"typeDescriptions": {
													"typeIdentifier": "t_string_storage_ptr",
													"typeString": "string"
												}
											},
											"visibility": "internal"
										},
										{
											"constant": false,
											"id": 1430,
											"mutability": "mutable",
											"name": "quorum",
											"nameLocation": "1244:6:6",
											"nodeType": "VariableDeclaration",
											"scope": 1443,
											"src": "1236:14:6",
											"stateVariable": false,
											"storageLocation": "default",
											"typeDescriptions": {
												"typeIdentifier": "t_uint256",
												"typeString": "uint256"
											},
											"typeName": {
												"id": 1429,
												"name": "uint256",
												"nodeType": "ElementaryTypeName",
												"src": "1236:7:6",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												}
											},
											"visibility": "internal"
										},
										{
											"constant": false,
											"id": 1432,
											"mutability": "mutable",
											"name": "totalVotes",
											"nameLocation": "1306:10:6",
											"nodeType": "VariableDeclaration",
											"scope": 1443,
											"src": "1298:18:6",
											"stateVariable": false,
											"storageLocation": "default",
											"typeDescriptions": {
												"typeIdentifier": "t_uint256",
												"typeString": "uint256"
											},
											"typeName": {
												"id": 1431,
												"name": "uint256",
												"nodeType": "ElementaryTypeName",
												"src": "1298:7:6",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												}
											},
											"visibility": "internal"
										},
										{
											"constant": false,
											"id": 1434,
											"mutability": "mutable",
											"name": "votesFor",
											"nameLocation": "1366:8:6",
											"nodeType": "VariableDeclaration",
											"scope": 1443,
											"src": "1358:16:6",
											"stateVariable": false,
											"storageLocation": "default",
											"typeDescriptions": {
												"typeIdentifier": "t_uint256",
												"typeString": "uint256"
											},
											"typeName": {
												"id": 1433,
												"name": "uint256",
												"nodeType": "ElementaryTypeName",
												"src": "1358:7:6",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												}
											},
											"visibility": "internal"
										},
										{
											"constant": false,
											"id": 1436,
											"mutability": "mutable",
											"name": "votesAgainst",
											"nameLocation": "1426:12:6",
											"nodeType": "VariableDeclaration",
											"scope": 1443,
											"src": "1418:20:6",
											"stateVariable": false,
											"storageLocation": "default",
											"typeDescriptions": {
												"typeIdentifier": "t_uint256",
												"typeString": "uint256"
											},
											"typeName": {
												"id": 1435,
												"name": "uint256",
												"nodeType": "ElementaryTypeName",
												"src": "1418:7:6",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												}
											},
											"visibility": "internal"
										},
										{
											"constant": false,
											"id": 1438,
											"mutability": "mutable",
											"name": "votesAbstain",
											"nameLocation": "1489:12:6",
											"nodeType": "VariableDeclaration",
											"scope": 1443,
											"src": "1481:20:6",
											"stateVariable": false,
											"storageLocation": "default",
											"typeDescriptions": {
												"typeIdentifier": "t_uint256",
												"typeString": "uint256"
											},
											"typeName": {
												"id": 1437,
												"name": "uint256",
												"nodeType": "ElementaryTypeName",
												"src": "1481:7:6",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												}
											},
											"visibility": "internal"
										},
										{
											"constant": false,
											"id": 1440,
											"mutability": "mutable",
											"name": "passed",
											"nameLocation": "1551:6:6",
											"nodeType": "VariableDeclaration",
											"scope": 1443,
											"src": "1546:11:6",
											"stateVariable": false,
											"storageLocation": "default",
											"typeDescriptions": {
												"typeIdentifier": "t_bool",
												"typeString": "bool"
											},
											"typeName": {
												"id": 1439,
												"name": "bool",
												"nodeType": "ElementaryTypeName",
												"src": "1546:4:6",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												}
											},
											"visibility": "internal"
										},
										{
											"constant": false,
											"id": 1442,
											"mutability": "mutable",
											"name": "closed",
											"nameLocation": "1611:6:6",
											"nodeType": "VariableDeclaration",
											"scope": 1443,
											"src": "1606:11:6",
											"stateVariable": false,
											"storageLocation": "default",
											"typeDescriptions": {
												"typeIdentifier": "t_bool",
												"typeString": "bool"
											},
											"typeName": {
												"id": 1441,
												"name": "bool",
												"nodeType": "ElementaryTypeName",
												"src": "1606:4:6",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												}
											},
											"visibility": "internal"
										}
									],
									"name": "Issue",
									"nameLocation": "1108:5:6",
									"nodeType": "StructDefinition",
									"scope": 1753,
									"src": "1101:565:6",
									"visibility": "public"
								},
								{
									"canonicalName": "WeightedVoting.SerializedIssue",
									"id": 1463,
									"members": [
										{
											"constant": false,
											"id": 1446,
											"mutability": "mutable",
											"name": "voters",
											"nameLocation": "1761:6:6",
											"nodeType": "VariableDeclaration",
											"scope": 1463,
											"src": "1751:16:6",
											"stateVariable": false,
											"storageLocation": "default",
											"typeDescriptions": {
												"typeIdentifier": "t_array$_t_address_$dyn_storage_ptr",
												"typeString": "address[]"
											},
											"typeName": {
												"baseType": {
													"id": 1444,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1751:7:6",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"id": 1445,
												"nodeType": "ArrayTypeName",
												"src": "1751:9:6",
												"typeDescriptions": {
													"typeIdentifier": "t_array$_t_address_$dyn_storage_ptr",
													"typeString": "address[]"
												}
											},
											"visibility": "internal"
										},
										{
											"constant": false,
											"id": 1448,
											"mutability": "mutable",
											"name": "issueDesc",
											"nameLocation": "1803:9:6",
											"nodeType": "VariableDeclaration",
											"scope": 1463,
											"src": "1796:16:6",
											"stateVariable": false,
											"storageLocation": "default",
											"typeDescriptions": {
												"typeIdentifier": "t_string_storage_ptr",
												"typeString": "string"
											},
											"typeName": {
												"id": 1447,
												"name": "string",
												"nodeType": "ElementaryTypeName",
												"src": "1796:6:6",
												"typeDescriptions": {
													"typeIdentifier": "t_string_storage_ptr",
													"typeString": "string"
												}
											},
											"visibility": "internal"
										},
										{
											"constant": false,
											"id": 1450,
											"mutability": "mutable",
											"name": "quorum",
											"nameLocation": "1858:6:6",
											"nodeType": "VariableDeclaration",
											"scope": 1463,
											"src": "1850:14:6",
											"stateVariable": false,
											"storageLocation": "default",
											"typeDescriptions": {
												"typeIdentifier": "t_uint256",
												"typeString": "uint256"
											},
											"typeName": {
												"id": 1449,
												"name": "uint256",
												"nodeType": "ElementaryTypeName",
												"src": "1850:7:6",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												}
											},
											"visibility": "internal"
										},
										{
											"constant": false,
											"id": 1452,
											"mutability": "mutable",
											"name": "totalVotes",
											"nameLocation": "1920:10:6",
											"nodeType": "VariableDeclaration",
											"scope": 1463,
											"src": "1912:18:6",
											"stateVariable": false,
											"storageLocation": "default",
											"typeDescriptions": {
												"typeIdentifier": "t_uint256",
												"typeString": "uint256"
											},
											"typeName": {
												"id": 1451,
												"name": "uint256",
												"nodeType": "ElementaryTypeName",
												"src": "1912:7:6",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												}
											},
											"visibility": "internal"
										},
										{
											"constant": false,
											"id": 1454,
											"mutability": "mutable",
											"name": "votesFor",
											"nameLocation": "1980:8:6",
											"nodeType": "VariableDeclaration",
											"scope": 1463,
											"src": "1972:16:6",
											"stateVariable": false,
											"storageLocation": "default",
											"typeDescriptions": {
												"typeIdentifier": "t_uint256",
												"typeString": "uint256"
											},
											"typeName": {
												"id": 1453,
												"name": "uint256",
												"nodeType": "ElementaryTypeName",
												"src": "1972:7:6",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												}
											},
											"visibility": "internal"
										},
										{
											"constant": false,
											"id": 1456,
											"mutability": "mutable",
											"name": "votesAgainst",
											"nameLocation": "2040:12:6",
											"nodeType": "VariableDeclaration",
											"scope": 1463,
											"src": "2032:20:6",
											"stateVariable": false,
											"storageLocation": "default",
											"typeDescriptions": {
												"typeIdentifier": "t_uint256",
												"typeString": "uint256"
											},
											"typeName": {
												"id": 1455,
												"name": "uint256",
												"nodeType": "ElementaryTypeName",
												"src": "2032:7:6",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												}
											},
											"visibility": "internal"
										},
										{
											"constant": false,
											"id": 1458,
											"mutability": "mutable",
											"name": "votesAbstain",
											"nameLocation": "2103:12:6",
											"nodeType": "VariableDeclaration",
											"scope": 1463,
											"src": "2095:20:6",
											"stateVariable": false,
											"storageLocation": "default",
											"typeDescriptions": {
												"typeIdentifier": "t_uint256",
												"typeString": "uint256"
											},
											"typeName": {
												"id": 1457,
												"name": "uint256",
												"nodeType": "ElementaryTypeName",
												"src": "2095:7:6",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												}
											},
											"visibility": "internal"
										},
										{
											"constant": false,
											"id": 1460,
											"mutability": "mutable",
											"name": "passed",
											"nameLocation": "2165:6:6",
											"nodeType": "VariableDeclaration",
											"scope": 1463,
											"src": "2160:11:6",
											"stateVariable": false,
											"storageLocation": "default",
											"typeDescriptions": {
												"typeIdentifier": "t_bool",
												"typeString": "bool"
											},
											"typeName": {
												"id": 1459,
												"name": "bool",
												"nodeType": "ElementaryTypeName",
												"src": "2160:4:6",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												}
											},
											"visibility": "internal"
										},
										{
											"constant": false,
											"id": 1462,
											"mutability": "mutable",
											"name": "closed",
											"nameLocation": "2225:6:6",
											"nodeType": "VariableDeclaration",
											"scope": 1463,
											"src": "2220:11:6",
											"stateVariable": false,
											"storageLocation": "default",
											"typeDescriptions": {
												"typeIdentifier": "t_bool",
												"typeString": "bool"
											},
											"typeName": {
												"id": 1461,
												"name": "bool",
												"nodeType": "ElementaryTypeName",
												"src": "2220:4:6",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												}
											},
											"visibility": "internal"
										}
									],
									"name": "SerializedIssue",
									"nameLocation": "1725:15:6",
									"nodeType": "StructDefinition",
									"scope": 1753,
									"src": "1718:562:6",
									"visibility": "public"
								},
								{
									"canonicalName": "WeightedVoting.Vote",
									"id": 1467,
									"members": [
										{
											"id": 1464,
											"name": "AGAINST",
											"nameLocation": "2354:7:6",
											"nodeType": "EnumValue",
											"src": "2354:7:6"
										},
										{
											"id": 1465,
											"name": "FOR",
											"nameLocation": "2371:3:6",
											"nodeType": "EnumValue",
											"src": "2371:3:6"
										},
										{
											"id": 1466,
											"name": "ABSTAIN",
											"nameLocation": "2384:7:6",
											"nodeType": "EnumValue",
											"src": "2384:7:6"
										}
									],
									"name": "Vote",
									"nameLocation": "2339:4:6",
									"nodeType": "EnumDefinition",
									"src": "2334:63:6"
								},
								{
									"constant": false,
									"id": 1471,
									"mutability": "mutable",
									"name": "issues",
									"nameLocation": "2453:6:6",
									"nodeType": "VariableDeclaration",
									"scope": 1753,
									"src": "2436:23:6",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_array$_t_struct$_Issue_$1443_storage_$dyn_storage",
										"typeString": "struct WeightedVoting.Issue[]"
									},
									"typeName": {
										"baseType": {
											"id": 1469,
											"nodeType": "UserDefinedTypeName",
											"pathNode": {
												"id": 1468,
												"name": "Issue",
												"nameLocations": [
													"2436:5:6"
												],
												"nodeType": "IdentifierPath",
												"referencedDeclaration": 1443,
												"src": "2436:5:6"
											},
											"referencedDeclaration": 1443,
											"src": "2436:5:6",
											"typeDescriptions": {
												"typeIdentifier": "t_struct$_Issue_$1443_storage_ptr",
												"typeString": "struct WeightedVoting.Issue"
											}
										},
										"id": 1470,
										"nodeType": "ArrayTypeName",
										"src": "2436:7:6",
										"typeDescriptions": {
											"typeIdentifier": "t_array$_t_struct$_Issue_$1443_storage_$dyn_storage_ptr",
											"typeString": "struct WeightedVoting.Issue[]"
										}
									},
									"visibility": "internal"
								},
								{
									"constant": false,
									"functionSelector": "624601b6",
									"id": 1475,
									"mutability": "mutable",
									"name": "tokensClaimed",
									"nameLocation": "2558:13:6",
									"nodeType": "VariableDeclaration",
									"scope": 1753,
									"src": "2526:45:6",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_mapping$_t_address_$_t_bool_$",
										"typeString": "mapping(address => bool)"
									},
									"typeName": {
										"id": 1474,
										"keyName": "",
										"keyNameLocation": "-1:-1:-1",
										"keyType": {
											"id": 1472,
											"name": "address",
											"nodeType": "ElementaryTypeName",
											"src": "2534:7:6",
											"typeDescriptions": {
												"typeIdentifier": "t_address",
												"typeString": "address"
											}
										},
										"nodeType": "Mapping",
										"src": "2526:24:6",
										"typeDescriptions": {
											"typeIdentifier": "t_mapping$_t_address_$_t_bool_$",
											"typeString": "mapping(address => bool)"
										},
										"valueName": "",
										"valueNameLocation": "-1:-1:-1",
										"valueType": {
											"id": 1473,
											"name": "bool",
											"nodeType": "ElementaryTypeName",
											"src": "2545:4:6",
											"typeDescriptions": {
												"typeIdentifier": "t_bool",
												"typeString": "bool"
											}
										}
									},
									"visibility": "public"
								},
								{
									"constant": false,
									"functionSelector": "d5abeb01",
									"id": 1478,
									"mutability": "mutable",
									"name": "maxSupply",
									"nameLocation": "2593:9:6",
									"nodeType": "VariableDeclaration",
									"scope": 1753,
									"src": "2578:34:6",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_uint256",
										"typeString": "uint256"
									},
									"typeName": {
										"id": 1476,
										"name": "uint256",
										"nodeType": "ElementaryTypeName",
										"src": "2578:7:6",
										"typeDescriptions": {
											"typeIdentifier": "t_uint256",
											"typeString": "uint256"
										}
									},
									"value": {
										"hexValue": "31303030303030",
										"id": 1477,
										"isConstant": false,
										"isLValue": false,
										"isPure": true,
										"kind": "number",
										"lValueRequested": false,
										"nodeType": "Literal",
										"src": "2605:7:6",
										"typeDescriptions": {
											"typeIdentifier": "t_rational_1000000_by_1",
											"typeString": "int_const 1000000"
										},
										"value": "1000000"
									},
									"visibility": "public"
								},
								{
									"constant": false,
									"functionSelector": "830953ab",
									"id": 1481,
									"mutability": "mutable",
									"name": "claimAmount",
									"nameLocation": "2661:11:6",
									"nodeType": "VariableDeclaration",
									"scope": 1753,
									"src": "2646:32:6",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_uint256",
										"typeString": "uint256"
									},
									"typeName": {
										"id": 1479,
										"name": "uint256",
										"nodeType": "ElementaryTypeName",
										"src": "2646:7:6",
										"typeDescriptions": {
											"typeIdentifier": "t_uint256",
											"typeString": "uint256"
										}
									},
									"value": {
										"hexValue": "313030",
										"id": 1480,
										"isConstant": false,
										"isLValue": false,
										"isPure": true,
										"kind": "number",
										"lValueRequested": false,
										"nodeType": "Literal",
										"src": "2675:3:6",
										"typeDescriptions": {
											"typeIdentifier": "t_rational_100_by_1",
											"typeString": "int_const 100"
										},
										"value": "100"
									},
									"visibility": "public"
								},
								{
									"constant": false,
									"id": 1484,
									"mutability": "mutable",
									"name": "saltt",
									"nameLocation": "2726:5:6",
									"nodeType": "VariableDeclaration",
									"scope": 1753,
									"src": "2719:20:6",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_string_storage",
										"typeString": "string"
									},
									"typeName": {
										"id": 1482,
										"name": "string",
										"nodeType": "ElementaryTypeName",
										"src": "2719:6:6",
										"typeDescriptions": {
											"typeIdentifier": "t_string_storage_ptr",
											"typeString": "string"
										}
									},
									"value": {
										"hexValue": "616e79",
										"id": 1483,
										"isConstant": false,
										"isLValue": false,
										"isPure": true,
										"kind": "string",
										"lValueRequested": false,
										"nodeType": "Literal",
										"src": "2734:5:6",
										"typeDescriptions": {
											"typeIdentifier": "t_stringliteral_fb79856d4be6e4152983d8f934d820ec61c255bb7f1581914e7da0f335bdbf33",
											"typeString": "literal_string \"any\""
										},
										"value": "any"
									},
									"visibility": "internal"
								},
								{
									"body": {
										"id": 1500,
										"nodeType": "Block",
										"src": "2931:78:6",
										"statements": [
											{
												"expression": {
													"arguments": [],
													"expression": {
														"argumentTypes": [],
														"expression": {
															"id": 1495,
															"name": "issues",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1471,
															"src": "2941:6:6",
															"typeDescriptions": {
																"typeIdentifier": "t_array$_t_struct$_Issue_$1443_storage_$dyn_storage",
																"typeString": "struct WeightedVoting.Issue storage ref[] storage ref"
															}
														},
														"id": 1497,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberLocation": "2948:4:6",
														"memberName": "push",
														"nodeType": "MemberAccess",
														"src": "2941:11:6",
														"typeDescriptions": {
															"typeIdentifier": "t_function_arraypush_nonpayable$_t_array$_t_struct$_Issue_$1443_storage_$dyn_storage_ptr_$returns$_t_struct$_Issue_$1443_storage_$attached_to$_t_array$_t_struct$_Issue_$1443_storage_$dyn_storage_ptr_$",
															"typeString": "function (struct WeightedVoting.Issue storage ref[] storage pointer) returns (struct WeightedVoting.Issue storage ref)"
														}
													},
													"id": 1498,
													"isConstant": false,
													"isLValue": true,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "2941:13:6",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_struct$_Issue_$1443_storage",
														"typeString": "struct WeightedVoting.Issue storage ref"
													}
												},
												"id": 1499,
												"nodeType": "ExpressionStatement",
												"src": "2941:13:6"
											}
										]
									},
									"id": 1501,
									"implemented": true,
									"kind": "constructor",
									"modifiers": [
										{
											"arguments": [
												{
													"id": 1491,
													"name": "_name",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 1486,
													"src": "2911:5:6",
													"typeDescriptions": {
														"typeIdentifier": "t_string_memory_ptr",
														"typeString": "string memory"
													}
												},
												{
													"id": 1492,
													"name": "_symbol",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 1488,
													"src": "2918:7:6",
													"typeDescriptions": {
														"typeIdentifier": "t_string_memory_ptr",
														"typeString": "string memory"
													}
												}
											],
											"id": 1493,
											"kind": "baseConstructorSpecifier",
											"modifierName": {
												"id": 1490,
												"name": "ERC20",
												"nameLocations": [
													"2905:5:6"
												],
												"nodeType": "IdentifierPath",
												"referencedDeclaration": 651,
												"src": "2905:5:6"
											},
											"nodeType": "ModifierInvocation",
											"src": "2905:21:6"
										}
									],
									"name": "",
									"nameLocation": "-1:-1:-1",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1489,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1486,
												"mutability": "mutable",
												"name": "_name",
												"nameLocation": "2867:5:6",
												"nodeType": "VariableDeclaration",
												"scope": 1501,
												"src": "2853:19:6",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_string_memory_ptr",
													"typeString": "string"
												},
												"typeName": {
													"id": 1485,
													"name": "string",
													"nodeType": "ElementaryTypeName",
													"src": "2853:6:6",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage_ptr",
														"typeString": "string"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1488,
												"mutability": "mutable",
												"name": "_symbol",
												"nameLocation": "2888:7:6",
												"nodeType": "VariableDeclaration",
												"scope": 1501,
												"src": "2874:21:6",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_string_memory_ptr",
													"typeString": "string"
												},
												"typeName": {
													"id": 1487,
													"name": "string",
													"nodeType": "ElementaryTypeName",
													"src": "2874:6:6",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage_ptr",
														"typeString": "string"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2852:44:6"
									},
									"returnParameters": {
										"id": 1494,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "2931:0:6"
									},
									"scope": 1753,
									"src": "2841:168:6",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "public"
								},
								{
									"body": {
										"id": 1537,
										"nodeType": "Block",
										"src": "3071:450:6",
										"statements": [
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 1509,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"commonType": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"id": 1507,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"leftExpression": {
															"arguments": [],
															"expression": {
																"argumentTypes": [],
																"id": 1504,
																"name": "totalSupply",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 224,
																"src": "3134:11:6",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_internal_view$__$returns$_t_uint256_$",
																	"typeString": "function () view returns (uint256)"
																}
															},
															"id": 1505,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "3134:13:6",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"nodeType": "BinaryOperation",
														"operator": "+",
														"rightExpression": {
															"id": 1506,
															"name": "claimAmount",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1481,
															"src": "3150:11:6",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"src": "3134:27:6",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": ">",
													"rightExpression": {
														"id": 1508,
														"name": "maxSupply",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1478,
														"src": "3164:9:6",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "3134:39:6",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 1514,
												"nodeType": "IfStatement",
												"src": "3130:95:6",
												"trueBody": {
													"id": 1513,
													"nodeType": "Block",
													"src": "3175:50:6",
													"statements": [
														{
															"errorCall": {
																"arguments": [],
																"expression": {
																	"argumentTypes": [],
																	"id": 1510,
																	"name": "AllTokensClaimed",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1415,
																	"src": "3196:16:6",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_error_pure$__$returns$_t_error_$",
																		"typeString": "function () pure returns (error)"
																	}
																},
																"id": 1511,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "3196:18:6",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_error",
																	"typeString": "error"
																}
															},
															"id": 1512,
															"nodeType": "RevertStatement",
															"src": "3189:25:6"
														}
													]
												}
											},
											{
												"condition": {
													"baseExpression": {
														"id": 1515,
														"name": "tokensClaimed",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1475,
														"src": "3296:13:6",
														"typeDescriptions": {
															"typeIdentifier": "t_mapping$_t_address_$_t_bool_$",
															"typeString": "mapping(address => bool)"
														}
													},
													"id": 1518,
													"indexExpression": {
														"expression": {
															"id": 1516,
															"name": "msg",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 4294967281,
															"src": "3310:3:6",
															"typeDescriptions": {
																"typeIdentifier": "t_magic_message",
																"typeString": "msg"
															}
														},
														"id": 1517,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberLocation": "3314:6:6",
														"memberName": "sender",
														"nodeType": "MemberAccess",
														"src": "3310:10:6",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"isConstant": false,
													"isLValue": true,
													"isPure": false,
													"lValueRequested": false,
													"nodeType": "IndexAccess",
													"src": "3296:25:6",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 1523,
												"nodeType": "IfStatement",
												"src": "3292:78:6",
												"trueBody": {
													"id": 1522,
													"nodeType": "Block",
													"src": "3323:47:6",
													"statements": [
														{
															"errorCall": {
																"arguments": [],
																"expression": {
																	"argumentTypes": [],
																	"id": 1519,
																	"name": "TokensClaimed",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1413,
																	"src": "3344:13:6",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_error_pure$__$returns$_t_error_$",
																		"typeString": "function () pure returns (error)"
																	}
																},
																"id": 1520,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "3344:15:6",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_error",
																	"typeString": "error"
																}
															},
															"id": 1521,
															"nodeType": "RevertStatement",
															"src": "3337:22:6"
														}
													]
												}
											},
											{
												"expression": {
													"arguments": [
														{
															"expression": {
																"id": 1525,
																"name": "msg",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 4294967281,
																"src": "3422:3:6",
																"typeDescriptions": {
																	"typeIdentifier": "t_magic_message",
																	"typeString": "msg"
																}
															},
															"id": 1526,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberLocation": "3426:6:6",
															"memberName": "sender",
															"nodeType": "MemberAccess",
															"src": "3422:10:6",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 1527,
															"name": "claimAmount",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1481,
															"src": "3434:11:6",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 1524,
														"name": "_mint",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 491,
														"src": "3416:5:6",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_uint256_$returns$__$",
															"typeString": "function (address,uint256)"
														}
													},
													"id": 1528,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "3416:30:6",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1529,
												"nodeType": "ExpressionStatement",
												"src": "3416:30:6"
											},
											{
												"expression": {
													"id": 1535,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"baseExpression": {
															"id": 1530,
															"name": "tokensClaimed",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1475,
															"src": "3456:13:6",
															"typeDescriptions": {
																"typeIdentifier": "t_mapping$_t_address_$_t_bool_$",
																"typeString": "mapping(address => bool)"
															}
														},
														"id": 1533,
														"indexExpression": {
															"expression": {
																"id": 1531,
																"name": "msg",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 4294967281,
																"src": "3470:3:6",
																"typeDescriptions": {
																	"typeIdentifier": "t_magic_message",
																	"typeString": "msg"
																}
															},
															"id": 1532,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberLocation": "3474:6:6",
															"memberName": "sender",
															"nodeType": "MemberAccess",
															"src": "3470:10:6",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": true,
														"nodeType": "IndexAccess",
														"src": "3456:25:6",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"hexValue": "74727565",
														"id": 1534,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "bool",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "3484:4:6",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														},
														"value": "true"
													},
													"src": "3456:32:6",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 1536,
												"nodeType": "ExpressionStatement",
												"src": "3456:32:6"
											}
										]
									},
									"functionSelector": "4e71d92d",
									"id": 1538,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "claim",
									"nameLocation": "3056:5:6",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1502,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "3061:2:6"
									},
									"returnParameters": {
										"id": 1503,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "3071:0:6"
									},
									"scope": 1753,
									"src": "3047:474:6",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "public"
								},
								{
									"body": {
										"id": 1591,
										"nodeType": "Block",
										"src": "3685:499:6",
										"statements": [
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 1552,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"arguments": [
															{
																"expression": {
																	"id": 1548,
																	"name": "msg",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 4294967281,
																	"src": "3757:3:6",
																	"typeDescriptions": {
																		"typeIdentifier": "t_magic_message",
																		"typeString": "msg"
																	}
																},
																"id": 1549,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"memberLocation": "3761:6:6",
																"memberName": "sender",
																"nodeType": "MemberAccess",
																"src": "3757:10:6",
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															],
															"id": 1547,
															"name": "balanceOf",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 237,
															"src": "3747:9:6",
															"typeDescriptions": {
																"typeIdentifier": "t_function_internal_view$_t_address_$returns$_t_uint256_$",
																"typeString": "function (address) view returns (uint256)"
															}
														},
														"id": 1550,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"kind": "functionCall",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "3747:21:6",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "==",
													"rightExpression": {
														"hexValue": "30",
														"id": 1551,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "number",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "3772:1:6",
														"typeDescriptions": {
															"typeIdentifier": "t_rational_0_by_1",
															"typeString": "int_const 0"
														},
														"value": "0"
													},
													"src": "3747:26:6",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 1557,
												"nodeType": "IfStatement",
												"src": "3743:78:6",
												"trueBody": {
													"id": 1556,
													"nodeType": "Block",
													"src": "3775:46:6",
													"statements": [
														{
															"errorCall": {
																"arguments": [],
																"expression": {
																	"argumentTypes": [],
																	"id": 1553,
																	"name": "NoTokensHeld",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1417,
																	"src": "3796:12:6",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_error_pure$__$returns$_t_error_$",
																		"typeString": "function () pure returns (error)"
																	}
																},
																"id": 1554,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "3796:14:6",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_error",
																	"typeString": "error"
																}
															},
															"id": 1555,
															"nodeType": "RevertStatement",
															"src": "3789:21:6"
														}
													]
												}
											},
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 1561,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 1558,
														"name": "_quorum",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1542,
														"src": "3903:7:6",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": ">",
													"rightExpression": {
														"arguments": [],
														"expression": {
															"argumentTypes": [],
															"id": 1559,
															"name": "totalSupply",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 224,
															"src": "3913:11:6",
															"typeDescriptions": {
																"typeIdentifier": "t_function_internal_view$__$returns$_t_uint256_$",
																"typeString": "function () view returns (uint256)"
															}
														},
														"id": 1560,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"kind": "functionCall",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "3913:13:6",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "3903:23:6",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 1566,
												"nodeType": "IfStatement",
												"src": "3899:76:6",
												"trueBody": {
													"id": 1565,
													"nodeType": "Block",
													"src": "3928:47:6",
													"statements": [
														{
															"errorCall": {
																"arguments": [],
																"expression": {
																	"argumentTypes": [],
																	"id": 1562,
																	"name": "QuorumTooHigh",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1419,
																	"src": "3949:13:6",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_error_pure$__$returns$_t_error_$",
																		"typeString": "function () pure returns (error)"
																	}
																},
																"id": 1563,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "3949:15:6",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_error",
																	"typeString": "error"
																}
															},
															"id": 1564,
															"nodeType": "RevertStatement",
															"src": "3942:22:6"
														}
													]
												}
											},
											{
												"assignments": [
													1569
												],
												"declarations": [
													{
														"constant": false,
														"id": 1569,
														"mutability": "mutable",
														"name": "_issue",
														"nameLocation": "4049:6:6",
														"nodeType": "VariableDeclaration",
														"scope": 1591,
														"src": "4035:20:6",
														"stateVariable": false,
														"storageLocation": "storage",
														"typeDescriptions": {
															"typeIdentifier": "t_struct$_Issue_$1443_storage_ptr",
															"typeString": "struct WeightedVoting.Issue"
														},
														"typeName": {
															"id": 1568,
															"nodeType": "UserDefinedTypeName",
															"pathNode": {
																"id": 1567,
																"name": "Issue",
																"nameLocations": [
																	"4035:5:6"
																],
																"nodeType": "IdentifierPath",
																"referencedDeclaration": 1443,
																"src": "4035:5:6"
															},
															"referencedDeclaration": 1443,
															"src": "4035:5:6",
															"typeDescriptions": {
																"typeIdentifier": "t_struct$_Issue_$1443_storage_ptr",
																"typeString": "struct WeightedVoting.Issue"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 1573,
												"initialValue": {
													"arguments": [],
													"expression": {
														"argumentTypes": [],
														"expression": {
															"id": 1570,
															"name": "issues",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1471,
															"src": "4058:6:6",
															"typeDescriptions": {
																"typeIdentifier": "t_array$_t_struct$_Issue_$1443_storage_$dyn_storage",
																"typeString": "struct WeightedVoting.Issue storage ref[] storage ref"
															}
														},
														"id": 1571,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberLocation": "4065:4:6",
														"memberName": "push",
														"nodeType": "MemberAccess",
														"src": "4058:11:6",
														"typeDescriptions": {
															"typeIdentifier": "t_function_arraypush_nonpayable$_t_array$_t_struct$_Issue_$1443_storage_$dyn_storage_ptr_$returns$_t_struct$_Issue_$1443_storage_$attached_to$_t_array$_t_struct$_Issue_$1443_storage_$dyn_storage_ptr_$",
															"typeString": "function (struct WeightedVoting.Issue storage ref[] storage pointer) returns (struct WeightedVoting.Issue storage ref)"
														}
													},
													"id": 1572,
													"isConstant": false,
													"isLValue": true,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "4058:13:6",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_struct$_Issue_$1443_storage",
														"typeString": "struct WeightedVoting.Issue storage ref"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "4035:36:6"
											},
											{
												"expression": {
													"id": 1578,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"expression": {
															"id": 1574,
															"name": "_issue",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1569,
															"src": "4081:6:6",
															"typeDescriptions": {
																"typeIdentifier": "t_struct$_Issue_$1443_storage_ptr",
																"typeString": "struct WeightedVoting.Issue storage pointer"
															}
														},
														"id": 1576,
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": true,
														"memberLocation": "4088:9:6",
														"memberName": "issueDesc",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 1428,
														"src": "4081:16:6",
														"typeDescriptions": {
															"typeIdentifier": "t_string_storage",
															"typeString": "string storage ref"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"id": 1577,
														"name": "_issueDesc",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1540,
														"src": "4100:10:6",
														"typeDescriptions": {
															"typeIdentifier": "t_string_calldata_ptr",
															"typeString": "string calldata"
														}
													},
													"src": "4081:29:6",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage",
														"typeString": "string storage ref"
													}
												},
												"id": 1579,
												"nodeType": "ExpressionStatement",
												"src": "4081:29:6"
											},
											{
												"expression": {
													"id": 1584,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"expression": {
															"id": 1580,
															"name": "_issue",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1569,
															"src": "4120:6:6",
															"typeDescriptions": {
																"typeIdentifier": "t_struct$_Issue_$1443_storage_ptr",
																"typeString": "struct WeightedVoting.Issue storage pointer"
															}
														},
														"id": 1582,
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": true,
														"memberLocation": "4127:6:6",
														"memberName": "quorum",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 1430,
														"src": "4120:13:6",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"id": 1583,
														"name": "_quorum",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1542,
														"src": "4136:7:6",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "4120:23:6",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"id": 1585,
												"nodeType": "ExpressionStatement",
												"src": "4120:23:6"
											},
											{
												"expression": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 1589,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"expression": {
															"id": 1586,
															"name": "issues",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1471,
															"src": "4160:6:6",
															"typeDescriptions": {
																"typeIdentifier": "t_array$_t_struct$_Issue_$1443_storage_$dyn_storage",
																"typeString": "struct WeightedVoting.Issue storage ref[] storage ref"
															}
														},
														"id": 1587,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberLocation": "4167:6:6",
														"memberName": "length",
														"nodeType": "MemberAccess",
														"src": "4160:13:6",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "-",
													"rightExpression": {
														"hexValue": "31",
														"id": 1588,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "number",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "4176:1:6",
														"typeDescriptions": {
															"typeIdentifier": "t_rational_1_by_1",
															"typeString": "int_const 1"
														},
														"value": "1"
													},
													"src": "4160:17:6",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"functionReturnParameters": 1546,
												"id": 1590,
												"nodeType": "Return",
												"src": "4153:24:6"
											}
										]
									},
									"functionSelector": "8615d855",
									"id": 1592,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "createIssue",
									"nameLocation": "3581:11:6",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1543,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1540,
												"mutability": "mutable",
												"name": "_issueDesc",
												"nameLocation": "3609:10:6",
												"nodeType": "VariableDeclaration",
												"scope": 1592,
												"src": "3593:26:6",
												"stateVariable": false,
												"storageLocation": "calldata",
												"typeDescriptions": {
													"typeIdentifier": "t_string_calldata_ptr",
													"typeString": "string"
												},
												"typeName": {
													"id": 1539,
													"name": "string",
													"nodeType": "ElementaryTypeName",
													"src": "3593:6:6",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage_ptr",
														"typeString": "string"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1542,
												"mutability": "mutable",
												"name": "_quorum",
												"nameLocation": "3629:7:6",
												"nodeType": "VariableDeclaration",
												"scope": 1592,
												"src": "3621:15:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1541,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "3621:7:6",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3592:45:6"
									},
									"returnParameters": {
										"id": 1546,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1545,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1592,
												"src": "3672:7:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1544,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "3672:7:6",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3671:9:6"
									},
									"scope": 1753,
									"src": "3572:612:6",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"body": {
										"id": 1630,
										"nodeType": "Block",
										"src": "4350:518:6",
										"statements": [
											{
												"assignments": [
													1602
												],
												"declarations": [
													{
														"constant": false,
														"id": 1602,
														"mutability": "mutable",
														"name": "_issue",
														"nameLocation": "4374:6:6",
														"nodeType": "VariableDeclaration",
														"scope": 1630,
														"src": "4360:20:6",
														"stateVariable": false,
														"storageLocation": "storage",
														"typeDescriptions": {
															"typeIdentifier": "t_struct$_Issue_$1443_storage_ptr",
															"typeString": "struct WeightedVoting.Issue"
														},
														"typeName": {
															"id": 1601,
															"nodeType": "UserDefinedTypeName",
															"pathNode": {
																"id": 1600,
																"name": "Issue",
																"nameLocations": [
																	"4360:5:6"
																],
																"nodeType": "IdentifierPath",
																"referencedDeclaration": 1443,
																"src": "4360:5:6"
															},
															"referencedDeclaration": 1443,
															"src": "4360:5:6",
															"typeDescriptions": {
																"typeIdentifier": "t_struct$_Issue_$1443_storage_ptr",
																"typeString": "struct WeightedVoting.Issue"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 1606,
												"initialValue": {
													"baseExpression": {
														"id": 1603,
														"name": "issues",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1471,
														"src": "4383:6:6",
														"typeDescriptions": {
															"typeIdentifier": "t_array$_t_struct$_Issue_$1443_storage_$dyn_storage",
															"typeString": "struct WeightedVoting.Issue storage ref[] storage ref"
														}
													},
													"id": 1605,
													"indexExpression": {
														"id": 1604,
														"name": "_issueId",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1594,
														"src": "4390:8:6",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"isConstant": false,
													"isLValue": true,
													"isPure": false,
													"lValueRequested": false,
													"nodeType": "IndexAccess",
													"src": "4383:16:6",
													"typeDescriptions": {
														"typeIdentifier": "t_struct$_Issue_$1443_storage",
														"typeString": "struct WeightedVoting.Issue storage ref"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "4360:39:6"
											},
											{
												"expression": {
													"arguments": [
														{
															"arguments": [],
															"expression": {
																"argumentTypes": [],
																"expression": {
																	"expression": {
																		"id": 1608,
																		"name": "_issue",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1602,
																		"src": "4470:6:6",
																		"typeDescriptions": {
																			"typeIdentifier": "t_struct$_Issue_$1443_storage_ptr",
																			"typeString": "struct WeightedVoting.Issue storage pointer"
																		}
																	},
																	"id": 1609,
																	"isConstant": false,
																	"isLValue": true,
																	"isPure": false,
																	"lValueRequested": false,
																	"memberLocation": "4477:6:6",
																	"memberName": "voters",
																	"nodeType": "MemberAccess",
																	"referencedDeclaration": 1426,
																	"src": "4470:13:6",
																	"typeDescriptions": {
																		"typeIdentifier": "t_struct$_AddressSet_$1111_storage",
																		"typeString": "struct EnumerableSet.AddressSet storage ref"
																	}
																},
																"id": 1610,
																"isConstant": false,
																"isLValue": true,
																"isPure": false,
																"lValueRequested": false,
																"memberLocation": "4484:6:6",
																"memberName": "values",
																"nodeType": "MemberAccess",
																"referencedDeclaration": 1264,
																"src": "4470:20:6",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_internal_view$_t_struct$_AddressSet_$1111_storage_ptr_$returns$_t_array$_t_address_$dyn_memory_ptr_$attached_to$_t_struct$_AddressSet_$1111_storage_ptr_$",
																	"typeString": "function (struct EnumerableSet.AddressSet storage pointer) view returns (address[] memory)"
																}
															},
															"id": 1611,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "4470:22:6",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_array$_t_address_$dyn_memory_ptr",
																"typeString": "address[] memory"
															}
														},
														{
															"expression": {
																"id": 1612,
																"name": "_issue",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1602,
																"src": "4521:6:6",
																"typeDescriptions": {
																	"typeIdentifier": "t_struct$_Issue_$1443_storage_ptr",
																	"typeString": "struct WeightedVoting.Issue storage pointer"
																}
															},
															"id": 1613,
															"isConstant": false,
															"isLValue": true,
															"isPure": false,
															"lValueRequested": false,
															"memberLocation": "4528:9:6",
															"memberName": "issueDesc",
															"nodeType": "MemberAccess",
															"referencedDeclaration": 1428,
															"src": "4521:16:6",
															"typeDescriptions": {
																"typeIdentifier": "t_string_storage",
																"typeString": "string storage ref"
															}
														},
														{
															"expression": {
																"id": 1614,
																"name": "_issue",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1602,
																"src": "4563:6:6",
																"typeDescriptions": {
																	"typeIdentifier": "t_struct$_Issue_$1443_storage_ptr",
																	"typeString": "struct WeightedVoting.Issue storage pointer"
																}
															},
															"id": 1615,
															"isConstant": false,
															"isLValue": true,
															"isPure": false,
															"lValueRequested": false,
															"memberLocation": "4570:6:6",
															"memberName": "quorum",
															"nodeType": "MemberAccess",
															"referencedDeclaration": 1430,
															"src": "4563:13:6",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														{
															"expression": {
																"id": 1616,
																"name": "_issue",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1602,
																"src": "4606:6:6",
																"typeDescriptions": {
																	"typeIdentifier": "t_struct$_Issue_$1443_storage_ptr",
																	"typeString": "struct WeightedVoting.Issue storage pointer"
																}
															},
															"id": 1617,
															"isConstant": false,
															"isLValue": true,
															"isPure": false,
															"lValueRequested": false,
															"memberLocation": "4613:10:6",
															"memberName": "totalVotes",
															"nodeType": "MemberAccess",
															"referencedDeclaration": 1432,
															"src": "4606:17:6",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														{
															"expression": {
																"id": 1618,
																"name": "_issue",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1602,
																"src": "4651:6:6",
																"typeDescriptions": {
																	"typeIdentifier": "t_struct$_Issue_$1443_storage_ptr",
																	"typeString": "struct WeightedVoting.Issue storage pointer"
																}
															},
															"id": 1619,
															"isConstant": false,
															"isLValue": true,
															"isPure": false,
															"lValueRequested": false,
															"memberLocation": "4658:8:6",
															"memberName": "votesFor",
															"nodeType": "MemberAccess",
															"referencedDeclaration": 1434,
															"src": "4651:15:6",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														{
															"expression": {
																"id": 1620,
																"name": "_issue",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1602,
																"src": "4698:6:6",
																"typeDescriptions": {
																	"typeIdentifier": "t_struct$_Issue_$1443_storage_ptr",
																	"typeString": "struct WeightedVoting.Issue storage pointer"
																}
															},
															"id": 1621,
															"isConstant": false,
															"isLValue": true,
															"isPure": false,
															"lValueRequested": false,
															"memberLocation": "4705:12:6",
															"memberName": "votesAgainst",
															"nodeType": "MemberAccess",
															"referencedDeclaration": 1436,
															"src": "4698:19:6",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														{
															"expression": {
																"id": 1622,
																"name": "_issue",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1602,
																"src": "4749:6:6",
																"typeDescriptions": {
																	"typeIdentifier": "t_struct$_Issue_$1443_storage_ptr",
																	"typeString": "struct WeightedVoting.Issue storage pointer"
																}
															},
															"id": 1623,
															"isConstant": false,
															"isLValue": true,
															"isPure": false,
															"lValueRequested": false,
															"memberLocation": "4756:12:6",
															"memberName": "votesAbstain",
															"nodeType": "MemberAccess",
															"referencedDeclaration": 1438,
															"src": "4749:19:6",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														{
															"expression": {
																"id": 1624,
																"name": "_issue",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1602,
																"src": "4794:6:6",
																"typeDescriptions": {
																	"typeIdentifier": "t_struct$_Issue_$1443_storage_ptr",
																	"typeString": "struct WeightedVoting.Issue storage pointer"
																}
															},
															"id": 1625,
															"isConstant": false,
															"isLValue": true,
															"isPure": false,
															"lValueRequested": false,
															"memberLocation": "4801:6:6",
															"memberName": "passed",
															"nodeType": "MemberAccess",
															"referencedDeclaration": 1440,
															"src": "4794:13:6",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"expression": {
																"id": 1626,
																"name": "_issue",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1602,
																"src": "4833:6:6",
																"typeDescriptions": {
																	"typeIdentifier": "t_struct$_Issue_$1443_storage_ptr",
																	"typeString": "struct WeightedVoting.Issue storage pointer"
																}
															},
															"id": 1627,
															"isConstant": false,
															"isLValue": true,
															"isPure": false,
															"lValueRequested": false,
															"memberLocation": "4840:6:6",
															"memberName": "closed",
															"nodeType": "MemberAccess",
															"referencedDeclaration": 1442,
															"src": "4833:13:6",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_array$_t_address_$dyn_memory_ptr",
																"typeString": "address[] memory"
															},
															{
																"typeIdentifier": "t_string_storage",
																"typeString": "string storage ref"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														],
														"id": 1607,
														"name": "SerializedIssue",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1463,
														"src": "4428:15:6",
														"typeDescriptions": {
															"typeIdentifier": "t_type$_t_struct$_SerializedIssue_$1463_storage_ptr_$",
															"typeString": "type(struct WeightedVoting.SerializedIssue storage pointer)"
														}
													},
													"id": 1628,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "structConstructorCall",
													"lValueRequested": false,
													"nameLocations": [
														"4462:6:6",
														"4510:9:6",
														"4555:6:6",
														"4594:10:6",
														"4641:8:6",
														"4684:12:6",
														"4735:12:6",
														"4786:6:6",
														"4825:6:6"
													],
													"names": [
														"voters",
														"issueDesc",
														"quorum",
														"totalVotes",
														"votesFor",
														"votesAgainst",
														"votesAbstain",
														"passed",
														"closed"
													],
													"nodeType": "FunctionCall",
													"src": "4428:433:6",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_struct$_SerializedIssue_$1463_memory_ptr",
														"typeString": "struct WeightedVoting.SerializedIssue memory"
													}
												},
												"functionReturnParameters": 1599,
												"id": 1629,
												"nodeType": "Return",
												"src": "4409:452:6"
											}
										]
									},
									"functionSelector": "976b3113",
									"id": 1631,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "getIssue",
									"nameLocation": "4248:8:6",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1595,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1594,
												"mutability": "mutable",
												"name": "_issueId",
												"nameLocation": "4265:8:6",
												"nodeType": "VariableDeclaration",
												"scope": 1631,
												"src": "4257:16:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1593,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "4257:7:6",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "4256:18:6"
									},
									"returnParameters": {
										"id": 1599,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1598,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1631,
												"src": "4322:22:6",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_struct$_SerializedIssue_$1463_memory_ptr",
													"typeString": "struct WeightedVoting.SerializedIssue"
												},
												"typeName": {
													"id": 1597,
													"nodeType": "UserDefinedTypeName",
													"pathNode": {
														"id": 1596,
														"name": "SerializedIssue",
														"nameLocations": [
															"4322:15:6"
														],
														"nodeType": "IdentifierPath",
														"referencedDeclaration": 1463,
														"src": "4322:15:6"
													},
													"referencedDeclaration": 1463,
													"src": "4322:15:6",
													"typeDescriptions": {
														"typeIdentifier": "t_struct$_SerializedIssue_$1463_storage_ptr",
														"typeString": "struct WeightedVoting.SerializedIssue"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "4321:24:6"
									},
									"scope": 1753,
									"src": "4239:629:6",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								},
								{
									"body": {
										"id": 1751,
										"nodeType": "Block",
										"src": "4974:1208:6",
										"statements": [
											{
												"assignments": [
													1641
												],
												"declarations": [
													{
														"constant": false,
														"id": 1641,
														"mutability": "mutable",
														"name": "_issue",
														"nameLocation": "4998:6:6",
														"nodeType": "VariableDeclaration",
														"scope": 1751,
														"src": "4984:20:6",
														"stateVariable": false,
														"storageLocation": "storage",
														"typeDescriptions": {
															"typeIdentifier": "t_struct$_Issue_$1443_storage_ptr",
															"typeString": "struct WeightedVoting.Issue"
														},
														"typeName": {
															"id": 1640,
															"nodeType": "UserDefinedTypeName",
															"pathNode": {
																"id": 1639,
																"name": "Issue",
																"nameLocations": [
																	"4984:5:6"
																],
																"nodeType": "IdentifierPath",
																"referencedDeclaration": 1443,
																"src": "4984:5:6"
															},
															"referencedDeclaration": 1443,
															"src": "4984:5:6",
															"typeDescriptions": {
																"typeIdentifier": "t_struct$_Issue_$1443_storage_ptr",
																"typeString": "struct WeightedVoting.Issue"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 1645,
												"initialValue": {
													"baseExpression": {
														"id": 1642,
														"name": "issues",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1471,
														"src": "5007:6:6",
														"typeDescriptions": {
															"typeIdentifier": "t_array$_t_struct$_Issue_$1443_storage_$dyn_storage",
															"typeString": "struct WeightedVoting.Issue storage ref[] storage ref"
														}
													},
													"id": 1644,
													"indexExpression": {
														"id": 1643,
														"name": "_issueId",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1633,
														"src": "5014:8:6",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"isConstant": false,
													"isLValue": true,
													"isPure": false,
													"lValueRequested": false,
													"nodeType": "IndexAccess",
													"src": "5007:16:6",
													"typeDescriptions": {
														"typeIdentifier": "t_struct$_Issue_$1443_storage",
														"typeString": "struct WeightedVoting.Issue storage ref"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "4984:39:6"
											},
											{
												"condition": {
													"expression": {
														"id": 1646,
														"name": "_issue",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1641,
														"src": "5078:6:6",
														"typeDescriptions": {
															"typeIdentifier": "t_struct$_Issue_$1443_storage_ptr",
															"typeString": "struct WeightedVoting.Issue storage pointer"
														}
													},
													"id": 1647,
													"isConstant": false,
													"isLValue": true,
													"isPure": false,
													"lValueRequested": false,
													"memberLocation": "5085:6:6",
													"memberName": "closed",
													"nodeType": "MemberAccess",
													"referencedDeclaration": 1442,
													"src": "5078:13:6",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 1652,
												"nodeType": "IfStatement",
												"src": "5074:65:6",
												"trueBody": {
													"id": 1651,
													"nodeType": "Block",
													"src": "5093:46:6",
													"statements": [
														{
															"errorCall": {
																"arguments": [],
																"expression": {
																	"argumentTypes": [],
																	"id": 1648,
																	"name": "VotingClosed",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1423,
																	"src": "5114:12:6",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_error_pure$__$returns$_t_error_$",
																		"typeString": "function () pure returns (error)"
																	}
																},
																"id": 1649,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "5114:14:6",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_error",
																	"typeString": "error"
																}
															},
															"id": 1650,
															"nodeType": "RevertStatement",
															"src": "5107:21:6"
														}
													]
												}
											},
											{
												"condition": {
													"arguments": [
														{
															"expression": {
																"id": 1656,
																"name": "msg",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 4294967281,
																"src": "5224:3:6",
																"typeDescriptions": {
																	"typeIdentifier": "t_magic_message",
																	"typeString": "msg"
																}
															},
															"id": 1657,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberLocation": "5228:6:6",
															"memberName": "sender",
															"nodeType": "MemberAccess",
															"src": "5224:10:6",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														],
														"expression": {
															"expression": {
																"id": 1653,
																"name": "_issue",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1641,
																"src": "5201:6:6",
																"typeDescriptions": {
																	"typeIdentifier": "t_struct$_Issue_$1443_storage_ptr",
																	"typeString": "struct WeightedVoting.Issue storage pointer"
																}
															},
															"id": 1654,
															"isConstant": false,
															"isLValue": true,
															"isPure": false,
															"lValueRequested": false,
															"memberLocation": "5208:6:6",
															"memberName": "voters",
															"nodeType": "MemberAccess",
															"referencedDeclaration": 1426,
															"src": "5201:13:6",
															"typeDescriptions": {
																"typeIdentifier": "t_struct$_AddressSet_$1111_storage",
																"typeString": "struct EnumerableSet.AddressSet storage ref"
															}
														},
														"id": 1655,
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": false,
														"memberLocation": "5215:8:6",
														"memberName": "contains",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 1192,
														"src": "5201:22:6",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_view$_t_struct$_AddressSet_$1111_storage_ptr_$_t_address_$returns$_t_bool_$attached_to$_t_struct$_AddressSet_$1111_storage_ptr_$",
															"typeString": "function (struct EnumerableSet.AddressSet storage pointer,address) view returns (bool)"
														}
													},
													"id": 1658,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "5201:34:6",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 1663,
												"nodeType": "IfStatement",
												"src": "5197:86:6",
												"trueBody": {
													"id": 1662,
													"nodeType": "Block",
													"src": "5237:46:6",
													"statements": [
														{
															"errorCall": {
																"arguments": [],
																"expression": {
																	"argumentTypes": [],
																	"id": 1659,
																	"name": "AlreadyVoted",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1421,
																	"src": "5258:12:6",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_error_pure$__$returns$_t_error_$",
																		"typeString": "function () pure returns (error)"
																	}
																},
																"id": 1660,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "5258:14:6",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_error",
																	"typeString": "error"
																}
															},
															"id": 1661,
															"nodeType": "RevertStatement",
															"src": "5251:21:6"
														}
													]
												}
											},
											{
												"assignments": [
													1665
												],
												"declarations": [
													{
														"constant": false,
														"id": 1665,
														"mutability": "mutable",
														"name": "nTokens",
														"nameLocation": "5301:7:6",
														"nodeType": "VariableDeclaration",
														"scope": 1751,
														"src": "5293:15:6",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"typeName": {
															"id": 1664,
															"name": "uint256",
															"nodeType": "ElementaryTypeName",
															"src": "5293:7:6",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 1670,
												"initialValue": {
													"arguments": [
														{
															"expression": {
																"id": 1667,
																"name": "msg",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 4294967281,
																"src": "5321:3:6",
																"typeDescriptions": {
																	"typeIdentifier": "t_magic_message",
																	"typeString": "msg"
																}
															},
															"id": 1668,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberLocation": "5325:6:6",
															"memberName": "sender",
															"nodeType": "MemberAccess",
															"src": "5321:10:6",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														],
														"id": 1666,
														"name": "balanceOf",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 237,
														"src": "5311:9:6",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_view$_t_address_$returns$_t_uint256_$",
															"typeString": "function (address) view returns (uint256)"
														}
													},
													"id": 1669,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "5311:21:6",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "5293:39:6"
											},
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 1673,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 1671,
														"name": "nTokens",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1665,
														"src": "5394:7:6",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "==",
													"rightExpression": {
														"hexValue": "30",
														"id": 1672,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "number",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "5405:1:6",
														"typeDescriptions": {
															"typeIdentifier": "t_rational_0_by_1",
															"typeString": "int_const 0"
														},
														"value": "0"
													},
													"src": "5394:12:6",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 1678,
												"nodeType": "IfStatement",
												"src": "5390:64:6",
												"trueBody": {
													"id": 1677,
													"nodeType": "Block",
													"src": "5408:46:6",
													"statements": [
														{
															"errorCall": {
																"arguments": [],
																"expression": {
																	"argumentTypes": [],
																	"id": 1674,
																	"name": "NoTokensHeld",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1417,
																	"src": "5429:12:6",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_error_pure$__$returns$_t_error_$",
																		"typeString": "function () pure returns (error)"
																	}
																},
																"id": 1675,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "5429:14:6",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_error",
																	"typeString": "error"
																}
															},
															"id": 1676,
															"nodeType": "RevertStatement",
															"src": "5422:21:6"
														}
													]
												}
											},
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_enum$_Vote_$1467",
														"typeString": "enum WeightedVoting.Vote"
													},
													"id": 1682,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 1679,
														"name": "_vote",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1636,
														"src": "5523:5:6",
														"typeDescriptions": {
															"typeIdentifier": "t_enum$_Vote_$1467",
															"typeString": "enum WeightedVoting.Vote"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "==",
													"rightExpression": {
														"expression": {
															"id": 1680,
															"name": "Vote",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1467,
															"src": "5532:4:6",
															"typeDescriptions": {
																"typeIdentifier": "t_type$_t_enum$_Vote_$1467_$",
																"typeString": "type(enum WeightedVoting.Vote)"
															}
														},
														"id": 1681,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"lValueRequested": false,
														"memberLocation": "5537:7:6",
														"memberName": "AGAINST",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 1464,
														"src": "5532:12:6",
														"typeDescriptions": {
															"typeIdentifier": "t_enum$_Vote_$1467",
															"typeString": "enum WeightedVoting.Vote"
														}
													},
													"src": "5523:21:6",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"falseBody": {
													"condition": {
														"commonType": {
															"typeIdentifier": "t_enum$_Vote_$1467",
															"typeString": "enum WeightedVoting.Vote"
														},
														"id": 1693,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"leftExpression": {
															"id": 1690,
															"name": "_vote",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1636,
															"src": "5611:5:6",
															"typeDescriptions": {
																"typeIdentifier": "t_enum$_Vote_$1467",
																"typeString": "enum WeightedVoting.Vote"
															}
														},
														"nodeType": "BinaryOperation",
														"operator": "==",
														"rightExpression": {
															"expression": {
																"id": 1691,
																"name": "Vote",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1467,
																"src": "5620:4:6",
																"typeDescriptions": {
																	"typeIdentifier": "t_type$_t_enum$_Vote_$1467_$",
																	"typeString": "type(enum WeightedVoting.Vote)"
																}
															},
															"id": 1692,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"lValueRequested": false,
															"memberLocation": "5625:3:6",
															"memberName": "FOR",
															"nodeType": "MemberAccess",
															"referencedDeclaration": 1465,
															"src": "5620:8:6",
															"typeDescriptions": {
																"typeIdentifier": "t_enum$_Vote_$1467",
																"typeString": "enum WeightedVoting.Vote"
															}
														},
														"src": "5611:17:6",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"falseBody": {
														"id": 1707,
														"nodeType": "Block",
														"src": "5687:55:6",
														"statements": [
															{
																"expression": {
																	"id": 1705,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"leftHandSide": {
																		"expression": {
																			"id": 1701,
																			"name": "_issue",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 1641,
																			"src": "5701:6:6",
																			"typeDescriptions": {
																				"typeIdentifier": "t_struct$_Issue_$1443_storage_ptr",
																				"typeString": "struct WeightedVoting.Issue storage pointer"
																			}
																		},
																		"id": 1703,
																		"isConstant": false,
																		"isLValue": true,
																		"isPure": false,
																		"lValueRequested": true,
																		"memberLocation": "5708:12:6",
																		"memberName": "votesAbstain",
																		"nodeType": "MemberAccess",
																		"referencedDeclaration": 1438,
																		"src": "5701:19:6",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"nodeType": "Assignment",
																	"operator": "+=",
																	"rightHandSide": {
																		"id": 1704,
																		"name": "nTokens",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1665,
																		"src": "5724:7:6",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"src": "5701:30:6",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"id": 1706,
																"nodeType": "ExpressionStatement",
																"src": "5701:30:6"
															}
														]
													},
													"id": 1708,
													"nodeType": "IfStatement",
													"src": "5607:135:6",
													"trueBody": {
														"id": 1700,
														"nodeType": "Block",
														"src": "5630:51:6",
														"statements": [
															{
																"expression": {
																	"id": 1698,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"leftHandSide": {
																		"expression": {
																			"id": 1694,
																			"name": "_issue",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 1641,
																			"src": "5644:6:6",
																			"typeDescriptions": {
																				"typeIdentifier": "t_struct$_Issue_$1443_storage_ptr",
																				"typeString": "struct WeightedVoting.Issue storage pointer"
																			}
																		},
																		"id": 1696,
																		"isConstant": false,
																		"isLValue": true,
																		"isPure": false,
																		"lValueRequested": true,
																		"memberLocation": "5651:8:6",
																		"memberName": "votesFor",
																		"nodeType": "MemberAccess",
																		"referencedDeclaration": 1434,
																		"src": "5644:15:6",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"nodeType": "Assignment",
																	"operator": "+=",
																	"rightHandSide": {
																		"id": 1697,
																		"name": "nTokens",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1665,
																		"src": "5663:7:6",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"src": "5644:26:6",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"id": 1699,
																"nodeType": "ExpressionStatement",
																"src": "5644:26:6"
															}
														]
													}
												},
												"id": 1709,
												"nodeType": "IfStatement",
												"src": "5519:223:6",
												"trueBody": {
													"id": 1689,
													"nodeType": "Block",
													"src": "5546:55:6",
													"statements": [
														{
															"expression": {
																"id": 1687,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftHandSide": {
																	"expression": {
																		"id": 1683,
																		"name": "_issue",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1641,
																		"src": "5560:6:6",
																		"typeDescriptions": {
																			"typeIdentifier": "t_struct$_Issue_$1443_storage_ptr",
																			"typeString": "struct WeightedVoting.Issue storage pointer"
																		}
																	},
																	"id": 1685,
																	"isConstant": false,
																	"isLValue": true,
																	"isPure": false,
																	"lValueRequested": true,
																	"memberLocation": "5567:12:6",
																	"memberName": "votesAgainst",
																	"nodeType": "MemberAccess",
																	"referencedDeclaration": 1436,
																	"src": "5560:19:6",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "Assignment",
																"operator": "+=",
																"rightHandSide": {
																	"id": 1686,
																	"name": "nTokens",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1665,
																	"src": "5583:7:6",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"src": "5560:30:6",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"id": 1688,
															"nodeType": "ExpressionStatement",
															"src": "5560:30:6"
														}
													]
												}
											},
											{
												"expression": {
													"arguments": [
														{
															"expression": {
																"id": 1715,
																"name": "msg",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 4294967281,
																"src": "5847:3:6",
																"typeDescriptions": {
																	"typeIdentifier": "t_magic_message",
																	"typeString": "msg"
																}
															},
															"id": 1716,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberLocation": "5851:6:6",
															"memberName": "sender",
															"nodeType": "MemberAccess",
															"src": "5847:10:6",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														],
														"expression": {
															"expression": {
																"id": 1710,
																"name": "_issue",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1641,
																"src": "5829:6:6",
																"typeDescriptions": {
																	"typeIdentifier": "t_struct$_Issue_$1443_storage_ptr",
																	"typeString": "struct WeightedVoting.Issue storage pointer"
																}
															},
															"id": 1713,
															"isConstant": false,
															"isLValue": true,
															"isPure": false,
															"lValueRequested": false,
															"memberLocation": "5836:6:6",
															"memberName": "voters",
															"nodeType": "MemberAccess",
															"referencedDeclaration": 1426,
															"src": "5829:13:6",
															"typeDescriptions": {
																"typeIdentifier": "t_struct$_AddressSet_$1111_storage",
																"typeString": "struct EnumerableSet.AddressSet storage ref"
															}
														},
														"id": 1714,
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": false,
														"memberLocation": "5843:3:6",
														"memberName": "add",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 1138,
														"src": "5829:17:6",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_struct$_AddressSet_$1111_storage_ptr_$_t_address_$returns$_t_bool_$attached_to$_t_struct$_AddressSet_$1111_storage_ptr_$",
															"typeString": "function (struct EnumerableSet.AddressSet storage pointer,address) returns (bool)"
														}
													},
													"id": 1717,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "5829:29:6",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 1718,
												"nodeType": "ExpressionStatement",
												"src": "5829:29:6"
											},
											{
												"expression": {
													"id": 1723,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"expression": {
															"id": 1719,
															"name": "_issue",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1641,
															"src": "5868:6:6",
															"typeDescriptions": {
																"typeIdentifier": "t_struct$_Issue_$1443_storage_ptr",
																"typeString": "struct WeightedVoting.Issue storage pointer"
															}
														},
														"id": 1721,
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": true,
														"memberLocation": "5875:10:6",
														"memberName": "totalVotes",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 1432,
														"src": "5868:17:6",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "Assignment",
													"operator": "+=",
													"rightHandSide": {
														"id": 1722,
														"name": "nTokens",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1665,
														"src": "5889:7:6",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "5868:28:6",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"id": 1724,
												"nodeType": "ExpressionStatement",
												"src": "5868:28:6"
											},
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 1729,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"expression": {
															"id": 1725,
															"name": "_issue",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1641,
															"src": "5986:6:6",
															"typeDescriptions": {
																"typeIdentifier": "t_struct$_Issue_$1443_storage_ptr",
																"typeString": "struct WeightedVoting.Issue storage pointer"
															}
														},
														"id": 1726,
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": false,
														"memberLocation": "5993:10:6",
														"memberName": "totalVotes",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 1432,
														"src": "5986:17:6",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": ">=",
													"rightExpression": {
														"expression": {
															"id": 1727,
															"name": "_issue",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1641,
															"src": "6007:6:6",
															"typeDescriptions": {
																"typeIdentifier": "t_struct$_Issue_$1443_storage_ptr",
																"typeString": "struct WeightedVoting.Issue storage pointer"
															}
														},
														"id": 1728,
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": false,
														"memberLocation": "6014:6:6",
														"memberName": "quorum",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 1430,
														"src": "6007:13:6",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "5986:34:6",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 1750,
												"nodeType": "IfStatement",
												"src": "5982:194:6",
												"trueBody": {
													"id": 1749,
													"nodeType": "Block",
													"src": "6022:154:6",
													"statements": [
														{
															"expression": {
																"id": 1734,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftHandSide": {
																	"expression": {
																		"id": 1730,
																		"name": "_issue",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1641,
																		"src": "6036:6:6",
																		"typeDescriptions": {
																			"typeIdentifier": "t_struct$_Issue_$1443_storage_ptr",
																			"typeString": "struct WeightedVoting.Issue storage pointer"
																		}
																	},
																	"id": 1732,
																	"isConstant": false,
																	"isLValue": true,
																	"isPure": false,
																	"lValueRequested": true,
																	"memberLocation": "6043:6:6",
																	"memberName": "closed",
																	"nodeType": "MemberAccess",
																	"referencedDeclaration": 1442,
																	"src": "6036:13:6",
																	"typeDescriptions": {
																		"typeIdentifier": "t_bool",
																		"typeString": "bool"
																	}
																},
																"nodeType": "Assignment",
																"operator": "=",
																"rightHandSide": {
																	"hexValue": "74727565",
																	"id": 1733,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "bool",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "6052:4:6",
																	"typeDescriptions": {
																		"typeIdentifier": "t_bool",
																		"typeString": "bool"
																	},
																	"value": "true"
																},
																"src": "6036:20:6",
																"typeDescriptions": {
																	"typeIdentifier": "t_bool",
																	"typeString": "bool"
																}
															},
															"id": 1735,
															"nodeType": "ExpressionStatement",
															"src": "6036:20:6"
														},
														{
															"condition": {
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 1740,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"expression": {
																		"id": 1736,
																		"name": "_issue",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1641,
																		"src": "6074:6:6",
																		"typeDescriptions": {
																			"typeIdentifier": "t_struct$_Issue_$1443_storage_ptr",
																			"typeString": "struct WeightedVoting.Issue storage pointer"
																		}
																	},
																	"id": 1737,
																	"isConstant": false,
																	"isLValue": true,
																	"isPure": false,
																	"lValueRequested": false,
																	"memberLocation": "6081:8:6",
																	"memberName": "votesFor",
																	"nodeType": "MemberAccess",
																	"referencedDeclaration": 1434,
																	"src": "6074:15:6",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": ">",
																"rightExpression": {
																	"expression": {
																		"id": 1738,
																		"name": "_issue",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1641,
																		"src": "6092:6:6",
																		"typeDescriptions": {
																			"typeIdentifier": "t_struct$_Issue_$1443_storage_ptr",
																			"typeString": "struct WeightedVoting.Issue storage pointer"
																		}
																	},
																	"id": 1739,
																	"isConstant": false,
																	"isLValue": true,
																	"isPure": false,
																	"lValueRequested": false,
																	"memberLocation": "6099:12:6",
																	"memberName": "votesAgainst",
																	"nodeType": "MemberAccess",
																	"referencedDeclaration": 1436,
																	"src": "6092:19:6",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"src": "6074:37:6",
																"typeDescriptions": {
																	"typeIdentifier": "t_bool",
																	"typeString": "bool"
																}
															},
															"id": 1748,
															"nodeType": "IfStatement",
															"src": "6070:96:6",
															"trueBody": {
																"id": 1747,
																"nodeType": "Block",
																"src": "6113:53:6",
																"statements": [
																	{
																		"expression": {
																			"id": 1745,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"lValueRequested": false,
																			"leftHandSide": {
																				"expression": {
																					"id": 1741,
																					"name": "_issue",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 1641,
																					"src": "6131:6:6",
																					"typeDescriptions": {
																						"typeIdentifier": "t_struct$_Issue_$1443_storage_ptr",
																						"typeString": "struct WeightedVoting.Issue storage pointer"
																					}
																				},
																				"id": 1743,
																				"isConstant": false,
																				"isLValue": true,
																				"isPure": false,
																				"lValueRequested": true,
																				"memberLocation": "6138:6:6",
																				"memberName": "passed",
																				"nodeType": "MemberAccess",
																				"referencedDeclaration": 1440,
																				"src": "6131:13:6",
																				"typeDescriptions": {
																					"typeIdentifier": "t_bool",
																					"typeString": "bool"
																				}
																			},
																			"nodeType": "Assignment",
																			"operator": "=",
																			"rightHandSide": {
																				"hexValue": "74727565",
																				"id": 1744,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": true,
																				"kind": "bool",
																				"lValueRequested": false,
																				"nodeType": "Literal",
																				"src": "6147:4:6",
																				"typeDescriptions": {
																					"typeIdentifier": "t_bool",
																					"typeString": "bool"
																				},
																				"value": "true"
																			},
																			"src": "6131:20:6",
																			"typeDescriptions": {
																				"typeIdentifier": "t_bool",
																				"typeString": "bool"
																			}
																		},
																		"id": 1746,
																		"nodeType": "ExpressionStatement",
																		"src": "6131:20:6"
																	}
																]
															}
														}
													]
												}
											}
										]
									},
									"functionSelector": "943e8216",
									"id": 1752,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "vote",
									"nameLocation": "4932:4:6",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1637,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1633,
												"mutability": "mutable",
												"name": "_issueId",
												"nameLocation": "4945:8:6",
												"nodeType": "VariableDeclaration",
												"scope": 1752,
												"src": "4937:16:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1632,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "4937:7:6",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1636,
												"mutability": "mutable",
												"name": "_vote",
												"nameLocation": "4960:5:6",
												"nodeType": "VariableDeclaration",
												"scope": 1752,
												"src": "4955:10:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_enum$_Vote_$1467",
													"typeString": "enum WeightedVoting.Vote"
												},
												"typeName": {
													"id": 1635,
													"nodeType": "UserDefinedTypeName",
													"pathNode": {
														"id": 1634,
														"name": "Vote",
														"nameLocations": [
															"4955:4:6"
														],
														"nodeType": "IdentifierPath",
														"referencedDeclaration": 1467,
														"src": "4955:4:6"
													},
													"referencedDeclaration": 1467,
													"src": "4955:4:6",
													"typeDescriptions": {
														"typeIdentifier": "t_enum$_Vote_$1467",
														"typeString": "enum WeightedVoting.Vote"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "4936:30:6"
									},
									"returnParameters": {
										"id": 1638,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "4974:0:6"
									},
									"scope": 1753,
									"src": "4923:1259:6",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "public"
								}
							],
							"scope": 1754,
							"src": "318:5866:6",
							"usedErrors": [
								11,
								16,
								21,
								30,
								35,
								40,
								1413,
								1415,
								1417,
								1419,
								1421,
								1423
							],
							"usedEvents": [
								663,
								672
							]
						}
					],
					"src": "39:6146:6"
				},
				"id": 6
			}
		}
	}
}